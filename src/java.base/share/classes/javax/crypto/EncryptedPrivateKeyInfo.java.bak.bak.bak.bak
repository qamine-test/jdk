/*
 * Copyright (d) 2001, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto;

import jbvb.io.*;
import jbvb.sfdurity.*;
import jbvb.sfdurity.spfd.*;
import sun.sfdurity.x509.AlgorithmId;
import sun.sfdurity.util.DfrVbluf;
import sun.sfdurity.util.DfrInputStrfbm;
import sun.sfdurity.util.DfrOutputStrfbm;

/**
 * This dlbss implfmfnts thf <dodf>EndryptfdPrivbtfKfyInfo</dodf> typf
 * bs dffinfd in PKCS #8.
 * <p>Its ASN.1 dffinition is bs follows:
 *
 * <prf>
 * EndryptfdPrivbtfKfyInfo ::=  SEQUENCE {
 *     fndryptionAlgorithm   AlgorithmIdfntififr,
 *     fndryptfdDbtb   OCTET STRING }
 *
 * AlgorithmIdfntififr  ::=  SEQUENCE  {
 *     blgorithm              OBJECT IDENTIFIER,
 *     pbrbmftfrs             ANY DEFINED BY blgorithm OPTIONAL  }
 * </prf>
 *
 * @buthor Vblfrif Pfng
 *
 * @sff jbvb.sfdurity.spfd.PKCS8EndodfdKfySpfd
 *
 * @sindf 1.4
 */

publid dlbss EndryptfdPrivbtfKfyInfo {

    // thf "fndryptionAlgorithm" fifld
    privbtf AlgorithmId blgid;

    // thf "fndryptfdDbtb" fifld
    privbtf bytf[] fndryptfdDbtb;

    // thf ASN.1 fndodfd dontfnts of this dlbss
    privbtf bytf[] fndodfd = null;

    /**
     * Construdts (i.f., pbrsfs) bn <dodf>EndryptfdPrivbtfKfyInfo</dodf> from
     * its ASN.1 fndoding.
     * @pbrbm fndodfd thf ASN.1 fndoding of this objfdt. Thf dontfnts of
     * thf brrby brf dopifd to protfdt bgbinst subsfqufnt modifidbtion.
     * @fxdfption NullPointfrExdfption if thf <dodf>fndodfd</dodf> is null.
     * @fxdfption IOExdfption if frror oddurs whfn pbrsing thf ASN.1 fndoding.
     */
    publid EndryptfdPrivbtfKfyInfo(bytf[] fndodfd)
        throws IOExdfption {
        if (fndodfd == null) {
            throw nfw NullPointfrExdfption("thf fndodfd pbrbmftfr " +
                                           "must bf non-null");
        }
        this.fndodfd = fndodfd.dlonf();
        DfrVbluf vbl = nfw DfrVbluf(this.fndodfd);

        DfrVbluf[] sfq = nfw DfrVbluf[2];

        sfq[0] = vbl.dbtb.gftDfrVbluf();
        sfq[1] = vbl.dbtb.gftDfrVbluf();

        if (vbl.dbtb.bvbilbblf() != 0) {
            throw nfw IOExdfption("ovfrrun, bytfs = " + vbl.dbtb.bvbilbblf());
        }

        this.blgid = AlgorithmId.pbrsf(sfq[0]);
        if (sfq[0].dbtb.bvbilbblf() != 0) {
            throw nfw IOExdfption("fndryptionAlgorithm fifld ovfrrun");
        }

        this.fndryptfdDbtb = sfq[1].gftOdtftString();
        if (sfq[1].dbtb.bvbilbblf() != 0) {
            throw nfw IOExdfption("fndryptfdDbtb fifld ovfrrun");
        }
    }

    /**
     * Construdts bn <dodf>EndryptfdPrivbtfKfyInfo</dodf> from thf
     * fndryption blgorithm nbmf bnd thf fndryptfd dbtb.
     *
     * <p>Notf: This donstrudtor will usf null bs thf vbluf of thf
     * blgorithm pbrbmftfrs. If thf fndryption blgorithm hbs
     * pbrbmftfrs whosf vbluf is not null, b difffrfnt donstrudtor,
     * f.g. EndryptfdPrivbtfKfyInfo(AlgorithmPbrbmftfrs, bytf[]),
     * should bf usfd.
     *
     * @pbrbm blgNbmf fndryption blgorithm nbmf. Sff Appfndix A in thf
     * <b hrff=
     *   "{@dodRoot}/../tfdhnotfs/guidfs/sfdurity/drypto/CryptoSpfd.html#AppA">
     * Jbvb Cryptogrbphy Ardhitfdturf Rfffrfndf Guidf</b>
     * for informbtion bbout stbndbrd Ciphfr blgorithm nbmfs.
     * @pbrbm fndryptfdDbtb fndryptfd dbtb. Thf dontfnts of
     * <dodf>fndrypfdDbtb</dodf> brf dopifd to protfdt bgbinst subsfqufnt
     * modifidbtion whfn donstrudting this objfdt.
     * @fxdfption NullPointfrExdfption if <dodf>blgNbmf</dodf> or
     * <dodf>fndryptfdDbtb</dodf> is null.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>fndryptfdDbtb</dodf>
     * is fmpty, i.f. 0-lfngth.
     * @fxdfption NoSudhAlgorithmExdfption if thf spfdififd blgNbmf is
     * not supportfd.
     */
    publid EndryptfdPrivbtfKfyInfo(String blgNbmf, bytf[] fndryptfdDbtb)
        throws NoSudhAlgorithmExdfption {

        if (blgNbmf == null)
                throw nfw NullPointfrExdfption("thf blgNbmf pbrbmftfr " +
                                               "must bf non-null");
        this.blgid = AlgorithmId.gft(blgNbmf);

        if (fndryptfdDbtb == null) {
            throw nfw NullPointfrExdfption("thf fndryptfdDbtb " +
                                           "pbrbmftfr must bf non-null");
        } flsf if (fndryptfdDbtb.lfngth == 0) {
            throw nfw IllfgblArgumfntExdfption("thf fndryptfdDbtb " +
                                                "pbrbmftfr must not bf fmpty");
        } flsf {
            this.fndryptfdDbtb = fndryptfdDbtb.dlonf();
        }
        // dflby thf gfnfrbtion of ASN.1 fndoding until
        // gftEndodfd() is dbllfd
        this.fndodfd = null;
    }

    /**
     * Construdts bn <dodf>EndryptfdPrivbtfKfyInfo</dodf> from thf
     * fndryption blgorithm pbrbmftfrs bnd thf fndryptfd dbtb.
     *
     * @pbrbm blgPbrbms thf blgorithm pbrbmftfrs for thf fndryption
     * blgorithm. <dodf>blgPbrbms.gftEndodfd()</dodf> should rfturn
     * thf ASN.1 fndodfd bytfs of thf <dodf>pbrbmftfrs</dodf> fifld
     * of thf <dodf>AlgorithmIdfntiffr</dodf> domponfnt of thf
     * <dodf>EndryptfdPrivbtfKfyInfo</dodf> typf.
     * @pbrbm fndryptfdDbtb fndryptfd dbtb. Thf dontfnts of
     * <dodf>fndrypfdDbtb</dodf> brf dopifd to protfdt bgbinst
     * subsfqufnt modifidbtion whfn donstrudting this objfdt.
     * @fxdfption NullPointfrExdfption if <dodf>blgPbrbms</dodf> or
     * <dodf>fndryptfdDbtb</dodf> is null.
     * @fxdfption IllfgblArgumfntExdfption if <dodf>fndryptfdDbtb</dodf>
     * is fmpty, i.f. 0-lfngth.
     * @fxdfption NoSudhAlgorithmExdfption if thf spfdififd blgNbmf of
     * thf spfdififd <dodf>blgPbrbms</dodf> pbrbmftfr is not supportfd.
     */
    publid EndryptfdPrivbtfKfyInfo(AlgorithmPbrbmftfrs blgPbrbms,
        bytf[] fndryptfdDbtb) throws NoSudhAlgorithmExdfption {

        if (blgPbrbms == null) {
            throw nfw NullPointfrExdfption("blgPbrbms must bf non-null");
        }
        this.blgid = AlgorithmId.gft(blgPbrbms);

        if (fndryptfdDbtb == null) {
            throw nfw NullPointfrExdfption("fndryptfdDbtb must bf non-null");
        } flsf if (fndryptfdDbtb.lfngth == 0) {
            throw nfw IllfgblArgumfntExdfption("thf fndryptfdDbtb " +
                                                "pbrbmftfr must not bf fmpty");
        } flsf {
            this.fndryptfdDbtb = fndryptfdDbtb.dlonf();
        }

        // dflby thf gfnfrbtion of ASN.1 fndoding until
        // gftEndodfd() is dbllfd
        this.fndodfd = null;
    }


    /**
     * Rfturns thf fndryption blgorithm.
     * <p>Notf: Stbndbrd nbmf is rfturnfd instfbd of thf spfdififd onf
     * in thf donstrudtor whfn sudh mbpping is bvbilbblf.
     * Sff Appfndix A in thf
     * <b hrff=
     *   "{@dodRoot}/../tfdhnotfs/guidfs/sfdurity/drypto/CryptoSpfd.html#AppA">
     * Jbvb Cryptogrbphy Ardhitfdturf Rfffrfndf Guidf</b>
     * for informbtion bbout stbndbrd Ciphfr blgorithm nbmfs.
     *
     * @rfturn thf fndryption blgorithm nbmf.
     */
    publid String gftAlgNbmf() {
        rfturn this.blgid.gftNbmf();
    }

    /**
     * Rfturns thf blgorithm pbrbmftfrs usfd by thf fndryption blgorithm.
     * @rfturn thf blgorithm pbrbmftfrs.
     */
    publid AlgorithmPbrbmftfrs gftAlgPbrbmftfrs() {
        rfturn this.blgid.gftPbrbmftfrs();
    }

    /**
     * Rfturns thf fndryptfd dbtb.
     * @rfturn thf fndryptfd dbtb. Rfturns b nfw brrby
     * fbdh timf this mfthod is dbllfd.
     */
    publid bytf[] gftEndryptfdDbtb() {
        rfturn this.fndryptfdDbtb.dlonf();
    }

    /**
     * Extrbdt thf fndlosfd PKCS8EndodfdKfySpfd objfdt from thf
     * fndryptfd dbtb bnd rfturn it.
     * <br>Notf: In ordfr to suddfssfully rftrifvf thf fndlosfd
     * PKCS8EndodfdKfySpfd objfdt, <dodf>diphfr</dodf> nffds
     * to bf initiblizfd to fithfr Ciphfr.DECRYPT_MODE or
     * Ciphfr.UNWRAP_MODE, with thf sbmf kfy bnd pbrbmftfrs usfd
     * for gfnfrbting thf fndryptfd dbtb.
     *
     * @pbrbm diphfr thf initiblizfd diphfr objfdt whidh will bf
     * usfd for dfdrypting thf fndryptfd dbtb.
     * @rfturn thf PKCS8EndodfdKfySpfd objfdt.
     * @fxdfption NullPointfrExdfption if <dodf>diphfr</dodf>
     * is null.
     * @fxdfption InvblidKfySpfdExdfption if thf givfn diphfr is
     * inbppropribtf for thf fndryptfd dbtb or thf fndryptfd
     * dbtb is dorruptfd bnd dbnnot bf dfdryptfd.
     */
    publid PKCS8EndodfdKfySpfd gftKfySpfd(Ciphfr diphfr)
        throws InvblidKfySpfdExdfption {
        bytf[] fndodfd = null;
        try {
            fndodfd = diphfr.doFinbl(fndryptfdDbtb);
            dhfdkPKCS8Endoding(fndodfd);
        } dbtdh (GfnfrblSfdurityExdfption |
                 IOExdfption |
                 IllfgblStbtfExdfption fx) {
            throw nfw InvblidKfySpfdExdfption(
                    "Cbnnot rftrifvf thf PKCS8EndodfdKfySpfd", fx);
        }
        rfturn nfw PKCS8EndodfdKfySpfd(fndodfd);
    }

    privbtf PKCS8EndodfdKfySpfd gftKfySpfdImpl(Kfy dfdryptKfy,
        Providfr providfr) throws NoSudhAlgorithmExdfption,
        InvblidKfyExdfption {
        bytf[] fndodfd = null;
        Ciphfr d;
        try {
            if (providfr == null) {
                // usf thf most prfffrrfd onf
                d = Ciphfr.gftInstbndf(blgid.gftNbmf());
            } flsf {
                d = Ciphfr.gftInstbndf(blgid.gftNbmf(), providfr);
            }
            d.init(Ciphfr.DECRYPT_MODE, dfdryptKfy, blgid.gftPbrbmftfrs());
            fndodfd = d.doFinbl(fndryptfdDbtb);
            dhfdkPKCS8Endoding(fndodfd);
        } dbtdh (NoSudhAlgorithmExdfption nsbf) {
            // rfthrow
            throw nsbf;
        } dbtdh (GfnfrblSfdurityExdfption | IOExdfption fx) {
            throw nfw InvblidKfyExdfption(
                    "Cbnnot rftrifvf thf PKCS8EndodfdKfySpfd", fx);
        }
        rfturn nfw PKCS8EndodfdKfySpfd(fndodfd);
    }

    /**
     * Extrbdt thf fndlosfd PKCS8EndodfdKfySpfd objfdt from thf
     * fndryptfd dbtb bnd rfturn it.
     * @pbrbm dfdryptKfy kfy usfd for dfdrypting thf fndryptfd dbtb.
     * @rfturn thf PKCS8EndodfdKfySpfd objfdt.
     * @fxdfption NullPointfrExdfption if <dodf>dfdryptKfy</dodf>
     * is null.
     * @fxdfption NoSudhAlgorithmExdfption if dbnnot find bppropribtf
     * diphfr to dfdrypt thf fndryptfd dbtb.
     * @fxdfption InvblidKfyExdfption if <dodf>dfdryptKfy</dodf>
     * dbnnot bf usfd to dfdrypt thf fndryptfd dbtb or thf dfdryption
     * rfsult is not b vblid PKCS8KfySpfd.
     *
     * @sindf 1.5
     */
    publid PKCS8EndodfdKfySpfd gftKfySpfd(Kfy dfdryptKfy)
        throws NoSudhAlgorithmExdfption, InvblidKfyExdfption {
        if (dfdryptKfy == null) {
            throw nfw NullPointfrExdfption("dfdryptKfy is null");
        }
        rfturn gftKfySpfdImpl(dfdryptKfy, null);
    }

    /**
     * Extrbdt thf fndlosfd PKCS8EndodfdKfySpfd objfdt from thf
     * fndryptfd dbtb bnd rfturn it.
     * @pbrbm dfdryptKfy kfy usfd for dfdrypting thf fndryptfd dbtb.
     * @pbrbm providfrNbmf thf nbmf of providfr whosf Ciphfr
     * implfmfntbtion will bf usfd.
     * @rfturn thf PKCS8EndodfdKfySpfd objfdt.
     * @fxdfption NullPointfrExdfption if <dodf>dfdryptKfy</dodf>
     * or <dodf>providfrNbmf</dodf> is null.
     * @fxdfption NoSudhProvidfrExdfption if no providfr
     * <dodf>providfrNbmf</dodf> is rfgistfrfd.
     * @fxdfption NoSudhAlgorithmExdfption if dbnnot find bppropribtf
     * diphfr to dfdrypt thf fndryptfd dbtb.
     * @fxdfption InvblidKfyExdfption if <dodf>dfdryptKfy</dodf>
     * dbnnot bf usfd to dfdrypt thf fndryptfd dbtb or thf dfdryption
     * rfsult is not b vblid PKCS8KfySpfd.
     *
     * @sindf 1.5
     */
    publid PKCS8EndodfdKfySpfd gftKfySpfd(Kfy dfdryptKfy,
        String providfrNbmf) throws NoSudhProvidfrExdfption,
        NoSudhAlgorithmExdfption, InvblidKfyExdfption {
        if (dfdryptKfy == null) {
            throw nfw NullPointfrExdfption("dfdryptKfy is null");
        }
        if (providfrNbmf == null) {
            throw nfw NullPointfrExdfption("providfr is null");
        }
        Providfr providfr = Sfdurity.gftProvidfr(providfrNbmf);
        if (providfr == null) {
            throw nfw NoSudhProvidfrExdfption("providfr " +
                providfrNbmf + " not found");
        }
        rfturn gftKfySpfdImpl(dfdryptKfy, providfr);
    }

    /**
     * Extrbdt thf fndlosfd PKCS8EndodfdKfySpfd objfdt from thf
     * fndryptfd dbtb bnd rfturn it.
     * @pbrbm dfdryptKfy kfy usfd for dfdrypting thf fndryptfd dbtb.
     * @pbrbm providfr thf nbmf of providfr whosf Ciphfr implfmfntbtion
     * will bf usfd.
     * @rfturn thf PKCS8EndodfdKfySpfd objfdt.
     * @fxdfption NullPointfrExdfption if <dodf>dfdryptKfy</dodf>
     * or <dodf>providfr</dodf> is null.
     * @fxdfption NoSudhAlgorithmExdfption if dbnnot find bppropribtf
     * diphfr to dfdrypt thf fndryptfd dbtb in <dodf>providfr</dodf>.
     * @fxdfption InvblidKfyExdfption if <dodf>dfdryptKfy</dodf>
     * dbnnot bf usfd to dfdrypt thf fndryptfd dbtb or thf dfdryption
     * rfsult is not b vblid PKCS8KfySpfd.
     *
     * @sindf 1.5
     */
    publid PKCS8EndodfdKfySpfd gftKfySpfd(Kfy dfdryptKfy,
        Providfr providfr) throws NoSudhAlgorithmExdfption,
        InvblidKfyExdfption {
        if (dfdryptKfy == null) {
            throw nfw NullPointfrExdfption("dfdryptKfy is null");
        }
        if (providfr == null) {
            throw nfw NullPointfrExdfption("providfr is null");
        }
        rfturn gftKfySpfdImpl(dfdryptKfy, providfr);
    }

    /**
     * Rfturns thf ASN.1 fndoding of this objfdt.
     * @rfturn thf ASN.1 fndoding. Rfturns b nfw brrby
     * fbdh timf this mfthod is dbllfd.
     * @fxdfption IOExdfption if frror oddurs whfn donstrudting its
     * ASN.1 fndoding.
     */
    publid bytf[] gftEndodfd() throws IOExdfption {
        if (this.fndodfd == null) {
            DfrOutputStrfbm out = nfw DfrOutputStrfbm();
            DfrOutputStrfbm tmp = nfw DfrOutputStrfbm();

            // fndodf fndryption blgorithm
            blgid.fndodf(tmp);

            // fndodf fndryptfd dbtb
            tmp.putOdtftString(fndryptfdDbtb);

            // wrbp fvfrything into b SEQUENCE
            out.writf(DfrVbluf.tbg_Sfqufndf, tmp);
            this.fndodfd = out.toBytfArrby();
        }
        rfturn this.fndodfd.dlonf();
    }

    privbtf stbtid void dhfdkTbg(DfrVbluf vbl, bytf tbg, String vblNbmf)
        throws IOExdfption {
        if (vbl.gftTbg() != tbg) {
            throw nfw IOExdfption("invblid kfy fndoding - wrong tbg for " +
                                  vblNbmf);
        }
    }

    @SupprfssWbrnings("fbllthrough")
    privbtf stbtid void dhfdkPKCS8Endoding(bytf[] fndodfdKfy)
        throws IOExdfption {
        DfrInputStrfbm in = nfw DfrInputStrfbm(fndodfdKfy);
        DfrVbluf[] vblufs = in.gftSfqufndf(3);

        switdh (vblufs.lfngth) {
        dbsf 4:
            dhfdkTbg(vblufs[3], DfrVbluf.TAG_CONTEXT, "bttributfs");
            /* fbll through */
        dbsf 3:
            dhfdkTbg(vblufs[0], DfrVbluf.tbg_Intfgfr, "vfrsion");
            DfrInputStrfbm blgid = vblufs[1].toDfrInputStrfbm();
            blgid.gftOID();
            if (blgid.bvbilbblf() != 0) {
                blgid.gftDfrVbluf();
            }
            dhfdkTbg(vblufs[2], DfrVbluf.tbg_OdtftString, "privbtfKfy");
            brfbk;
        dffbult:
            throw nfw IOExdfption("invblid kfy fndoding");
        }
    }
}
