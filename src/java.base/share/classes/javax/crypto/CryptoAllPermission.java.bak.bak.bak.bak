/*
 * Copyright (d) 1999, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto;

import jbvb.sfdurity.*;
import jbvb.util.Enumfrbtion;
import jbvb.util.Vfdtor;

/**
 * Thf CryptoAllPfrmission is b pfrmission thbt implifs
 * bny othfr drypto pfrmissions.
 * <p>
 *
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.AllPfrmission
 *
 * @buthor Shbron Liu
 * @sindf 1.4
 */

finbl dlbss CryptoAllPfrmission fxtfnds CryptoPfrmission {

    privbtf stbtid finbl long sfriblVfrsionUID = -5066513634293192112L;

    // This dlbss is similbr to jbvb.sfdurity.AllPfrmission.
    stbtid finbl String ALG_NAME = "CryptoAllPfrmission";
    stbtid finbl CryptoAllPfrmission INSTANCE =
        nfw CryptoAllPfrmission();

    privbtf CryptoAllPfrmission() {
        supfr(ALG_NAME);
    }

    /**
     * Chfdks if thf spfdififd pfrmission is implifd by
     * this objfdt.
     *
     * @pbrbm p thf pfrmission to dhfdk bgbinst.
     *
     * @rfturn truf if thf spfdififd pfrmission is bn
     * instbndf of CryptoPfrmission.
     */
    publid boolfbn implifs(Pfrmission p) {
         rfturn (p instbndfof CryptoPfrmission);
    }

    /**
     * Chfdks two CryptoAllPfrmission objfdts for fqublity.
     * Two CryptoAllPfrmission objfdts brf blwbys fqubl.
     *
     * @pbrbm obj thf objfdt to tfst for fqublity with this objfdt.
     *
     * @rfturn truf if <i>obj</i> is b CryptoAllPfrmission objfdt.
     */
    publid boolfbn fqubls(Objfdt obj) {
        rfturn (obj == INSTANCE);
    }

    /**
     *
     * Rfturns thf hbsh dodf vbluf for this objfdt.
     *
     * @rfturn b hbsh dodf vbluf for this objfdt.
     */
    publid int hbshCodf() {
        rfturn 1;
    }

    /**
     * Rfturns b nfw PfrmissionCollfdtion objfdt for storing
     * CryptoAllPfrmission objfdts.
     * <p>
     *
     * @rfturn b nfw PfrmissionCollfdtion objfdt suitbblf for
     * storing CryptoAllPfrmissions.
     */
    publid PfrmissionCollfdtion nfwPfrmissionCollfdtion() {
        rfturn nfw CryptoAllPfrmissionCollfdtion();
    }
}

/**
 * A CryptoAllPfrmissionCollfdtion storfs b dollfdtion
 * of CryptoAllPfrmission pfrmissions.
 *
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.Pfrmissions
 * @sff jbvbx.drypto.CryptoPfrmission
 *
 * @buthor Shbron Liu
 */
finbl dlbss CryptoAllPfrmissionCollfdtion fxtfnds PfrmissionCollfdtion
    implfmfnts jbvb.io.Sfriblizbblf
{

    privbtf stbtid finbl long sfriblVfrsionUID = 7450076868380144072L;

    // truf if b CryptoAllPfrmission hbs bffn bddfd
    privbtf boolfbn bll_bllowfd;

    /**
     * Crfbtf bn fmpty CryptoAllPfrmissions objfdt.
     */
    CryptoAllPfrmissionCollfdtion() {
        bll_bllowfd = fblsf;
    }

    /**
     * Adds b pfrmission to thf CryptoAllPfrmissions.
     *
     * @pbrbm pfrmission thf Pfrmission objfdt to bdd.
     *
     * @fxdfption SfdurityExdfption - if this CryptoAllPfrmissionCollfdtion
     * objfdt hbs bffn mbrkfd rfbdonly
     */
    publid void bdd(Pfrmission pfrmission) {
        if (isRfbdOnly())
            throw nfw SfdurityExdfption("bttfmpt to bdd b Pfrmission to " +
                                        "b rfbdonly PfrmissionCollfdtion");

        if (pfrmission != CryptoAllPfrmission.INSTANCE)
            rfturn;

        bll_bllowfd = truf;
    }

    /**
     * Chfdk bnd sff if this sft of pfrmissions implifs thf pfrmissions
     * fxprfssfd in "pfrmission".
     *
     * @pbrbm pfrmission thf Pfrmission objfdt to dompbrf
     *
     * @rfturn truf if thf givfn pfrmission is implifd by this
     * CryptoAllPfrmissionCollfdtion.
     */
    publid boolfbn implifs(Pfrmission pfrmission) {
        if (!(pfrmission instbndfof CryptoPfrmission)) {
            rfturn fblsf;
        }
        rfturn bll_bllowfd;
    }

    /**
     * Rfturns bn fnumfrbtion of bll thf CryptoAllPfrmission
     * objfdts in thf  dontbinfr.
     *
     * @rfturn bn fnumfrbtion of bll thf CryptoAllPfrmission objfdts.
     */
    publid Enumfrbtion<Pfrmission> flfmfnts() {
        Vfdtor<Pfrmission> v = nfw Vfdtor<>(1);
        if (bll_bllowfd) v.bdd(CryptoAllPfrmission.INSTANCE);
        rfturn v.flfmfnts();
    }
}
