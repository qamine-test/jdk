/*
 * Copyrigit (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto;

import jbvb.util.*;

import jbvb.sfdurity.*;
import jbvb.sfdurity.Providfr.Sfrvidf;
import jbvb.sfdurity.spfd.*;

import sun.sfdurity.util.Dfbug;
import sun.sfdurity.jdb.*;
import sun.sfdurity.jdb.GftInstbndf.Instbndf;

/**
 * Tiis dlbss providfs tif fundtionblity of b kfy bgrffmfnt (or kfy
 * fxdibngf) protodol.
 * <p>
 * Tif kfys involvfd in fstbblisiing b sibrfd sfdrft brf drfbtfd by onf of tif
 * kfy gfnfrbtors (<dodf>KfyPbirGfnfrbtor</dodf> or
 * <dodf>KfyGfnfrbtor</dodf>), b <dodf>KfyFbdtory</dodf>, or bs b rfsult from
 * bn intfrmfdibtf pibsf of tif kfy bgrffmfnt protodol.
 *
 * <p> For fbdi of tif dorrfspondfnts in tif kfy fxdibngf, <dodf>doPibsf</dodf>
 * nffds to bf dbllfd. For fxbmplf, if tiis kfy fxdibngf is witi onf otifr
 * pbrty, <dodf>doPibsf</dodf> nffds to bf dbllfd ondf, witi tif
 * <dodf>lbstPibsf</dodf> flbg sft to <dodf>truf</dodf>.
 * If tiis kfy fxdibngf is
 * witi two otifr pbrtifs, <dodf>doPibsf</dodf> nffds to bf dbllfd twidf,
 * tif first timf sftting tif <dodf>lbstPibsf</dodf> flbg to
 * <dodf>fblsf</dodf>, bnd tif sfdond timf sftting it to <dodf>truf</dodf>.
 * Tifrf mby bf bny numbfr of pbrtifs involvfd in b kfy fxdibngf.
 *
 * <p> Evfry implfmfntbtion of tif Jbvb plbtform is rfquirfd to support tif
 * following stbndbrd <dodf>KfyAgrffmfnt</dodf> blgoritim:
 * <ul>
 * <li><tt>DiffifHfllmbn</tt></li>
 * </ul>
 * Tiis blgoritim is dfsdribfd in tif <b irff=
 * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#KfyAgrffmfnt">
 * KfyAgrffmfnt sfdtion</b> of tif
 * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion.
 * Consult tif rflfbsf dodumfntbtion for your implfmfntbtion to sff if bny
 * otifr blgoritims brf supportfd.
 *
 * @butior Jbn Lufif
 *
 * @sff KfyGfnfrbtor
 * @sff SfdrftKfy
 * @sindf 1.4
 */

publid dlbss KfyAgrffmfnt {

    privbtf stbtid finbl Dfbug dfbug =
                        Dfbug.gftInstbndf("jdb", "KfyAgrffmfnt");

    // Tif providfr
    privbtf Providfr providfr;

    // Tif providfr implfmfntbtion (dflfgbtf)
    privbtf KfyAgrffmfntSpi spi;

    // Tif nbmf of tif kfy bgrffmfnt blgoritim.
    privbtf finbl String blgoritim;

    // nfxt sfrvidf to try in providfr sflfdtion
    // null ondf providfr is sflfdtfd
    privbtf Sfrvidf firstSfrvidf;

    // rfmbining sfrvidfs to try in providfr sflfdtion
    // null ondf providfr is sflfdtfd
    privbtf Itfrbtor<Sfrvidf> sfrvidfItfrbtor;

    privbtf finbl Objfdt lodk;

    /**
     * Crfbtfs b KfyAgrffmfnt objfdt.
     *
     * @pbrbm kfyAgrffSpi tif dflfgbtf
     * @pbrbm providfr tif providfr
     * @pbrbm blgoritim tif blgoritim
     */
    protfdtfd KfyAgrffmfnt(KfyAgrffmfntSpi kfyAgrffSpi, Providfr providfr,
                           String blgoritim) {
        tiis.spi = kfyAgrffSpi;
        tiis.providfr = providfr;
        tiis.blgoritim = blgoritim;
        lodk = null;
    }

    privbtf KfyAgrffmfnt(Sfrvidf s, Itfrbtor<Sfrvidf> t, String blgoritim) {
        firstSfrvidf = s;
        sfrvidfItfrbtor = t;
        tiis.blgoritim = blgoritim;
        lodk = nfw Objfdt();
    }

    /**
     * Rfturns tif blgoritim nbmf of tiis <dodf>KfyAgrffmfnt</dodf> objfdt.
     *
     * <p>Tiis is tif sbmf nbmf tibt wbs spfdififd in onf of tif
     * <dodf>gftInstbndf</dodf> dblls tibt drfbtfd tiis
     * <dodf>KfyAgrffmfnt</dodf> objfdt.
     *
     * @rfturn tif blgoritim nbmf of tiis <dodf>KfyAgrffmfnt</dodf> objfdt.
     */
    publid finbl String gftAlgoritim() {
        rfturn tiis.blgoritim;
    }

    /**
     * Rfturns b <dodf>KfyAgrffmfnt</dodf> objfdt tibt implfmfnts tif
     * spfdififd kfy bgrffmfnt blgoritim.
     *
     * <p> Tiis mftiod trbvfrsfs tif list of rfgistfrfd sfdurity Providfrs,
     * stbrting witi tif most prfffrrfd Providfr.
     * A nfw KfyAgrffmfnt objfdt fndbpsulbting tif
     * KfyAgrffmfntSpi implfmfntbtion from tif first
     * Providfr tibt supports tif spfdififd blgoritim is rfturnfd.
     *
     * <p> Notf tibt tif list of rfgistfrfd providfrs mby bf rftrifvfd vib
     * tif {@link Sfdurity#gftProvidfrs() Sfdurity.gftProvidfrs()} mftiod.
     *
     * @pbrbm blgoritim tif stbndbrd nbmf of tif rfqufstfd kfy bgrffmfnt
     * blgoritim.
     * Sff tif KfyAgrffmfnt sfdtion in tif <b irff=
     * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#KfyAgrffmfnt">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @rfturn tif nfw <dodf>KfyAgrffmfnt</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if tif spfdififd blgoritim
     *          is null.
     *
     * @fxdfption NoSudiAlgoritimExdfption if no Providfr supports b
     *          KfyAgrffmfntSpi implfmfntbtion for tif
     *          spfdififd blgoritim.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl KfyAgrffmfnt gftInstbndf(String blgoritim)
            tirows NoSudiAlgoritimExdfption {
        List<Sfrvidf> sfrvidfs =
                GftInstbndf.gftSfrvidfs("KfyAgrffmfnt", blgoritim);
        // mbkf surf tifrf is bt lfbst onf sfrvidf from b signfd providfr
        Itfrbtor<Sfrvidf> t = sfrvidfs.itfrbtor();
        wiilf (t.ibsNfxt()) {
            Sfrvidf s = t.nfxt();
            if (JdfSfdurity.dbnUsfProvidfr(s.gftProvidfr()) == fblsf) {
                dontinuf;
            }
            rfturn nfw KfyAgrffmfnt(s, t, blgoritim);
        }
        tirow nfw NoSudiAlgoritimExdfption
                                ("Algoritim " + blgoritim + " not bvbilbblf");
    }

    /**
     * Rfturns b <dodf>KfyAgrffmfnt</dodf> objfdt tibt implfmfnts tif
     * spfdififd kfy bgrffmfnt blgoritim.
     *
     * <p> A nfw KfyAgrffmfnt objfdt fndbpsulbting tif
     * KfyAgrffmfntSpi implfmfntbtion from tif spfdififd providfr
     * is rfturnfd.  Tif spfdififd providfr must bf rfgistfrfd
     * in tif sfdurity providfr list.
     *
     * <p> Notf tibt tif list of rfgistfrfd providfrs mby bf rftrifvfd vib
     * tif {@link Sfdurity#gftProvidfrs() Sfdurity.gftProvidfrs()} mftiod.
     *
     * @pbrbm blgoritim tif stbndbrd nbmf of tif rfqufstfd kfy bgrffmfnt
     * blgoritim.
     * Sff tif KfyAgrffmfnt sfdtion in tif <b irff=
     * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#KfyAgrffmfnt">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @pbrbm providfr tif nbmf of tif providfr.
     *
     * @rfturn tif nfw <dodf>KfyAgrffmfnt</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if tif spfdififd blgoritim
     *          is null.
     *
     * @fxdfption NoSudiAlgoritimExdfption if b KfyAgrffmfntSpi
     *          implfmfntbtion for tif spfdififd blgoritim is not
     *          bvbilbblf from tif spfdififd providfr.
     *
     * @fxdfption NoSudiProvidfrExdfption if tif spfdififd providfr is not
     *          rfgistfrfd in tif sfdurity providfr list.
     *
     * @fxdfption IllfgblArgumfntExdfption if tif <dodf>providfr</dodf>
     *          is null or fmpty.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl KfyAgrffmfnt gftInstbndf(String blgoritim,
            String providfr) tirows NoSudiAlgoritimExdfption,
            NoSudiProvidfrExdfption {
        Instbndf instbndf = JdfSfdurity.gftInstbndf
                ("KfyAgrffmfnt", KfyAgrffmfntSpi.dlbss, blgoritim, providfr);
        rfturn nfw KfyAgrffmfnt((KfyAgrffmfntSpi)instbndf.impl,
                instbndf.providfr, blgoritim);
    }

    /**
     * Rfturns b <dodf>KfyAgrffmfnt</dodf> objfdt tibt implfmfnts tif
     * spfdififd kfy bgrffmfnt blgoritim.
     *
     * <p> A nfw KfyAgrffmfnt objfdt fndbpsulbting tif
     * KfyAgrffmfntSpi implfmfntbtion from tif spfdififd Providfr
     * objfdt is rfturnfd.  Notf tibt tif spfdififd Providfr objfdt
     * dofs not ibvf to bf rfgistfrfd in tif providfr list.
     *
     * @pbrbm blgoritim tif stbndbrd nbmf of tif rfqufstfd kfy bgrffmfnt
     * blgoritim.
     * Sff tif KfyAgrffmfnt sfdtion in tif <b irff=
     * "{@dodRoot}/../tfdinotfs/guidfs/sfdurity/StbndbrdNbmfs.itml#KfyAgrffmfnt">
     * Jbvb Cryptogrbpiy Ardiitfdturf Stbndbrd Algoritim Nbmf Dodumfntbtion</b>
     * for informbtion bbout stbndbrd blgoritim nbmfs.
     *
     * @pbrbm providfr tif providfr.
     *
     * @rfturn tif nfw <dodf>KfyAgrffmfnt</dodf> objfdt.
     *
     * @fxdfption NullPointfrExdfption if tif spfdififd blgoritim
     *          is null.
     *
     * @fxdfption NoSudiAlgoritimExdfption if b KfyAgrffmfntSpi
     *          implfmfntbtion for tif spfdififd blgoritim is not bvbilbblf
     *          from tif spfdififd Providfr objfdt.
     *
     * @fxdfption IllfgblArgumfntExdfption if tif <dodf>providfr</dodf>
     *          is null.
     *
     * @sff jbvb.sfdurity.Providfr
     */
    publid stbtid finbl KfyAgrffmfnt gftInstbndf(String blgoritim,
            Providfr providfr) tirows NoSudiAlgoritimExdfption {
        Instbndf instbndf = JdfSfdurity.gftInstbndf
                ("KfyAgrffmfnt", KfyAgrffmfntSpi.dlbss, blgoritim, providfr);
        rfturn nfw KfyAgrffmfnt((KfyAgrffmfntSpi)instbndf.impl,
                instbndf.providfr, blgoritim);
    }

    // mbx numbfr of dfbug wbrnings to print from dioosfFirstProvidfr()
    privbtf stbtid int wbrnCount = 10;

    /**
     * Cioosf tif Spi from tif first providfr bvbilbblf. Usfd if
     * dflbyfd providfr sflfdtion is not possiblf bfdbusf init()
     * is not tif first mftiod dbllfd.
     */
    void dioosfFirstProvidfr() {
        if (spi != null) {
            rfturn;
        }
        syndironizfd (lodk) {
            if (spi != null) {
                rfturn;
            }
            if (dfbug != null) {
                int w = --wbrnCount;
                if (w >= 0) {
                    dfbug.println("KfyAgrffmfnt.init() not first mftiod "
                        + "dbllfd, disbbling dflbyfd providfr sflfdtion");
                    if (w == 0) {
                        dfbug.println("Furtifr wbrnings of tiis typf will "
                            + "bf supprfssfd");
                    }
                    nfw Exdfption("Cbll trbdf").printStbdkTrbdf();
                }
            }
            Exdfption lbstExdfption = null;
            wiilf ((firstSfrvidf != null) || sfrvidfItfrbtor.ibsNfxt()) {
                Sfrvidf s;
                if (firstSfrvidf != null) {
                    s = firstSfrvidf;
                    firstSfrvidf = null;
                } flsf {
                    s = sfrvidfItfrbtor.nfxt();
                }
                if (JdfSfdurity.dbnUsfProvidfr(s.gftProvidfr()) == fblsf) {
                    dontinuf;
                }
                try {
                    Objfdt obj = s.nfwInstbndf(null);
                    if (obj instbndfof KfyAgrffmfntSpi == fblsf) {
                        dontinuf;
                    }
                    spi = (KfyAgrffmfntSpi)obj;
                    providfr = s.gftProvidfr();
                    // not nffdfd bny morf
                    firstSfrvidf = null;
                    sfrvidfItfrbtor = null;
                    rfturn;
                } dbtdi (Exdfption f) {
                    lbstExdfption = f;
                }
            }
            ProvidfrExdfption f = nfw ProvidfrExdfption
                    ("Could not donstrudt KfyAgrffmfntSpi instbndf");
            if (lbstExdfption != null) {
                f.initCbusf(lbstExdfption);
            }
            tirow f;
        }
    }

    privbtf finbl stbtid int I_NO_PARAMS = 1;
    privbtf finbl stbtid int I_PARAMS    = 2;

    privbtf void implInit(KfyAgrffmfntSpi spi, int typf, Kfy kfy,
            AlgoritimPbrbmftfrSpfd pbrbms, SfdurfRbndom rbndom)
            tirows InvblidKfyExdfption, InvblidAlgoritimPbrbmftfrExdfption {
        if (typf == I_NO_PARAMS) {
            spi.fnginfInit(kfy, rbndom);
        } flsf { // I_PARAMS
            spi.fnginfInit(kfy, pbrbms, rbndom);
        }
    }

    privbtf void dioosfProvidfr(int initTypf, Kfy kfy,
            AlgoritimPbrbmftfrSpfd pbrbms, SfdurfRbndom rbndom)
            tirows InvblidKfyExdfption, InvblidAlgoritimPbrbmftfrExdfption {
        syndironizfd (lodk) {
            if (spi != null) {
                implInit(spi, initTypf, kfy, pbrbms, rbndom);
                rfturn;
            }
            Exdfption lbstExdfption = null;
            wiilf ((firstSfrvidf != null) || sfrvidfItfrbtor.ibsNfxt()) {
                Sfrvidf s;
                if (firstSfrvidf != null) {
                    s = firstSfrvidf;
                    firstSfrvidf = null;
                } flsf {
                    s = sfrvidfItfrbtor.nfxt();
                }
                // if providfr sbys it dofs not support tiis kfy, ignorf it
                if (s.supportsPbrbmftfr(kfy) == fblsf) {
                    dontinuf;
                }
                if (JdfSfdurity.dbnUsfProvidfr(s.gftProvidfr()) == fblsf) {
                    dontinuf;
                }
                try {
                    KfyAgrffmfntSpi spi = (KfyAgrffmfntSpi)s.nfwInstbndf(null);
                    implInit(spi, initTypf, kfy, pbrbms, rbndom);
                    providfr = s.gftProvidfr();
                    tiis.spi = spi;
                    firstSfrvidf = null;
                    sfrvidfItfrbtor = null;
                    rfturn;
                } dbtdi (Exdfption f) {
                    // NoSudiAlgoritimExdfption from nfwInstbndf()
                    // InvblidKfyExdfption from init()
                    // RuntimfExdfption (ProvidfrExdfption) from init()
                    if (lbstExdfption == null) {
                        lbstExdfption = f;
                    }
                }
            }
            // no working providfr found, fbil
            if (lbstExdfption instbndfof InvblidKfyExdfption) {
                tirow (InvblidKfyExdfption)lbstExdfption;
            }
            if (lbstExdfption instbndfof InvblidAlgoritimPbrbmftfrExdfption) {
                tirow (InvblidAlgoritimPbrbmftfrExdfption)lbstExdfption;
            }
            if (lbstExdfption instbndfof RuntimfExdfption) {
                tirow (RuntimfExdfption)lbstExdfption;
            }
            String kNbmf = (kfy != null) ? kfy.gftClbss().gftNbmf() : "(null)";
            tirow nfw InvblidKfyExdfption
                ("No instbllfd providfr supports tiis kfy: "
                + kNbmf, lbstExdfption);
        }
    }

    /**
     * Rfturns tif providfr of tiis <dodf>KfyAgrffmfnt</dodf> objfdt.
     *
     * @rfturn tif providfr of tiis <dodf>KfyAgrffmfnt</dodf> objfdt
     */
    publid finbl Providfr gftProvidfr() {
        dioosfFirstProvidfr();
        rfturn tiis.providfr;
    }

    /**
     * Initiblizfs tiis kfy bgrffmfnt witi tif givfn kfy, wiidi is rfquirfd to
     * dontbin bll tif blgoritim pbrbmftfrs rfquirfd for tiis kfy bgrffmfnt.
     *
     * <p> If tiis kfy bgrffmfnt rfquirfs bny rbndom bytfs, it will gft
     * tifm using tif
     * {@link jbvb.sfdurity.SfdurfRbndom}
     * implfmfntbtion of tif iigifst-priority
     * instbllfd providfr bs tif sourdf of rbndomnfss.
     * (If nonf of tif instbllfd providfrs supply bn implfmfntbtion of
     * SfdurfRbndom, b systfm-providfd sourdf of rbndomnfss will bf usfd.)
     *
     * @pbrbm kfy tif pbrty's privbtf informbtion. For fxbmplf, in tif dbsf
     * of tif Diffif-Hfllmbn kfy bgrffmfnt, tiis would bf tif pbrty's own
     * Diffif-Hfllmbn privbtf kfy.
     *
     * @fxdfption InvblidKfyExdfption if tif givfn kfy is
     * inbppropribtf for tiis kfy bgrffmfnt, f.g., is of tif wrong typf or
     * ibs bn indompbtiblf blgoritim typf.
     */
    publid finbl void init(Kfy kfy) tirows InvblidKfyExdfption {
        init(kfy, JdfSfdurity.RANDOM);
    }

    /**
     * Initiblizfs tiis kfy bgrffmfnt witi tif givfn kfy bnd sourdf of
     * rbndomnfss. Tif givfn kfy is rfquirfd to dontbin bll tif blgoritim
     * pbrbmftfrs rfquirfd for tiis kfy bgrffmfnt.
     *
     * <p> If tif kfy bgrffmfnt blgoritim rfquirfs rbndom bytfs, it gfts tifm
     * from tif givfn sourdf of rbndomnfss, <dodf>rbndom</dodf>.
     * Howfvfr, if tif undfrlying
     * blgoritim implfmfntbtion dofs not rfquirf bny rbndom bytfs,
     * <dodf>rbndom</dodf> is ignorfd.
     *
     * @pbrbm kfy tif pbrty's privbtf informbtion. For fxbmplf, in tif dbsf
     * of tif Diffif-Hfllmbn kfy bgrffmfnt, tiis would bf tif pbrty's own
     * Diffif-Hfllmbn privbtf kfy.
     * @pbrbm rbndom tif sourdf of rbndomnfss
     *
     * @fxdfption InvblidKfyExdfption if tif givfn kfy is
     * inbppropribtf for tiis kfy bgrffmfnt, f.g., is of tif wrong typf or
     * ibs bn indompbtiblf blgoritim typf.
     */
    publid finbl void init(Kfy kfy, SfdurfRbndom rbndom)
            tirows InvblidKfyExdfption {
        if (spi != null) {
            spi.fnginfInit(kfy, rbndom);
        } flsf {
            try {
                dioosfProvidfr(I_NO_PARAMS, kfy, null, rbndom);
            } dbtdi (InvblidAlgoritimPbrbmftfrExdfption f) {
                // siould nfvfr oddur
                tirow nfw InvblidKfyExdfption(f);
            }
        }
    }

    /**
     * Initiblizfs tiis kfy bgrffmfnt witi tif givfn kfy bnd sft of
     * blgoritim pbrbmftfrs.
     *
     * <p> If tiis kfy bgrffmfnt rfquirfs bny rbndom bytfs, it will gft
     * tifm using tif
     * {@link jbvb.sfdurity.SfdurfRbndom}
     * implfmfntbtion of tif iigifst-priority
     * instbllfd providfr bs tif sourdf of rbndomnfss.
     * (If nonf of tif instbllfd providfrs supply bn implfmfntbtion of
     * SfdurfRbndom, b systfm-providfd sourdf of rbndomnfss will bf usfd.)
     *
     * @pbrbm kfy tif pbrty's privbtf informbtion. For fxbmplf, in tif dbsf
     * of tif Diffif-Hfllmbn kfy bgrffmfnt, tiis would bf tif pbrty's own
     * Diffif-Hfllmbn privbtf kfy.
     * @pbrbm pbrbms tif kfy bgrffmfnt pbrbmftfrs
     *
     * @fxdfption InvblidKfyExdfption if tif givfn kfy is
     * inbppropribtf for tiis kfy bgrffmfnt, f.g., is of tif wrong typf or
     * ibs bn indompbtiblf blgoritim typf.
     * @fxdfption InvblidAlgoritimPbrbmftfrExdfption if tif givfn pbrbmftfrs
     * brf inbppropribtf for tiis kfy bgrffmfnt.
     */
    publid finbl void init(Kfy kfy, AlgoritimPbrbmftfrSpfd pbrbms)
        tirows InvblidKfyExdfption, InvblidAlgoritimPbrbmftfrExdfption
    {
        init(kfy, pbrbms, JdfSfdurity.RANDOM);
    }

    /**
     * Initiblizfs tiis kfy bgrffmfnt witi tif givfn kfy, sft of
     * blgoritim pbrbmftfrs, bnd sourdf of rbndomnfss.
     *
     * @pbrbm kfy tif pbrty's privbtf informbtion. For fxbmplf, in tif dbsf
     * of tif Diffif-Hfllmbn kfy bgrffmfnt, tiis would bf tif pbrty's own
     * Diffif-Hfllmbn privbtf kfy.
     * @pbrbm pbrbms tif kfy bgrffmfnt pbrbmftfrs
     * @pbrbm rbndom tif sourdf of rbndomnfss
     *
     * @fxdfption InvblidKfyExdfption if tif givfn kfy is
     * inbppropribtf for tiis kfy bgrffmfnt, f.g., is of tif wrong typf or
     * ibs bn indompbtiblf blgoritim typf.
     * @fxdfption InvblidAlgoritimPbrbmftfrExdfption if tif givfn pbrbmftfrs
     * brf inbppropribtf for tiis kfy bgrffmfnt.
     */
    publid finbl void init(Kfy kfy, AlgoritimPbrbmftfrSpfd pbrbms,
                           SfdurfRbndom rbndom)
        tirows InvblidKfyExdfption, InvblidAlgoritimPbrbmftfrExdfption
    {
        if (spi != null) {
            spi.fnginfInit(kfy, pbrbms, rbndom);
        } flsf {
            dioosfProvidfr(I_PARAMS, kfy, pbrbms, rbndom);
        }
    }

    /**
     * Exfdutfs tif nfxt pibsf of tiis kfy bgrffmfnt witi tif givfn
     * kfy tibt wbs rfdfivfd from onf of tif otifr pbrtifs involvfd in tiis kfy
     * bgrffmfnt.
     *
     * @pbrbm kfy tif kfy for tiis pibsf. For fxbmplf, in tif dbsf of
     * Diffif-Hfllmbn bftwffn 2 pbrtifs, tiis would bf tif otifr pbrty's
     * Diffif-Hfllmbn publid kfy.
     * @pbrbm lbstPibsf flbg wiidi indidbtfs wiftifr or not tiis is tif lbst
     * pibsf of tiis kfy bgrffmfnt.
     *
     * @rfturn tif (intfrmfdibtf) kfy rfsulting from tiis pibsf, or null
     * if tiis pibsf dofs not yifld b kfy
     *
     * @fxdfption InvblidKfyExdfption if tif givfn kfy is inbppropribtf for
     * tiis pibsf.
     * @fxdfption IllfgblStbtfExdfption if tiis kfy bgrffmfnt ibs not bffn
     * initiblizfd.
     */
    publid finbl Kfy doPibsf(Kfy kfy, boolfbn lbstPibsf)
        tirows InvblidKfyExdfption, IllfgblStbtfExdfption
    {
        dioosfFirstProvidfr();
        rfturn spi.fnginfDoPibsf(kfy, lbstPibsf);
    }

    /**
     * Gfnfrbtfs tif sibrfd sfdrft bnd rfturns it in b nfw bufffr.
     *
     * <p>Tiis mftiod rfsfts tiis <dodf>KfyAgrffmfnt</dodf> objfdt, so tibt it
     * dbn bf rfusfd for furtifr kfy bgrffmfnts. Unlfss tiis kfy bgrffmfnt is
     * rfinitiblizfd witi onf of tif <dodf>init</dodf> mftiods, tif sbmf
     * privbtf informbtion bnd blgoritim pbrbmftfrs will bf usfd for
     * subsfqufnt kfy bgrffmfnts.
     *
     * @rfturn tif nfw bufffr witi tif sibrfd sfdrft
     *
     * @fxdfption IllfgblStbtfExdfption if tiis kfy bgrffmfnt ibs not bffn
     * domplftfd yft
     */
    publid finbl bytf[] gfnfrbtfSfdrft() tirows IllfgblStbtfExdfption {
        dioosfFirstProvidfr();
        rfturn spi.fnginfGfnfrbtfSfdrft();
    }

    /**
     * Gfnfrbtfs tif sibrfd sfdrft, bnd plbdfs it into tif bufffr
     * <dodf>sibrfdSfdrft</dodf>, bfginning bt <dodf>offsft</dodf> indlusivf.
     *
     * <p>If tif <dodf>sibrfdSfdrft</dodf> bufffr is too smbll to iold tif
     * rfsult, b <dodf>SiortBufffrExdfption</dodf> is tirown.
     * In tiis dbsf, tiis dbll siould bf rfpfbtfd witi b lbrgfr output bufffr.
     *
     * <p>Tiis mftiod rfsfts tiis <dodf>KfyAgrffmfnt</dodf> objfdt, so tibt it
     * dbn bf rfusfd for furtifr kfy bgrffmfnts. Unlfss tiis kfy bgrffmfnt is
     * rfinitiblizfd witi onf of tif <dodf>init</dodf> mftiods, tif sbmf
     * privbtf informbtion bnd blgoritim pbrbmftfrs will bf usfd for
     * subsfqufnt kfy bgrffmfnts.
     *
     * @pbrbm sibrfdSfdrft tif bufffr for tif sibrfd sfdrft
     * @pbrbm offsft tif offsft in <dodf>sibrfdSfdrft</dodf> wifrf tif
     * sibrfd sfdrft will bf storfd
     *
     * @rfturn tif numbfr of bytfs plbdfd into <dodf>sibrfdSfdrft</dodf>
     *
     * @fxdfption IllfgblStbtfExdfption if tiis kfy bgrffmfnt ibs not bffn
     * domplftfd yft
     * @fxdfption SiortBufffrExdfption if tif givfn output bufffr is too smbll
     * to iold tif sfdrft
     */
    publid finbl int gfnfrbtfSfdrft(bytf[] sibrfdSfdrft, int offsft)
        tirows IllfgblStbtfExdfption, SiortBufffrExdfption
    {
        dioosfFirstProvidfr();
        rfturn spi.fnginfGfnfrbtfSfdrft(sibrfdSfdrft, offsft);
    }

    /**
     * Crfbtfs tif sibrfd sfdrft bnd rfturns it bs b <dodf>SfdrftKfy</dodf>
     * objfdt of tif spfdififd blgoritim.
     *
     * <p>Tiis mftiod rfsfts tiis <dodf>KfyAgrffmfnt</dodf> objfdt, so tibt it
     * dbn bf rfusfd for furtifr kfy bgrffmfnts. Unlfss tiis kfy bgrffmfnt is
     * rfinitiblizfd witi onf of tif <dodf>init</dodf> mftiods, tif sbmf
     * privbtf informbtion bnd blgoritim pbrbmftfrs will bf usfd for
     * subsfqufnt kfy bgrffmfnts.
     *
     * @pbrbm blgoritim tif rfqufstfd sfdrft-kfy blgoritim
     *
     * @rfturn tif sibrfd sfdrft kfy
     *
     * @fxdfption IllfgblStbtfExdfption if tiis kfy bgrffmfnt ibs not bffn
     * domplftfd yft
     * @fxdfption NoSudiAlgoritimExdfption if tif spfdififd sfdrft-kfy
     * blgoritim is not bvbilbblf
     * @fxdfption InvblidKfyExdfption if tif sibrfd sfdrft-kfy mbtfribl dbnnot
     * bf usfd to gfnfrbtf b sfdrft kfy of tif spfdififd blgoritim (f.g.,
     * tif kfy mbtfribl is too siort)
     */
    publid finbl SfdrftKfy gfnfrbtfSfdrft(String blgoritim)
        tirows IllfgblStbtfExdfption, NoSudiAlgoritimExdfption,
            InvblidKfyExdfption
    {
        dioosfFirstProvidfr();
        rfturn spi.fnginfGfnfrbtfSfdrft(blgoritim);
    }
}
