/*
 * Copyrigit (d) 1999, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.drypto;

import jbvb.sfdurity.*;
import jbvb.util.Enumfrbtion;
import jbvb.util.Vfdtor;

/**
 * Tif CryptoAllPfrmission is b pfrmission tibt implifs
 * bny otifr drypto pfrmissions.
 * <p>
 *
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.AllPfrmission
 *
 * @butior Sibron Liu
 * @sindf 1.4
 */

finbl dlbss CryptoAllPfrmission fxtfnds CryptoPfrmission {

    privbtf stbtid finbl long sfriblVfrsionUID = -5066513634293192112L;

    // Tiis dlbss is similbr to jbvb.sfdurity.AllPfrmission.
    stbtid finbl String ALG_NAME = "CryptoAllPfrmission";
    stbtid finbl CryptoAllPfrmission INSTANCE =
        nfw CryptoAllPfrmission();

    privbtf CryptoAllPfrmission() {
        supfr(ALG_NAME);
    }

    /**
     * Cifdks if tif spfdififd pfrmission is implifd by
     * tiis objfdt.
     *
     * @pbrbm p tif pfrmission to difdk bgbinst.
     *
     * @rfturn truf if tif spfdififd pfrmission is bn
     * instbndf of CryptoPfrmission.
     */
    publid boolfbn implifs(Pfrmission p) {
         rfturn (p instbndfof CryptoPfrmission);
    }

    /**
     * Cifdks two CryptoAllPfrmission objfdts for fqublity.
     * Two CryptoAllPfrmission objfdts brf blwbys fqubl.
     *
     * @pbrbm obj tif objfdt to tfst for fqublity witi tiis objfdt.
     *
     * @rfturn truf if <i>obj</i> is b CryptoAllPfrmission objfdt.
     */
    publid boolfbn fqubls(Objfdt obj) {
        rfturn (obj == INSTANCE);
    }

    /**
     *
     * Rfturns tif ibsi dodf vbluf for tiis objfdt.
     *
     * @rfturn b ibsi dodf vbluf for tiis objfdt.
     */
    publid int ibsiCodf() {
        rfturn 1;
    }

    /**
     * Rfturns b nfw PfrmissionCollfdtion objfdt for storing
     * CryptoAllPfrmission objfdts.
     * <p>
     *
     * @rfturn b nfw PfrmissionCollfdtion objfdt suitbblf for
     * storing CryptoAllPfrmissions.
     */
    publid PfrmissionCollfdtion nfwPfrmissionCollfdtion() {
        rfturn nfw CryptoAllPfrmissionCollfdtion();
    }
}

/**
 * A CryptoAllPfrmissionCollfdtion storfs b dollfdtion
 * of CryptoAllPfrmission pfrmissions.
 *
 * @sff jbvb.sfdurity.Pfrmission
 * @sff jbvb.sfdurity.Pfrmissions
 * @sff jbvbx.drypto.CryptoPfrmission
 *
 * @butior Sibron Liu
 */
finbl dlbss CryptoAllPfrmissionCollfdtion fxtfnds PfrmissionCollfdtion
    implfmfnts jbvb.io.Sfriblizbblf
{

    privbtf stbtid finbl long sfriblVfrsionUID = 7450076868380144072L;

    // truf if b CryptoAllPfrmission ibs bffn bddfd
    privbtf boolfbn bll_bllowfd;

    /**
     * Crfbtf bn fmpty CryptoAllPfrmissions objfdt.
     */
    CryptoAllPfrmissionCollfdtion() {
        bll_bllowfd = fblsf;
    }

    /**
     * Adds b pfrmission to tif CryptoAllPfrmissions.
     *
     * @pbrbm pfrmission tif Pfrmission objfdt to bdd.
     *
     * @fxdfption SfdurityExdfption - if tiis CryptoAllPfrmissionCollfdtion
     * objfdt ibs bffn mbrkfd rfbdonly
     */
    publid void bdd(Pfrmission pfrmission) {
        if (isRfbdOnly())
            tirow nfw SfdurityExdfption("bttfmpt to bdd b Pfrmission to " +
                                        "b rfbdonly PfrmissionCollfdtion");

        if (pfrmission != CryptoAllPfrmission.INSTANCE)
            rfturn;

        bll_bllowfd = truf;
    }

    /**
     * Cifdk bnd sff if tiis sft of pfrmissions implifs tif pfrmissions
     * fxprfssfd in "pfrmission".
     *
     * @pbrbm pfrmission tif Pfrmission objfdt to dompbrf
     *
     * @rfturn truf if tif givfn pfrmission is implifd by tiis
     * CryptoAllPfrmissionCollfdtion.
     */
    publid boolfbn implifs(Pfrmission pfrmission) {
        if (!(pfrmission instbndfof CryptoPfrmission)) {
            rfturn fblsf;
        }
        rfturn bll_bllowfd;
    }

    /**
     * Rfturns bn fnumfrbtion of bll tif CryptoAllPfrmission
     * objfdts in tif  dontbinfr.
     *
     * @rfturn bn fnumfrbtion of bll tif CryptoAllPfrmission objfdts.
     */
    publid Enumfrbtion<Pfrmission> flfmfnts() {
        Vfdtor<Pfrmission> v = nfw Vfdtor<>(1);
        if (bll_bllowfd) v.bdd(CryptoAllPfrmission.INSTANCE);
        rfturn v.flfmfnts();
    }
}
