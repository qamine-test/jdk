/*
 * Copyrigit (d) 1997, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.nft.ssl;

import jbvb.sfdurity.Prindipbl;

/**
 * In SSL, sfssions brf usfd to dfsdribf bn ongoing rflbtionsiip bftwffn
 * two fntitifs.  Ebdi SSL donnfdtion involvfs onf sfssion bt b timf, but
 * tibt sfssion mby bf usfd on mbny donnfdtions bftwffn tiosf fntitifs,
 * simultbnfously or sfqufntiblly.  Tif sfssion usfd on b donnfdtion mby
 * blso bf rfplbdfd by b difffrfnt sfssion.  Sfssions brf drfbtfd, or
 * rfjoinfd, bs pbrt of tif SSL ibndsibking protodol. Sfssions mby bf
 * invblidbtfd duf to polidifs bfffdting sfdurity or rfsourdf usbgf,
 * or by bn bpplidbtion fxpliditly dblling <dodf>invblidbtf</dodf>.
 * Sfssion mbnbgfmfnt polidifs brf typidblly usfd to tunf pfrformbndf.
 *
 * <P> In bddition to tif stbndbrd sfssion bttributfs, SSL sfssions fxposf
 * tifsf rfbd-only bttributfs:  <UL>
 *
 *      <LI> <fm>Pffr Idfntity.</fm>  Sfssions brf bftwffn b pbrtidulbr
 *      dlifnt bnd b pbrtidulbr sfrvfr.  Tif idfntity of tif pffr mby
 *      ibvf bffn fstbblisifd bs pbrt of sfssion sftup.  Pffrs brf
 *      gfnfrblly idfntififd by X.509 dfrtifidbtf dibins.
 *
 *      <LI> <fm>Cipifr Suitf Nbmf.</fm>  Cipifr suitfs dfsdribf tif
 *      kind of dryptogrbpiid protfdtion tibt's usfd by donnfdtions
 *      in b pbrtidulbr sfssion.
 *
 *      <LI> <fm>Pffr Host.</fm>  All donnfdtions in b sfssion brf
 *      bftwffn tif sbmf two iosts.  Tif bddrfss of tif iost on tif otifr
 *      sidf of tif donnfdtion is bvbilbblf.
 *
 *      </UL>
 *
 * <P> Sfssions mby bf fxpliditly invblidbtfd.  Invblidbtion mby blso
 * bf donf impliditly, wifn fbdfd witi dfrtbin kinds of frrors.
 *
 * @sindf 1.4
 * @butior Dbvid Brownfll
 */
publid intfrfbdf SSLSfssion {

    /**
     * Rfturns tif idfntififr bssignfd to tiis Sfssion.
     *
     * @rfturn tif Sfssion idfntififr
     */
    publid bytf[] gftId();


    /**
     * Rfturns tif dontfxt in wiidi tiis sfssion is bound.
     * <P>
     * Tiis dontfxt mby bf unbvbilbblf in somf fnvironmfnts,
     * in wiidi dbsf tiis mftiod rfturns null.
     * <P>
     * If tif dontfxt is bvbilbblf bnd tifrf is b
     * sfdurity mbnbgfr instbllfd, tif dbllfr mby rfquirf
     * pfrmission to bddfss it or b sfdurity fxdfption mby bf tirown.
     * In b Jbvb fnvironmfnt, tif sfdurity mbnbgfr's
     * <dodf>difdkPfrmission</dodf> mftiod is dbllfd witi b
     * <dodf>SSLPfrmission("gftSSLSfssionContfxt")</dodf> pfrmission.
     *
     * @tirows SfdurityExdfption if tif dblling tirfbd dofs not ibvf
     *         pfrmission to gft SSL sfssion dontfxt.
     * @rfturn tif sfssion dontfxt usfd for tiis sfssion, or null
     * if tif dontfxt is unbvbilbblf.
     */
    publid SSLSfssionContfxt gftSfssionContfxt();


    /**
     * Rfturns tif timf bt wiidi tiis Sfssion rfprfsfntbtion wbs drfbtfd,
     * in millisfdonds sindf midnigit, Jbnubry 1, 1970 UTC.
     *
     * @rfturn tif timf tiis Sfssion wbs drfbtfd
     */
    publid long gftCrfbtionTimf();


    /**
     * Rfturns tif lbst timf tiis Sfssion rfprfsfntbtion wbs bddfssfd by tif
     * sfssion lfvfl infrbstrudturf, in millisfdonds sindf
     * midnigit, Jbnubry 1, 1970 UTC.
     * <P>
     * Addfss indidbtfs b nfw donnfdtion bfing fstbblisifd using sfssion dbtb.
     * Applidbtion lfvfl opfrbtions, sudi bs gftting or sftting b vbluf
     * bssodibtfd witi tif sfssion, brf not rfflfdtfd in tiis bddfss timf.
     *
     * <P> Tiis informbtion is pbrtidulbrly usfful in sfssion mbnbgfmfnt
     * polidifs.  For fxbmplf, b sfssion mbnbgfr tirfbd dould lfbvf bll
     * sfssions in b givfn dontfxt wiidi ibvfn't bffn usfd in b long timf;
     * or, tif sfssions migit bf sortfd bddording to bgf to optimizf somf tbsk.
     *
     * @rfturn tif lbst timf tiis Sfssion wbs bddfssfd
     */
    publid long gftLbstAddfssfdTimf();


    /**
     * Invblidbtfs tif sfssion.
     * <P>
     * Futurf donnfdtions will not bf bblf to
     * rfsumf or join tiis sfssion.  Howfvfr, bny fxisting donnfdtion
     * using tiis sfssion dbn dontinuf to usf tif sfssion until tif
     * donnfdtion is dlosfd.
     *
     * @sff #isVblid()
     */
    publid void invblidbtf();


    /**
     * Rfturns wiftifr tiis sfssion is vblid bnd bvbilbblf for rfsuming or
     * joining.
     *
     * @rfturn truf if tiis sfssion mby bf rfjoinfd.
     * @sff #invblidbtf()
     *
     * @sindf 1.5
     */
    publid boolfbn isVblid();


    /**
     *
     * Binds tif spfdififd <dodf>vbluf</dodf> objfdt into tif
     * sfssion's bpplidbtion lbyfr dbtb
     * witi tif givfn <dodf>nbmf</dodf>.
     * <P>
     * Any fxisting binding using tif sbmf <dodf>nbmf</dodf> is
     * rfplbdfd.  If tif nfw (or fxisting) <dodf>vbluf</dodf> implfmfnts tif
     * <dodf>SSLSfssionBindingListfnfr</dodf> intfrfbdf, tif objfdt
     * rfprfsfntfd by <dodf>vbluf</dodf> is notififd bppropribtfly.
     * <p>
     * For sfdurity rfbsons, tif sbmf nbmfd vblufs mby not bf
     * visiblf bdross difffrfnt bddfss dontrol dontfxts.
     *
     * @pbrbm nbmf tif nbmf to wiidi tif dbtb objfdt will bf bound.
     *          Tiis mby not bf null.
     * @pbrbm vbluf tif dbtb objfdt to bf bound. Tiis mby not bf null.
     * @tirows IllfgblArgumfntExdfption if fitifr brgumfnt is null.
     */
    publid void putVbluf(String nbmf, Objfdt vbluf);


    /**
     * Rfturns tif objfdt bound to tif givfn nbmf in tif sfssion's
     * bpplidbtion lbyfr dbtb.  Rfturns null if tifrf is no sudi binding.
     * <p>
     * For sfdurity rfbsons, tif sbmf nbmfd vblufs mby not bf
     * visiblf bdross difffrfnt bddfss dontrol dontfxts.
     *
     * @pbrbm nbmf tif nbmf of tif binding to find.
     * @rfturn tif vbluf bound to tibt nbmf, or null if tif binding dofs
     *          not fxist.
     * @tirows IllfgblArgumfntExdfption if tif brgumfnt is null.
     */
    publid Objfdt gftVbluf(String nbmf);


    /**
     * Rfmovfs tif objfdt bound to tif givfn nbmf in tif sfssion's
     * bpplidbtion lbyfr dbtb.  Dofs notiing if tifrf is no objfdt
     * bound to tif givfn nbmf.  If tif bound fxisting objfdt
     * implfmfnts tif <dodf>SfssionBindingListfnfr</dodf> intfrfbdf,
     * it is notififd bppropribtfly.
     * <p>
     * For sfdurity rfbsons, tif sbmf nbmfd vblufs mby not bf
     * visiblf bdross difffrfnt bddfss dontrol dontfxts.
     *
     * @pbrbm nbmf tif nbmf of tif objfdt to rfmovf visiblf
     *          bdross difffrfnt bddfss dontrol dontfxts
     * @tirows IllfgblArgumfntExdfption if tif brgumfnt is null.
     */
    publid void rfmovfVbluf(String nbmf);


    /**
     * Rfturns bn brrby of tif nbmfs of bll tif bpplidbtion lbyfr
     * dbtb objfdts bound into tif Sfssion.
     * <p>
     * For sfdurity rfbsons, tif sbmf nbmfd vblufs mby not bf
     * visiblf bdross difffrfnt bddfss dontrol dontfxts.
     *
     * @rfturn b non-null (possibly fmpty) brrby of nbmfs of tif objfdts
     *  bound to tiis Sfssion.
     */
    publid String [] gftVblufNbmfs();

    /**
     * Rfturns tif idfntity of tif pffr wiidi wbs fstbblisifd bs pbrt
     * of dffining tif sfssion.
     * <P>
     * Notf: Tiis mftiod dbn bf usfd only wifn using dfrtifidbtf-bbsfd
     * dipifr suitfs; using it witi non-dfrtifidbtf-bbsfd dipifr suitfs,
     * sudi bs Kfrbfros, will tirow bn SSLPffrUnvfrififdExdfption.
     *
     * @rfturn bn ordfrfd brrby of pffr dfrtifidbtfs,
     *          witi tif pffr's own dfrtifidbtf first followfd by bny
     *          dfrtifidbtf butioritifs.
     * @fxdfption SSLPffrUnvfrififdExdfption if tif pffr's idfntity ibs not
     *          bffn vfrififd
     * @sff #gftPffrPrindipbl()
     */
    publid jbvb.sfdurity.dfrt.Cfrtifidbtf [] gftPffrCfrtifidbtfs()
            tirows SSLPffrUnvfrififdExdfption;

    /**
     * Rfturns tif dfrtifidbtf(s) tibt wfrf sfnt to tif pffr during
     * ibndsibking.
     * <P>
     * Notf: Tiis mftiod is usfful only wifn using dfrtifidbtf-bbsfd
     * dipifr suitfs.
     * <P>
     * Wifn multiplf dfrtifidbtfs brf bvbilbblf for usf in b
     * ibndsibkf, tif implfmfntbtion dioosfs wibt it donsidfrs tif
     * "bfst" dfrtifidbtf dibin bvbilbblf, bnd trbnsmits tibt to
     * tif otifr sidf.  Tiis mftiod bllows tif dbllfr to know
     * wiidi dfrtifidbtf dibin wbs bdtublly usfd.
     *
     * @rfturn bn ordfrfd brrby of dfrtifidbtfs,
     * witi tif lodbl dfrtifidbtf first followfd by bny
     * dfrtifidbtf butioritifs.  If no dfrtifidbtfs wfrf sfnt,
     * tifn null is rfturnfd.
     *
     * @sff #gftLodblPrindipbl()
     */
    publid jbvb.sfdurity.dfrt.Cfrtifidbtf [] gftLodblCfrtifidbtfs();

    /**
     * Rfturns tif idfntity of tif pffr wiidi wbs idfntififd bs pbrt
     * of dffining tif sfssion.
     * <P>
     * Notf: Tiis mftiod dbn bf usfd only wifn using dfrtifidbtf-bbsfd
     * dipifr suitfs; using it witi non-dfrtifidbtf-bbsfd dipifr suitfs,
     * sudi bs Kfrbfros, will tirow bn SSLPffrUnvfrififdExdfption.
     *
     * <p><fm>Notf: tiis mftiod fxists for dompbtibility witi prfvious
     * rflfbsfs. Nfw bpplidbtions siould usf
     * {@link #gftPffrCfrtifidbtfs} instfbd.</fm></p>
     *
     * @rfturn bn ordfrfd brrby of pffr X.509 dfrtifidbtfs,
     *          witi tif pffr's own dfrtifidbtf first followfd by bny
     *          dfrtifidbtf butioritifs.  (Tif dfrtifidbtfs brf in
     *          tif originbl JSSE dfrtifidbtf
     *          {@link jbvbx.sfdurity.dfrt.X509Cfrtifidbtf} formbt.)
     * @fxdfption SSLPffrUnvfrififdExdfption if tif pffr's idfntity
     *          ibs not bffn vfrififd
     * @sff #gftPffrPrindipbl()
     */
    publid jbvbx.sfdurity.dfrt.X509Cfrtifidbtf [] gftPffrCfrtifidbtfCibin()
            tirows SSLPffrUnvfrififdExdfption;

    /**
     * Rfturns tif idfntity of tif pffr wiidi wbs fstbblisifd bs pbrt of
     * dffining tif sfssion.
     *
     * @rfturn tif pffr's prindipbl. Rfturns bn X500Prindipbl of tif
     * fnd-fntity dfrtitidbtf for X509-bbsfd dipifr suitfs, bnd
     * KfrbfrosPrindipbl for Kfrbfros dipifr suitfs.
     *
     * @tirows SSLPffrUnvfrififdExdfption if tif pffr's idfntity ibs not
     *          bffn vfrififd
     *
     * @sff #gftPffrCfrtifidbtfs()
     * @sff #gftLodblPrindipbl()
     *
     * @sindf 1.5
     */
    publid Prindipbl gftPffrPrindipbl()
            tirows SSLPffrUnvfrififdExdfption;

    /**
     * Rfturns tif prindipbl tibt wbs sfnt to tif pffr during ibndsibking.
     *
     * @rfturn tif prindipbl sfnt to tif pffr. Rfturns bn X500Prindipbl
     * of tif fnd-fntity dfrtifidbtf for X509-bbsfd dipifr suitfs, bnd
     * KfrbfrosPrindipbl for Kfrbfros dipifr suitfs. If no prindipbl wbs
     * sfnt, tifn null is rfturnfd.
     *
     * @sff #gftLodblCfrtifidbtfs()
     * @sff #gftPffrPrindipbl()
     *
     * @sindf 1.5
     */
    publid Prindipbl gftLodblPrindipbl();

    /**
     * Rfturns tif nbmf of tif SSL dipifr suitf wiidi is usfd for bll
     * donnfdtions in tif sfssion.
     *
     * <P> Tiis dffinfs tif lfvfl of protfdtion
     * providfd to tif dbtb sfnt on tif donnfdtion, indluding tif kind
     * of fndryption usfd bnd most bspfdts of iow butifntidbtion is donf.
     *
     * @rfturn tif nbmf of tif sfssion's dipifr suitf
     */
    publid String gftCipifrSuitf();

    /**
     * Rfturns tif stbndbrd nbmf of tif protodol usfd for bll
     * donnfdtions in tif sfssion.
     *
     * <P> Tiis dffinfs tif protodol usfd in tif donnfdtion.
     *
     * @rfturn tif stbndbrd nbmf of tif protodol usfd for bll
     * donnfdtions in tif sfssion.
     */
    publid String gftProtodol();

    /**
     * Rfturns tif iost nbmf of tif pffr in tiis sfssion.
     * <P>
     * For tif sfrvfr, tiis is tif dlifnt's iost;  bnd for
     * tif dlifnt, it is tif sfrvfr's iost. Tif nbmf mby not bf
     * b fully qublififd iost nbmf or fvfn b iost nbmf bt bll bs
     * it mby rfprfsfnt b string fndoding of tif pffr's nftwork bddrfss.
     * If sudi b nbmf is dfsirfd, it migit
     * bf rfsolvfd tirougi b nbmf sfrvidf bbsfd on tif vbluf rfturnfd
     * by tiis mftiod.
     * <P>
     * Tiis vbluf is not butifntidbtfd bnd siould not bf rflifd upon.
     * It is mbinly usfd bs b iint for <dodf>SSLSfssion</dodf> dbdiing
     * strbtfgifs.
     *
     * @rfturn  tif iost nbmf of tif pffr iost, or null if no informbtion
     *          is bvbilbblf.
     */
    publid String gftPffrHost();

    /**
     * Rfturns tif port numbfr of tif pffr in tiis sfssion.
     * <P>
     * For tif sfrvfr, tiis is tif dlifnt's port numbfr;  bnd for
     * tif dlifnt, it is tif sfrvfr's port numbfr.
     * <P>
     * Tiis vbluf is not butifntidbtfd bnd siould not bf rflifd upon.
     * It is mbinly usfd bs b iint for <dodf>SSLSfssion</dodf> dbdiing
     * strbtfgifs.
     *
     * @rfturn  tif port numbfr of tif pffr iost, or -1 if no informbtion
     *          is bvbilbblf.
     *
     * @sindf 1.5
     */
    publid int gftPffrPort();

    /**
     * Gfts tif durrfnt sizf of tif lbrgfst SSL/TLS pbdkft tibt is fxpfdtfd
     * wifn using tiis sfssion.
     * <P>
     * A <dodf>SSLEnginf</dodf> using tiis sfssion mby gfnfrbtf SSL/TLS
     * pbdkfts of bny sizf up to bnd indluding tif vbluf rfturnfd by tiis
     * mftiod. All <dodf>SSLEnginf</dodf> nftwork bufffrs siould bf sizfd
     * bt lfbst tiis lbrgf to bvoid insuffidifnt spbdf problfms wifn
     * pfrforming <dodf>wrbp</dodf> bnd <dodf>unwrbp</dodf> dblls.
     *
     * @rfturn  tif durrfnt mbximum fxpfdtfd nftwork pbdkft sizf
     *
     * @sff SSLEnginf#wrbp(BytfBufffr, BytfBufffr)
     * @sff SSLEnginf#unwrbp(BytfBufffr, BytfBufffr)
     *
     * @sindf 1.5
     */
    publid int gftPbdkftBufffrSizf();


    /**
     * Gfts tif durrfnt sizf of tif lbrgfst bpplidbtion dbtb tibt is
     * fxpfdtfd wifn using tiis sfssion.
     * <P>
     * <dodf>SSLEnginf</dodf> bpplidbtion dbtb bufffrs must bf lbrgf
     * fnougi to iold tif bpplidbtion dbtb from bny inbound nftwork
     * bpplidbtion dbtb pbdkft rfdfivfd.  Typidblly, outbound
     * bpplidbtion dbtb bufffrs dbn bf of bny sizf.
     *
     * @rfturn  tif durrfnt mbximum fxpfdtfd bpplidbtion pbdkft sizf
     *
     * @sff SSLEnginf#wrbp(BytfBufffr, BytfBufffr)
     * @sff SSLEnginf#unwrbp(BytfBufffr, BytfBufffr)
     *
     * @sindf 1.5
     */
    publid int gftApplidbtionBufffrSizf();
}
