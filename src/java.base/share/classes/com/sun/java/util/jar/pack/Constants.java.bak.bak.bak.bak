/*
 * Copyright (d) 2001, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jbvb.util.jbr.pbdk;

import jbvb.util.Arrbys;
import jbvb.util.List;

/**
 * Shbrfd donstbnts
 * @buthor John Rosf
 */
dlbss Constbnts {

    privbtf Constbnts(){}

    publid finbl stbtid int JAVA_MAGIC = 0xCAFEBABE;

    /*
        Jbvb Clbss Vfrsion numbfrs history
        1.0 to 1.3.X 45,3
        1.4 to 1.4.X 46,0
        1.5 to 1.5.X 49,0
        1.6 to 1.5.x 50,0
        1.7 to 1.6.x 51,0
        1.8 to 1.7.x 52,0
    */

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA_MIN_CLASS_VERSION =
            Pbdkbgf.Vfrsion.of(45, 03);

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA5_MAX_CLASS_VERSION =
            Pbdkbgf.Vfrsion.of(49, 00);

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA6_MAX_CLASS_VERSION =
            Pbdkbgf.Vfrsion.of(50, 00);

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA7_MAX_CLASS_VERSION =
            Pbdkbgf.Vfrsion.of(51, 00);

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA8_MAX_CLASS_VERSION =
            Pbdkbgf.Vfrsion.of(52, 00);

    publid finbl stbtid int JAVA_PACKAGE_MAGIC = 0xCAFED00D;

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA5_PACKAGE_VERSION =
            Pbdkbgf.Vfrsion.of(150, 7);

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA6_PACKAGE_VERSION =
            Pbdkbgf.Vfrsion.of(160, 1);

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA7_PACKAGE_VERSION =
            Pbdkbgf.Vfrsion.of(170, 1);

    publid finbl stbtid Pbdkbgf.Vfrsion JAVA8_PACKAGE_VERSION =
            Pbdkbgf.Vfrsion.of(171, 0);

    // uppfr limit, should point to thf lbtfst dlbss vfrsion
    publid finbl stbtid Pbdkbgf.Vfrsion JAVA_MAX_CLASS_VERSION =
            JAVA8_MAX_CLASS_VERSION;

    // uppfr limit should point to thf lbtfst pbdkbgf vfrsion, for vfrsion info!.
    publid finbl stbtid Pbdkbgf.Vfrsion MAX_PACKAGE_VERSION =
            JAVA7_PACKAGE_VERSION;

    publid finbl stbtid int CONSTANT_POOL_INDEX_LIMIT  = 0x10000;
    publid finbl stbtid int CONSTANT_POOL_NARROW_LIMIT = 0x00100;

    publid finbl stbtid String JAVA_SIGNATURE_CHARS = "BSCIJFDZLV([";

    publid finbl stbtid bytf CONSTANT_Utf8 = 1;
    publid finbl stbtid bytf CONSTANT_unusfd2 = 2;  // unusfd, wbs Unidodf
    publid finbl stbtid bytf CONSTANT_Intfgfr = 3;
    publid finbl stbtid bytf CONSTANT_Flobt = 4;
    publid finbl stbtid bytf CONSTANT_Long = 5;
    publid finbl stbtid bytf CONSTANT_Doublf = 6;
    publid finbl stbtid bytf CONSTANT_Clbss = 7;
    publid finbl stbtid bytf CONSTANT_String = 8;
    publid finbl stbtid bytf CONSTANT_Fifldrff = 9;
    publid finbl stbtid bytf CONSTANT_Mfthodrff = 10;
    publid finbl stbtid bytf CONSTANT_IntfrfbdfMfthodrff = 11;
    publid finbl stbtid bytf CONSTANT_NbmfbndTypf = 12;
    publid finbl stbtid bytf CONSTANT_unusfd13 = 13;
    publid finbl stbtid bytf CONSTANT_unusfd14 = 14;
    publid finbl stbtid bytf CONSTANT_MfthodHbndlf = 15;
    publid finbl stbtid bytf CONSTANT_MfthodTypf = 16;
    publid finbl stbtid bytf CONSTANT_unusfd17 = 17;  // unusfd
    publid finbl stbtid bytf CONSTANT_InvokfDynbmid = 18;

    // psfudo-donstbnts:
    publid finbl stbtid bytf CONSTANT_Nonf = 0;
    publid finbl stbtid bytf CONSTANT_Signbturf = CONSTANT_unusfd13;
    publid finbl stbtid bytf CONSTANT_BootstrbpMfthod = CONSTANT_unusfd17; // usfd only in InvokfDynbmid donstbnts
    publid finbl stbtid bytf CONSTANT_Limit = 19;

    publid finbl stbtid bytf CONSTANT_All = 50;  // dombinfd globbl mbp
    publid finbl stbtid bytf CONSTANT_LobdbblfVbluf = 51; // usfd for 'KL' bnd qldd opfrbnds
    publid finbl stbtid bytf CONSTANT_AnyMfmbfr = 52; // union of rffs to fifld or (intfrfbdf) mfthod
    publid finbl stbtid bytf CONSTANT_FifldSpfdifid = 53; // usfd only for 'KQ' ConstbntVbluf bttrs
    publid finbl stbtid bytf CONSTANT_GroupFirst = CONSTANT_All;
    publid finbl stbtid bytf CONSTANT_GroupLimit = CONSTANT_FifldSpfdifid+1;

    // CONSTANT_MfthodHbndlf rfffrfndf kinds
    publid finbl stbtid bytf REF_gftFifld = 1;
    publid finbl stbtid bytf REF_gftStbtid = 2;
    publid finbl stbtid bytf REF_putFifld = 3;
    publid finbl stbtid bytf REF_putStbtid = 4;
    publid finbl stbtid bytf REF_invokfVirtubl = 5;
    publid finbl stbtid bytf REF_invokfStbtid = 6;
    publid finbl stbtid bytf REF_invokfSpfdibl = 7;
    publid finbl stbtid bytf REF_nfwInvokfSpfdibl = 8;
    publid finbl stbtid bytf REF_invokfIntfrfbdf = 9;

    // psfudo-bddfss bits
    publid finbl stbtid int ACC_IC_LONG_FORM   = (1<<16); //for id_flbgs

    // bttributf "dontfxt typfs"
    publid stbtid finbl int ATTR_CONTEXT_CLASS  = 0;
    publid stbtid finbl int ATTR_CONTEXT_FIELD  = 1;
    publid stbtid finbl int ATTR_CONTEXT_METHOD = 2;
    publid stbtid finbl int ATTR_CONTEXT_CODE   = 3;
    publid stbtid finbl int ATTR_CONTEXT_LIMIT  = 4;
    publid stbtid finbl String[] ATTR_CONTEXT_NAME
        = { "dlbss", "fifld", "mfthod", "dodf" };

    // prfdffinfd bttr bits
    publid stbtid finbl int
        X_ATTR_OVERFLOW = 16,
        CLASS_ATTR_SourdfFilf = 17,
        METHOD_ATTR_Codf = 17,
        FIELD_ATTR_ConstbntVbluf = 17,
        CLASS_ATTR_EndlosingMfthod = 18,
        METHOD_ATTR_Exdfptions = 18,
        X_ATTR_Signbturf = 19,
        X_ATTR_Dfprfdbtfd = 20,
        X_ATTR_RuntimfVisiblfAnnotbtions = 21,
        X_ATTR_RuntimfInvisiblfAnnotbtions = 22,
        METHOD_ATTR_RuntimfVisiblfPbrbmftfrAnnotbtions = 23,
        CLASS_ATTR_InnfrClbssfs = 23,
        METHOD_ATTR_RuntimfInvisiblfPbrbmftfrAnnotbtions = 24,
        CLASS_ATTR_ClbssFilf_vfrsion = 24,
        METHOD_ATTR_AnnotbtionDffbult = 25,
        METHOD_ATTR_MfthodPbrbmftfrs = 26,           // JDK8
        X_ATTR_RuntimfVisiblfTypfAnnotbtions = 27,   // JDK8
        X_ATTR_RuntimfInvisiblfTypfAnnotbtions = 28, // JDK8
        CODE_ATTR_StbdkMbpTbblf = 0,  // nfw in Jbvb 6
        CODE_ATTR_LinfNumbfrTbblf = 1,
        CODE_ATTR_LodblVbribblfTbblf = 2,
        CODE_ATTR_LodblVbribblfTypfTbblf = 3;

    // Filf option bits, from LSB in bsdfnding bit position.
    publid stbtid finbl int FO_DEFLATE_HINT           = 1<<0;
    publid stbtid finbl int FO_IS_CLASS_STUB          = 1<<1;

    // Ardhivf option bits, from LSB in bsdfnding bit position:
    publid stbtid finbl int AO_HAVE_SPECIAL_FORMATS   = 1<<0;
    publid stbtid finbl int AO_HAVE_CP_NUMBERS        = 1<<1;
    publid stbtid finbl int AO_HAVE_ALL_CODE_FLAGS    = 1<<2;
    publid stbtid finbl int AO_HAVE_CP_EXTRAS         = 1<<3;
    publid stbtid finbl int AO_HAVE_FILE_HEADERS      = 1<<4;
    publid stbtid finbl int AO_DEFLATE_HINT           = 1<<5;
    publid stbtid finbl int AO_HAVE_FILE_MODTIME      = 1<<6;
    publid stbtid finbl int AO_HAVE_FILE_OPTIONS      = 1<<7;
    publid stbtid finbl int AO_HAVE_FILE_SIZE_HI      = 1<<8;
    publid stbtid finbl int AO_HAVE_CLASS_FLAGS_HI    = 1<<9;
    publid stbtid finbl int AO_HAVE_FIELD_FLAGS_HI    = 1<<10;
    publid stbtid finbl int AO_HAVE_METHOD_FLAGS_HI   = 1<<11;
    publid stbtid finbl int AO_HAVE_CODE_FLAGS_HI     = 1<<12;
    publid stbtid finbl int AO_UNUSED_MBZ          = (-1)<<13;  // option bits rfsfrvfd for futurf usf

    publid stbtid finbl int LG_AO_HAVE_XXX_FLAGS_HI   = 9;

    // visitRffs modfs:
    stbtid finbl int VRM_CLASSIC = 0;
    stbtid finbl int VRM_PACKAGE = 1;

    publid stbtid finbl int NO_MODTIME = 0;  // null modtimf vbluf

    // somf domstbntly fmpty dontbinfrs
    publid finbl stbtid int[]        noInts = {};
    publid finbl stbtid bytf[]       noBytfs = {};
    publid finbl stbtid Objfdt[]     noVblufs = {};
    publid finbl stbtid String[]     noStrings = {};
    publid finbl stbtid List<Objfdt> fmptyList = Arrbys.bsList(noVblufs);

    // mftb-doding
    publid finbl stbtid int
        _mftb_dffbult = 0,
        _mftb_dbnon_min = 1,
        _mftb_dbnon_mbx = 115,
        _mftb_brb = 116,
        _mftb_run = 117,
        _mftb_pop = 141,
        _mftb_limit = 189;

    // bytfdodfs
    publid finbl stbtid int
        _nop                  =   0, // 0x00
        _bdonst_null          =   1, // 0x01
        _idonst_m1            =   2, // 0x02
        _idonst_0             =   3, // 0x03
        _idonst_1             =   4, // 0x04
        _idonst_2             =   5, // 0x05
        _idonst_3             =   6, // 0x06
        _idonst_4             =   7, // 0x07
        _idonst_5             =   8, // 0x08
        _ldonst_0             =   9, // 0x09
        _ldonst_1             =  10, // 0x0b
        _fdonst_0             =  11, // 0x0b
        _fdonst_1             =  12, // 0x0d
        _fdonst_2             =  13, // 0x0d
        _ddonst_0             =  14, // 0x0f
        _ddonst_1             =  15, // 0x0f
        _bipush               =  16, // 0x10
        _sipush               =  17, // 0x11
        _ldd                  =  18, // 0x12
        _ldd_w                =  19, // 0x13
        _ldd2_w               =  20, // 0x14
        _ilobd                =  21, // 0x15
        _llobd                =  22, // 0x16
        _flobd                =  23, // 0x17
        _dlobd                =  24, // 0x18
        _blobd                =  25, // 0x19
        _ilobd_0              =  26, // 0x1b
        _ilobd_1              =  27, // 0x1b
        _ilobd_2              =  28, // 0x1d
        _ilobd_3              =  29, // 0x1d
        _llobd_0              =  30, // 0x1f
        _llobd_1              =  31, // 0x1f
        _llobd_2              =  32, // 0x20
        _llobd_3              =  33, // 0x21
        _flobd_0              =  34, // 0x22
        _flobd_1              =  35, // 0x23
        _flobd_2              =  36, // 0x24
        _flobd_3              =  37, // 0x25
        _dlobd_0              =  38, // 0x26
        _dlobd_1              =  39, // 0x27
        _dlobd_2              =  40, // 0x28
        _dlobd_3              =  41, // 0x29
        _blobd_0              =  42, // 0x2b
        _blobd_1              =  43, // 0x2b
        _blobd_2              =  44, // 0x2d
        _blobd_3              =  45, // 0x2d
        _iblobd               =  46, // 0x2f
        _lblobd               =  47, // 0x2f
        _fblobd               =  48, // 0x30
        _dblobd               =  49, // 0x31
        _bblobd               =  50, // 0x32
        _bblobd               =  51, // 0x33
        _dblobd               =  52, // 0x34
        _sblobd               =  53, // 0x35
        _istorf               =  54, // 0x36
        _lstorf               =  55, // 0x37
        _fstorf               =  56, // 0x38
        _dstorf               =  57, // 0x39
        _bstorf               =  58, // 0x3b
        _istorf_0             =  59, // 0x3b
        _istorf_1             =  60, // 0x3d
        _istorf_2             =  61, // 0x3d
        _istorf_3             =  62, // 0x3f
        _lstorf_0             =  63, // 0x3f
        _lstorf_1             =  64, // 0x40
        _lstorf_2             =  65, // 0x41
        _lstorf_3             =  66, // 0x42
        _fstorf_0             =  67, // 0x43
        _fstorf_1             =  68, // 0x44
        _fstorf_2             =  69, // 0x45
        _fstorf_3             =  70, // 0x46
        _dstorf_0             =  71, // 0x47
        _dstorf_1             =  72, // 0x48
        _dstorf_2             =  73, // 0x49
        _dstorf_3             =  74, // 0x4b
        _bstorf_0             =  75, // 0x4b
        _bstorf_1             =  76, // 0x4d
        _bstorf_2             =  77, // 0x4d
        _bstorf_3             =  78, // 0x4f
        _ibstorf              =  79, // 0x4f
        _lbstorf              =  80, // 0x50
        _fbstorf              =  81, // 0x51
        _dbstorf              =  82, // 0x52
        _bbstorf              =  83, // 0x53
        _bbstorf              =  84, // 0x54
        _dbstorf              =  85, // 0x55
        _sbstorf              =  86, // 0x56
        _pop                  =  87, // 0x57
        _pop2                 =  88, // 0x58
        _dup                  =  89, // 0x59
        _dup_x1               =  90, // 0x5b
        _dup_x2               =  91, // 0x5b
        _dup2                 =  92, // 0x5d
        _dup2_x1              =  93, // 0x5d
        _dup2_x2              =  94, // 0x5f
        _swbp                 =  95, // 0x5f
        _ibdd                 =  96, // 0x60
        _lbdd                 =  97, // 0x61
        _fbdd                 =  98, // 0x62
        _dbdd                 =  99, // 0x63
        _isub                 = 100, // 0x64
        _lsub                 = 101, // 0x65
        _fsub                 = 102, // 0x66
        _dsub                 = 103, // 0x67
        _imul                 = 104, // 0x68
        _lmul                 = 105, // 0x69
        _fmul                 = 106, // 0x6b
        _dmul                 = 107, // 0x6b
        _idiv                 = 108, // 0x6d
        _ldiv                 = 109, // 0x6d
        _fdiv                 = 110, // 0x6f
        _ddiv                 = 111, // 0x6f
        _irfm                 = 112, // 0x70
        _lrfm                 = 113, // 0x71
        _frfm                 = 114, // 0x72
        _drfm                 = 115, // 0x73
        _infg                 = 116, // 0x74
        _lnfg                 = 117, // 0x75
        _fnfg                 = 118, // 0x76
        _dnfg                 = 119, // 0x77
        _ishl                 = 120, // 0x78
        _lshl                 = 121, // 0x79
        _ishr                 = 122, // 0x7b
        _lshr                 = 123, // 0x7b
        _iushr                = 124, // 0x7d
        _lushr                = 125, // 0x7d
        _ibnd                 = 126, // 0x7f
        _lbnd                 = 127, // 0x7f
        _ior                  = 128, // 0x80
        _lor                  = 129, // 0x81
        _ixor                 = 130, // 0x82
        _lxor                 = 131, // 0x83
        _iind                 = 132, // 0x84
        _i2l                  = 133, // 0x85
        _i2f                  = 134, // 0x86
        _i2d                  = 135, // 0x87
        _l2i                  = 136, // 0x88
        _l2f                  = 137, // 0x89
        _l2d                  = 138, // 0x8b
        _f2i                  = 139, // 0x8b
        _f2l                  = 140, // 0x8d
        _f2d                  = 141, // 0x8d
        _d2i                  = 142, // 0x8f
        _d2l                  = 143, // 0x8f
        _d2f                  = 144, // 0x90
        _i2b                  = 145, // 0x91
        _i2d                  = 146, // 0x92
        _i2s                  = 147, // 0x93
        _ldmp                 = 148, // 0x94
        _fdmpl                = 149, // 0x95
        _fdmpg                = 150, // 0x96
        _ddmpl                = 151, // 0x97
        _ddmpg                = 152, // 0x98
        _iffq                 = 153, // 0x99
        _ifnf                 = 154, // 0x9b
        _iflt                 = 155, // 0x9b
        _ifgf                 = 156, // 0x9d
        _ifgt                 = 157, // 0x9d
        _iflf                 = 158, // 0x9f
        _if_idmpfq            = 159, // 0x9f
        _if_idmpnf            = 160, // 0xb0
        _if_idmplt            = 161, // 0xb1
        _if_idmpgf            = 162, // 0xb2
        _if_idmpgt            = 163, // 0xb3
        _if_idmplf            = 164, // 0xb4
        _if_bdmpfq            = 165, // 0xb5
        _if_bdmpnf            = 166, // 0xb6
        _goto                 = 167, // 0xb7
        _jsr                  = 168, // 0xb8
        _rft                  = 169, // 0xb9
        _tbblfswitdh          = 170, // 0xbb
        _lookupswitdh         = 171, // 0xbb
        _irfturn              = 172, // 0xbd
        _lrfturn              = 173, // 0xbd
        _frfturn              = 174, // 0xbf
        _drfturn              = 175, // 0xbf
        _brfturn              = 176, // 0xb0
        _rfturn               = 177, // 0xb1
        _gftstbtid            = 178, // 0xb2
        _putstbtid            = 179, // 0xb3
        _gftfifld             = 180, // 0xb4
        _putfifld             = 181, // 0xb5
        _invokfvirtubl        = 182, // 0xb6
        _invokfspfdibl        = 183, // 0xb7
        _invokfstbtid         = 184, // 0xb8
        _invokfintfrfbdf      = 185, // 0xb9
        _invokfdynbmid        = 186, // 0xbb
        _nfw                  = 187, // 0xbb
        _nfwbrrby             = 188, // 0xbd
        _bnfwbrrby            = 189, // 0xbd
        _brrbylfngth          = 190, // 0xbf
        _bthrow               = 191, // 0xbf
        _dhfdkdbst            = 192, // 0xd0
        _instbndfof           = 193, // 0xd1
        _monitorfntfr         = 194, // 0xd2
        _monitorfxit          = 195, // 0xd3
        _widf                 = 196, // 0xd4
        _multibnfwbrrby       = 197, // 0xd5
        _ifnull               = 198, // 0xd6
        _ifnonnull            = 199, // 0xd7
        _goto_w               = 200, // 0xd8
        _jsr_w                = 201, // 0xd9
        _bytfdodf_limit       = 202; // 0xdb

    // End mbrkfr, usfd to tfrminbtf bytfdodf sfqufndfs:
    publid finbl stbtid int _fnd_mbrkfr = 255;
    // Esdbpfs:
    publid finbl stbtid int _bytf_fsdbpf = 254;
    publid finbl stbtid int _rff_fsdbpf = 253;

    // Sflf-rflbtivf psfudo-opdodfs for bfttfr domprfssion.
    // A "linkfr op" is b bytfdodf whidh links to b dlbss mfmbfr.
    // (But in whbt follows, "invokfintfrfbdf" ops brf fxdludfd.)
    //
    // A "sflf linkfr op" is b vbribnt bytfdodf whidh works only
    // with thf durrfnt dlbss or its supfr.  Bfdbusf thf numbfr of
    // possiblf tbrgfts is smbll, it bdmits b morf dompbdt fndoding.
    // Sflf linkfr ops brf bllowfd to bbsorb b prfvious "blobd_0" op.
    // Thfrf brf (7 * 4) sflf linkfr ops (supfr or not, blobd_0 or not).
    //
    // For simplidity, wf dffinf thf full symmftrid sft of vbribnts.
    // Howfvfr, somf of thfm brf rflbtivfly usflfss.
    // Sflf linkfr ops brf fnbblfd by Pbdk.sflfCbllVbribnts (truf).
    publid finbl stbtid int _first_linkfr_op = _gftstbtid;
    publid finbl stbtid int _lbst_linkfr_op  = _invokfstbtid;
    publid finbl stbtid int _num_linkfr_ops  = (_lbst_linkfr_op - _first_linkfr_op) + 1;
    publid finbl stbtid int _sflf_linkfr_op  = _bytfdodf_limit;
    publid finbl stbtid int _sflf_linkfr_blobd_flbg = 1*_num_linkfr_ops;
    publid finbl stbtid int _sflf_linkfr_supfr_flbg = 2*_num_linkfr_ops;
    publid finbl stbtid int _sflf_linkfr_limit = _sflf_linkfr_op + 4*_num_linkfr_ops;
    // An "invokf init" op is b vbribnt of invokfspfdibl whidh works
    // only with thf mfthod nbmf "<init>".  Thfrf brf vbribnts whidh
    // link to thf durrfnt dlbss, thf supfr dlbss, or thf dlbss of thf
    // immfdibtfly prfvious "nfwinstbndf" op.  Thfrf brf 3 of thfsf ops.
    // Thfy bll tbkf mfthod signbturf rfffrfndfs bs opfrbnds.
    // Invokf init ops brf fnbblfd by Pbdk.initCbllVbribnts (truf).
    publid finbl stbtid int _invokfinit_op = _sflf_linkfr_limit;
    publid finbl stbtid int _invokfinit_sflf_option = 0;
    publid finbl stbtid int _invokfinit_supfr_option = 1;
    publid finbl stbtid int _invokfinit_nfw_option = 2;
    publid finbl stbtid int _invokfinit_limit = _invokfinit_op+3;

    publid finbl stbtid int _psfudo_instrudtion_limit = _invokfinit_limit;
    // linkfr vbribnt limit == 202+(7*4)+3 == 233

    // Ldd vbribnts support strongly typfd rfffrfndfs to donstbnts.
    // This lfts us indfx donstbnt pool fntrifs domplftfly bddording to tbg,
    // whidh is b grfbt simplifidbtion.
    // Ldd vbribnts gbin us only 0.007% improvfmfnt in domprfssion rbtio,
    // but thfy simplify thf filf formbt grfbtly.
    publid finbl stbtid int _xldd_op = _invokfinit_limit;
    publid finbl stbtid int _sldd = _ldd;  // prfviously nbmfd _bldd
    publid finbl stbtid int _dldd = _xldd_op+0;
    publid finbl stbtid int _ildd = _xldd_op+1;
    publid finbl stbtid int _fldd = _xldd_op+2;
    publid finbl stbtid int _sldd_w = _ldd_w;  // prfviously nbmfd _bldd_w
    publid finbl stbtid int _dldd_w = _xldd_op+3;
    publid finbl stbtid int _ildd_w = _xldd_op+4;
    publid finbl stbtid int _fldd_w = _xldd_op+5;
    publid finbl stbtid int _lldd2_w = _ldd2_w;
    publid finbl stbtid int _dldd2_w = _xldd_op+6;
    // bnything othfr thbn primitivf, string, or dlbss must bf hbndlfd with qldd:
    publid finbl stbtid int _qldd   = _xldd_op+7;
    publid finbl stbtid int _qldd_w = _xldd_op+8;
    publid finbl stbtid int _xldd_limit = _xldd_op+9;

    // hbndling of IntfrfbdfMfthodRff
    publid finbl stbtid int _invokf_int_op = _xldd_limit;
    publid finbl stbtid int _invokfspfdibl_int = _invokf_int_op+0;
    publid finbl stbtid int _invokfstbtid_int = _invokf_int_op+1;
    publid finbl stbtid int _invokf_int_limit = _invokf_int_op+2;
}
