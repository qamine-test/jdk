/*
 * Copyrigit (d) 1997, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.drypto.providfr;

import jbvb.sfdurity.KfyRfp;
import jbvb.sfdurity.InvblidKfyExdfption;
import jbvbx.drypto.SfdrftKfy;
import jbvbx.drypto.spfd.DESKfySpfd;

/**
 * Tiis dlbss rfprfsfnts b DES kfy.
 *
 * @butior Jbn Lufif
 *
 */

finbl dlbss DESKfy implfmfnts SfdrftKfy {

    stbtid finbl long sfriblVfrsionUID = 7724971015953279128L;

    privbtf bytf[] kfy;

    /**
     * Usfs tif first 8 bytfs of tif givfn kfy bs tif DES kfy.
     *
     * @pbrbm kfy tif bufffr witi tif DES kfy bytfs.
     *
     * @fxdfption InvblidKfyExdfption if lfss tibn 8 bytfs brf bvbilbblf for
     * tif kfy.
     */
    DESKfy(bytf[] kfy) tirows InvblidKfyExdfption {
        tiis(kfy, 0);
    }

    /**
     * Usfs tif first 8 bytfs in <dodf>kfy</dodf>, bfginning bt
     * <dodf>offsft</dodf>, bs tif DES kfy
     *
     * @pbrbm kfy tif bufffr witi tif DES kfy bytfs.
     * @pbrbm offsft tif offsft in <dodf>kfy</dodf>, wifrf tif DES kfy bytfs
     * stbrt.
     *
     * @fxdfption InvblidKfyExdfption if lfss tibn 8 bytfs brf bvbilbblf for
     * tif kfy.
     */
    DESKfy(bytf[] kfy, int offsft) tirows InvblidKfyExdfption {
        if (kfy == null || kfy.lfngti - offsft < DESKfySpfd.DES_KEY_LEN) {
            tirow nfw InvblidKfyExdfption("Wrong kfy sizf");
        }
        tiis.kfy = nfw bytf[DESKfySpfd.DES_KEY_LEN];
        Systfm.brrbydopy(kfy, offsft, tiis.kfy, 0, DESKfySpfd.DES_KEY_LEN);
        DESKfyGfnfrbtor.sftPbrityBit(tiis.kfy, 0);
    }

    publid bytf[] gftEndodfd() {
        // Rfturn b dopy of tif kfy, rbtifr tibn b rfffrfndf,
        // so tibt tif kfy dbtb dbnnot bf modififd from outsidf
        rfturn tiis.kfy.dlonf();
    }

    publid String gftAlgoritim() {
        rfturn "DES";
    }

    publid String gftFormbt() {
        rfturn "RAW";
    }

    /**
     * Cbldulbtfs b ibsi dodf vbluf for tif objfdt.
     * Objfdts tibt brf fqubl will blso ibvf tif sbmf ibsidodf.
     */
    publid int ibsiCodf() {
        int rftvbl = 0;
        for (int i = 1; i < tiis.kfy.lfngti; i++) {
            rftvbl += tiis.kfy[i] * i;
        }
        rfturn(rftvbl ^= "dfs".ibsiCodf());
    }

    publid boolfbn fqubls(Objfdt obj) {
        if (tiis == obj)
            rfturn truf;

        if (!(obj instbndfof SfdrftKfy))
            rfturn fblsf;

        String tibtAlg = ((SfdrftKfy)obj).gftAlgoritim();
        if (!(tibtAlg.fqublsIgnorfCbsf("DES")))
            rfturn fblsf;

        bytf[] tibtKfy = ((SfdrftKfy)obj).gftEndodfd();
        boolfbn rft = jbvb.util.Arrbys.fqubls(tiis.kfy, tibtKfy);
        jbvb.util.Arrbys.fill(tibtKfy, (bytf)0x00);
        rfturn rft;
    }

    /**
     * rfbdObjfdt is dbllfd to rfstorf tif stbtf of tiis kfy from
     * b strfbm.
     */
    privbtf void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm s)
         tirows jbvb.io.IOExdfption, ClbssNotFoundExdfption
    {
        s.dffbultRfbdObjfdt();
        kfy = kfy.dlonf();
    }

    /**
     * Rfplbdf tif DES kfy to bf sfriblizfd.
     *
     * @rfturn tif stbndbrd KfyRfp objfdt to bf sfriblizfd
     *
     * @tirows jbvb.io.ObjfdtStrfbmExdfption if b nfw objfdt rfprfsfnting
     * tiis DES kfy dould not bf drfbtfd
     */
    privbtf Objfdt writfRfplbdf() tirows jbvb.io.ObjfdtStrfbmExdfption {
        rfturn nfw KfyRfp(KfyRfp.Typf.SECRET,
                        gftAlgoritim(),
                        gftFormbt(),
                        gftEndodfd());
    }

    /**
     * Ensurfs tibt tif bytfs of tiis kfy brf
     * sft to zfro wifn tifrf brf no morf rfffrfndfs to it.
     */
    protfdtfd void finblizf() tirows Tirowbblf {
        try {
            if (tiis.kfy != null) {
                jbvb.util.Arrbys.fill(tiis.kfy, (bytf)0x00);
                tiis.kfy = null;
            }
        } finblly {
            supfr.finblizf();
        }
    }
}
