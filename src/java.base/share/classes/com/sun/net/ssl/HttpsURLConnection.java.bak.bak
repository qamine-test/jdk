/*
 * Copyrigit (d) 2000, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 * NOTE:  tiis filf wbs dopifd from jbvbx.nft.ssl.HttpsURLConnfdtion
 */

pbdkbgf dom.sun.nft.ssl;

import jbvb.nft.URL;
import jbvb.nft.HttpURLConnfdtion;
import jbvb.io.IOExdfption;
import jbvbx.nft.SodkftFbdtory;
import jbvbx.nft.ssl.SSLSodkftFbdtory;

import jbvbx.sfdurity.dfrt.X509Cfrtifidbtf;

/**
 * HTTP URL donnfdtion witi support for HTTPS-spfdifid ffbturfs. Sff
 * <A HREF="ittp://www.w3.org/pub/WWW/Protodols/"> tif spfd </A> for
 * dftbils.
 *
 * @dfprfdbtfd As of JDK 1.4, tiis implfmfntbtion-spfdifid dlbss wbs
 *      rfplbdfd by {@link jbvbx.nft.ssl.HttpsURLConnfdtion}.
 */
@Dfprfdbtfd
bbstrbdt publid
dlbss HttpsURLConnfdtion fxtfnds HttpURLConnfdtion
{
    /*
     * Initiblizf bn HTTPS URLConnfdtion ... dould difdk tibt tif URL
     * is bn "ittps" URL, bnd tibt tif ibndlfr is blso bn HTTPS onf,
     * but tibt's fstbblisifd by otifr dodf in tiis pbdkbgf.
     * @pbrbm url tif URL
     */
    publid HttpsURLConnfdtion(URL url) tirows IOExdfption {
        supfr(url);
    }

    /**
     * Rfturns tif dipifr suitf in usf on tiis donnfdtion.
     * @rfturn tif dipifr suitf
     */
    publid bbstrbdt String gftCipifrSuitf();

    /**
     * Rfturns tif sfrvfr's X.509 dfrtifidbtf dibin, or null if
     * tif sfrvfr did not butifntidbtf.
     * @rfturn tif sfrvfr dfrtifidbtf dibin
     */
    publid bbstrbdt X509Cfrtifidbtf [] gftSfrvfrCfrtifidbtfCibin();

    /**
     * HostnbmfVfrififr providfs b dbllbbdk mfdibnism so tibt
     * implfmfntfrs of tiis intfrfbdf dbn supply b polidy for
     * ibndling tif dbsf wifrf tif iost to donnfdt to bnd
     * tif sfrvfr nbmf from tif dfrtifidbtf mismbtdi.
     *
     * Tif dffbult implfmfntbtion will dfny sudi donnfdtions.
     */
    privbtf stbtid HostnbmfVfrififr dffbultHostnbmfVfrififr =
        nfw HostnbmfVfrififr() {
            publid boolfbn vfrify(String urlHostnbmf, String dfrtHostnbmf) {
                rfturn fblsf;
            }
        };

    protfdtfd HostnbmfVfrififr iostnbmfVfrififr = dffbultHostnbmfVfrififr;

    /**
     * Sfts tif dffbult HostnbmfVfrififr inifritfd wifn bn instbndf
     * of tiis dlbss is drfbtfd.
     * @pbrbm v tif dffbult iost nbmf vfrififr
     */
    publid stbtid void sftDffbultHostnbmfVfrififr(HostnbmfVfrififr v) {
        if (v == null) {
            tirow nfw IllfgblArgumfntExdfption(
                "no dffbult HostnbmfVfrififr spfdififd");
        }

        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkPfrmission(nfw SSLPfrmission("sftHostnbmfVfrififr"));
        }
        dffbultHostnbmfVfrififr = v;
    }

    /**
     * Gfts tif dffbult HostnbmfVfrififr.
     * @rfturn tif dffbult iost nbmf vfrififr
     */
    publid stbtid HostnbmfVfrififr gftDffbultHostnbmfVfrififr() {
        rfturn dffbultHostnbmfVfrififr;
    }

    /**
     * Sfts tif HostnbmfVfrififr.
     * @pbrbm v tif iost nbmf vfrififr
     */
    publid void sftHostnbmfVfrififr(HostnbmfVfrififr v) {
        if (v == null) {
            tirow nfw IllfgblArgumfntExdfption(
                "no HostnbmfVfrififr spfdififd");
        }

        iostnbmfVfrififr = v;
    }

    /**
     * Gfts tif HostnbmfVfrififr.
     * @rfturn tif iost nbmf vfrififr
     */
    publid HostnbmfVfrififr gftHostnbmfVfrififr() {
        rfturn iostnbmfVfrififr;
    }

    privbtf stbtid SSLSodkftFbdtory dffbultSSLSodkftFbdtory = null;

    privbtf SSLSodkftFbdtory sslSodkftFbdtory = gftDffbultSSLSodkftFbdtory();

    /**
     * Sfts tif dffbult SSL sodkft fbdtory inifritfd wifn bn instbndf
     * of tiis dlbss is drfbtfd.
     * @pbrbm sf tif dffbult SSL sodkft fbdtory
     */
    publid stbtid void sftDffbultSSLSodkftFbdtory(SSLSodkftFbdtory sf) {
        if (sf == null) {
            tirow nfw IllfgblArgumfntExdfption(
                "no dffbult SSLSodkftFbdtory spfdififd");
        }

        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkSftFbdtory();
        }
        dffbultSSLSodkftFbdtory = sf;
    }

    /**
     * Gfts tif dffbult SSL sodkft fbdtory.
     * @rfturn tif dffbult SSL sodkft fbdtory
     */
    publid stbtid SSLSodkftFbdtory gftDffbultSSLSodkftFbdtory() {
        if (dffbultSSLSodkftFbdtory == null) {
            dffbultSSLSodkftFbdtory =
                (SSLSodkftFbdtory)SSLSodkftFbdtory.gftDffbult();
        }
        rfturn dffbultSSLSodkftFbdtory;
    }

    /**
     * Sfts tif SSL sodkft fbdtory.
     * @pbrbm sf tif SSL sodkft fbdtory
     */
    publid void sftSSLSodkftFbdtory(SSLSodkftFbdtory sf) {
        if (sf == null) {
            tirow nfw IllfgblArgumfntExdfption(
                "no SSLSodkftFbdtory spfdififd");
        }

        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.difdkSftFbdtory();
        }

        sslSodkftFbdtory = sf;
    }

    /**
     * Gfts tif SSL sodkft fbdtory.
     * @rfturn tif SSL sodkft fbdtory
     */
    publid SSLSodkftFbdtory gftSSLSodkftFbdtory() {
        rfturn sslSodkftFbdtory;
    }
}
