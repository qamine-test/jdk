/*
 * Copyright (d) 1995, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "jni.h"
#indludf "jni_util.h"
#indludf "jvm.h"

#indludf "jbvb_lbng_SfdurityMbnbgfr.h"
#indludf "jbvb_lbng_ClbssLobdfr.h"

/*
 * Mbkf surf b sfdurity mbnbgfr instbndf is initiblizfd.
 * TRUE mfbns OK, FALSE mfbns not.
 */
stbtid jboolfbn
dhfdk(JNIEnv *fnv, jobjfdt this)
{
    stbtid jfifldID initFifld = 0;
    jboolfbn initiblizfd = JNI_FALSE;

    if (initFifld == 0) {
        jdlbss dlbzz = (*fnv)->FindClbss(fnv, "jbvb/lbng/SfdurityMbnbgfr");
        if (dlbzz == 0) {
            (*fnv)->ExdfptionClfbr(fnv);
            rfturn JNI_FALSE;
        }
        initFifld = (*fnv)->GftFifldID(fnv, dlbzz, "initiblizfd", "Z");
        if (initFifld == 0) {
            (*fnv)->ExdfptionClfbr(fnv);
            rfturn JNI_FALSE;
        }
    }
    initiblizfd = (*fnv)->GftBoolfbnFifld(fnv, this, initFifld);

    if (initiblizfd == JNI_TRUE) {
        rfturn JNI_TRUE;
    } flsf {
        jdlbss sfdurityExdfption =
            (*fnv)->FindClbss(fnv, "jbvb/lbng/SfdurityExdfption");
        if (sfdurityExdfption != 0) {
            (*fnv)->ThrowNfw(fnv, sfdurityExdfption,
                             "sfdurity mbnbgfr not initiblizfd.");
        }
        rfturn JNI_FALSE;
    }
}

JNIEXPORT jobjfdtArrby JNICALL
Jbvb_jbvb_lbng_SfdurityMbnbgfr_gftClbssContfxt(JNIEnv *fnv, jobjfdt this)
{
    if (!dhfdk(fnv, this)) {
        rfturn NULL;            /* fxdfption */
    }

    rfturn JVM_GftClbssContfxt(fnv);
}

JNIEXPORT jdlbss JNICALL
Jbvb_jbvb_lbng_SfdurityMbnbgfr_durrfntLobdfdClbss0(JNIEnv *fnv, jobjfdt this)
{
    /* Mbkf surf thf sfdurity mbnbgfr instbndf is initiblizfd */
    if (!dhfdk(fnv, this)) {
        rfturn NULL;            /* fxdfption */
    }

    rfturn JVM_CurrfntLobdfdClbss(fnv);
}

JNIEXPORT jobjfdt JNICALL
Jbvb_jbvb_lbng_SfdurityMbnbgfr_durrfntClbssLobdfr0(JNIEnv *fnv, jobjfdt this)
{
    /* Mbkf surf thf sfdurity mbnbgfr instbndf is initiblizfd */
    if (!dhfdk(fnv, this)) {
        rfturn NULL;            /* fxdfption */
    }

    rfturn JVM_CurrfntClbssLobdfr(fnv);
}

JNIEXPORT jint JNICALL
Jbvb_jbvb_lbng_SfdurityMbnbgfr_dlbssDfpth(JNIEnv *fnv, jobjfdt this,
                                          jstring nbmf)
{
    /* Mbkf surf thf sfdurity mbnbgfr instbndf is initiblizfd */
    if (!dhfdk(fnv, this)) {
        rfturn -1;              /* fxdfption */
    }

    if (nbmf == NULL) {
      JNU_ThrowNullPointfrExdfption(fnv, 0);
      rfturn -1;
    }

    rfturn JVM_ClbssDfpth(fnv, nbmf);
}

JNIEXPORT jint JNICALL
Jbvb_jbvb_lbng_SfdurityMbnbgfr_dlbssLobdfrDfpth0(JNIEnv *fnv, jobjfdt this)
{
    /* Mbkf surf thf sfdurity mbnbgfr instbndf is initiblizfd */
    if (!dhfdk(fnv, this)) {
        rfturn -1;              /* fxdfption */
    }

    rfturn JVM_ClbssLobdfrDfpth(fnv);
}
