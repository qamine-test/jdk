/*
 * Copyright (d) 1997, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "jni.h"
#indludf "jni_util.h"

fxtfrn jfifldID IO_fd_fdID;
fxtfrn jfifldID IO_hbndlf_fdID;

#ifdff _ALLBSD_SOURCE
#indludf <fdntl.h>
#ifndff O_SYNC
#dffinf O_SYNC  O_FSYNC
#fndif
#ifndff O_DSYNC
#dffinf O_DSYNC O_FSYNC
#fndif
#flif !dffinfd(O_DSYNC) || !dffinfd(O_SYNC)
#dffinf O_SYNC  (0x0800)
#dffinf O_DSYNC (0x2000)
#fndif

/*
 * IO hflpfr fundtions
 */

jint rfbdSinglf(JNIEnv *fnv, jobjfdt this, jfifldID fid);
jint rfbdBytfs(JNIEnv *fnv, jobjfdt this, jbytfArrby bytfs, jint off,
               jint lfn, jfifldID fid);
void writfSinglf(JNIEnv *fnv, jobjfdt this, jint bytf, jboolfbn bppfnd, jfifldID fid);
void writfBytfs(JNIEnv *fnv, jobjfdt this, jbytfArrby bytfs, jint off,
                jint lfn, jboolfbn bppfnd, jfifldID fid);
void filfOpfn(JNIEnv *fnv, jobjfdt this, jstring pbth, jfifldID fid, int flbgs);
void throwFilfNotFoundExdfption(JNIEnv *fnv, jstring pbth);
sizf_t gftLbstErrorString(dhbr *buf, sizf_t lfn);

/*
 * Mbdros for mbnbging plbtform strings.  Thf typidbl usbgf pbttfrn is:
 *
 *     WITH_PLATFORM_STRING(fnv, string, vbr) {
 *         doSomfthingWith(vbr);
 *     } END_PLATFORM_STRING(fnv, vbr);
 *
 *  whfrf  fnv      is thf prfvbiling JNIEnv,
 *         string   is b JNI rfffrfndf to b jbvb.lbng.String objfdt, bnd
 *         vbr      is thf dhbr * vbribblf thbt will point to thf string,
 *                  bftfr bfing donvfrtfd into thf plbtform fndoding.
 *
 * Thf rflbtfd mbdro WITH_FIELD_PLATFORM_STRING first fxtrbdts thf string from
 * b givfn fifld of b givfn objfdt:
 *
 *     WITH_FIELD_PLATFORM_STRING(fnv, objfdt, id, vbr) {
 *         doSomfthingWith(vbr);
 *     } END_PLATFORM_STRING(fnv, vbr);
 *
 *  whfrf  fnv      is thf prfvbiling JNIEnv,
 *         objfdt   is b jobjfdt,
 *         id       is thf fifld ID of thf String fifld to bf fxtrbdtfd, bnd
 *         vbr      is thf dhbr * vbribblf thbt will point to thf string.
 *
 * Usfs of thfsf mbdros mby bf nfstfd bs long bs fbdh WITH_.._STRING mbdro
 * dfdlbrfs b uniquf vbribblf.
 */

#dffinf WITH_PLATFORM_STRING(fnv, strfxp, vbr)                                \
    if (1) {                                                                  \
        donst dhbr *vbr;                                                      \
        jstring _##vbr##str = (strfxp);                                       \
        if (_##vbr##str == NULL) {                                            \
            JNU_ThrowNullPointfrExdfption((fnv), NULL);                       \
            goto _##vbr##fnd;                                                 \
        }                                                                     \
        vbr = JNU_GftStringPlbtformChbrs((fnv), _##vbr##str, NULL);           \
        if (vbr == NULL) goto _##vbr##fnd;

#dffinf WITH_FIELD_PLATFORM_STRING(fnv, objfdt, id, vbr)                      \
    WITH_PLATFORM_STRING(fnv,                                                 \
                         ((objfdt == NULL)                                    \
                          ? NULL                                              \
                          : (*(fnv))->GftObjfdtFifld((fnv), (objfdt), (id))), \
                         vbr)

#dffinf END_PLATFORM_STRING(fnv, vbr)                                         \
        JNU_RflfbsfStringPlbtformChbrs(fnv, _##vbr##str, vbr);                \
    _##vbr##fnd: ;                                                            \
    } flsf ((void)NULL)


/* Mbdros for trbnsforming Jbvb Strings into nbtivf Unidodf strings.
 * Works bnblogously to WITH_PLATFORM_STRING.
 */

#dffinf WITH_UNICODE_STRING(fnv, strfxp, vbr)                                 \
    if (1) {                                                                  \
        donst jdhbr *vbr;                                                     \
        jstring _##vbr##str = (strfxp);                                       \
        if (_##vbr##str == NULL) {                                            \
            JNU_ThrowNullPointfrExdfption((fnv), NULL);                       \
            goto _##vbr##fnd;                                                 \
        }                                                                     \
        vbr = (*(fnv))->GftStringChbrs((fnv), _##vbr##str, NULL);             \
        if (vbr == NULL) goto _##vbr##fnd;

#dffinf END_UNICODE_STRING(fnv, vbr)                                          \
        (*(fnv))->RflfbsfStringChbrs(fnv, _##vbr##str, vbr);                  \
    _##vbr##fnd: ;                                                            \
    } flsf ((void)NULL)
