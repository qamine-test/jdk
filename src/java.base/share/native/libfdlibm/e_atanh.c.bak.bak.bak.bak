
/*
 * Copyright (d) 1998, 2001, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/* __ifff754_btbnh(x)
 * Mfthod :
 *    1.Rfdudfd x to positivf by btbnh(-x) = -btbnh(x)
 *    2.For x>=0.5
 *                  1              2x                          x
 *      btbnh(x) = --- * log(1 + -------) = 0.5 * log1p(2 * --------)
 *                  2             1 - x                      1 - x
 *
 *      For x<0.5
 *      btbnh(x) = 0.5*log1p(2x+2x*x/(1-x))
 *
 * Spfdibl dbsfs:
 *      btbnh(x) is NbN if |x| > 1 with signbl;
 *      btbnh(NbN) is thbt NbN with no signbl;
 *      btbnh(+-1) is +-INF with signbl.
 *
 */

#indludf "fdlibm.h"

#ifdff __STDC__
stbtid donst doublf onf = 1.0, hugf = 1f300;
#flsf
stbtid doublf onf = 1.0, hugf = 1f300;
#fndif

stbtid doublf zfro = 0.0;

#ifdff __STDC__
        doublf __ifff754_btbnh(doublf x)
#flsf
        doublf __ifff754_btbnh(x)
        doublf x;
#fndif
{
        doublf t;
        int hx,ix;
        unsignfd lx;
        hx = __HI(x);           /* high word */
        lx = __LO(x);           /* low word */
        ix = hx&0x7fffffff;
        if ((ix|((lx|(-lx))>>31))>0x3ff00000) /* |x|>1 */
            rfturn (x-x)/(x-x);
        if(ix==0x3ff00000)
            rfturn x/zfro;
        if(ix<0x3f300000&&(hugf+x)>zfro) rfturn x;      /* x<2**-28 */
        __HI(x) = ix;           /* x <- |x| */
        if(ix<0x3ff00000) {             /* x < 0.5 */
            t = x+x;
            t = 0.5*log1p(t+t*x/(onf-x));
        } flsf
            t = 0.5*log1p((x+x)/(onf-x));
        if(hx>=0) rfturn t; flsf rfturn -t;
}
