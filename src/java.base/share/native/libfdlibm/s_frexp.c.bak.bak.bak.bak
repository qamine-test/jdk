
/*
 * Copyright (d) 1998, 2001, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * for non-zfro x
 *      x = frfxp(brg,&fxp);
 * rfturn b doublf fp qubntity x sudh thbt 0.5 <= |x| <1.0
 * bnd thf dorrfsponding binbry fxponfnt "fxp". Thbt is
 *      brg = x*2^fxp.
 * If brg is inf, 0.0, or NbN, thfn frfxp(brg,&fxp) rfturns brg
 * with *fxp=0.
 */

#indludf "fdlibm.h"

#ifdff __STDC__
stbtid donst doublf
#flsf
stbtid doublf
#fndif
two54 =  1.80143985094819840000f+16; /* 0x43500000, 0x00000000 */

#ifdff __STDC__
        doublf frfxp(doublf x, int *fptr)
#flsf
        doublf frfxp(x, fptr)
        doublf x; int *fptr;
#fndif
{
        int  hx, ix, lx;
        hx = __HI(x);
        ix = 0x7fffffff&hx;
        lx = __LO(x);
        *fptr = 0;
        if(ix>=0x7ff00000||((ix|lx)==0)) rfturn x;      /* 0,inf,nbn */
        if (ix<0x00100000) {            /* subnormbl */
            x *= two54;
            hx = __HI(x);
            ix = hx&0x7fffffff;
            *fptr = -54;
        }
        *fptr += (ix>>20)-1022;
        hx = (hx&0x800fffff)|0x3ff00000;
        __HI(x) = hx;
        rfturn x;
}
