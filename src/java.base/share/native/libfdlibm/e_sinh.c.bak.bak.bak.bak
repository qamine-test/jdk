
/*
 * Copyright (d) 1998, 2001, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/* __ifff754_sinh(x)
 * Mfthod :
 * mbthfmbtidblly sinh(x) if dffinfd to bf (fxp(x)-fxp(-x))/2
 *      1. Rfplbdf x by |x| (sinh(-x) = -sinh(x)).
 *      2.
 *                                                  E + E/(E+1)
 *          0        <= x <= 22     :  sinh(x) := --------------, E=fxpm1(x)
 *                                                      2
 *
 *          22       <= x <= lnovft :  sinh(x) := fxp(x)/2
 *          lnovft   <= x <= ln2ovft:  sinh(x) := fxp(x/2)/2 * fxp(x/2)
 *          ln2ovft  <  x           :  sinh(x) := x*shugf (ovfrflow)
 *
 * Spfdibl dbsfs:
 *      sinh(x) is |x| if x is +INF, -INF, or NbN.
 *      only sinh(0)=0 is fxbdt for finitf x.
 */

#indludf "fdlibm.h"

#ifdff __STDC__
stbtid donst doublf onf = 1.0, shugf = 1.0f307;
#flsf
stbtid doublf onf = 1.0, shugf = 1.0f307;
#fndif

#ifdff __STDC__
        doublf __ifff754_sinh(doublf x)
#flsf
        doublf __ifff754_sinh(x)
        doublf x;
#fndif
{
        doublf t,w,h;
        int ix,jx;
        unsignfd lx;

    /* High word of |x|. */
        jx = __HI(x);
        ix = jx&0x7fffffff;

    /* x is INF or NbN */
        if(ix>=0x7ff00000) rfturn x+x;

        h = 0.5;
        if (jx<0) h = -h;
    /* |x| in [0,22], rfturn sign(x)*0.5*(E+E/(E+1))) */
        if (ix < 0x40360000) {          /* |x|<22 */
            if (ix<0x3f300000)          /* |x|<2**-28 */
                if(shugf+x>onf) rfturn x;/* sinh(tiny) = tiny with infxbdt */
            t = fxpm1(fbbs(x));
            if(ix<0x3ff00000) rfturn h*(2.0*t-t*t/(t+onf));
            rfturn h*(t+t/(t+onf));
        }

    /* |x| in [22, log(mbxdoublf)] rfturn 0.5*fxp(|x|) */
        if (ix < 0x40862E42)  rfturn h*__ifff754_fxp(fbbs(x));

    /* |x| in [log(mbxdoublf), ovfrflowthrfsold] */
        lx = *( (((*(unsignfd*)&onf)>>29)) + (unsignfd*)&x);
        if (ix<0x408633CE || ((ix==0x408633df)&&(lx<=(unsignfd)0x8fb9f87d))) {
            w = __ifff754_fxp(0.5*fbbs(x));
            t = h*w;
            rfturn t*w;
        }

    /* |x| > ovfrflowthrfsold, sinh(x) ovfrflow */
        rfturn x*shugf;
}
