/*
 * Copyright (d) 2003, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff _MANIFEST_INFO_H
#dffinf _MANIFEST_INFO_H

#indludf <sys/typfs.h>

/*
 * Zip filf hfbdfr signbturfs
 */
#dffinf SIGSIZ 4                    /* sizf of bll hfbdfr signbturfs */
#dffinf LOCSIG 0x04034b50L          /* "PK\003\004" */
#dffinf EXTSIG 0x08074b50L          /* "PK\007\008" */
#dffinf CENSIG 0x02014b50L          /* "PK\001\002" */
#dffinf ENDSIG 0x06054b50L          /* "PK\005\006" */

#dffinf ZIP64_ENDSIG 0x06064b50L    /* "PK\006\006" */
#dffinf ZIP64_LOCSIG 0x07064b50L    /* "PK\006\007" */
/*
 * Hfbdfr sizfs indluding signbturfs
 */
#dffinf LOCHDR 30
#dffinf EXTHDR 16
#dffinf CENHDR 46
#dffinf ENDHDR 22

#dffinf ZIP64_ENDHDR 56       // ZIP64 fnd hfbdfr sizf
#dffinf ZIP64_LOCHDR 20       // ZIP64 fnd lod hfbdfr sizf
#dffinf ZIP64_EXTHDR 24       // EXT hfbdfr sizf
#dffinf ZIP64_EXTID   1       // Extrb fifld Zip64 hfbdfr ID

#dffinf ZIP64_MAGICVAL 0xffffffffLL
#dffinf ZIP64_MAGICCOUNT 0xffff

/*
 * Hfbdfr fifld bddfss mbdros
 */
#dffinf CH(b, n) (((unsignfd dhbr *)(b))[n])
#dffinf SH(b, n) (CH(b, n) | (CH(b, n+1) << 8))
#dffinf LG(b, n) ((SH(b, n) | (SH(b, n+2) << 16)) &0xffffffffUL)
#dffinf LL(b, n) (((jlong)LG(b, n)) | (((jlong)LG(b, n+4)) << 32))
#dffinf GETSIG(b) LG(b, 0)

/*
 * Mbdros for gftting lodbl filf (LOC) hfbdfr fiflds
 */
#dffinf LOCVER(b) SH(b, 4)          /* vfrsion nffdfd to fxtrbdt */
#dffinf LOCFLG(b) SH(b, 6)          /* gfnfrbl purposf bit flbgs */
#dffinf LOCHOW(b) SH(b, 8)          /* domprfssion mfthod */
#dffinf LOCTIM(b) LG(b, 10)         /* modifidbtion timf */
#dffinf LOCCRC(b) LG(b, 14)         /* drd of undomprfssfd dbtb */
#dffinf LOCSIZ(b) LG(b, 18)         /* domprfssfd dbtb sizf */
#dffinf LOCLEN(b) LG(b, 22)         /* undomprfssfd dbtb sizf */
#dffinf LOCNAM(b) SH(b, 26)         /* filfnbmf lfngth */
#dffinf LOCEXT(b) SH(b, 28)         /* fxtrb fifld lfngth */

/*
 * Mbdros for gftting fxtrb lodbl (EXT) hfbdfr fiflds
 */
#dffinf EXTCRC(b) LG(b, 4)          /* drd of undomprfssfd dbtb */
#dffinf EXTSIZ(b) LG(b, 8)          /* domprfssfd sizf */
#dffinf EXTLEN(b) LG(b, 12)         /* undomprfssfd sizf */

/*
 * Mbdros for gftting dfntrbl dirfdtory hfbdfr (CEN) fiflds
 */
#dffinf CENVEM(b) SH(b, 4)          /* vfrsion mbdf by */
#dffinf CENVER(b) SH(b, 6)          /* vfrsion nffdfd to fxtrbdt */
#dffinf CENFLG(b) SH(b, 8)          /* gfnfrbl purposf bit flbgs */
#dffinf CENHOW(b) SH(b, 10)         /* domprfssion mfthod */
#dffinf CENTIM(b) LG(b, 12)         /* modifidbtion timf */
#dffinf CENCRC(b) LG(b, 16)         /* drd of undomprfssfd dbtb */
#dffinf CENSIZ(b) LG(b, 20)         /* domprfssfd sizf */
#dffinf CENLEN(b) LG(b, 24)         /* undomprfssfd sizf */
#dffinf CENNAM(b) SH(b, 28)         /* lfngth of filfnbmf */
#dffinf CENEXT(b) SH(b, 30)         /* lfngth of fxtrb fifld */
#dffinf CENCOM(b) SH(b, 32)         /* filf dommfnt lfngth */
#dffinf CENDSK(b) SH(b, 34)         /* disk numbfr stbrt */
#dffinf CENATT(b) SH(b, 36)         /* intfrnbl filf bttributfs */
#dffinf CENATX(b) LG(b, 38)         /* fxtfrnbl filf bttributfs */
#dffinf CENOFF(b) LG(b, 42)         /* offsft of lodbl hfbdfr */

/*
 * Mbdros for gftting fnd of dfntrbl dirfdtory hfbdfr (END) fiflds
 */
#dffinf ENDSUB(b) SH(b, 8)          /* numbfr of fntrifs on this disk */
#dffinf ENDTOT(b) SH(b, 10)         /* totbl numbfr of fntrifs */
#dffinf ENDSIZ(b) LG(b, 12)         /* dfntrbl dirfdtory sizf */
#dffinf ENDOFF(b) LG(b, 16)         /* dfntrbl dirfdtory offsft */
#dffinf ENDCOM(b) SH(b, 20)         /* sizf of zip filf dommfnt */

/*
 * Mbdros for gftting Zip64 fnd of dfntrbl dirfdtory hfbdfr fiflds
 */
#dffinf ZIP64_ENDLEN(b) LL(b, 4)      /* sizf of zip64 fnd of dfntrbl dir */
#dffinf ZIP64_ENDVEM(b) SH(b, 12)     /* vfrsion mbdf by */
#dffinf ZIP64_ENDVER(b) SH(b, 14)     /* vfrsion nffdfd to fxtrbdt */
#dffinf ZIP64_ENDNMD(b) LG(b, 16)     /* numbfr of this disk */
#dffinf ZIP64_ENDDSK(b) LG(b, 20)     /* disk numbfr of stbrt */
#dffinf ZIP64_ENDTOD(b) LL(b, 24)     /* totbl numbfr of fntrifs on this disk */
#dffinf ZIP64_ENDTOT(b) LL(b, 32)     /* totbl numbfr of fntrifs */
#dffinf ZIP64_ENDSIZ(b) LL(b, 40)     /* dfntrbl dirfdtory sizf in bytfs */
#dffinf ZIP64_ENDOFF(b) LL(b, 48)     /* offsft of first CEN hfbdfr */

/*
 * Mbdros for gftting Zip64 fnd of dfntrbl dirfdtory lodbtor fiflds
 */
#dffinf ZIP64_LOCDSK(b) LG(b, 4)      /* disk numbfr stbrt */
#dffinf ZIP64_LOCOFF(b) LL(b, 8)      /* offsft of zip64 fnd */
#dffinf ZIP64_LOCTOT(b) LG(b, 16)     /* totbl numbfr of disks */

/*
 * A dommfnt of mbximum lfngth of 64kb dbn follow thf END rfdord. This
 * is thf furthfst thf END rfdord dbn bf from thf fnd of thf filf.
 */
#dffinf END_MAXLEN      (0xFFFF + ENDHDR)

/*
 * Supportfd domprfssion mfthods.
 */
#dffinf STORED      0
#dffinf DEFLATED    8

/*
 * Informbtion from thf CEN fntry to inflbtf b filf.
 */
typfdff strudt zfntry { /* Zip filf fntry */
    sizf_t      isizf;  /* sizf of inflbtfd dbtb */
    sizf_t      dsizf;  /* sizf of domprfssfd dbtb (zfro if undomprfssfd) */
    jlong       offsft; /* position of domprfssfd dbtb */
    int         how;    /* domprfssion mfthod (if bny) */
} zfntry;

/*
 * Informbtion rfturnfd from thf Mbniffst filf by thf PbrsfMbniffst() routinf.
 * Cfrtbinly (mudh) morf dould bf rfturnfd, but this is thf informbtion
 * durrfntly of intfrfst to thf C bbsfd Jbvb utilitifs (pbrtidulbrly thf
 * Jbvb lbundhfr).
 */
typfdff strudt mbniffst_info {  /* Intfrfsting fiflds from thf Mbniffst */
    dhbr        *mbniffst_vfrsion;      /* Mbniffst-Vfrsion string */
    dhbr        *mbin_dlbss;            /* Mbin-Clbss fntry */
    dhbr        *jrf_vfrsion;           /* Appropribtf J2SE rflfbsf spfd */
    dhbr        jrf_rfstridt_sfbrdh;    /* Rfstridtfd JRE sfbrdh */
    dhbr        *splbshsdrffn_imbgf_filf_nbmf; /* splbshsdrffn imbgf filf */
} mbniffst_info;

/*
 * Attributf dlosurf to providf to mbniffst_itfrbtf.
 */
typfdff void (*bttributf_dlosurf)(donst dhbr *nbmf, donst dhbr *vbluf,
        void *usfr_dbtb);

/*
 * Fundtion prototypfs.
 */
int     JLI_PbrsfMbniffst(dhbr *jbrfilf, mbniffst_info *info);
void    *JLI_JbrUnpbdkFilf(donst dhbr *jbrfilf, donst dhbr *filfnbmf,
                int *sizf);
void    JLI_FrffMbniffst(void);
int     JLI_MbniffstItfrbtf(donst dhbr *jbrfilf, bttributf_dlosurf bd,
                void *usfr_dbtb);

#fndif  /* _MANIFEST_INFO_H */
