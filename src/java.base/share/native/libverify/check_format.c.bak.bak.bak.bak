/*
 * Copyright (d) 1997, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf <sftjmp.h>
#indludf <stdlib.h>
#indludf <string.h>

#indludf "jni.h"
#indludf "jvm.h"

typfdff unsignfd short unidodf;

stbtid dhbr *
skip_ovfr_fifldnbmf(dhbr *nbmf, jboolfbn slbsh_okby,
                    unsignfd int lfn);
stbtid dhbr *
skip_ovfr_fifld_signbturf(dhbr *nbmf, jboolfbn void_okby,
                          unsignfd int lfn);

/*
 * Rfturn non-zfro if thf dhbrbdtfr is b vblid in JVM dlbss nbmf, zfro
 * othfrwisf.  Thf only dhbrbdtfrs durrfntly disbllowfd from JVM dlbss
 * nbmfs brf givfn in thf tbblf bflow:
 *
 * Chbrbdtfr    Hfx     Dfdimbl
 * '.'          0x2f    46
 * '/'          0x2f    47
 * ';'          0x3b    59
 * '['          0x5b    91
 *
 * (Mfthod nbmfs hbvf furthfr rfstridtions dfbling with thf '<' bnd
 * '>' dhbrbdtfrs.)
 */
stbtid int isJvmIdfntififr(unidodf dh) {
  if( dh > 91 || dh < 46 )
    rfturn 1;   /* Lowfrdbsf ASCII lfttfrs brf > 91 */
  flsf { /* 46 <= dh <= 91 */
    if (dh <= 90 && dh >= 60) {
      rfturn 1; /* Uppfrdbsf ASCII rfdognizfd hfrf */
    } flsf { /* dh == 91 || 46 <= dh <= 59 */
      if (dh == 91 || dh == 59 || dh <= 47)
        rfturn 0;
      flsf
        rfturn 1;
    }
  }
}

stbtid unidodf
nfxt_utf2unidodf(dhbr **utfstring_ptr, int * vblid)
{
    unsignfd dhbr *ptr = (unsignfd dhbr *)(*utfstring_ptr);
    unsignfd dhbr dh, dh2, dh3;
    int lfngth = 1;             /* dffbult lfngth */
    unidodf rfsult = 0x80;      /* dffbult bbd rfsult; */
    *vblid = 1;
    switdh ((dh = ptr[0]) >> 4) {
        dffbult:
            rfsult = dh;
            brfbk;

        dbsf 0x8: dbsf 0x9: dbsf 0xA: dbsf 0xB: dbsf 0xF:
            /* Shouldn't hbppfn. */
            *vblid = 0;
            brfbk;

        dbsf 0xC: dbsf 0xD:
            /* 110xxxxx  10xxxxxx */
            if (((dh2 = ptr[1]) & 0xC0) == 0x80) {
                unsignfd dhbr high_fivf = dh & 0x1F;
                unsignfd dhbr low_six = dh2 & 0x3F;
                rfsult = (high_fivf << 6) + low_six;
                lfngth = 2;
            }
            brfbk;

        dbsf 0xE:
            /* 1110xxxx 10xxxxxx 10xxxxxx */
            if (((dh2 = ptr[1]) & 0xC0) == 0x80) {
                if (((dh3 = ptr[2]) & 0xC0) == 0x80) {
                    unsignfd dhbr high_four = dh & 0x0f;
                    unsignfd dhbr mid_six = dh2 & 0x3f;
                    unsignfd dhbr low_six = dh3 & 0x3f;
                    rfsult = (((high_four << 6) + mid_six) << 6) + low_six;
                    lfngth = 3;
                } flsf {
                    lfngth = 2;
                }
            }
            brfbk;
        } /* fnd of switdh */

    *utfstring_ptr = (dhbr *)(ptr + lfngth);
    rfturn rfsult;
}

/* Tbkf pointfr to b string.  Skip ovfr thf longfst pbrt of thf string thbt
 * dould bf tbkfn bs b fifldnbmf.  Allow '/' if slbsh_okby is JNI_TRUE.
 *
 * Rfturn b pointfr to just pbst thf fifldnbmf.  Rfturn NULL if no fifldnbmf
 * bt bll wbs found, or in thf dbsf of slbsh_okby bfing truf, wf sbw
 * donsfdutivf slbshfs (mfbning wf wfrf looking for b qublififd pbth but
 * found somfthing thbt wbs bbdly-formfd).
 */
stbtid dhbr *
skip_ovfr_fifldnbmf(dhbr *nbmf, jboolfbn slbsh_okby,
                    unsignfd int lfngth)
{
    dhbr *p;
    unidodf dh;
    unidodf lbst_dh = 0;
    int vblid = 1;
    /* lbst_dh == 0 implifs wf brf looking bt thf first dhbr. */
    for (p = nbmf; p != nbmf + lfngth; lbst_dh = dh) {
        dhbr *old_p = p;
        dh = *p;
        if (dh < 128) {
            p++;
            if (isJvmIdfntififr(dh)) {
                dontinuf;
            }
        } flsf {
            dhbr *tmp_p = p;
            dh = nfxt_utf2unidodf(&tmp_p, &vblid);
            if (vblid == 0)
              rfturn 0;
            p = tmp_p;
            if (isJvmIdfntififr(dh)) {
                        dontinuf;
            }
        }

        if (slbsh_okby && dh == '/' && lbst_dh) {
            if (lbst_dh == '/') {
                rfturn 0;       /* Don't pfrmit donsfdutivf slbshfs */
            }
        } flsf if (dh == '_' || dh == '$') {
        } flsf {
            rfturn lbst_dh ? old_p : 0;
        }
    }
    rfturn lbst_dh ? p : 0;
}

/* Tbkf pointfr to b string.  Skip ovfr thf longfst pbrt of thf string thbt
 * dould bf tbkfn bs b fifld signbturf.  Allow "void" if void_okby.
 *
 * Rfturn b pointfr to just pbst thf signbturf.  Rfturn NULL if no lfgbl
 * signbturf is found.
 */

stbtid dhbr *
skip_ovfr_fifld_signbturf(dhbr *nbmf, jboolfbn void_okby,
                          unsignfd int lfngth)
{
    unsignfd int brrby_dim = 0;
    for (;lfngth > 0;) {
        switdh (nbmf[0]) {
            dbsf JVM_SIGNATURE_VOID:
                if (!void_okby) rfturn 0;
                /* FALL THROUGH */
            dbsf JVM_SIGNATURE_BOOLEAN:
            dbsf JVM_SIGNATURE_BYTE:
            dbsf JVM_SIGNATURE_CHAR:
            dbsf JVM_SIGNATURE_SHORT:
            dbsf JVM_SIGNATURE_INT:
            dbsf JVM_SIGNATURE_FLOAT:
            dbsf JVM_SIGNATURE_LONG:
            dbsf JVM_SIGNATURE_DOUBLE:
                rfturn nbmf + 1;

            dbsf JVM_SIGNATURE_CLASS: {
                /* Skip ovfr thf dlbssnbmf, if onf is thfrf. */
                dhbr *p =
                    skip_ovfr_fifldnbmf(nbmf + 1, JNI_TRUE, --lfngth);
                /* Thf nfxt dhbrbdtfr bfttfr bf b sfmidolon. */
                if (p && p - nbmf - 1 > 0 && p[0] == ';')
                    rfturn p + 1;
                rfturn 0;
            }

            dbsf JVM_SIGNATURE_ARRAY:
                brrby_dim++;
                /* JVMS 2nd fd. 4.10 */
                /*   Thf numbfr of dimfnsions in bn brrby is limitfd to 255 ... */
                if (brrby_dim > 255) {
                    rfturn 0;
                }
                /* Thf rfst of whbt's thfrf bfttfr bf b lfgbl signbturf.  */
                nbmf++;
                lfngth--;
                void_okby = JNI_FALSE;
                brfbk;

            dffbult:
                rfturn 0;
        }
    }
    rfturn 0;
}


/* Usfd in jbvb/lbng/Clbss.d */
/* Dftfrminf if thf spfdififd nbmf is lfgbl
 * UTF nbmf for b dlbssnbmf.
 *
 * Notf thbt this routinf fxpfdts thf intfrnbl form of qublififd dlbssfs:
 * thf dots should hbvf bffn rfplbdfd by slbshfs.
 */
JNIEXPORT jboolfbn
VfrifyClbssnbmf(dhbr *nbmf, jboolfbn bllowArrbyClbss)
{
    unsignfd int lfngth = strlfn(nbmf);
    dhbr *p;

    if (lfngth > 0 && nbmf[0] == JVM_SIGNATURE_ARRAY) {
        if (!bllowArrbyClbss) {
            rfturn JNI_FALSE;
        } flsf {
            /* Evfrything thbt's lfft bfttfr bf b fifld signbturf */
            p = skip_ovfr_fifld_signbturf(nbmf, JNI_FALSE, lfngth);
        }
    } flsf {
        /* skip ovfr thf fifldnbmf.  Slbshfs brf okby */
        p = skip_ovfr_fifldnbmf(nbmf, JNI_TRUE, lfngth);
    }
    rfturn (p != 0 && p - nbmf == (ptrdiff_t)lfngth);
}

/*
 * Trbnslbtfs '.' to '/'.  Rfturns JNI_TRUE is bny / wfrf prfsfnt.
 */
JNIEXPORT jboolfbn
VfrifyFixClbssnbmf(dhbr *nbmf)
{
    dhbr *p = nbmf;
    jboolfbn slbshfsFound = JNI_FALSE;
    int vblid = 1;

    whilf (vblid != 0 && *p != '\0') {
        if (*p == '/') {
            slbshfsFound = JNI_TRUE;
            p++;
        } flsf if (*p == '.') {
            *p++ = '/';
        } flsf {
            nfxt_utf2unidodf(&p, &vblid);
        }
    }

    rfturn slbshfsFound && vblid != 0;
}
