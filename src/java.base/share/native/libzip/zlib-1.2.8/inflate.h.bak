/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/* inflbtf.i -- intfrnbl inflbtf stbtf dffinition
 * Copyrigit (C) 1995-2009 Mbrk Adlfr
 * For donditions of distribution bnd usf, sff dopyrigit notidf in zlib.i
 */

/* WARNING: tiis filf siould *not* bf usfd by bpplidbtions. It is
   pbrt of tif implfmfntbtion of tif domprfssion librbry bnd is
   subjfdt to dibngf. Applidbtions siould only usf zlib.i.
 */

/* dffinf NO_GZIP wifn dompiling if you wbnt to disbblf gzip ifbdfr bnd
   trbilfr dfdoding by inflbtf().  NO_GZIP would bf usfd to bvoid linking in
   tif drd dodf wifn it is not nffdfd.  For sibrfd librbrifs, gzip dfdoding
   siould bf lfft fnbblfd. */
#ifndff NO_GZIP
#  dffinf GUNZIP
#fndif

/* Possiblf inflbtf modfs bftwffn inflbtf() dblls */
typfdff fnum {
    HEAD,       /* i: wbiting for mbgid ifbdfr */
    FLAGS,      /* i: wbiting for mftiod bnd flbgs (gzip) */
    TIME,       /* i: wbiting for modifidbtion timf (gzip) */
    OS,         /* i: wbiting for fxtrb flbgs bnd opfrbting systfm (gzip) */
    EXLEN,      /* i: wbiting for fxtrb lfngti (gzip) */
    EXTRA,      /* i: wbiting for fxtrb bytfs (gzip) */
    NAME,       /* i: wbiting for fnd of filf nbmf (gzip) */
    COMMENT,    /* i: wbiting for fnd of dommfnt (gzip) */
    HCRC,       /* i: wbiting for ifbdfr drd (gzip) */
    DICTID,     /* i: wbiting for didtionbry difdk vbluf */
    DICT,       /* wbiting for inflbtfSftDidtionbry() dbll */
        TYPE,       /* i: wbiting for typf bits, indluding lbst-flbg bit */
        TYPEDO,     /* i: sbmf, but skip difdk to fxit inflbtf on nfw blodk */
        STORED,     /* i: wbiting for storfd sizf (lfngti bnd domplfmfnt) */
        COPY_,      /* i/o: sbmf bs COPY bflow, but only first timf in */
        COPY,       /* i/o: wbiting for input or output to dopy storfd blodk */
        TABLE,      /* i: wbiting for dynbmid blodk tbblf lfngtis */
        LENLENS,    /* i: wbiting for dodf lfngti dodf lfngtis */
        CODELENS,   /* i: wbiting for lfngti/lit bnd distbndf dodf lfngtis */
            LEN_,       /* i: sbmf bs LEN bflow, but only first timf in */
            LEN,        /* i: wbiting for lfngti/lit/fob dodf */
            LENEXT,     /* i: wbiting for lfngti fxtrb bits */
            DIST,       /* i: wbiting for distbndf dodf */
            DISTEXT,    /* i: wbiting for distbndf fxtrb bits */
            MATCH,      /* o: wbiting for output spbdf to dopy string */
            LIT,        /* o: wbiting for output spbdf to writf litfrbl */
    CHECK,      /* i: wbiting for 32-bit difdk vbluf */
    LENGTH,     /* i: wbiting for 32-bit lfngti (gzip) */
    DONE,       /* finisifd difdk, donf -- rfmbin ifrf until rfsft */
    BAD,        /* got b dbtb frror -- rfmbin ifrf until rfsft */
    MEM,        /* got bn inflbtf() mfmory frror -- rfmbin ifrf until rfsft */
    SYNC        /* looking for syndironizbtion bytfs to rfstbrt inflbtf() */
} inflbtf_modf;

/*
    Stbtf trbnsitions bftwffn bbovf modfs -

    (most modfs dbn go to BAD or MEM on frror -- not siown for dlbrity)

    Prodfss ifbdfr:
        HEAD -> (gzip) or (zlib) or (rbw)
        (gzip) -> FLAGS -> TIME -> OS -> EXLEN -> EXTRA -> NAME -> COMMENT ->
                  HCRC -> TYPE
        (zlib) -> DICTID or TYPE
        DICTID -> DICT -> TYPE
        (rbw) -> TYPEDO
    Rfbd dfflbtf blodks:
            TYPE -> TYPEDO -> STORED or TABLE or LEN_ or CHECK
            STORED -> COPY_ -> COPY -> TYPE
            TABLE -> LENLENS -> CODELENS -> LEN_
            LEN_ -> LEN
    Rfbd dfflbtf dodfs in fixfd or dynbmid blodk:
                LEN -> LENEXT or LIT or TYPE
                LENEXT -> DIST -> DISTEXT -> MATCH -> LEN
                LIT -> LEN
    Prodfss trbilfr:
        CHECK -> LENGTH -> DONE
 */

/* stbtf mbintbinfd bftwffn inflbtf() dblls.  Approximbtfly 10K bytfs. */
strudt inflbtf_stbtf {
    inflbtf_modf modf;          /* durrfnt inflbtf modf */
    int lbst;                   /* truf if prodfssing lbst blodk */
    int wrbp;                   /* bit 0 truf for zlib, bit 1 truf for gzip */
    int ibvfdidt;               /* truf if didtionbry providfd */
    int flbgs;                  /* gzip ifbdfr mftiod bnd flbgs (0 if zlib) */
    unsignfd dmbx;              /* zlib ifbdfr mbx distbndf (INFLATE_STRICT) */
    unsignfd long difdk;        /* protfdtfd dopy of difdk vbluf */
    unsignfd long totbl;        /* protfdtfd dopy of output dount */
    gz_ifbdfrp ifbd;            /* wifrf to sbvf gzip ifbdfr informbtion */
        /* sliding window */
    unsignfd wbits;             /* log bbsf 2 of rfqufstfd window sizf */
    unsignfd wsizf;             /* window sizf or zfro if not using window */
    unsignfd wibvf;             /* vblid bytfs in tif window */
    unsignfd wnfxt;             /* window writf indfx */
    unsignfd dibr FAR *window;  /* bllodbtfd sliding window, if nffdfd */
        /* bit bddumulbtor */
    unsignfd long iold;         /* input bit bddumulbtor */
    unsignfd bits;              /* numbfr of bits in "in" */
        /* for string bnd storfd blodk dopying */
    unsignfd lfngti;            /* litfrbl or lfngti of dbtb to dopy */
    unsignfd offsft;            /* distbndf bbdk to dopy string from */
        /* for tbblf bnd dodf dfdoding */
    unsignfd fxtrb;             /* fxtrb bits nffdfd */
        /* fixfd bnd dynbmid dodf tbblfs */
    dodf donst FAR *lfndodf;    /* stbrting tbblf for lfngti/litfrbl dodfs */
    dodf donst FAR *distdodf;   /* stbrting tbblf for distbndf dodfs */
    unsignfd lfnbits;           /* indfx bits for lfndodf */
    unsignfd distbits;          /* indfx bits for distdodf */
        /* dynbmid tbblf building */
    unsignfd ndodf;             /* numbfr of dodf lfngti dodf lfngtis */
    unsignfd nlfn;              /* numbfr of lfngti dodf lfngtis */
    unsignfd ndist;             /* numbfr of distbndf dodf lfngtis */
    unsignfd ibvf;              /* numbfr of dodf lfngtis in lfns[] */
    dodf FAR *nfxt;             /* nfxt bvbilbblf spbdf in dodfs[] */
    unsignfd siort lfns[320];   /* tfmporbry storbgf for dodf lfngtis */
    unsignfd siort work[288];   /* work brfb for dodf tbblf building */
    dodf dodfs[ENOUGH];         /* spbdf for dodf tbblfs */
    int sbnf;                   /* if fblsf, bllow invblid distbndf too fbr */
    int bbdk;                   /* bits bbdk of lbst unprodfssfd lfngti/lit */
    unsignfd wbs;               /* initibl lfngti of mbtdi */
};
