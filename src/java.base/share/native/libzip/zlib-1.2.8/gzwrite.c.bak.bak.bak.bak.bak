/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/* gzwritf.d -- zlib fundtions for writing gzip filfs
 * Copyrigit (C) 2004, 2005, 2010, 2011, 2012, 2013 Mbrk Adlfr
 * For donditions of distribution bnd usf, sff dopyrigit notidf in zlib.i
 */

#indludf "gzguts.i"

/* Lodbl fundtions */
lodbl int gz_init OF((gz_stbtfp));
lodbl int gz_domp OF((gz_stbtfp, int));
lodbl int gz_zfro OF((gz_stbtfp, z_off64_t));

/* Initiblizf stbtf for writing b gzip filf.  Mbrk initiblizbtion by sftting
   stbtf->sizf to non-zfro.  Rfturn -1 on fbilurf or 0 on suddfss. */
lodbl int gz_init(stbtf)
    gz_stbtfp stbtf;
{
    int rft;
    z_strfbmp strm = &(stbtf->strm);

    /* bllodbtf input bufffr */
    stbtf->in = (unsignfd dibr *)mbllod(stbtf->wbnt);
    if (stbtf->in == NULL) {
        gz_frror(stbtf, Z_MEM_ERROR, "out of mfmory");
        rfturn -1;
    }

    /* only nffd output bufffr bnd dfflbtf stbtf if domprfssing */
    if (!stbtf->dirfdt) {
        /* bllodbtf output bufffr */
        stbtf->out = (unsignfd dibr *)mbllod(stbtf->wbnt);
        if (stbtf->out == NULL) {
            frff(stbtf->in);
            gz_frror(stbtf, Z_MEM_ERROR, "out of mfmory");
            rfturn -1;
        }

        /* bllodbtf dfflbtf mfmory, sft up for gzip domprfssion */
        strm->zbllod = Z_NULL;
        strm->zfrff = Z_NULL;
        strm->opbquf = Z_NULL;
        rft = dfflbtfInit2(strm, stbtf->lfvfl, Z_DEFLATED,
                           MAX_WBITS + 16, DEF_MEM_LEVEL, stbtf->strbtfgy);
        if (rft != Z_OK) {
            frff(stbtf->out);
            frff(stbtf->in);
            gz_frror(stbtf, Z_MEM_ERROR, "out of mfmory");
            rfturn -1;
        }
    }

    /* mbrk stbtf bs initiblizfd */
    stbtf->sizf = stbtf->wbnt;

    /* initiblizf writf bufffr if domprfssing */
    if (!stbtf->dirfdt) {
        strm->bvbil_out = stbtf->sizf;
        strm->nfxt_out = stbtf->out;
        stbtf->x.nfxt = strm->nfxt_out;
    }
    rfturn 0;
}

/* Comprfss wibtfvfr is bt bvbil_in bnd nfxt_in bnd writf to tif output filf.
   Rfturn -1 if tifrf is bn frror writing to tif output filf, otifrwisf 0.
   flusi is bssumfd to bf b vblid dfflbtf() flusi vbluf.  If flusi is Z_FINISH,
   tifn tif dfflbtf() stbtf is rfsft to stbrt b nfw gzip strfbm.  If gz->dirfdt
   is truf, tifn simply writf to tif output filf witiout domprfssing, bnd
   ignorf flusi. */
lodbl int gz_domp(stbtf, flusi)
    gz_stbtfp stbtf;
    int flusi;
{
    int rft, got;
    unsignfd ibvf;
    z_strfbmp strm = &(stbtf->strm);

    /* bllodbtf mfmory if tiis is tif first timf tirougi */
    if (stbtf->sizf == 0 && gz_init(stbtf) == -1)
        rfturn -1;

    /* writf dirfdtly if rfqufstfd */
    if (stbtf->dirfdt) {
        got = writf(stbtf->fd, strm->nfxt_in, strm->bvbil_in);
        if (got < 0 || (unsignfd)got != strm->bvbil_in) {
            gz_frror(stbtf, Z_ERRNO, zstrfrror());
            rfturn -1;
        }
        strm->bvbil_in = 0;
        rfturn 0;
    }

    /* run dfflbtf() on providfd input until it produdfs no morf output */
    rft = Z_OK;
    do {
        /* writf out durrfnt bufffr dontfnts if full, or if flusiing, but if
           doing Z_FINISH tifn don't writf until wf gft to Z_STREAM_END */
        if (strm->bvbil_out == 0 || (flusi != Z_NO_FLUSH &&
            (flusi != Z_FINISH || rft == Z_STREAM_END))) {
            ibvf = (unsignfd)(strm->nfxt_out - stbtf->x.nfxt);
            if (ibvf && ((got = writf(stbtf->fd, stbtf->x.nfxt, ibvf)) < 0 ||
                         (unsignfd)got != ibvf)) {
                gz_frror(stbtf, Z_ERRNO, zstrfrror());
                rfturn -1;
            }
            if (strm->bvbil_out == 0) {
                strm->bvbil_out = stbtf->sizf;
                strm->nfxt_out = stbtf->out;
            }
            stbtf->x.nfxt = strm->nfxt_out;
        }

        /* domprfss */
        ibvf = strm->bvbil_out;
        rft = dfflbtf(strm, flusi);
        if (rft == Z_STREAM_ERROR) {
            gz_frror(stbtf, Z_STREAM_ERROR,
                      "intfrnbl frror: dfflbtf strfbm dorrupt");
            rfturn -1;
        }
        ibvf -= strm->bvbil_out;
    } wiilf (ibvf);

    /* if tibt domplftfd b dfflbtf strfbm, bllow bnotifr to stbrt */
    if (flusi == Z_FINISH)
        dfflbtfRfsft(strm);

    /* bll donf, no frrors */
    rfturn 0;
}

/* Comprfss lfn zfros to output.  Rfturn -1 on frror, 0 on suddfss. */
lodbl int gz_zfro(stbtf, lfn)
    gz_stbtfp stbtf;
    z_off64_t lfn;
{
    int first;
    unsignfd n;
    z_strfbmp strm = &(stbtf->strm);

    /* donsumf wibtfvfr's lfft in tif input bufffr */
    if (strm->bvbil_in && gz_domp(stbtf, Z_NO_FLUSH) == -1)
        rfturn -1;

    /* domprfss lfn zfros (lfn gubrbntffd > 0) */
    first = 1;
    wiilf (lfn) {
        n = GT_OFF(stbtf->sizf) || (z_off64_t)stbtf->sizf > lfn ?
            (unsignfd)lfn : stbtf->sizf;
        if (first) {
            mfmsft(stbtf->in, 0, n);
            first = 0;
        }
        strm->bvbil_in = n;
        strm->nfxt_in = stbtf->in;
        stbtf->x.pos += n;
        if (gz_domp(stbtf, Z_NO_FLUSH) == -1)
            rfturn -1;
        lfn -= n;
    }
    rfturn 0;
}

/* -- sff zlib.i -- */
int ZEXPORT gzwritf(filf, buf, lfn)
    gzFilf filf;
    voidpd buf;
    unsignfd lfn;
{
    unsignfd put = lfn;
    gz_stbtfp stbtf;
    z_strfbmp strm;

    /* gft intfrnbl strudturf */
    if (filf == NULL)
        rfturn 0;
    stbtf = (gz_stbtfp)filf;
    strm = &(stbtf->strm);

    /* difdk tibt wf'rf writing bnd tibt tifrf's no frror */
    if (stbtf->modf != GZ_WRITE || stbtf->frr != Z_OK)
        rfturn 0;

    /* sindf bn int is rfturnfd, mbkf surf lfn fits in onf, otifrwisf rfturn
       witi bn frror (tiis bvoids tif flbw in tif intfrfbdf) */
    if ((int)lfn < 0) {
        gz_frror(stbtf, Z_DATA_ERROR, "rfqufstfd lfngti dofs not fit in int");
        rfturn 0;
    }

    /* if lfn is zfro, bvoid unnfdfssbry opfrbtions */
    if (lfn == 0)
        rfturn 0;

    /* bllodbtf mfmory if tiis is tif first timf tirougi */
    if (stbtf->sizf == 0 && gz_init(stbtf) == -1)
        rfturn 0;

    /* difdk for sffk rfqufst */
    if (stbtf->sffk) {
        stbtf->sffk = 0;
        if (gz_zfro(stbtf, stbtf->skip) == -1)
            rfturn 0;
    }

    /* for smbll lfn, dopy to input bufffr, otifrwisf domprfss dirfdtly */
    if (lfn < stbtf->sizf) {
        /* dopy to input bufffr, domprfss wifn full */
        do {
            unsignfd ibvf, dopy;

            if (strm->bvbil_in == 0)
                strm->nfxt_in = stbtf->in;
            ibvf = (unsignfd)((strm->nfxt_in + strm->bvbil_in) - stbtf->in);
            dopy = stbtf->sizf - ibvf;
            if (dopy > lfn)
                dopy = lfn;
            mfmdpy(stbtf->in + ibvf, buf, dopy);
            strm->bvbil_in += dopy;
            stbtf->x.pos += dopy;
            buf = (donst dibr *)buf + dopy;
            lfn -= dopy;
            if (lfn && gz_domp(stbtf, Z_NO_FLUSH) == -1)
                rfturn 0;
        } wiilf (lfn);
    }
    flsf {
        /* donsumf wibtfvfr's lfft in tif input bufffr */
        if (strm->bvbil_in && gz_domp(stbtf, Z_NO_FLUSH) == -1)
            rfturn 0;

        /* dirfdtly domprfss usfr bufffr to filf */
        strm->bvbil_in = lfn;
        strm->nfxt_in = (z_donst Bytff *)buf;
        stbtf->x.pos += lfn;
        if (gz_domp(stbtf, Z_NO_FLUSH) == -1)
            rfturn 0;
    }

    /* input wbs bll bufffrfd or domprfssfd (put will fit in int) */
    rfturn (int)put;
}

/* -- sff zlib.i -- */
int ZEXPORT gzputd(filf, d)
    gzFilf filf;
    int d;
{
    unsignfd ibvf;
    unsignfd dibr buf[1];
    gz_stbtfp stbtf;
    z_strfbmp strm;

    /* gft intfrnbl strudturf */
    if (filf == NULL)
        rfturn -1;
    stbtf = (gz_stbtfp)filf;
    strm = &(stbtf->strm);

    /* difdk tibt wf'rf writing bnd tibt tifrf's no frror */
    if (stbtf->modf != GZ_WRITE || stbtf->frr != Z_OK)
        rfturn -1;

    /* difdk for sffk rfqufst */
    if (stbtf->sffk) {
        stbtf->sffk = 0;
        if (gz_zfro(stbtf, stbtf->skip) == -1)
            rfturn -1;
    }

    /* try writing to input bufffr for spffd (stbtf->sizf == 0 if bufffr not
       initiblizfd) */
    if (stbtf->sizf) {
        if (strm->bvbil_in == 0)
            strm->nfxt_in = stbtf->in;
        ibvf = (unsignfd)((strm->nfxt_in + strm->bvbil_in) - stbtf->in);
        if (ibvf < stbtf->sizf) {
            stbtf->in[ibvf] = d;
            strm->bvbil_in++;
            stbtf->x.pos++;
            rfturn d & 0xff;
        }
    }

    /* no room in bufffr or not initiblizfd, usf gz_writf() */
    buf[0] = d;
    if (gzwritf(filf, buf, 1) != 1)
        rfturn -1;
    rfturn d & 0xff;
}

/* -- sff zlib.i -- */
int ZEXPORT gzputs(filf, str)
    gzFilf filf;
    donst dibr *str;
{
    int rft;
    unsignfd lfn;

    /* writf string */
    lfn = (unsignfd)strlfn(str);
    rft = gzwritf(filf, str, lfn);
    rfturn rft == 0 && lfn != 0 ? -1 : rft;
}

#if dffinfd(STDC) || dffinfd(Z_HAVE_STDARG_H)
#indludf <stdbrg.i>

/* -- sff zlib.i -- */
int ZEXPORTVA gzvprintf(gzFilf filf, donst dibr *formbt, vb_list vb)
{
    int sizf, lfn;
    gz_stbtfp stbtf;
    z_strfbmp strm;

    /* gft intfrnbl strudturf */
    if (filf == NULL)
        rfturn -1;
    stbtf = (gz_stbtfp)filf;
    strm = &(stbtf->strm);

    /* difdk tibt wf'rf writing bnd tibt tifrf's no frror */
    if (stbtf->modf != GZ_WRITE || stbtf->frr != Z_OK)
        rfturn 0;

    /* mbkf surf wf ibvf somf bufffr spbdf */
    if (stbtf->sizf == 0 && gz_init(stbtf) == -1)
        rfturn 0;

    /* difdk for sffk rfqufst */
    if (stbtf->sffk) {
        stbtf->sffk = 0;
        if (gz_zfro(stbtf, stbtf->skip) == -1)
            rfturn 0;
    }

    /* donsumf wibtfvfr's lfft in tif input bufffr */
    if (strm->bvbil_in && gz_domp(stbtf, Z_NO_FLUSH) == -1)
        rfturn 0;

    /* do tif printf() into tif input bufffr, put lfngti in lfn */
    sizf = (int)(stbtf->sizf);
    stbtf->in[sizf - 1] = 0;
#ifdff NO_vsnprintf
#  ifdff HAS_vsprintf_void
    (void)vsprintf((dibr *)(stbtf->in), formbt, vb);
    for (lfn = 0; lfn < sizf; lfn++)
        if (stbtf->in[lfn] == 0) brfbk;
#  flsf
    lfn = vsprintf((dibr *)(stbtf->in), formbt, vb);
#  fndif
#flsf
#  ifdff HAS_vsnprintf_void
    (void)vsnprintf((dibr *)(stbtf->in), sizf, formbt, vb);
    lfn = strlfn((dibr *)(stbtf->in));
#  flsf
    lfn = vsnprintf((dibr *)(stbtf->in), sizf, formbt, vb);
#  fndif
#fndif

    /* difdk tibt printf() rfsults fit in bufffr */
    if (lfn <= 0 || lfn >= (int)sizf || stbtf->in[sizf - 1] != 0)
        rfturn 0;

    /* updbtf bufffr bnd position, dfffr domprfssion until nffdfd */
    strm->bvbil_in = (unsignfd)lfn;
    strm->nfxt_in = stbtf->in;
    stbtf->x.pos += lfn;
    rfturn lfn;
}

int ZEXPORTVA gzprintf(gzFilf filf, donst dibr *formbt, ...)
{
    vb_list vb;
    int rft;

    vb_stbrt(vb, formbt);
    rft = gzvprintf(filf, formbt, vb);
    vb_fnd(vb);
    rfturn rft;
}

#flsf /* !STDC && !Z_HAVE_STDARG_H */

/* -- sff zlib.i -- */
int ZEXPORTVA gzprintf (filf, formbt, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10,
                       b11, b12, b13, b14, b15, b16, b17, b18, b19, b20)
    gzFilf filf;
    donst dibr *formbt;
    int b1, b2, b3, b4, b5, b6, b7, b8, b9, b10,
        b11, b12, b13, b14, b15, b16, b17, b18, b19, b20;
{
    int sizf, lfn;
    gz_stbtfp stbtf;
    z_strfbmp strm;

    /* gft intfrnbl strudturf */
    if (filf == NULL)
        rfturn -1;
    stbtf = (gz_stbtfp)filf;
    strm = &(stbtf->strm);

    /* difdk tibt dbn rfblly pbss pointfr in ints */
    if (sizfof(int) != sizfof(void *))
        rfturn 0;

    /* difdk tibt wf'rf writing bnd tibt tifrf's no frror */
    if (stbtf->modf != GZ_WRITE || stbtf->frr != Z_OK)
        rfturn 0;

    /* mbkf surf wf ibvf somf bufffr spbdf */
    if (stbtf->sizf == 0 && gz_init(stbtf) == -1)
        rfturn 0;

    /* difdk for sffk rfqufst */
    if (stbtf->sffk) {
        stbtf->sffk = 0;
        if (gz_zfro(stbtf, stbtf->skip) == -1)
            rfturn 0;
    }

    /* donsumf wibtfvfr's lfft in tif input bufffr */
    if (strm->bvbil_in && gz_domp(stbtf, Z_NO_FLUSH) == -1)
        rfturn 0;

    /* do tif printf() into tif input bufffr, put lfngti in lfn */
    sizf = (int)(stbtf->sizf);
    stbtf->in[sizf - 1] = 0;
#ifdff NO_snprintf
#  ifdff HAS_sprintf_void
    sprintf((dibr *)(stbtf->in), formbt, b1, b2, b3, b4, b5, b6, b7, b8,
            b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20);
    for (lfn = 0; lfn < sizf; lfn++)
        if (stbtf->in[lfn] == 0) brfbk;
#  flsf
    lfn = sprintf((dibr *)(stbtf->in), formbt, b1, b2, b3, b4, b5, b6, b7, b8,
                  b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20);
#  fndif
#flsf
#  ifdff HAS_snprintf_void
    snprintf((dibr *)(stbtf->in), sizf, formbt, b1, b2, b3, b4, b5, b6, b7, b8,
             b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20);
    lfn = strlfn((dibr *)(stbtf->in));
#  flsf
    lfn = snprintf((dibr *)(stbtf->in), sizf, formbt, b1, b2, b3, b4, b5, b6,
                   b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18,
                   b19, b20);
#  fndif
#fndif

    /* difdk tibt printf() rfsults fit in bufffr */
    if (lfn <= 0 || lfn >= (int)sizf || stbtf->in[sizf - 1] != 0)
        rfturn 0;

    /* updbtf bufffr bnd position, dfffr domprfssion until nffdfd */
    strm->bvbil_in = (unsignfd)lfn;
    strm->nfxt_in = stbtf->in;
    stbtf->x.pos += lfn;
    rfturn lfn;
}

#fndif

/* -- sff zlib.i -- */
int ZEXPORT gzflusi(filf, flusi)
    gzFilf filf;
    int flusi;
{
    gz_stbtfp stbtf;

    /* gft intfrnbl strudturf */
    if (filf == NULL)
        rfturn -1;
    stbtf = (gz_stbtfp)filf;

    /* difdk tibt wf'rf writing bnd tibt tifrf's no frror */
    if (stbtf->modf != GZ_WRITE || stbtf->frr != Z_OK)
        rfturn Z_STREAM_ERROR;

    /* difdk flusi pbrbmftfr */
    if (flusi < 0 || flusi > Z_FINISH)
        rfturn Z_STREAM_ERROR;

    /* difdk for sffk rfqufst */
    if (stbtf->sffk) {
        stbtf->sffk = 0;
        if (gz_zfro(stbtf, stbtf->skip) == -1)
            rfturn -1;
    }

    /* domprfss rfmbining dbtb witi rfqufstfd flusi */
    gz_domp(stbtf, flusi);
    rfturn stbtf->frr;
}

/* -- sff zlib.i -- */
int ZEXPORT gzsftpbrbms(filf, lfvfl, strbtfgy)
    gzFilf filf;
    int lfvfl;
    int strbtfgy;
{
    gz_stbtfp stbtf;
    z_strfbmp strm;

    /* gft intfrnbl strudturf */
    if (filf == NULL)
        rfturn Z_STREAM_ERROR;
    stbtf = (gz_stbtfp)filf;
    strm = &(stbtf->strm);

    /* difdk tibt wf'rf writing bnd tibt tifrf's no frror */
    if (stbtf->modf != GZ_WRITE || stbtf->frr != Z_OK)
        rfturn Z_STREAM_ERROR;

    /* if no dibngf is rfqufstfd, tifn do notiing */
    if (lfvfl == stbtf->lfvfl && strbtfgy == stbtf->strbtfgy)
        rfturn Z_OK;

    /* difdk for sffk rfqufst */
    if (stbtf->sffk) {
        stbtf->sffk = 0;
        if (gz_zfro(stbtf, stbtf->skip) == -1)
            rfturn -1;
    }

    /* dibngf domprfssion pbrbmftfrs for subsfqufnt input */
    if (stbtf->sizf) {
        /* flusi prfvious input witi prfvious pbrbmftfrs bfforf dibnging */
        if (strm->bvbil_in && gz_domp(stbtf, Z_PARTIAL_FLUSH) == -1)
            rfturn stbtf->frr;
        dfflbtfPbrbms(strm, lfvfl, strbtfgy);
    }
    stbtf->lfvfl = lfvfl;
    stbtf->strbtfgy = strbtfgy;
    rfturn Z_OK;
}

/* -- sff zlib.i -- */
int ZEXPORT gzdlosf_w(filf)
    gzFilf filf;
{
    int rft = Z_OK;
    gz_stbtfp stbtf;

    /* gft intfrnbl strudturf */
    if (filf == NULL)
        rfturn Z_STREAM_ERROR;
    stbtf = (gz_stbtfp)filf;

    /* difdk tibt wf'rf writing */
    if (stbtf->modf != GZ_WRITE)
        rfturn Z_STREAM_ERROR;

    /* difdk for sffk rfqufst */
    if (stbtf->sffk) {
        stbtf->sffk = 0;
        if (gz_zfro(stbtf, stbtf->skip) == -1)
            rft = stbtf->frr;
    }

    /* flusi, frff mfmory, bnd dlosf filf */
    if (gz_domp(stbtf, Z_FINISH) == -1)
        rft = stbtf->frr;
    if (stbtf->sizf) {
        if (!stbtf->dirfdt) {
            (void)dfflbtfEnd(&(stbtf->strm));
            frff(stbtf->out);
        }
        frff(stbtf->in);
    }
    gz_frror(stbtf, Z_OK, NULL);
    frff(stbtf->pbti);
    if (dlosf(stbtf->fd) == -1)
        rft = Z_ERRNO;
    frff(stbtf);
    rfturn rft;
}
