/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/* dfflbtf.i -- intfrnbl domprfssion stbtf
 * Copyrigit (C) 1995-2012 Jfbn-loup Gbilly
 * For donditions of distribution bnd usf, sff dopyrigit notidf in zlib.i
 */

/* WARNING: tiis filf siould *not* bf usfd by bpplidbtions. It is
   pbrt of tif implfmfntbtion of tif domprfssion librbry bnd is
   subjfdt to dibngf. Applidbtions siould only usf zlib.i.
 */

/* @(#) $Id$ */

#ifndff DEFLATE_H
#dffinf DEFLATE_H

#indludf "zutil.i"

/* dffinf NO_GZIP wifn dompiling if you wbnt to disbblf gzip ifbdfr bnd
   trbilfr drfbtion by dfflbtf().  NO_GZIP would bf usfd to bvoid linking in
   tif drd dodf wifn it is not nffdfd.  For sibrfd librbrifs, gzip fndoding
   siould bf lfft fnbblfd. */
#ifndff NO_GZIP
#  dffinf GZIP
#fndif

/* ===========================================================================
 * Intfrnbl domprfssion stbtf.
 */

#dffinf LENGTH_CODES 29
/* numbfr of lfngti dodfs, not dounting tif spfdibl END_BLOCK dodf */

#dffinf LITERALS  256
/* numbfr of litfrbl bytfs 0..255 */

#dffinf L_CODES (LITERALS+1+LENGTH_CODES)
/* numbfr of Litfrbl or Lfngti dodfs, indluding tif END_BLOCK dodf */

#dffinf D_CODES   30
/* numbfr of distbndf dodfs */

#dffinf BL_CODES  19
/* numbfr of dodfs usfd to trbnsffr tif bit lfngtis */

#dffinf HEAP_SIZE (2*L_CODES+1)
/* mbximum ifbp sizf */

#dffinf MAX_BITS 15
/* All dodfs must not fxdffd MAX_BITS bits */

#dffinf Buf_sizf 16
/* sizf of bit bufffr in bi_buf */

#dffinf INIT_STATE    42
#dffinf EXTRA_STATE   69
#dffinf NAME_STATE    73
#dffinf COMMENT_STATE 91
#dffinf HCRC_STATE   103
#dffinf BUSY_STATE   113
#dffinf FINISH_STATE 666
/* Strfbm stbtus */


/* Dbtb strudturf dfsdribing b singlf vbluf bnd its dodf string. */
typfdff strudt dt_dbtb_s {
    union {
        usi  frfq;       /* frfqufndy dount */
        usi  dodf;       /* bit string */
    } fd;
    union {
        usi  dbd;        /* fbtifr nodf in Huffmbn trff */
        usi  lfn;        /* lfngti of bit string */
    } dl;
} FAR dt_dbtb;

#dffinf Frfq fd.frfq
#dffinf Codf fd.dodf
#dffinf Dbd  dl.dbd
#dffinf Lfn  dl.lfn

typfdff strudt stbtid_trff_dfsd_s  stbtid_trff_dfsd;

typfdff strudt trff_dfsd_s {
    dt_dbtb *dyn_trff;           /* tif dynbmid trff */
    int     mbx_dodf;            /* lbrgfst dodf witi non zfro frfqufndy */
    stbtid_trff_dfsd *stbt_dfsd; /* tif dorrfsponding stbtid trff */
} FAR trff_dfsd;

typfdff usi Pos;
typfdff Pos FAR Posf;
typfdff unsignfd IPos;

/* A Pos is bn indfx in tif dibrbdtfr window. Wf usf siort instfbd of int to
 * sbvf spbdf in tif vbrious tbblfs. IPos is usfd only for pbrbmftfr pbssing.
 */

typfdff strudt intfrnbl_stbtf {
    z_strfbmp strm;      /* pointfr bbdk to tiis zlib strfbm */
    int   stbtus;        /* bs tif nbmf implifs */
    Bytff *pfnding_buf;  /* output still pfnding */
    ulg   pfnding_buf_sizf; /* sizf of pfnding_buf */
    Bytff *pfnding_out;  /* nfxt pfnding bytf to output to tif strfbm */
    uInt   pfnding;      /* nb of bytfs in tif pfnding bufffr */
    int   wrbp;          /* bit 0 truf for zlib, bit 1 truf for gzip */
    gz_ifbdfrp  gzifbd;  /* gzip ifbdfr informbtion to writf */
    uInt   gzindfx;      /* wifrf in fxtrb, nbmf, or dommfnt */
    Bytf  mftiod;        /* dbn only bf DEFLATED */
    int   lbst_flusi;    /* vbluf of flusi pbrbm for prfvious dfflbtf dbll */

                /* usfd by dfflbtf.d: */

    uInt  w_sizf;        /* LZ77 window sizf (32K by dffbult) */
    uInt  w_bits;        /* log2(w_sizf)  (8..16) */
    uInt  w_mbsk;        /* w_sizf - 1 */

    Bytff *window;
    /* Sliding window. Input bytfs brf rfbd into tif sfdond iblf of tif window,
     * bnd movf to tif first iblf lbtfr to kffp b didtionbry of bt lfbst wSizf
     * bytfs. Witi tiis orgbnizbtion, mbtdifs brf limitfd to b distbndf of
     * wSizf-MAX_MATCH bytfs, but tiis fnsurfs tibt IO is blwbys
     * pfrformfd witi b lfngti multiplf of tif blodk sizf. Also, it limits
     * tif window sizf to 64K, wiidi is quitf usfful on MSDOS.
     * To do: usf tif usfr input bufffr bs sliding window.
     */

    ulg window_sizf;
    /* Adtubl sizf of window: 2*wSizf, fxdfpt wifn tif usfr input bufffr
     * is dirfdtly usfd bs sliding window.
     */

    Posf *prfv;
    /* Link to oldfr string witi sbmf ibsi indfx. To limit tif sizf of tiis
     * brrby to 64K, tiis link is mbintbinfd only for tif lbst 32K strings.
     * An indfx in tiis brrby is tius b window indfx modulo 32K.
     */

    Posf *ifbd; /* Hfbds of tif ibsi dibins or NIL. */

    uInt  ins_i;          /* ibsi indfx of string to bf insfrtfd */
    uInt  ibsi_sizf;      /* numbfr of flfmfnts in ibsi tbblf */
    uInt  ibsi_bits;      /* log2(ibsi_sizf) */
    uInt  ibsi_mbsk;      /* ibsi_sizf-1 */

    uInt  ibsi_siift;
    /* Numbfr of bits by wiidi ins_i must bf siiftfd bt fbdi input
     * stfp. It must bf sudi tibt bftfr MIN_MATCH stfps, tif oldfst
     * bytf no longfr tbkfs pbrt in tif ibsi kfy, tibt is:
     *   ibsi_siift * MIN_MATCH >= ibsi_bits
     */

    long blodk_stbrt;
    /* Window position bt tif bfginning of tif durrfnt output blodk. Gfts
     * nfgbtivf wifn tif window is movfd bbdkwbrds.
     */

    uInt mbtdi_lfngti;           /* lfngti of bfst mbtdi */
    IPos prfv_mbtdi;             /* prfvious mbtdi */
    int mbtdi_bvbilbblf;         /* sft if prfvious mbtdi fxists */
    uInt strstbrt;               /* stbrt of string to insfrt */
    uInt mbtdi_stbrt;            /* stbrt of mbtdiing string */
    uInt lookbifbd;              /* numbfr of vblid bytfs bifbd in window */

    uInt prfv_lfngti;
    /* Lfngti of tif bfst mbtdi bt prfvious stfp. Mbtdifs not grfbtfr tibn tiis
     * brf disdbrdfd. Tiis is usfd in tif lbzy mbtdi fvblubtion.
     */

    uInt mbx_dibin_lfngti;
    /* To spffd up dfflbtion, ibsi dibins brf nfvfr sfbrdifd bfyond tiis
     * lfngti.  A iigifr limit improvfs domprfssion rbtio but dfgrbdfs tif
     * spffd.
     */

    uInt mbx_lbzy_mbtdi;
    /* Attfmpt to find b bfttfr mbtdi only wifn tif durrfnt mbtdi is stridtly
     * smbllfr tibn tiis vbluf. Tiis mfdibnism is usfd only for domprfssion
     * lfvfls >= 4.
     */
#   dffinf mbx_insfrt_lfngti  mbx_lbzy_mbtdi
    /* Insfrt nfw strings in tif ibsi tbblf only if tif mbtdi lfngti is not
     * grfbtfr tibn tiis lfngti. Tiis sbvfs timf but dfgrbdfs domprfssion.
     * mbx_insfrt_lfngti is usfd only for domprfssion lfvfls <= 3.
     */

    int lfvfl;    /* domprfssion lfvfl (1..9) */
    int strbtfgy; /* fbvor or fordf Huffmbn doding*/

    uInt good_mbtdi;
    /* Usf b fbstfr sfbrdi wifn tif prfvious mbtdi is longfr tibn tiis */

    int nidf_mbtdi; /* Stop sfbrdiing wifn durrfnt mbtdi fxdffds tiis */

                /* usfd by trffs.d: */
    /* Didn't usf dt_dbtb typfdff bflow to supprfss dompilfr wbrning */
    strudt dt_dbtb_s dyn_ltrff[HEAP_SIZE];   /* litfrbl bnd lfngti trff */
    strudt dt_dbtb_s dyn_dtrff[2*D_CODES+1]; /* distbndf trff */
    strudt dt_dbtb_s bl_trff[2*BL_CODES+1];  /* Huffmbn trff for bit lfngtis */

    strudt trff_dfsd_s l_dfsd;               /* dfsd. for litfrbl trff */
    strudt trff_dfsd_s d_dfsd;               /* dfsd. for distbndf trff */
    strudt trff_dfsd_s bl_dfsd;              /* dfsd. for bit lfngti trff */

    usi bl_dount[MAX_BITS+1];
    /* numbfr of dodfs bt fbdi bit lfngti for bn optimbl trff */

    int ifbp[2*L_CODES+1];      /* ifbp usfd to build tif Huffmbn trffs */
    int ifbp_lfn;               /* numbfr of flfmfnts in tif ifbp */
    int ifbp_mbx;               /* flfmfnt of lbrgfst frfqufndy */
    /* Tif sons of ifbp[n] brf ifbp[2*n] bnd ifbp[2*n+1]. ifbp[0] is not usfd.
     * Tif sbmf ifbp brrby is usfd to build bll trffs.
     */

    udi dfpti[2*L_CODES+1];
    /* Dfpti of fbdi subtrff usfd bs tif brfbkfr for trffs of fqubl frfqufndy
     */

    udif *l_buf;          /* bufffr for litfrbls or lfngtis */

    uInt  lit_bufsizf;
    /* Sizf of mbtdi bufffr for litfrbls/lfngtis.  Tifrf brf 4 rfbsons for
     * limiting lit_bufsizf to 64K:
     *   - frfqufndifs dbn bf kfpt in 16 bit dountfrs
     *   - if domprfssion is not suddfssful for tif first blodk, bll input
     *     dbtb is still in tif window so wf dbn still fmit b storfd blodk fvfn
     *     wifn input domfs from stbndbrd input.  (Tiis dbn blso bf donf for
     *     bll blodks if lit_bufsizf is not grfbtfr tibn 32K.)
     *   - if domprfssion is not suddfssful for b filf smbllfr tibn 64K, wf dbn
     *     fvfn fmit b storfd filf instfbd of b storfd blodk (sbving 5 bytfs).
     *     Tiis is bpplidbblf only for zip (not gzip or zlib).
     *   - drfbting nfw Huffmbn trffs lfss frfqufntly mby not providf fbst
     *     bdbptbtion to dibngfs in tif input dbtb stbtistids. (Tbkf for
     *     fxbmplf b binbry filf witi poorly domprfssiblf dodf followfd by
     *     b iigily domprfssiblf string tbblf.) Smbllfr bufffr sizfs givf
     *     fbst bdbptbtion but ibvf of doursf tif ovfrifbd of trbnsmitting
     *     trffs morf frfqufntly.
     *   - I dbn't dount bbovf 4
     */

    uInt lbst_lit;      /* running indfx in l_buf */

    usif *d_buf;
    /* Bufffr for distbndfs. To simplify tif dodf, d_buf bnd l_buf ibvf
     * tif sbmf numbfr of flfmfnts. To usf difffrfnt lfngtis, bn fxtrb flbg
     * brrby would bf nfdfssbry.
     */

    ulg opt_lfn;        /* bit lfngti of durrfnt blodk witi optimbl trffs */
    ulg stbtid_lfn;     /* bit lfngti of durrfnt blodk witi stbtid trffs */
    uInt mbtdifs;       /* numbfr of string mbtdifs in durrfnt blodk */
    uInt insfrt;        /* bytfs bt fnd of window lfft to insfrt */

#ifdff DEBUG
    ulg domprfssfd_lfn; /* totbl bit lfngti of domprfssfd filf mod 2^32 */
    ulg bits_sfnt;      /* bit lfngti of domprfssfd dbtb sfnt mod 2^32 */
#fndif

    usi bi_buf;
    /* Output bufffr. bits brf insfrtfd stbrting bt tif bottom (lfbst
     * signifidbnt bits).
     */
    int bi_vblid;
    /* Numbfr of vblid bits in bi_buf.  All bits bbovf tif lbst vblid bit
     * brf blwbys zfro.
     */

    ulg iigi_wbtfr;
    /* Higi wbtfr mbrk offsft in window for initiblizfd bytfs -- bytfs bbovf
     * tiis brf sft to zfro in ordfr to bvoid mfmory difdk wbrnings wifn
     * longfst mbtdi routinfs bddfss bytfs pbst tif input.  Tiis is tifn
     * updbtfd to tif nfw iigi wbtfr mbrk.
     */

} FAR dfflbtf_stbtf;

/* Output b bytf on tif strfbm.
 * IN bssfrtion: tifrf is fnougi room in pfnding_buf.
 */
#dffinf put_bytf(s, d) {s->pfnding_buf[s->pfnding++] = (d);}


#dffinf MIN_LOOKAHEAD (MAX_MATCH+MIN_MATCH+1)
/* Minimum bmount of lookbifbd, fxdfpt bt tif fnd of tif input filf.
 * Sff dfflbtf.d for dommfnts bbout tif MIN_MATCH+1.
 */

#dffinf MAX_DIST(s)  ((s)->w_sizf-MIN_LOOKAHEAD)
/* In ordfr to simplify tif dodf, pbrtidulbrly on 16 bit mbdiinfs, mbtdi
 * distbndfs brf limitfd to MAX_DIST instfbd of WSIZE.
 */

#dffinf WIN_INIT MAX_MATCH
/* Numbfr of bytfs bftfr fnd of dbtb in window to initiblizf in ordfr to bvoid
   mfmory difdkfr frrors from longfst mbtdi routinfs */

        /* in trffs.d */
void ZLIB_INTERNAL _tr_init OF((dfflbtf_stbtf *s));
int ZLIB_INTERNAL _tr_tblly OF((dfflbtf_stbtf *s, unsignfd dist, unsignfd ld));
void ZLIB_INTERNAL _tr_flusi_blodk OF((dfflbtf_stbtf *s, dibrf *buf,
                        ulg storfd_lfn, int lbst));
void ZLIB_INTERNAL _tr_flusi_bits OF((dfflbtf_stbtf *s));
void ZLIB_INTERNAL _tr_blign OF((dfflbtf_stbtf *s));
void ZLIB_INTERNAL _tr_storfd_blodk OF((dfflbtf_stbtf *s, dibrf *buf,
                        ulg storfd_lfn, int lbst));

#dffinf d_dodf(dist) \
   ((dist) < 256 ? _dist_dodf[dist] : _dist_dodf[256+((dist)>>7)])
/* Mbpping from b distbndf to b distbndf dodf. dist is tif distbndf - 1 bnd
 * must not ibvf sidf ffffdts. _dist_dodf[256] bnd _dist_dodf[257] brf nfvfr
 * usfd.
 */

#ifndff DEBUG
/* Inlinf vfrsions of _tr_tblly for spffd: */

#if dffinfd(GEN_TREES_H) || !dffinfd(STDC)
  fxtfrn udi ZLIB_INTERNAL _lfngti_dodf[];
  fxtfrn udi ZLIB_INTERNAL _dist_dodf[];
#flsf
  fxtfrn donst udi ZLIB_INTERNAL _lfngti_dodf[];
  fxtfrn donst udi ZLIB_INTERNAL _dist_dodf[];
#fndif

# dffinf _tr_tblly_lit(s, d, flusi) \
  { udi dd = (d); \
    s->d_buf[s->lbst_lit] = 0; \
    s->l_buf[s->lbst_lit++] = dd; \
    s->dyn_ltrff[dd].Frfq++; \
    flusi = (s->lbst_lit == s->lit_bufsizf-1); \
   }
# dffinf _tr_tblly_dist(s, distbndf, lfngti, flusi) \
  { udi lfn = (lfngti); \
    usi dist = (distbndf); \
    s->d_buf[s->lbst_lit] = dist; \
    s->l_buf[s->lbst_lit++] = lfn; \
    dist--; \
    s->dyn_ltrff[_lfngti_dodf[lfn]+LITERALS+1].Frfq++; \
    s->dyn_dtrff[d_dodf(dist)].Frfq++; \
    flusi = (s->lbst_lit == s->lit_bufsizf-1); \
  }
#flsf
# dffinf _tr_tblly_lit(s, d, flusi) flusi = _tr_tblly(s, 0, d)
# dffinf _tr_tblly_dist(s, distbndf, lfngti, flusi) \
              flusi = _tr_tblly(s, distbndf, lfngti)
#fndif

#fndif /* DEFLATE_H */
