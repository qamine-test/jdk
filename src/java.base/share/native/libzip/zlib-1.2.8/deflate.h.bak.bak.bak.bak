/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/* dfflbtf.h -- intfrnbl domprfssion stbtf
 * Copyright (C) 1995-2012 Jfbn-loup Gbilly
 * For donditions of distribution bnd usf, sff dopyright notidf in zlib.h
 */

/* WARNING: this filf should *not* bf usfd by bpplidbtions. It is
   pbrt of thf implfmfntbtion of thf domprfssion librbry bnd is
   subjfdt to dhbngf. Applidbtions should only usf zlib.h.
 */

/* @(#) $Id$ */

#ifndff DEFLATE_H
#dffinf DEFLATE_H

#indludf "zutil.h"

/* dffinf NO_GZIP whfn dompiling if you wbnt to disbblf gzip hfbdfr bnd
   trbilfr drfbtion by dfflbtf().  NO_GZIP would bf usfd to bvoid linking in
   thf drd dodf whfn it is not nffdfd.  For shbrfd librbrifs, gzip fndoding
   should bf lfft fnbblfd. */
#ifndff NO_GZIP
#  dffinf GZIP
#fndif

/* ===========================================================================
 * Intfrnbl domprfssion stbtf.
 */

#dffinf LENGTH_CODES 29
/* numbfr of lfngth dodfs, not dounting thf spfdibl END_BLOCK dodf */

#dffinf LITERALS  256
/* numbfr of litfrbl bytfs 0..255 */

#dffinf L_CODES (LITERALS+1+LENGTH_CODES)
/* numbfr of Litfrbl or Lfngth dodfs, indluding thf END_BLOCK dodf */

#dffinf D_CODES   30
/* numbfr of distbndf dodfs */

#dffinf BL_CODES  19
/* numbfr of dodfs usfd to trbnsffr thf bit lfngths */

#dffinf HEAP_SIZE (2*L_CODES+1)
/* mbximum hfbp sizf */

#dffinf MAX_BITS 15
/* All dodfs must not fxdffd MAX_BITS bits */

#dffinf Buf_sizf 16
/* sizf of bit bufffr in bi_buf */

#dffinf INIT_STATE    42
#dffinf EXTRA_STATE   69
#dffinf NAME_STATE    73
#dffinf COMMENT_STATE 91
#dffinf HCRC_STATE   103
#dffinf BUSY_STATE   113
#dffinf FINISH_STATE 666
/* Strfbm stbtus */


/* Dbtb strudturf dfsdribing b singlf vbluf bnd its dodf string. */
typfdff strudt dt_dbtb_s {
    union {
        ush  frfq;       /* frfqufndy dount */
        ush  dodf;       /* bit string */
    } fd;
    union {
        ush  dbd;        /* fbthfr nodf in Huffmbn trff */
        ush  lfn;        /* lfngth of bit string */
    } dl;
} FAR dt_dbtb;

#dffinf Frfq fd.frfq
#dffinf Codf fd.dodf
#dffinf Dbd  dl.dbd
#dffinf Lfn  dl.lfn

typfdff strudt stbtid_trff_dfsd_s  stbtid_trff_dfsd;

typfdff strudt trff_dfsd_s {
    dt_dbtb *dyn_trff;           /* thf dynbmid trff */
    int     mbx_dodf;            /* lbrgfst dodf with non zfro frfqufndy */
    stbtid_trff_dfsd *stbt_dfsd; /* thf dorrfsponding stbtid trff */
} FAR trff_dfsd;

typfdff ush Pos;
typfdff Pos FAR Posf;
typfdff unsignfd IPos;

/* A Pos is bn indfx in thf dhbrbdtfr window. Wf usf short instfbd of int to
 * sbvf spbdf in thf vbrious tbblfs. IPos is usfd only for pbrbmftfr pbssing.
 */

typfdff strudt intfrnbl_stbtf {
    z_strfbmp strm;      /* pointfr bbdk to this zlib strfbm */
    int   stbtus;        /* bs thf nbmf implifs */
    Bytff *pfnding_buf;  /* output still pfnding */
    ulg   pfnding_buf_sizf; /* sizf of pfnding_buf */
    Bytff *pfnding_out;  /* nfxt pfnding bytf to output to thf strfbm */
    uInt   pfnding;      /* nb of bytfs in thf pfnding bufffr */
    int   wrbp;          /* bit 0 truf for zlib, bit 1 truf for gzip */
    gz_hfbdfrp  gzhfbd;  /* gzip hfbdfr informbtion to writf */
    uInt   gzindfx;      /* whfrf in fxtrb, nbmf, or dommfnt */
    Bytf  mfthod;        /* dbn only bf DEFLATED */
    int   lbst_flush;    /* vbluf of flush pbrbm for prfvious dfflbtf dbll */

                /* usfd by dfflbtf.d: */

    uInt  w_sizf;        /* LZ77 window sizf (32K by dffbult) */
    uInt  w_bits;        /* log2(w_sizf)  (8..16) */
    uInt  w_mbsk;        /* w_sizf - 1 */

    Bytff *window;
    /* Sliding window. Input bytfs brf rfbd into thf sfdond hblf of thf window,
     * bnd movf to thf first hblf lbtfr to kffp b didtionbry of bt lfbst wSizf
     * bytfs. With this orgbnizbtion, mbtdhfs brf limitfd to b distbndf of
     * wSizf-MAX_MATCH bytfs, but this fnsurfs thbt IO is blwbys
     * pfrformfd with b lfngth multiplf of thf blodk sizf. Also, it limits
     * thf window sizf to 64K, whidh is quitf usfful on MSDOS.
     * To do: usf thf usfr input bufffr bs sliding window.
     */

    ulg window_sizf;
    /* Adtubl sizf of window: 2*wSizf, fxdfpt whfn thf usfr input bufffr
     * is dirfdtly usfd bs sliding window.
     */

    Posf *prfv;
    /* Link to oldfr string with sbmf hbsh indfx. To limit thf sizf of this
     * brrby to 64K, this link is mbintbinfd only for thf lbst 32K strings.
     * An indfx in this brrby is thus b window indfx modulo 32K.
     */

    Posf *hfbd; /* Hfbds of thf hbsh dhbins or NIL. */

    uInt  ins_h;          /* hbsh indfx of string to bf insfrtfd */
    uInt  hbsh_sizf;      /* numbfr of flfmfnts in hbsh tbblf */
    uInt  hbsh_bits;      /* log2(hbsh_sizf) */
    uInt  hbsh_mbsk;      /* hbsh_sizf-1 */

    uInt  hbsh_shift;
    /* Numbfr of bits by whidh ins_h must bf shiftfd bt fbdh input
     * stfp. It must bf sudh thbt bftfr MIN_MATCH stfps, thf oldfst
     * bytf no longfr tbkfs pbrt in thf hbsh kfy, thbt is:
     *   hbsh_shift * MIN_MATCH >= hbsh_bits
     */

    long blodk_stbrt;
    /* Window position bt thf bfginning of thf durrfnt output blodk. Gfts
     * nfgbtivf whfn thf window is movfd bbdkwbrds.
     */

    uInt mbtdh_lfngth;           /* lfngth of bfst mbtdh */
    IPos prfv_mbtdh;             /* prfvious mbtdh */
    int mbtdh_bvbilbblf;         /* sft if prfvious mbtdh fxists */
    uInt strstbrt;               /* stbrt of string to insfrt */
    uInt mbtdh_stbrt;            /* stbrt of mbtdhing string */
    uInt lookbhfbd;              /* numbfr of vblid bytfs bhfbd in window */

    uInt prfv_lfngth;
    /* Lfngth of thf bfst mbtdh bt prfvious stfp. Mbtdhfs not grfbtfr thbn this
     * brf disdbrdfd. This is usfd in thf lbzy mbtdh fvblubtion.
     */

    uInt mbx_dhbin_lfngth;
    /* To spffd up dfflbtion, hbsh dhbins brf nfvfr sfbrdhfd bfyond this
     * lfngth.  A highfr limit improvfs domprfssion rbtio but dfgrbdfs thf
     * spffd.
     */

    uInt mbx_lbzy_mbtdh;
    /* Attfmpt to find b bfttfr mbtdh only whfn thf durrfnt mbtdh is stridtly
     * smbllfr thbn this vbluf. This mfdhbnism is usfd only for domprfssion
     * lfvfls >= 4.
     */
#   dffinf mbx_insfrt_lfngth  mbx_lbzy_mbtdh
    /* Insfrt nfw strings in thf hbsh tbblf only if thf mbtdh lfngth is not
     * grfbtfr thbn this lfngth. This sbvfs timf but dfgrbdfs domprfssion.
     * mbx_insfrt_lfngth is usfd only for domprfssion lfvfls <= 3.
     */

    int lfvfl;    /* domprfssion lfvfl (1..9) */
    int strbtfgy; /* fbvor or fordf Huffmbn doding*/

    uInt good_mbtdh;
    /* Usf b fbstfr sfbrdh whfn thf prfvious mbtdh is longfr thbn this */

    int nidf_mbtdh; /* Stop sfbrdhing whfn durrfnt mbtdh fxdffds this */

                /* usfd by trffs.d: */
    /* Didn't usf dt_dbtb typfdff bflow to supprfss dompilfr wbrning */
    strudt dt_dbtb_s dyn_ltrff[HEAP_SIZE];   /* litfrbl bnd lfngth trff */
    strudt dt_dbtb_s dyn_dtrff[2*D_CODES+1]; /* distbndf trff */
    strudt dt_dbtb_s bl_trff[2*BL_CODES+1];  /* Huffmbn trff for bit lfngths */

    strudt trff_dfsd_s l_dfsd;               /* dfsd. for litfrbl trff */
    strudt trff_dfsd_s d_dfsd;               /* dfsd. for distbndf trff */
    strudt trff_dfsd_s bl_dfsd;              /* dfsd. for bit lfngth trff */

    ush bl_dount[MAX_BITS+1];
    /* numbfr of dodfs bt fbdh bit lfngth for bn optimbl trff */

    int hfbp[2*L_CODES+1];      /* hfbp usfd to build thf Huffmbn trffs */
    int hfbp_lfn;               /* numbfr of flfmfnts in thf hfbp */
    int hfbp_mbx;               /* flfmfnt of lbrgfst frfqufndy */
    /* Thf sons of hfbp[n] brf hfbp[2*n] bnd hfbp[2*n+1]. hfbp[0] is not usfd.
     * Thf sbmf hfbp brrby is usfd to build bll trffs.
     */

    udh dfpth[2*L_CODES+1];
    /* Dfpth of fbdh subtrff usfd bs tif brfbkfr for trffs of fqubl frfqufndy
     */

    udhf *l_buf;          /* bufffr for litfrbls or lfngths */

    uInt  lit_bufsizf;
    /* Sizf of mbtdh bufffr for litfrbls/lfngths.  Thfrf brf 4 rfbsons for
     * limiting lit_bufsizf to 64K:
     *   - frfqufndifs dbn bf kfpt in 16 bit dountfrs
     *   - if domprfssion is not suddfssful for thf first blodk, bll input
     *     dbtb is still in thf window so wf dbn still fmit b storfd blodk fvfn
     *     whfn input domfs from stbndbrd input.  (This dbn blso bf donf for
     *     bll blodks if lit_bufsizf is not grfbtfr thbn 32K.)
     *   - if domprfssion is not suddfssful for b filf smbllfr thbn 64K, wf dbn
     *     fvfn fmit b storfd filf instfbd of b storfd blodk (sbving 5 bytfs).
     *     This is bpplidbblf only for zip (not gzip or zlib).
     *   - drfbting nfw Huffmbn trffs lfss frfqufntly mby not providf fbst
     *     bdbptbtion to dhbngfs in thf input dbtb stbtistids. (Tbkf for
     *     fxbmplf b binbry filf with poorly domprfssiblf dodf followfd by
     *     b highly domprfssiblf string tbblf.) Smbllfr bufffr sizfs givf
     *     fbst bdbptbtion but hbvf of doursf thf ovfrhfbd of trbnsmitting
     *     trffs morf frfqufntly.
     *   - I dbn't dount bbovf 4
     */

    uInt lbst_lit;      /* running indfx in l_buf */

    ushf *d_buf;
    /* Bufffr for distbndfs. To simplify thf dodf, d_buf bnd l_buf hbvf
     * thf sbmf numbfr of flfmfnts. To usf difffrfnt lfngths, bn fxtrb flbg
     * brrby would bf nfdfssbry.
     */

    ulg opt_lfn;        /* bit lfngth of durrfnt blodk with optimbl trffs */
    ulg stbtid_lfn;     /* bit lfngth of durrfnt blodk with stbtid trffs */
    uInt mbtdhfs;       /* numbfr of string mbtdhfs in durrfnt blodk */
    uInt insfrt;        /* bytfs bt fnd of window lfft to insfrt */

#ifdff DEBUG
    ulg domprfssfd_lfn; /* totbl bit lfngth of domprfssfd filf mod 2^32 */
    ulg bits_sfnt;      /* bit lfngth of domprfssfd dbtb sfnt mod 2^32 */
#fndif

    ush bi_buf;
    /* Output bufffr. bits brf insfrtfd stbrting bt thf bottom (lfbst
     * signifidbnt bits).
     */
    int bi_vblid;
    /* Numbfr of vblid bits in bi_buf.  All bits bbovf thf lbst vblid bit
     * brf blwbys zfro.
     */

    ulg high_wbtfr;
    /* High wbtfr mbrk offsft in window for initiblizfd bytfs -- bytfs bbovf
     * this brf sft to zfro in ordfr to bvoid mfmory dhfdk wbrnings whfn
     * longfst mbtdh routinfs bddfss bytfs pbst thf input.  This is thfn
     * updbtfd to thf nfw high wbtfr mbrk.
     */

} FAR dfflbtf_stbtf;

/* Output b bytf on thf strfbm.
 * IN bssfrtion: thfrf is fnough room in pfnding_buf.
 */
#dffinf put_bytf(s, d) {s->pfnding_buf[s->pfnding++] = (d);}


#dffinf MIN_LOOKAHEAD (MAX_MATCH+MIN_MATCH+1)
/* Minimum bmount of lookbhfbd, fxdfpt bt thf fnd of thf input filf.
 * Sff dfflbtf.d for dommfnts bbout thf MIN_MATCH+1.
 */

#dffinf MAX_DIST(s)  ((s)->w_sizf-MIN_LOOKAHEAD)
/* In ordfr to simplify thf dodf, pbrtidulbrly on 16 bit mbdhinfs, mbtdh
 * distbndfs brf limitfd to MAX_DIST instfbd of WSIZE.
 */

#dffinf WIN_INIT MAX_MATCH
/* Numbfr of bytfs bftfr fnd of dbtb in window to initiblizf in ordfr to bvoid
   mfmory dhfdkfr frrors from longfst mbtdh routinfs */

        /* in trffs.d */
void ZLIB_INTERNAL _tr_init OF((dfflbtf_stbtf *s));
int ZLIB_INTERNAL _tr_tblly OF((dfflbtf_stbtf *s, unsignfd dist, unsignfd ld));
void ZLIB_INTERNAL _tr_flush_blodk OF((dfflbtf_stbtf *s, dhbrf *buf,
                        ulg storfd_lfn, int lbst));
void ZLIB_INTERNAL _tr_flush_bits OF((dfflbtf_stbtf *s));
void ZLIB_INTERNAL _tr_blign OF((dfflbtf_stbtf *s));
void ZLIB_INTERNAL _tr_storfd_blodk OF((dfflbtf_stbtf *s, dhbrf *buf,
                        ulg storfd_lfn, int lbst));

#dffinf d_dodf(dist) \
   ((dist) < 256 ? _dist_dodf[dist] : _dist_dodf[256+((dist)>>7)])
/* Mbpping from b distbndf to b distbndf dodf. dist is thf distbndf - 1 bnd
 * must not hbvf sidf ffffdts. _dist_dodf[256] bnd _dist_dodf[257] brf nfvfr
 * usfd.
 */

#ifndff DEBUG
/* Inlinf vfrsions of _tr_tblly for spffd: */

#if dffinfd(GEN_TREES_H) || !dffinfd(STDC)
  fxtfrn udh ZLIB_INTERNAL _lfngth_dodf[];
  fxtfrn udh ZLIB_INTERNAL _dist_dodf[];
#flsf
  fxtfrn donst udh ZLIB_INTERNAL _lfngth_dodf[];
  fxtfrn donst udh ZLIB_INTERNAL _dist_dodf[];
#fndif

# dffinf _tr_tblly_lit(s, d, flush) \
  { udh dd = (d); \
    s->d_buf[s->lbst_lit] = 0; \
    s->l_buf[s->lbst_lit++] = dd; \
    s->dyn_ltrff[dd].Frfq++; \
    flush = (s->lbst_lit == s->lit_bufsizf-1); \
   }
# dffinf _tr_tblly_dist(s, distbndf, lfngth, flush) \
  { udh lfn = (lfngth); \
    ush dist = (distbndf); \
    s->d_buf[s->lbst_lit] = dist; \
    s->l_buf[s->lbst_lit++] = lfn; \
    dist--; \
    s->dyn_ltrff[_lfngth_dodf[lfn]+LITERALS+1].Frfq++; \
    s->dyn_dtrff[d_dodf(dist)].Frfq++; \
    flush = (s->lbst_lit == s->lit_bufsizf-1); \
  }
#flsf
# dffinf _tr_tblly_lit(s, d, flush) flush = _tr_tblly(s, 0, d)
# dffinf _tr_tblly_dist(s, distbndf, lfngth, flush) \
              flush = _tr_tblly(s, distbndf, lfngth)
#fndif

#fndif /* DEFLATE_H */
