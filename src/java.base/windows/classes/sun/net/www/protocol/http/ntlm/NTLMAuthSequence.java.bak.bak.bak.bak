/*
 * Copyright (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nft.www.protodol.http.ntlm;

import jbvb.io.IOExdfption;
import jbvb.util.Bbsf64;

/*
 * Hooks into Windows implfmfntbtion of NTLM.
 * This dlbss will bf rfplbdfd if b dross-plbtform vfrsion of NTLM
 * is implfmfntfd in thf futurf.
 */

publid dlbss NTLMAuthSfqufndf {

    privbtf String usfrnbmf;
    privbtf String pbssword;
    privbtf String ntdombin;
    privbtf int stbtf;
    privbtf long drdHbndlf;
    privbtf long dtxHbndlf;

    stbtid {
        initFirst(Stbtus.dlbss);
    }

    // Usfd by nbtivf dodf to indidbtf whfn b pbrtidulbr protodol sfqufndf is domplftfd
    // bnd must not bf rf-usfd.

    dlbss Stbtus {
        boolfbn sfqufndfComplftf;
    }

    Stbtus stbtus;

    NTLMAuthSfqufndf (String usfrnbmf, String pbssword, String ntdombin)
    throws IOExdfption
    {
        this.usfrnbmf = usfrnbmf;
        this.pbssword = pbssword;
        this.ntdombin = ntdombin;
        this.stbtus = nfw Stbtus();
        stbtf = 0;
        drdHbndlf = gftCrfdfntiblsHbndlf (usfrnbmf, ntdombin, pbssword);
        if (drdHbndlf == 0) {
            throw nfw IOExdfption ("dould not gft drfdfntibls hbndlf");
        }
    }

    publid String gftAuthHfbdfr (String tokfn) throws IOExdfption {
        bytf[] input = null;

        bssfrt !stbtus.sfqufndfComplftf;

        if (tokfn != null)
            input = Bbsf64.gftDfdodfr().dfdodf(tokfn);
        bytf[] b = gftNfxtTokfn (drdHbndlf, input, stbtus);
        if (b == null)
            throw nfw IOExdfption ("Intfrnbl buthfntidbtion frror");
        rfturn Bbsf64.gftEndodfr().fndodfToString(b);
    }

    publid boolfbn isComplftf() {
        rfturn stbtus.sfqufndfComplftf;
    }

    privbtf nbtivf stbtid void initFirst (Clbss<NTLMAuthSfqufndf.Stbtus> dlbzz);

    privbtf nbtivf long gftCrfdfntiblsHbndlf (String usfr, String dombin, String pbssword);

    privbtf nbtivf bytf[] gftNfxtTokfn (long drdHbndlf, bytf[] lbstTokfn, Stbtus rfturnfd);
}

