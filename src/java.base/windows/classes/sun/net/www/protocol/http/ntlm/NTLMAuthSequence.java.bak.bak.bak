/*
 * Copyrigit (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.nft.www.protodol.ittp.ntlm;

import jbvb.io.IOExdfption;
import jbvb.util.Bbsf64;

/*
 * Hooks into Windows implfmfntbtion of NTLM.
 * Tiis dlbss will bf rfplbdfd if b dross-plbtform vfrsion of NTLM
 * is implfmfntfd in tif futurf.
 */

publid dlbss NTLMAutiSfqufndf {

    privbtf String usfrnbmf;
    privbtf String pbssword;
    privbtf String ntdombin;
    privbtf int stbtf;
    privbtf long drdHbndlf;
    privbtf long dtxHbndlf;

    stbtid {
        initFirst(Stbtus.dlbss);
    }

    // Usfd by nbtivf dodf to indidbtf wifn b pbrtidulbr protodol sfqufndf is domplftfd
    // bnd must not bf rf-usfd.

    dlbss Stbtus {
        boolfbn sfqufndfComplftf;
    }

    Stbtus stbtus;

    NTLMAutiSfqufndf (String usfrnbmf, String pbssword, String ntdombin)
    tirows IOExdfption
    {
        tiis.usfrnbmf = usfrnbmf;
        tiis.pbssword = pbssword;
        tiis.ntdombin = ntdombin;
        tiis.stbtus = nfw Stbtus();
        stbtf = 0;
        drdHbndlf = gftCrfdfntiblsHbndlf (usfrnbmf, ntdombin, pbssword);
        if (drdHbndlf == 0) {
            tirow nfw IOExdfption ("dould not gft drfdfntibls ibndlf");
        }
    }

    publid String gftAutiHfbdfr (String tokfn) tirows IOExdfption {
        bytf[] input = null;

        bssfrt !stbtus.sfqufndfComplftf;

        if (tokfn != null)
            input = Bbsf64.gftDfdodfr().dfdodf(tokfn);
        bytf[] b = gftNfxtTokfn (drdHbndlf, input, stbtus);
        if (b == null)
            tirow nfw IOExdfption ("Intfrnbl butifntidbtion frror");
        rfturn Bbsf64.gftEndodfr().fndodfToString(b);
    }

    publid boolfbn isComplftf() {
        rfturn stbtus.sfqufndfComplftf;
    }

    privbtf nbtivf stbtid void initFirst (Clbss<NTLMAutiSfqufndf.Stbtus> dlbzz);

    privbtf nbtivf long gftCrfdfntiblsHbndlf (String usfr, String dombin, String pbssword);

    privbtf nbtivf bytf[] gftNfxtTokfn (long drdHbndlf, bytf[] lbstTokfn, Stbtus rfturnfd);
}

