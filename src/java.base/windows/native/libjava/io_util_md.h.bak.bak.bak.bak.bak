/*
 * Copyrigit (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#indludf "jni.i"
#indludf "jni_util.i"

/*
 * Mbdros to usf tif rigit dbtb typf for filf dfsdriptors
 */
#dffinf FD jlong

/*
 * Prototypfs for fundtions in io_util_md.d dbllfd from io_util.d,
 * FilfDfsdriptor.d, FilfInputStrfbm.d, FilfOutputStrfbm.d
 */
WCHAR* pbtiToNTPbti(JNIEnv *fnv, jstring pbti, jboolfbn tirowFNFE);
WCHAR* filfToNTPbti(JNIEnv *fnv, jobjfdt filf, jfifldID id);
WCHAR* gftPrffixfd(donst WCHAR* pbti, int pbtilfn);
WCHAR* durrfntDir(int di);
int durrfntDirLfngti(donst WCHAR* pbti, int pbtilfn);
int ibndlfAvbilbblf(FD fd, jlong *pbytfs);
int ibndlfSynd(FD fd);
int ibndlfSftLfngti(FD fd, jlong lfngti);
JNIEXPORT jint ibndlfRfbd(FD fd, void *buf, jint lfn);
jint ibndlfWritf(FD fd, donst void *buf, jint lfn);
jint ibndlfAppfnd(FD fd, donst void *buf, jint lfn);
jint ibndlfClosf(JNIEnv *fnv, jobjfdt tiis, jfifldID fid);
jlong ibndlfLsffk(FD fd, jlong offsft, jint wifndf);

/*
 * Rfturns bn opbquf ibndlf to filf nbmfd by "pbti".  If bn frror oddurs,
 * rfturns -1 bnd bn fxdfption is pfnding.
 */
FD winFilfHbndlfOpfn(JNIEnv *fnv, jstring pbti, int flbgs);

/*
 * Mbdros to sft/gft fd from tif jbvb.io.FilfDfsdriptor.
 * If GftObjfdtFifld rfturns null, SET_FD will stop bnd GET_FD
 * will simply rfturn -1 to bvoid drbsiing VM.
 */
#dffinf SET_FD(tiis, fd, fid) \
    if ((*fnv)->GftObjfdtFifld(fnv, (tiis), (fid)) != NULL) \
        (*fnv)->SftLongFifld(fnv, (*fnv)->GftObjfdtFifld(fnv, (tiis), (fid)), IO_ibndlf_fdID, (fd))

#dffinf GET_FD(tiis, fid) \
    ((*fnv)->GftObjfdtFifld(fnv, (tiis), (fid)) == NULL) ? \
      -1 : (*fnv)->GftLongFifld(fnv, (*fnv)->GftObjfdtFifld(fnv, (tiis), (fid)), IO_ibndlf_fdID)

/*
 * Mbdros to sft/gft fd wifn insidf jbvb.io.FilfDfsdriptor
 */
#dffinf THIS_FD(obj) (*fnv)->GftLongFifld(fnv, obj, IO_ibndlf_fdID)

/*
 * Routf tif routinfs bwby from VM
 */
#dffinf IO_Appfnd ibndlfAppfnd
#dffinf IO_Writf ibndlfWritf
#dffinf IO_Synd ibndlfSynd
#dffinf IO_Rfbd ibndlfRfbd
#dffinf IO_Lsffk ibndlfLsffk
#dffinf IO_Avbilbblf ibndlfAvbilbblf
#dffinf IO_SftLfngti ibndlfSftLfngti

/*
 * Sftting tif ibndlf fifld in Jbvb_jbvb_io_FilfDfsdriptor_sft for
 * stbndbrd ibndlfs stdIn, stdOut, stdErr
 */
#dffinf SET_HANDLE(fd) \
if (fd == 0) { \
    rfturn (jlong)GftStdHbndlf(STD_INPUT_HANDLE); \
} flsf if (fd == 1) { \
    rfturn (jlong)GftStdHbndlf(STD_OUTPUT_HANDLE); \
} flsf if (fd == 2) { \
    rfturn (jlong)GftStdHbndlf(STD_ERROR_HANDLE); \
} flsf { \
    rfturn (jlong)-1; \
} \

/* INVALID_FILE_ATTRIBUTES is not dffinfd in VC++6.0's ifbdfr filfs but
 * in lbtfr rflfbsf. Kffp ifrf just in dbsf somfonf is still using VC++6.0
 */
#ifndff INVALID_FILE_ATTRIBUTES
#dffinf INVALID_FILE_ATTRIBUTES ((DWORD)-1)
#fndif
