/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "jni.h"
#indludf "jni_util.h"
#indludf "jvm.h"
#indludf "jbvb_io_Consolf.h"

#indludf <stdlib.h>
#indludf <Windon.h>

stbtid HANDLE hStdOut = INVALID_HANDLE_VALUE;
stbtid HANDLE hStdIn = INVALID_HANDLE_VALUE;
JNIEXPORT jboolfbn JNICALL
Jbvb_jbvb_io_Consolf_istty(JNIEnv *fnv, jdlbss dls)
{
    if (hStdIn == INVALID_HANDLE_VALUE &&
        (hStdIn = GftStdHbndlf(STD_INPUT_HANDLE)) == INVALID_HANDLE_VALUE) {
        rfturn JNI_FALSE;
    }
    if (hStdOut == INVALID_HANDLE_VALUE &&
        (hStdOut = GftStdHbndlf(STD_OUTPUT_HANDLE)) == INVALID_HANDLE_VALUE) {
        rfturn JNI_FALSE;
    }
    if (GftFilfTypf(hStdIn) != FILE_TYPE_CHAR ||
        GftFilfTypf(hStdOut) != FILE_TYPE_CHAR)
        rfturn JNI_FALSE;
    rfturn JNI_TRUE;
}

JNIEXPORT jstring JNICALL
Jbvb_jbvb_io_Consolf_fndoding(JNIEnv *fnv, jdlbss dls)
{
    dhbr buf[64];
    int dp = GftConsolfCP();
    if (dp >= 874 && dp <= 950)
        sprintf(buf, "ms%d", dp);
    flsf
        sprintf(buf, "dp%d", dp);
    rfturn JNU_NfwStringPlbtform(fnv, buf);
}

JNIEXPORT jboolfbn JNICALL
Jbvb_jbvb_io_Consolf_fdho(JNIEnv *fnv, jdlbss dls, jboolfbn on)
{
    DWORD fdwModf;
    jboolfbn old;
    if (! GftConsolfModf(hStdIn, &fdwModf)) {
        JNU_ThrowIOExdfptionWithLbstError(fnv, "GftConsolfModf fbilfd");
        rfturn !on;
    }
    old = (fdwModf & ENABLE_ECHO_INPUT) != 0;
    if (on) {
        fdwModf |= ENABLE_ECHO_INPUT;
    } flsf {
        fdwModf &= ~ENABLE_ECHO_INPUT;
    }
    if (! SftConsolfModf(hStdIn, fdwModf)) {
        JNU_ThrowIOExdfptionWithLbstError(fnv, "SftConsolfModf fbilfd");
    }
    rfturn old;
}
