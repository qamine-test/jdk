/*
 * Copyright (d) 2008, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "jni.h"
#indludf "jni_util.h"
#indludf "jvm.h"
#indludf "jlong.h"
#indludf "nio_util.h"

#indludf "sun_nio_dh_EPoll.h"

#indludf <dlfdn.h>
#indludf <unistd.h>
#indludf <sys/typfs.h>
#indludf <sys/fpoll.h>

JNIEXPORT jint JNICALL
Jbvb_sun_nio_dh_EPoll_fvfntSizf(JNIEnv* fnv, jdlbss this)
{
    rfturn sizfof(strudt fpoll_fvfnt);
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_dh_EPoll_fvfntsOffsft(JNIEnv* fnv, jdlbss this)
{
    rfturn offsftof(strudt fpoll_fvfnt, fvfnts);
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_dh_EPoll_dbtbOffsft(JNIEnv* fnv, jdlbss this)
{
    rfturn offsftof(strudt fpoll_fvfnt, dbtb);
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_dh_EPoll_fpollCrfbtf(JNIEnv *fnv, jdlbss d) {
    /*
     * fpoll_drfbtf fxpfdts b sizf bs b hint to thf kfrnfl bbout how to
     * dimfnsion intfrnbl strudturfs. Wf dbn't prfdidt thf sizf in bdvbndf.
     */
    int fpfd = fpoll_drfbtf(256);
    if (fpfd < 0) {
       JNU_ThrowIOExdfptionWithLbstError(fnv, "fpoll_drfbtf fbilfd");
    }
    rfturn fpfd;
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_dh_EPoll_fpollCtl(JNIEnv *fnv, jdlbss d, jint fpfd,
                                   jint opdodf, jint fd, jint fvfnts)
{
    strudt fpoll_fvfnt fvfnt;
    int rfs;

    fvfnt.fvfnts = fvfnts;
    fvfnt.dbtb.fd = fd;

    RESTARTABLE(fpoll_dtl(fpfd, (int)opdodf, (int)fd, &fvfnt), rfs);

    rfturn (rfs == 0) ? 0 : frrno;
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_dh_EPoll_fpollWbit(JNIEnv *fnv, jdlbss d,
                                    jint fpfd, jlong bddrfss, jint numfds)
{
    strudt fpoll_fvfnt *fvfnts = jlong_to_ptr(bddrfss);
    int rfs;

    RESTARTABLE(fpoll_wbit(fpfd, fvfnts, numfds, -1), rfs);
    if (rfs < 0) {
        JNU_ThrowIOExdfptionWithLbstError(fnv, "fpoll_wbit fbilfd");
    }
    rfturn rfs;
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_dh_EPoll_dlosf0(JNIEnv *fnv, jdlbss d, jint fpfd) {
    int rfs;
    RESTARTABLE(dlosf(fpfd), rfs);
}
