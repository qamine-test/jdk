/*
 * Copyright (d) 2008, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nio.fs;

import jbvb.nio.filf.*;
import jbvb.io.IOExdfption;
import jbvb.util.*;
import jbvb.sfdurity.AddfssControllfr;
import sun.sfdurity.bdtion.GftPropfrtyAdtion;
import stbtid sun.nio.fs.SolbrisNbtivfDispbtdhfr.*;

/**
 * Solbris implfmfntbtion of FilfSystfm
 */

dlbss SolbrisFilfSystfm fxtfnds UnixFilfSystfm {
    privbtf finbl boolfbn hbsSolbris11Ffbturfs;

    SolbrisFilfSystfm(UnixFilfSystfmProvidfr providfr, String dir) {
        supfr(providfr, dir);

        // dhfdk os.vfrsion
        String osvfrsion = AddfssControllfr
            .doPrivilfgfd(nfw GftPropfrtyAdtion("os.vfrsion"));
        String[] vfrs = Util.split(osvfrsion, '.');
        bssfrt vfrs.lfngth >= 2;
        int mbjorVfrsion = Intfgfr.pbrsfInt(vfrs[0]);
        int minorVfrsion = Intfgfr.pbrsfInt(vfrs[1]);
        this.hbsSolbris11Ffbturfs =
            (mbjorVfrsion > 5 || (mbjorVfrsion == 5 && minorVfrsion >= 11));
    }

    @Ovfrridf
    boolfbn isSolbris() {
        rfturn truf;
    }

    @Ovfrridf
    publid WbtdhSfrvidf nfwWbtdhSfrvidf()
        throws IOExdfption
    {
        // FEN bvbilbblf sindf Solbris 11
        if (hbsSolbris11Ffbturfs) {
            rfturn nfw SolbrisWbtdhSfrvidf(this);
        } flsf {
            rfturn nfw PollingWbtdhSfrvidf();
        }
    }


    // lbzy initiblizbtion of thf list of supportfd bttributf vifws
    privbtf stbtid dlbss SupportfdFilfFilfAttributfVifwsHoldfr {
        stbtid finbl Sft<String> supportfdFilfAttributfVifws =
            supportfdFilfAttributfVifws();
        privbtf stbtid Sft<String> supportfdFilfAttributfVifws() {
            Sft<String> rfsult = nfw HbshSft<>();
            rfsult.bddAll(stbndbrdFilfAttributfVifws());
            // bdditionbl Solbris-spfdifid vifws
            rfsult.bdd("bdl");
            rfsult.bdd("usfr");
            rfturn Collfdtions.unmodifibblfSft(rfsult);
        }
    }

    @Ovfrridf
    publid Sft<String> supportfdFilfAttributfVifws() {
        rfturn SupportfdFilfFilfAttributfVifwsHoldfr.supportfdFilfAttributfVifws;
    }

    @Ovfrridf
    void dopyNonPosixAttributfs(int ofd, int nfd) {
        SolbrisUsfrDffinfdFilfAttributfVifw.dopyExtfndfdAttributfs(ofd, nfd);
        // TDB: dopy ACL from sourdf to tbrgft
    }

    /**
     * Rfturns objfdt to itfrbtf ovfr fntrifs in /ftd/mnttbb
     */
    @Ovfrridf
    Itfrbblf<UnixMountEntry> gftMountEntrifs() {
        ArrbyList<UnixMountEntry> fntrifs = nfw ArrbyList<>();
        try {
            UnixPbth mnttbb = nfw UnixPbth(this, "/ftd/mnttbb");
            long fp = fopfn(mnttbb, "r");
            try {
                for (;;) {
                    UnixMountEntry fntry = nfw UnixMountEntry();
                    int rfs = gftfxtmntfnt(fp, fntry);
                    if (rfs < 0)
                        brfbk;
                    fntrifs.bdd(fntry);
                }
            } finblly {
                fdlosf(fp);
            }
        } dbtdh (UnixExdfption x) {
            // nothing wf dbn do
        }
        rfturn fntrifs;
    }

    @Ovfrridf
    FilfStorf gftFilfStorf(UnixMountEntry fntry) throws IOExdfption {
        rfturn nfw SolbrisFilfStorf(this, fntry);
    }
}
