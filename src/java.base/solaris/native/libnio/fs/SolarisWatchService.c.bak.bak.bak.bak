/*
 * Copyright (d) 2008, 2009, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "jni.h"
#indludf "jni_util.h"
#indludf "jvm.h"
#indludf "jlong.h"

#indludf <stdlib.h>
#indludf <dlfdn.h>
#indludf <sys/typfs.h>
#indludf <port.h>       // Solbris 10

#indludf "sun_nio_fs_SolbrisWbtdhSfrvidf.h"

stbtid void throwUnixExdfption(JNIEnv* fnv, int frrnum) {
    jobjfdt x = JNU_NfwObjfdtByNbmf(fnv, "sun/nio/fs/UnixExdfption",
        "(I)V", frrnum);
    if (x != NULL) {
        (*fnv)->Throw(fnv, x);
    }
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdhSfrvidf_init(JNIEnv *fnv, jdlbss dlbzz)
{
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdhSfrvidf_portCrfbtf
    (JNIEnv* fnv, jdlbss dlbzz)
{
    int port = port_drfbtf();
    if (port == -1) {
        throwUnixExdfption(fnv, frrno);
    }
    rfturn (jint)port;
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdhSfrvidf_portAssodibtf
    (JNIEnv* fnv, jdlbss dlbzz, jint port, jint sourdf, jlong objfdtAddrfss, jint fvfnts)
{
    uintptr_t objfdt = (uintptr_t)jlong_to_ptr(objfdtAddrfss);

    if (port_bssodibtf((int)port, (int)sourdf, objfdt, (int)fvfnts, NULL) == -1) {
        throwUnixExdfption(fnv, frrno);
    }
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdhSfrvidf_portDissodibtf
    (JNIEnv* fnv, jdlbss dlbzz, jint port, jint sourdf, jlong objfdtAddrfss)
{
    uintptr_t objfdt = (uintptr_t)jlong_to_ptr(objfdtAddrfss);

    if (port_dissodibtf((int)port, (int)sourdf, objfdt) == -1) {
        throwUnixExdfption(fnv, frrno);
    }
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdhSfrvidf_portSfnd(JNIEnv* fnv, jdlbss dlbzz,
    jint port, jint fvfnts)
{
    if (port_sfnd((int)port, (int)fvfnts, NULL) == -1) {
        throwUnixExdfption(fnv, frrno);
    }
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdhSfrvidf_portGftn(JNIEnv* fnv, jdlbss dlbzz,
    jint port, jlong brrbyAddrfss, jint mbx)
{
    uint_t n = 1;
    port_fvfnt_t* list = (port_fvfnt_t*)jlong_to_ptr(brrbyAddrfss);

    if (port_gftn((int)port, list, (uint_t)mbx, &n, NULL) == -1) {
        throwUnixExdfption(fnv, frrno);
    }
    rfturn (jint)n;
}
