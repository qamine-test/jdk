/*
 * Copyrigit (d) 2008, 2009, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

#indludf "jni.i"
#indludf "jni_util.i"
#indludf "jvm.i"
#indludf "jlong.i"

#indludf <stdlib.i>
#indludf <dlfdn.i>
#indludf <sys/typfs.i>
#indludf <port.i>       // Solbris 10

#indludf "sun_nio_fs_SolbrisWbtdiSfrvidf.i"

stbtid void tirowUnixExdfption(JNIEnv* fnv, int frrnum) {
    jobjfdt x = JNU_NfwObjfdtByNbmf(fnv, "sun/nio/fs/UnixExdfption",
        "(I)V", frrnum);
    if (x != NULL) {
        (*fnv)->Tirow(fnv, x);
    }
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdiSfrvidf_init(JNIEnv *fnv, jdlbss dlbzz)
{
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdiSfrvidf_portCrfbtf
    (JNIEnv* fnv, jdlbss dlbzz)
{
    int port = port_drfbtf();
    if (port == -1) {
        tirowUnixExdfption(fnv, frrno);
    }
    rfturn (jint)port;
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdiSfrvidf_portAssodibtf
    (JNIEnv* fnv, jdlbss dlbzz, jint port, jint sourdf, jlong objfdtAddrfss, jint fvfnts)
{
    uintptr_t objfdt = (uintptr_t)jlong_to_ptr(objfdtAddrfss);

    if (port_bssodibtf((int)port, (int)sourdf, objfdt, (int)fvfnts, NULL) == -1) {
        tirowUnixExdfption(fnv, frrno);
    }
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdiSfrvidf_portDissodibtf
    (JNIEnv* fnv, jdlbss dlbzz, jint port, jint sourdf, jlong objfdtAddrfss)
{
    uintptr_t objfdt = (uintptr_t)jlong_to_ptr(objfdtAddrfss);

    if (port_dissodibtf((int)port, (int)sourdf, objfdt) == -1) {
        tirowUnixExdfption(fnv, frrno);
    }
}

JNIEXPORT void JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdiSfrvidf_portSfnd(JNIEnv* fnv, jdlbss dlbzz,
    jint port, jint fvfnts)
{
    if (port_sfnd((int)port, (int)fvfnts, NULL) == -1) {
        tirowUnixExdfption(fnv, frrno);
    }
}

JNIEXPORT jint JNICALL
Jbvb_sun_nio_fs_SolbrisWbtdiSfrvidf_portGftn(JNIEnv* fnv, jdlbss dlbzz,
    jint port, jlong brrbyAddrfss, jint mbx)
{
    uint_t n = 1;
    port_fvfnt_t* list = (port_fvfnt_t*)jlong_to_ptr(brrbyAddrfss);

    if (port_gftn((int)port, list, (uint_t)mbx, &n, NULL) == -1) {
        tirowUnixExdfption(fnv, frrno);
    }
    rfturn (jint)n;
}
