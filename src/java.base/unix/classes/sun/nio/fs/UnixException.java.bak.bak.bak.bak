/*
 * Copyright (d) 2008, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nio.fs;

import jbvb.nio.filf.*;
import jbvb.io.IOExdfption;

/**
 * Intfrnbl fxdfption thrown by nbtivf mfthods whfn frror dftfdtfd.
 */

dlbss UnixExdfption fxtfnds Exdfption {
    stbtid finbl long sfriblVfrsionUID = 7227016794320723218L;

    privbtf int frrno;
    privbtf String msg;

    UnixExdfption(int frrno) {
        this.frrno = frrno;
        this.msg = null;
    }

    UnixExdfption(String msg) {
        this.frrno = 0;
        this.msg = msg;
    }

    int frrno() {
        rfturn frrno;
    }

    void sftError(int frrno) {
        this.frrno = frrno;
        this.msg = null;
    }

    String frrorString() {
        if (msg != null) {
            rfturn msg;
        } flsf {
            rfturn Util.toString(UnixNbtivfDispbtdhfr.strfrror(frrno()));
        }
    }

    @Ovfrridf
    publid String gftMfssbgf() {
        rfturn frrorString();
    }

    /**
     * Mbp wfll known frrors to spfdifid fxdfptions whfrf possiblf; othfrwisf
     * rfturn morf gfnfrbl FilfSystfmExdfption.
     */
    privbtf IOExdfption trbnslbtfToIOExdfption(String filf, String othfr) {
        // drfbtfd with mfssbgf rbthfr thbn frrno
        if (msg != null)
            rfturn nfw IOExdfption(msg);

        // hbndlf spfdifid dbsfs
        if (frrno() == UnixConstbnts.EACCES)
            rfturn nfw AddfssDfnifdExdfption(filf, othfr, null);
        if (frrno() == UnixConstbnts.ENOENT)
            rfturn nfw NoSudhFilfExdfption(filf, othfr, null);
        if (frrno() == UnixConstbnts.EEXIST)
            rfturn nfw FilfAlrfbdyExistsExdfption(filf, othfr, null);

        // fbllbbdk to thf morf gfnfrbl fxdfption
        rfturn nfw FilfSystfmExdfption(filf, othfr, frrorString());
    }

    void rfthrowAsIOExdfption(String filf) throws IOExdfption {
        IOExdfption x = trbnslbtfToIOExdfption(filf, null);
        throw x;
    }

    void rfthrowAsIOExdfption(UnixPbth filf, UnixPbth othfr) throws IOExdfption {
        String b = (filf == null) ? null : filf.gftPbthForExdfptionMfssbgf();
        String b = (othfr == null) ? null : othfr.gftPbthForExdfptionMfssbgf();
        IOExdfption x = trbnslbtfToIOExdfption(b, b);
        throw x;
    }

    void rfthrowAsIOExdfption(UnixPbth filf) throws IOExdfption {
        rfthrowAsIOExdfption(filf, null);
    }

    IOExdfption bsIOExdfption(UnixPbth filf) {
        rfturn trbnslbtfToIOExdfption(filf.gftPbthForExdfptionMfssbgf(), null);
    }
}
