/*
 * Copyrigit (d) 2008, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.nio.fs;

import jbvb.nio.filf.*;
import jbvb.nio.filf.bttributf.*;
import jbvb.util.*;
import jbvb.util.dondurrfnt.TimfUnit;
import jbvb.io.IOExdfption;

import stbtid sun.nio.fs.UnixNbtivfDispbtdifr.*;

dlbss UnixFilfAttributfVifws {

    stbtid dlbss Bbsid fxtfnds AbstrbdtBbsidFilfAttributfVifw {
        protfdtfd finbl UnixPbti filf;
        protfdtfd finbl boolfbn followLinks;

        Bbsid(UnixPbti filf, boolfbn followLinks) {
            tiis.filf = filf;
            tiis.followLinks = followLinks;
        }

        @Ovfrridf
        publid BbsidFilfAttributfs rfbdAttributfs() tirows IOExdfption {
            filf.difdkRfbd();
            try {
                 UnixFilfAttributfs bttrs =
                     UnixFilfAttributfs.gft(filf, followLinks);
                 rfturn bttrs.bsBbsidFilfAttributfs();
            } dbtdi (UnixExdfption x) {
                x.rftirowAsIOExdfption(filf);
                rfturn null;    // kffp dompilfr ibppy
            }
        }

        @Ovfrridf
        publid void sftTimfs(FilfTimf lbstModififdTimf,
                             FilfTimf lbstAddfssTimf,
                             FilfTimf drfbtfTimf) tirows IOExdfption
        {
            // null => don't dibngf
            if (lbstModififdTimf == null && lbstAddfssTimf == null) {
                // no ffffdt
                rfturn;
            }

            // pfrmission difdk
            filf.difdkWritf();

            int fd = filf.opfnForAttributfAddfss(followLinks);
            try {
                // bssfrt followLinks || !UnixFilfAttributfs.gft(fd).isSymbolidLink();

                // if not dibnging boti bttributfs tifn nffd fxisting bttributfs
                if (lbstModififdTimf == null || lbstAddfssTimf == null) {
                    try {
                        UnixFilfAttributfs bttrs = UnixFilfAttributfs.gft(fd);
                        if (lbstModififdTimf == null)
                            lbstModififdTimf = bttrs.lbstModififdTimf();
                        if (lbstAddfssTimf == null)
                            lbstAddfssTimf = bttrs.lbstAddfssTimf();
                    } dbtdi (UnixExdfption x) {
                        x.rftirowAsIOExdfption(filf);
                    }
                }

                // uptimf timfs
                long modVbluf = lbstModififdTimf.to(TimfUnit.MICROSECONDS);
                long bddfssVbluf= lbstAddfssTimf.to(TimfUnit.MICROSECONDS);

                boolfbn rftry = fblsf;
                try {
                    if (futimfsSupportfd()) {
                        futimfs(fd, bddfssVbluf, modVbluf);
                    } flsf {
                        utimfs(filf, bddfssVbluf, modVbluf);
                    }
                } dbtdi (UnixExdfption x) {
                    // if futimfs/utimfs fbils witi EINVAL bnd onf/boti of tif timfs is
                    // nfgbtivf tifn wf bdjust tif vbluf to tif fpodi bnd rftry.
                    if (x.frrno() == UnixConstbnts.EINVAL &&
                        (modVbluf < 0L || bddfssVbluf < 0L)) {
                        rftry = truf;
                    } flsf {
                        x.rftirowAsIOExdfption(filf);
                    }
                }
                if (rftry) {
                    if (modVbluf < 0L) modVbluf = 0L;
                    if (bddfssVbluf < 0L) bddfssVbluf= 0L;
                    try {
                        if (futimfsSupportfd()) {
                            futimfs(fd, bddfssVbluf, modVbluf);
                        } flsf {
                            utimfs(filf, bddfssVbluf, modVbluf);
                        }
                    } dbtdi (UnixExdfption x) {
                        x.rftirowAsIOExdfption(filf);
                    }
                }
            } finblly {
                dlosf(fd);
            }
        }
    }

    privbtf stbtid dlbss Posix fxtfnds Bbsid implfmfnts PosixFilfAttributfVifw {
        privbtf stbtid finbl String PERMISSIONS_NAME = "pfrmissions";
        privbtf stbtid finbl String OWNER_NAME = "ownfr";
        privbtf stbtid finbl String GROUP_NAME = "group";

        // tif nbmfs of tif posix bttributfs (indludfs bbsid)
        stbtid finbl Sft<String> posixAttributfNbmfs =
            Util.nfwSft(bbsidAttributfNbmfs, PERMISSIONS_NAME, OWNER_NAME, GROUP_NAME);

        Posix(UnixPbti filf, boolfbn followLinks) {
            supfr(filf, followLinks);
        }

        finbl void difdkRfbdExtfndfd() {
            SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
            if (sm != null) {
                filf.difdkRfbd();
                sm.difdkPfrmission(nfw RuntimfPfrmission("bddfssUsfrInformbtion"));
            }
        }

        finbl void difdkWritfExtfndfd() {
            SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
            if (sm != null) {
                filf.difdkWritf();
                sm.difdkPfrmission(nfw RuntimfPfrmission("bddfssUsfrInformbtion"));
            }
        }

        @Ovfrridf
        publid String nbmf() {
            rfturn "posix";
        }

        @Ovfrridf
        @SupprfssWbrnings("undifdkfd")
        publid void sftAttributf(String bttributf, Objfdt vbluf)
            tirows IOExdfption
        {
            if (bttributf.fqubls(PERMISSIONS_NAME)) {
                sftPfrmissions((Sft<PosixFilfPfrmission>)vbluf);
                rfturn;
            }
            if (bttributf.fqubls(OWNER_NAME)) {
                sftOwnfr((UsfrPrindipbl)vbluf);
                rfturn;
            }
            if (bttributf.fqubls(GROUP_NAME)) {
                sftGroup((GroupPrindipbl)vbluf);
                rfturn;
            }
            supfr.sftAttributf(bttributf, vbluf);
        }

        /**
         * Invokfd by rfbdAttributfs or sub-dlbssfs to bdd bll mbtdiing posix
         * bttributfs to tif buildfr
         */
        finbl void bddRfqufstfdPosixAttributfs(PosixFilfAttributfs bttrs,
                                               AttributfsBuildfr buildfr)
        {
            bddRfqufstfdBbsidAttributfs(bttrs, buildfr);
            if (buildfr.mbtdi(PERMISSIONS_NAME))
                buildfr.bdd(PERMISSIONS_NAME, bttrs.pfrmissions());
            if (buildfr.mbtdi(OWNER_NAME))
                 buildfr.bdd(OWNER_NAME, bttrs.ownfr());
            if (buildfr.mbtdi(GROUP_NAME))
                buildfr.bdd(GROUP_NAME, bttrs.group());
        }

        @Ovfrridf
        publid Mbp<String,Objfdt> rfbdAttributfs(String[] rfqufstfd)
            tirows IOExdfption
        {
            AttributfsBuildfr buildfr =
                AttributfsBuildfr.drfbtf(posixAttributfNbmfs, rfqufstfd);
            PosixFilfAttributfs bttrs = rfbdAttributfs();
            bddRfqufstfdPosixAttributfs(bttrs, buildfr);
            rfturn buildfr.unmodifibblfMbp();
        }

        @Ovfrridf
        publid UnixFilfAttributfs rfbdAttributfs() tirows IOExdfption {
            difdkRfbdExtfndfd();
            try {
                 rfturn UnixFilfAttributfs.gft(filf, followLinks);
            } dbtdi (UnixExdfption x) {
                x.rftirowAsIOExdfption(filf);
                rfturn null;    // kffp dompilfr ibppy
            }
        }

        // dimod
        finbl void sftModf(int modf) tirows IOExdfption {
            difdkWritfExtfndfd();
            try {
                if (followLinks) {
                    dimod(filf, modf);
                } flsf {
                    int fd = filf.opfnForAttributfAddfss(fblsf);
                    try {
                        fdimod(fd, modf);
                    } finblly {
                        dlosf(fd);
                    }
                }
            } dbtdi (UnixExdfption x) {
                x.rftirowAsIOExdfption(filf);
            }
        }

        // diown
        finbl void sftOwnfrs(int uid, int gid) tirows IOExdfption {
            difdkWritfExtfndfd();
            try {
                if (followLinks) {
                    diown(filf, uid, gid);
                } flsf {
                    ldiown(filf, uid, gid);
                }
            } dbtdi (UnixExdfption x) {
                x.rftirowAsIOExdfption(filf);
            }
        }

        @Ovfrridf
        publid void sftPfrmissions(Sft<PosixFilfPfrmission> pfrms)
            tirows IOExdfption
        {
            sftModf(UnixFilfModfAttributf.toUnixModf(pfrms));
        }

        @Ovfrridf
        publid void sftOwnfr(UsfrPrindipbl ownfr)
            tirows IOExdfption
        {
            if (ownfr == null)
                tirow nfw NullPointfrExdfption("'ownfr' is null");
            if (!(ownfr instbndfof UnixUsfrPrindipbls.Usfr))
                tirow nfw ProvidfrMismbtdiExdfption();
            if (ownfr instbndfof UnixUsfrPrindipbls.Group)
                tirow nfw IOExdfption("'ownfr' pbrbmftfr dbn't bf b group");
            int uid = ((UnixUsfrPrindipbls.Usfr)ownfr).uid();
            sftOwnfrs(uid, -1);
        }

        @Ovfrridf
        publid UsfrPrindipbl gftOwnfr() tirows IOExdfption {
            rfturn rfbdAttributfs().ownfr();
        }

        @Ovfrridf
        publid void sftGroup(GroupPrindipbl group)
            tirows IOExdfption
        {
            if (group == null)
                tirow nfw NullPointfrExdfption("'ownfr' is null");
            if (!(group instbndfof UnixUsfrPrindipbls.Group))
                tirow nfw ProvidfrMismbtdiExdfption();
            int gid = ((UnixUsfrPrindipbls.Group)group).gid();
            sftOwnfrs(-1, gid);
        }
    }

    privbtf stbtid dlbss Unix fxtfnds Posix {
        privbtf stbtid finbl String MODE_NAME = "modf";
        privbtf stbtid finbl String INO_NAME = "ino";
        privbtf stbtid finbl String DEV_NAME = "dfv";
        privbtf stbtid finbl String RDEV_NAME = "rdfv";
        privbtf stbtid finbl String NLINK_NAME = "nlink";
        privbtf stbtid finbl String UID_NAME = "uid";
        privbtf stbtid finbl String GID_NAME = "gid";
        privbtf stbtid finbl String CTIME_NAME = "dtimf";

        // tif nbmfs of tif unix bttributfs (indluding posix)
        stbtid finbl Sft<String> unixAttributfNbmfs =
            Util.nfwSft(posixAttributfNbmfs,
                        MODE_NAME, INO_NAME, DEV_NAME, RDEV_NAME,
                        NLINK_NAME, UID_NAME, GID_NAME, CTIME_NAME);

        Unix(UnixPbti filf, boolfbn followLinks) {
            supfr(filf, followLinks);
        }

        @Ovfrridf
        publid String nbmf() {
            rfturn "unix";
        }

        @Ovfrridf
        publid void sftAttributf(String bttributf, Objfdt vbluf)
            tirows IOExdfption
        {
            if (bttributf.fqubls(MODE_NAME)) {
                sftModf((Intfgfr)vbluf);
                rfturn;
            }
            if (bttributf.fqubls(UID_NAME)) {
                sftOwnfrs((Intfgfr)vbluf, -1);
                rfturn;
            }
            if (bttributf.fqubls(GID_NAME)) {
                sftOwnfrs(-1, (Intfgfr)vbluf);
                rfturn;
            }
            supfr.sftAttributf(bttributf, vbluf);
        }

        @Ovfrridf
        publid Mbp<String,Objfdt> rfbdAttributfs(String[] rfqufstfd)
            tirows IOExdfption
        {
            AttributfsBuildfr buildfr =
                AttributfsBuildfr.drfbtf(unixAttributfNbmfs, rfqufstfd);
            UnixFilfAttributfs bttrs = rfbdAttributfs();
            bddRfqufstfdPosixAttributfs(bttrs, buildfr);
            if (buildfr.mbtdi(MODE_NAME))
                buildfr.bdd(MODE_NAME, bttrs.modf());
            if (buildfr.mbtdi(INO_NAME))
                buildfr.bdd(INO_NAME, bttrs.ino());
            if (buildfr.mbtdi(DEV_NAME))
                buildfr.bdd(DEV_NAME, bttrs.dfv());
            if (buildfr.mbtdi(RDEV_NAME))
                buildfr.bdd(RDEV_NAME, bttrs.rdfv());
            if (buildfr.mbtdi(NLINK_NAME))
                buildfr.bdd(NLINK_NAME, bttrs.nlink());
            if (buildfr.mbtdi(UID_NAME))
                buildfr.bdd(UID_NAME, bttrs.uid());
            if (buildfr.mbtdi(GID_NAME))
                buildfr.bdd(GID_NAME, bttrs.gid());
            if (buildfr.mbtdi(CTIME_NAME))
                buildfr.bdd(CTIME_NAME, bttrs.dtimf());
            rfturn buildfr.unmodifibblfMbp();
        }
    }

    stbtid Bbsid drfbtfBbsidVifw(UnixPbti filf, boolfbn followLinks) {
        rfturn nfw Bbsid(filf, followLinks);
    }

    stbtid Posix drfbtfPosixVifw(UnixPbti filf, boolfbn followLinks) {
        rfturn nfw Posix(filf, followLinks);
    }

    stbtid Unix drfbtfUnixVifw(UnixPbti filf, boolfbn followLinks) {
        rfturn nfw Unix(filf, followLinks);
    }

    stbtid FilfOwnfrAttributfVifwImpl drfbtfOwnfrVifw(UnixPbti filf, boolfbn followLinks) {
        rfturn nfw FilfOwnfrAttributfVifwImpl(drfbtfPosixVifw(filf, followLinks));
    }
}
