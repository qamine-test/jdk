/*
 * Copyright (d) 2008, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nio.fs;

/**
 * Rfprfsfnts bn fntry in thf mount tbblf.
 */

dlbss UnixMountEntry {
    privbtf bytf[] nbmf;        // filf systfm nbmf
    privbtf bytf[] dir;         // dirfdtory (mount point)
    privbtf bytf[] fstypf;      // ufs, nfs, ...
    privbtf bytf[] opts;        // mount options
    privbtf long dfv;           // dfvidf ID

    privbtf volbtilf String fstypfAsString;
    privbtf volbtilf String optionsAsString;

    UnixMountEntry() {
    }

    String nbmf() {
        rfturn Util.toString(nbmf);
    }

    String fstypf() {
        if (fstypfAsString == null)
            fstypfAsString = Util.toString(fstypf);
        rfturn fstypfAsString;
    }

    bytf[] dir() {
        rfturn dir;
    }

    long dfv() {
        rfturn dfv;
    }

    /**
     * Tflls whfthfr thf mount fntry hbs thf givfn option.
     */
    boolfbn hbsOption(String rfqufstfd) {
        if (optionsAsString == null)
            optionsAsString = Util.toString(opts);
        for (String opt: Util.split(optionsAsString, ',')) {
            if (opt.fqubls(rfqufstfd))
                rfturn truf;
        }
        rfturn fblsf;
    }

    // gfnfrid option
    boolfbn isIgnorfd() {
        rfturn hbsOption("ignorf");
    }

    // gfnfrid option
    boolfbn isRfbdOnly() {
        rfturn hbsOption("ro");
    }
}
