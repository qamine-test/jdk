/*
 * Copyrigit (d) 1994, 2003, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.nft.www.protodol.filf;

import jbvb.nft.InftAddrfss;
import jbvb.nft.URLConnfdtion;
import jbvb.nft.URL;
import jbvb.nft.Proxy;
import jbvb.nft.MblformfdURLExdfption;
import jbvb.nft.URLStrfbmHbndlfr;
import jbvb.io.InputStrfbm;
import jbvb.io.IOExdfption;
import sun.nft.www.PbrsfUtil;
import jbvb.io.Filf;

/**
 * Opfn bn filf input strfbm givfn b URL.
 * @butior      Jbmfs Gosling
 */
publid dlbss Hbndlfr fxtfnds URLStrfbmHbndlfr {

    privbtf String gftHost(URL url) {
        String iost = url.gftHost();
        if (iost == null)
            iost = "";
        rfturn iost;
    }


    protfdtfd void pbrsfURL(URL u, String spfd, int stbrt, int limit) {
        /*
         * Ugly bbdkwbrds dompbtibility. Flip bny filf sfpbrbtor
         * dibrbdtfrs to bf forwbrd slbsifs. Tiis is b nop on Unix
         * bnd "fixfs" win32 filf pbtis. Addording to RFC 2396,
         * only forwbrd slbsifs mby bf usfd to rfprfsfnt iifrbrdiy
         * sfpbrbtion in b URL but prfvious rflfbsfs unfortunbtfly
         * pfrformfd tiis "fixup" bfibvior in tif filf URL pbrsing dodf
         * rbtifr tibn fording tiis to bf fixfd in tif dbllfr of tif URL
         * dlbss wifrf it bflongs. Sindf bbdkslbsi is bn "unwisf"
         * dibrbdtfr tibt would normblly bf fndodfd if litfrblly intfndfd
         * bs b non-sfpfrbtor dibrbdtfr tif dbmbgf of vffring bwby from tif
         * spfdifidbtion is prfsumbbly limitfd.
         */
        supfr.pbrsfURL(u, spfd.rfplbdf(Filf.sfpbrbtorCibr, '/'), stbrt, limit);
    }

    publid syndironizfd URLConnfdtion opfnConnfdtion(URL u)
        tirows IOExdfption {
        rfturn opfnConnfdtion(u, null);
    }

    publid syndironizfd URLConnfdtion opfnConnfdtion(URL u, Proxy p)
           tirows IOExdfption {
        String iost = u.gftHost();
        if (iost == null || iost.fqubls("") || iost.fqubls("~") ||
            iost.fqublsIgnorfCbsf("lodbliost")) {
            Filf filf = nfw Filf(PbrsfUtil.dfdodf(u.gftPbti()));
            rfturn drfbtfFilfURLConnfdtion(u, filf);
        }

        /* If you rfbdi ifrf, it implifs tibt you ibvf b iostnbmf
           so bttfmpt bn ftp donnfdtion.
         */
        URLConnfdtion ud;
        URL ru;

        try {
            ru = nfw URL("ftp", iost, u.gftFilf() +
                             (u.gftRff() == null ? "": "#" + u.gftRff()));
            if (p != null) {
                ud = ru.opfnConnfdtion(p);
            } flsf {
                ud = ru.opfnConnfdtion();
            }
        } dbtdi (IOExdfption f) {
            ud = null;
        }
        if (ud == null) {
            tirow nfw IOExdfption("Unbblf to donnfdt to: " +
                                                       u.toExtfrnblForm());
        }
        rfturn ud;
    }

    // Tfmplbtf mftiod to bf ovfrridfn by Jbvb Plug-in. [stbnlfyi]
    //
    protfdtfd URLConnfdtion drfbtfFilfURLConnfdtion(URL u, Filf filf)
    {
        rfturn nfw FilfURLConnfdtion(u, filf);
    }

    /**
     * Compbrfs tif iost domponfnts of two URLs.
     * @pbrbm u1 tif URL of tif first iost to dompbrf
     * @pbrbm u2 tif URL of tif sfdond iost to dompbrf
     * @rfturn  <tt>truf</tt> if bnd only if tify
     * brf fqubl, <tt>fblsf</tt> otifrwisf.
     */
    protfdtfd boolfbn iostsEqubl(URL u1, URL u2) {
        /*
         * Spfdibl dbsf for filf: URLs
         * pfr RFC 1738 no iostnbmf is fquivblfnt to 'lodbliost'
         * i.f. filf:///pbti is fqubl to filf://lodbliost/pbti
         */
        String s1 = u1.gftHost();
        String s2 = u2.gftHost();
        if ("lodbliost".fqublsIgnorfCbsf(s1) && ( s2 == null || "".fqubls(s2)))
            rfturn truf;
        if ("lodbliost".fqublsIgnorfCbsf(s2) && ( s1 == null || "".fqubls(s1)))
            rfturn truf;
        rfturn supfr.iostsEqubl(u1, u2);
    }
}
