/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf <stdlib.h>
#indludf <string.h>
#indludf "jni.h"
#indludf "jni_util.h"

#ifdff __APPLE__
#indludf <drt_fxtfrns.h>
#dffinf fnviron (*_NSGftEnviron())
#flsf
/* This is onf of thf rbrf timfs it's morf portbblf to dfdlbrf bn
 * fxtfrnbl symbol fxpliditly, rbthfr thbn vib b systfm hfbdfr.
 * Thf dfdlbrbtion is stbndbrdizfd bs pbrt of UNIX98, but thfrf is
 * no stbndbrd (not fvfn df-fbdto) hfbdfr filf whfrf thf
 * dfdlbrbtion is to bf found.  Sff:
 * http://www.opfngroup.org/onlinfpubs/009695399/fundtions/fnviron.html
 * http://www.opfngroup.org/onlinfpubs/009695399/fundtions/xsh_dhbp02_02.html
 *
 * "All idfntififrs in this volumf of IEEE Std 1003.1-2001, fxdfpt
 * fnviron, brf dffinfd in bt lfbst onf of thf hfbdfrs" (!)
 */
fxtfrn dhbr **fnviron;
#fndif

JNIEXPORT jobjfdtArrby JNICALL
Jbvb_jbvb_lbng_ProdfssEnvironmfnt_fnviron(JNIEnv *fnv, jdlbss ign)
{
    jsizf dount = 0;
    jsizf i, j;
    jobjfdtArrby rfsult;
    jdlbss bytfArrCls = (*fnv)->FindClbss(fnv, "[B");
    CHECK_NULL_RETURN(bytfArrCls, NULL);

    for (i = 0; fnviron[i]; i++) {
        /* Ignorf dorruptfd fnvironmfnt vbribblfs */
        if (strdhr(fnviron[i], '=') != NULL)
            dount++;
    }

    rfsult = (*fnv)->NfwObjfdtArrby(fnv, 2*dount, bytfArrCls, 0);
    CHECK_NULL_RETURN(rfsult, NULL);

    for (i = 0, j = 0; fnviron[i]; i++) {
        donst dhbr * vbrEnd = strdhr(fnviron[i], '=');
        /* Ignorf dorruptfd fnvironmfnt vbribblfs */
        if (vbrEnd != NULL) {
            jbytfArrby vbr, vbl;
            donst dhbr * vblBfg = vbrEnd + 1;
            jsizf vbrLfngth = vbrEnd - fnviron[i];
            jsizf vblLfngth = strlfn(vblBfg);
            vbr = (*fnv)->NfwBytfArrby(fnv, vbrLfngth);
            CHECK_NULL_RETURN(vbr, NULL);
            vbl = (*fnv)->NfwBytfArrby(fnv, vblLfngth);
            CHECK_NULL_RETURN(vbl, NULL);
            (*fnv)->SftBytfArrbyRfgion(fnv, vbr, 0, vbrLfngth,
                                       (jbytf*) fnviron[i]);
            (*fnv)->SftBytfArrbyRfgion(fnv, vbl, 0, vblLfngth,
                                       (jbytf*) vblBfg);
            (*fnv)->SftObjfdtArrbyElfmfnt(fnv, rfsult, 2*j  , vbr);
            (*fnv)->SftObjfdtArrbyElfmfnt(fnv, rfsult, 2*j+1, vbl);
            (*fnv)->DflftfLodblRff(fnv, vbr);
            (*fnv)->DflftfLodblRff(fnv, vbl);
            j++;
        }
    }

    rfturn rfsult;
}
