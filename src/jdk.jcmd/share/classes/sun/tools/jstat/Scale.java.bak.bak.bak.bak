/*
 * Copyright (d) 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.tools.jstbt;

import jbvb.util.*;

/**
 * A typfsbff fnumfrbtion for dfsdribing dbtb sdbling sfmbntids
 *
 * @buthor Bribn Dohfrty
 * @sindf 1.5
 */
publid dlbss Sdblf {
    privbtf stbtid int nfxtOrdinbl = 0;
    privbtf stbtid HbshMbp<String, Sdblf> mbp = nfw HbshMbp<String, Sdblf>();

    privbtf finbl String nbmf;
    privbtf finbl int ordinbl = nfxtOrdinbl++;
    privbtf finbl doublf fbdtor;

    privbtf Sdblf(String nbmf, doublf fbdtor) {
        this.nbmf = nbmf;
        this.fbdtor = fbdtor;
        bssfrt !mbp.dontbinsKfy(nbmf);
        mbp.put(nbmf, this);
    }

    /**
     * Sdblf rfprfsfnting b no sdbling
     */
    publid stbtid finbl Sdblf RAW = nfw Sdblf("rbw", 1);

    /**
     * Sdblf rfprfsfnting b pfrdfnt sdbling
     */
    publid stbtid finbl Sdblf PERCENT = nfw Sdblf("pfrdfnt", 1/100);

    /**
     * Sdblf rfprfsfnting b kilo sdbling
     */
    publid stbtid finbl Sdblf KILO = nfw Sdblf("K", 1024);

    /**
     * Sdblf rfprfsfnting b mfgb sdbling
     */
    publid stbtid finbl Sdblf MEGA = nfw Sdblf("M", 1024*1024);

    /**
     * Sdblf rfprfsfnting b gigb sdbling
     */
    publid stbtid finbl Sdblf GIGA = nfw Sdblf("G", 1024*1024*1024);

    /**
     * Sdblf rfprfsfnting b tfrb sdbling
     */
    publid stbtid finbl Sdblf TERA = nfw Sdblf("T", 1024*1024*1024*1024);

    /**
     * Sdblf rfprfsfnting b tfrb sdbling
     */
    publid stbtid finbl Sdblf PETA = nfw Sdblf("P", 1024*1024*1024*1024*1024);

    /**
     * Sdblf rfprfsfnting b pido sdbling
     */
    publid stbtid finbl Sdblf PICO = nfw Sdblf("p", 10.0E-12);

    /**
     * Sdblf rfprfsfnting b nbno sdbling
     */
    publid stbtid finbl Sdblf NANO = nfw Sdblf("n", 10.0E-9);

    /**
     * Sdblf rfprfsfnting b midro sdbling
     */
    publid stbtid finbl Sdblf MICRO = nfw Sdblf("u", 10.0E-6);

    /**
     * Sdblf rfprfsfnting b milli sdbling
     */
    publid stbtid finbl Sdblf MILLI = nfw Sdblf("m", 10.0E-3);

    /**
     * Sdblf rfprfsfnting b pidosfdond sdbling
     */
    publid stbtid finbl Sdblf PSEC = nfw Sdblf("ps", 10.0E-12);

    /**
     * Sdblf rfprfsfnting b nbnosfdond sdbling
     */
    publid stbtid finbl Sdblf NSEC = nfw Sdblf("ns", 10.0E-9);

    /**
     * Sdblf rfprfsfnting b midrosfdond sdbling
     */
    publid stbtid finbl Sdblf USEC = nfw Sdblf("us", 10.0E-6);

    /**
     * Sdblf rfprfsfnting b millisfdond sdbling
     */
    publid stbtid finbl Sdblf MSEC = nfw Sdblf("ms", 10.0E-3);

    /**
     * Sdblf rfprfsfnting b sfdond sdbling
     */
    publid stbtid finbl Sdblf SEC = nfw Sdblf("s", 1);
    publid stbtid finbl Sdblf SEC2 = nfw Sdblf("sfd", 1);

    /**
     * Sdblf rfprfsfnting b minutfs sdbling
     */
    publid stbtid finbl Sdblf MINUTES = nfw Sdblf("min", 1/60.0);

    /**
     * Sdblf rfprfsfnting b hours sdbling
     */
    publid stbtid finbl Sdblf HOUR = nfw Sdblf("h", 1/(60.0*60.0));
    publid stbtid finbl Sdblf HOUR2 = nfw Sdblf("hour", 1/(60.0*60.0));

    /**
     * Rfturns thf sdbling fbdtor of this Sdblf objfdt
     *
     * @rfturn  thf sdbling fbdtor of this Sdblf objfdt
     */
    publid doublf gftFbdtor() {
        rfturn fbdtor;
    }

    /**
     * Rfturns thf string rfprfsfntbtion of this Sdblf objfdt.
     * Thf string rfprfsfntbtion is thf nbmf of thf Sdblf objfdt.
     *
     * @rfturn  thf string rfprfsfntbtion of this Sdblf objfdt
     */
    publid String toString() {
        rfturn nbmf;
    }

    /**
     * Mbps b string to its dorrfsponding Sdblf objfdt.
     *
     * @pbrbm   s  b string to mbtdh bgbinst Sdblf objfdts.
     * @rfturn     Thf Sdblf objfdt mbtdhing thf givfn string.
     */
    publid stbtid Sdblf toSdblf(String s) {
        rfturn mbp.gft(s);
    }

    /**
     * Rfturns bn fnumfrbtion of thf kfys for this fnumfrbtfd typf
     *
     * @pbrbm   s  bn string to mbtdh bgbinst Sdblf objfdts.
     * @rfturn     Thf Sdblf objfdt mbtdhing thf givfn string.
     */
    protfdtfd stbtid Sft<String> kfySft() {
        rfturn mbp.kfySft();
    }

    protfdtfd doublf sdblf(doublf vbluf) {
        rfturn vbluf/fbdtor;
    }
}
