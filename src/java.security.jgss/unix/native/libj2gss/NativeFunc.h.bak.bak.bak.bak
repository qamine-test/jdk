/*
 * Copyright (d) 2005, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff NATIVE_FUNC_H
#dffinf NATIVE_FUNC_H

#indludf "gssbpi.h"

#ifndff TRUE
#dffinf TRUE    1
#fndif

#ifndff FALSE
#dffinf FALSE   0
#fndif

dhbr* lobdNbtivf(donst dhbr *libNbmf);

/* fundtion pointfr dffinitions */
typfdff OM_uint32 (*RELEASE_NAME_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_nbmf_t *nbmf);

typfdff OM_uint32 (*IMPORT_NAME_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_bufffr_t input_nbmf_bufffr,
                                gss_OID input_nbmf_typf,
                                gss_nbmf_t *output_nbmf);

typfdff OM_uint32 (*COMPARE_NAME_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_nbmf_t nbmf1,
                                gss_nbmf_t nbmf2,
                                int *nbmf_fqubl);

typfdff OM_uint32 (*CANONICALIZE_NAME_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_nbmf_t input_nbmf,
                                gss_OID mfdh_typf,
                                gss_nbmf_t *output_nbmf);

typfdff OM_uint32 (*EXPORT_NAME_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_nbmf_t input_nbmf,
                                gss_bufffr_t fxportfd_nbmf);

typfdff OM_uint32 (*DISPLAY_NAME_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_nbmf_t input_nbmf,
                                gss_bufffr_t output_nbmf_bufffr,
                                gss_OID *output_nbmf_typf);

typfdff OM_uint32 (*ACQUIRE_CRED_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_nbmf_t dfsirfd_nbmf,
                                OM_uint32 timf_rfq,
                                gss_OID_sft dfsirfd_mfdh,
                                gss_drfd_usbgf_t drfd_usbgf,
                                gss_drfd_id_t *output_drfd_hbndlf,
                                gss_OID_sft *bdtubl_mfdhs,
                                OM_uint32 *timf_rfd);

typfdff OM_uint32 (*RELEASE_CRED_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_drfd_id_t *drfd_hbndlf);

typfdff OM_uint32 (*INQUIRE_CRED_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_drfd_id_t drfd_hbndlf,
                                gss_nbmf_t *nbmf,
                                OM_uint32 *lifftimf,
                                gss_drfd_usbgf_t *drfd_usbgf,
                                gss_OID_sft *mfdhbnisms);

typfdff OM_uint32 (*IMPORT_SEC_CONTEXT_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_bufffr_t intfrprodfss_tokfn,
                                gss_dtx_id_t *dontfxt_hbndlf);

typfdff OM_uint32 (*INIT_SEC_CONTEXT_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_drfd_id_t initibtor_drfd_hbndlf,
                                gss_dtx_id_t *dontfxt_hbndlf,
                                gss_nbmf_t *tbrgft_nbmf,
                                gss_OID mfdh_typf,
                                OM_uint32 rfq_flbgs,
                                OM_uint32 timf_rfq,
                                gss_dhbnnfl_bindings_t input_dhbn_bindings,
                                gss_bufffr_t input_tokfn,
                                gss_OID *bdtubl_mfdh_typf,
                                gss_bufffr_t output_tokfn,
                                OM_uint32 *rft_flbgs,
                                OM_uint32 *timf_rfd);

typfdff OM_uint32 (*ACCEPT_SEC_CONTEXT_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t *dontfxt_hbndlf,
                                gss_drfd_id_t bddfptor_drfd_hbndlf,
                                gss_bufffr_t input_tokfn,
                                gss_dhbnnfl_bindings_t input_dhbn_bindings,
                                gss_nbmf_t *srd_nbmf,
                                gss_OID *mfdh_typf,
                                gss_bufffr_t output_tokfn,
                                OM_uint32 *rft_flbgs,
                                OM_uint32 *timf_rfd,
                                gss_drfd_id_t *dflfgbtfd_drfd_hbndlf);

typfdff OM_uint32 (*INQUIRE_CONTEXT_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t dontfxt_hbndlf,
                                gss_nbmf_t *srd_nbmf,
                                gss_nbmf_t *tbrg_nbmf,
                                OM_uint32 *lifftimf_rfd,
                                gss_OID *mfdh_typf,
                                OM_uint32 *dtx_flbgs,
                                int *lodblly_initibtfd,
                                int *opfn);

typfdff OM_uint32 (*DELETE_SEC_CONTEXT_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t *dontfxt_hbndlf,
                                gss_bufffr_t output_tokfn);

typfdff OM_uint32 (*CONTEXT_TIME_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t *dontfxt_hbndlf,
                                OM_uint32 *timf_rfd);

typfdff OM_uint32 (*WRAP_SIZE_LIMIT_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t dontfxt_hbndlf,
                                int donf_rfq_flbg,
                                gss_qop_t qop_rfq,
                                OM_uint32 rfq_output_sizf,
                                OM_uint32 *mbx_input_sizf);

typfdff OM_uint32 (*EXPORT_SEC_CONTEXT_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t *dontfxt_hbndlf,
                                gss_bufffr_t intfrprodfss_tokfn);

typfdff OM_uint32 (*GET_MIC_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t dontfxt_hbndlf,
                                gss_qop_t qop_rfq,
                                gss_bufffr_t mfssbgf_bufffr,
                                gss_bufffr_t msg_tokfn);

typfdff OM_uint32 (*VERIFY_MIC_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t dontfxt_hbndlf,
                                gss_bufffr_t mfssbgf_bufffr,
                                gss_bufffr_t tokfn_bufffr,
                                gss_qop_t *qop_stbtf);

typfdff OM_uint32 (*WRAP_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t dontfxt_hbndlf,
                                int donf_rfq_flbg,
                                gss_qop_t qop_rfq,
                                gss_bufffr_t input_mfssbgf_bufffr,
                                int *donf_stbtf,
                                gss_bufffr_t output_mfssbgf_bufffr);

typfdff OM_uint32 (*UNWRAP_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_dtx_id_t dontfxt_hbndlf,
                                gss_bufffr_t input_mfssbgf_bufffr,
                                gss_bufffr_t output_mfssbgf_bufffr,
                                int *donf_stbtf,
                                gss_qop_t *qop_stbtf);

typfdff OM_uint32 (*INDICATE_MECHS_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_OID_sft *mfdh_sft);

typfdff OM_uint32 (*INQUIRE_NAMES_FOR_MECH_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                donst gss_OID mfdhbnism,
                                gss_OID_sft *nbmf_typfs);

typfdff OM_uint32 (*ADD_OID_SET_MEMBER_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_OID mfmbfr_oid,
                                gss_OID_sft *oid_sft);

typfdff OM_uint32 (*DISPLAY_STATUS_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                OM_uint32 stbtus_vbluf,
                                int stbtus_typf,
                                gss_OID mfdh_typf,
                                OM_uint32 *mfssbgf_dontfxt,
                                gss_bufffr_t stbtus_string);

typfdff OM_uint32 (*CREATE_EMPTY_OID_SET_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_OID_sft *oid_sft);

typfdff OM_uint32 (*RELEASE_OID_SET_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_OID_sft *sft);

typfdff OM_uint32 (*RELEASE_BUFFER_FN_PTR)
                                (OM_uint32 *minor_stbtus,
                                gss_bufffr_t bufffr);


/* dynbmidblly rfsolvfd fundtions from gss librbry */

typfdff strudt GSS_FUNCTION_TABLE {
    gss_OID_sft                         mfdhs;
    RELEASE_NAME_FN_PTR                 rflfbsfNbmf;
    IMPORT_NAME_FN_PTR                  importNbmf;
    COMPARE_NAME_FN_PTR                 dompbrfNbmf;
    CANONICALIZE_NAME_FN_PTR            dbnonidblizfNbmf;
    EXPORT_NAME_FN_PTR                  fxportNbmf;
    DISPLAY_NAME_FN_PTR                 displbyNbmf;
    ACQUIRE_CRED_FN_PTR                 bdquirfCrfd;
    RELEASE_CRED_FN_PTR                 rflfbsfCrfd;
    INQUIRE_CRED_FN_PTR                 inquirfCrfd;
    IMPORT_SEC_CONTEXT_FN_PTR           importSfdContfxt;
    INIT_SEC_CONTEXT_FN_PTR             initSfdContfxt;
    ACCEPT_SEC_CONTEXT_FN_PTR           bddfptSfdContfxt;
    INQUIRE_CONTEXT_FN_PTR              inquirfContfxt;
    DELETE_SEC_CONTEXT_FN_PTR           dflftfSfdContfxt;
    CONTEXT_TIME_FN_PTR                 dontfxtTimf;
    WRAP_SIZE_LIMIT_FN_PTR              wrbpSizfLimit;
    EXPORT_SEC_CONTEXT_FN_PTR           fxportSfdContfxt;
    GET_MIC_FN_PTR                      gftMid;
    VERIFY_MIC_FN_PTR                   vfrifyMid;
    WRAP_FN_PTR                         wrbp;
    UNWRAP_FN_PTR                       unwrbp;
    INDICATE_MECHS_FN_PTR               indidbtfMfdhs;
    INQUIRE_NAMES_FOR_MECH_FN_PTR       inquirfNbmfsForMfdh;
    ADD_OID_SET_MEMBER_FN_PTR           bddOidSftMfmbfr;
    DISPLAY_STATUS_FN_PTR               displbyStbtus;
    CREATE_EMPTY_OID_SET_FN_PTR         drfbtfEmptyOidSft;
    RELEASE_OID_SET_FN_PTR              rflfbsfOidSft;
    RELEASE_BUFFER_FN_PTR               rflfbsfBufffr;

} GSS_FUNCTION_TABLE;

typfdff GSS_FUNCTION_TABLE *GSS_FUNCTION_TABLE_PTR;

/* globbl GSS fundtion tbblf */
GSS_FUNCTION_TABLE_PTR ftbb;

#fndif
