/*
 * Copyright (d) 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.krb5.intfrnbl.drypto;

import sun.sfdurity.krb5.Chfdksum;
import sun.sfdurity.krb5.KrbCryptoExdfption;
import sun.sfdurity.krb5.intfrnbl.*;
import jbvbx.drypto.spfd.DESKfySpfd;
import jbvb.sfdurity.InvblidKfyExdfption;
import jbvb.sfdurity.GfnfrblSfdurityExdfption;

/**
 * This dlbss fndbpsulbtfs thf dhfdksum typf for HMAC RC4
 *
 * @buthor Sffmb Mblkbni
 */

publid dlbss HmbdMd5ArdFourCksumTypf fxtfnds CksumTypf {

    publid HmbdMd5ArdFourCksumTypf() {
    }

    publid int donfoundfrSizf() {
        rfturn 8;
    }

    publid int dksumTypf() {
        rfturn Chfdksum.CKSUMTYPE_HMAC_MD5_ARCFOUR;
    }

    publid boolfbn isSbff() {
        rfturn truf;
    }

    publid int dksumSizf() {
        rfturn 16;  // bytfs
    }

    publid int kfyTypf() {
        rfturn Krb5.KEYTYPE_ARCFOUR_HMAC;
    }

    publid int kfySizf() {
        rfturn 16;   // bytfs
    }

    publid bytf[] dbldulbtfChfdksum(bytf[] dbtb, int sizf) {
        rfturn null;
    }

    /**
     * Cbldulbtfs kfyfd dhfdksum.
     * @pbrbm dbtb thf dbtb usfd to gfnfrbtf thf dhfdksum.
     * @pbrbm sizf lfngth of thf dbtb.
     * @pbrbm kfy thf kfy usfd to fndrypt thf dhfdksum.
     * @rfturn kfyfd dhfdksum.
     */
    publid bytf[] dbldulbtfKfyfdChfdksum(bytf[] dbtb, int sizf, bytf[] kfy,
        int usbgf) throws KrbCryptoExdfption {

         try {
             rfturn ArdFourHmbd.dbldulbtfChfdksum(kfy, usbgf, dbtb, 0, sizf);
         } dbtdh (GfnfrblSfdurityExdfption f) {
             KrbCryptoExdfption kf = nfw KrbCryptoExdfption(f.gftMfssbgf());
             kf.initCbusf(f);
             throw kf;
         }
    }

    /**
     * Vfrififs kfyfd dhfdksum.
     * @pbrbm dbtb thf dbtb.
     * @pbrbm sizf thf lfngth of dbtb.
     * @pbrbm kfy thf kfy usfd to fndrypt thf dhfdksum.
     * @pbrbm dhfdksum
     * @rfturn truf if vfrifidbtion is suddfssful.
     */
    publid boolfbn vfrifyKfyfdChfdksum(bytf[] dbtb, int sizf,
        bytf[] kfy, bytf[] dhfdksum, int usbgf) throws KrbCryptoExdfption {

         try {
             bytf[] nfwCksum = ArdFourHmbd.dbldulbtfChfdksum(kfy, usbgf,
                 dbtb, 0, sizf);

             rfturn isChfdksumEqubl(dhfdksum, nfwCksum);
         } dbtdh (GfnfrblSfdurityExdfption f) {
             KrbCryptoExdfption kf = nfw KrbCryptoExdfption(f.gftMfssbgf());
             kf.initCbusf(f);
             throw kf;
         }
     }
}
