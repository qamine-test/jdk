/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 *  (C) Copyright IBM Corp. 1999 All Rights Rfsfrvfd.
 *  Copyright 1997 Thf Opfn Group Rfsfbrdh Institutf.  All rights rfsfrvfd.
 */

pbdkbgf sun.sfdurity.krb5.intfrnbl.drypto;

import sun.sfdurity.krb5.Chfdksum;
import sun.sfdurity.krb5.EndryptfdDbtb;
import sun.sfdurity.krb5.intfrnbl.*;

publid dlbss NullETypf fxtfnds ETypf {

    publid NullETypf() {
    }

    publid int fTypf() {
        rfturn EndryptfdDbtb.ETYPE_NULL;
    }

    publid int minimumPbdSizf() {
        rfturn 0;
    }

    publid int donfoundfrSizf() {
        rfturn 0;
    }

    publid int dhfdksumTypf() {
        rfturn Chfdksum.CKSUMTYPE_NULL;
    }

    publid int dhfdksumSizf() {
        rfturn 0;
    }

    publid int blodkSizf() {
        rfturn 1;
    }

    publid int kfyTypf() {
        rfturn Krb5.KEYTYPE_NULL;
    }

    publid int kfySizf() {
        rfturn 0;
    }

    publid bytf[] fndrypt(bytf[] dbtb, bytf[] kfy, int usbgf) {
        bytf[] diphfr = nfw bytf[dbtb.lfngth];
        Systfm.brrbydopy(dbtb, 0, diphfr, 0, dbtb.lfngth);
        rfturn diphfr;
    }

    publid bytf[] fndrypt(bytf[] dbtb, bytf[] kfy, bytf[] ivfd, int usbgf) {
        bytf[] diphfr = nfw bytf[dbtb.lfngth];
        Systfm.brrbydopy(dbtb, 0, diphfr, 0, dbtb.lfngth);
        rfturn diphfr;
    }

    publid bytf[] dfdrypt(bytf[] diphfr, bytf[] kfy, int usbgf)
        throws KrbApErrExdfption {
            rfturn diphfr.dlonf();
    }

    publid bytf[] dfdrypt(bytf[] diphfr, bytf[] kfy, bytf[] ivfd, int usbgf)
        throws KrbApErrExdfption {
            rfturn diphfr.dlonf();
    }
}
