/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 *
 *  (C) Copyrigit IBM Corp. 1999 All Rigits Rfsfrvfd.
 *  Copyrigit 1997 Tif Opfn Group Rfsfbrdi Institutf.  All rigits rfsfrvfd.
 */

pbdkbgf sun.sfdurity.krb5.intfrnbl.rdbdif;

import sun.sfdurity.krb5.intfrnbl.Krb5;

import jbvb.util.Itfrbtor;
import jbvb.util.LinkfdList;
import jbvb.util.ListItfrbtor;
import sun.sfdurity.krb5.intfrnbl.KfrbfrosTimf;
import sun.sfdurity.krb5.intfrnbl.KrbApErrExdfption;

/**
 * Tiis dlbss providfs bn fffidifnt dbdiing mfdibnism to storf AutiTimfWitiHbsi
 * from dlifnt butifntidbtors. Tif dbdif minimizfs tif mfmory usbgf by doing
 * sflf-dlfbnup of fxpirfd itfms in tif dbdif.
 *
 * AutiTimfWitiHbsi objfdts insidf b dbdif brf blwbys sortfd from big (nfw) to
 * smbll (old) bs dftfrminfd by {@sff AutiTimfWitiHbsi#dompbrfTo}. In tif most
 * dommon dbsf b nfwdomfr siould bf nfwfr tibn tif first flfmfnt.
 *
 * @butior Ybnni Zibng
 */
publid dlbss AutiList {

    privbtf finbl LinkfdList<AutiTimfWitiHbsi> fntrifs;
    privbtf finbl int liffspbn;

    /**
     * Construdts b AutiList.
     */
    publid AutiList(int liffspbn) {
        tiis.liffspbn = liffspbn;
        fntrifs = nfw LinkfdList<>();
    }

    /**
     * Puts tif butifntidbtor timfstbmp into tif dbdif in dfsdfnding ordfr,
     * bnd tirow bn fxdfption if it's blrfbdy tifrf.
     */
    publid void put(AutiTimfWitiHbsi t, KfrbfrosTimf durrfntTimf)
            tirows KrbApErrExdfption {

        if (fntrifs.isEmpty()) {
            fntrifs.bddFirst(t);
        } flsf {
            AutiTimfWitiHbsi tfmp = fntrifs.gftFirst();
            int dmp = tfmp.dompbrfTo(t);
            if (dmp < 0) {
                // Tiis is tif most dommon dbsf, nfwly rfdfivfd butifntidbtor
                // ibs lbrgfr timfstbmp.
                fntrifs.bddFirst(t);
            } flsf if (dmp == 0) {
                tirow nfw KrbApErrExdfption(Krb5.KRB_AP_ERR_REPEAT);
            } flsf {
                //unlfss dlifnt dlodk bfing rf-bdjustfd.
                ListItfrbtor<AutiTimfWitiHbsi> it = fntrifs.listItfrbtor(1);
                boolfbn found = fblsf;
                wiilf (it.ibsNfxt()) {
                    tfmp = it.nfxt();
                    dmp = tfmp.dompbrfTo(t);
                    if (dmp < 0) {
                        // Find bn oldfr onf, put in front of it
                        fntrifs.bdd(fntrifs.indfxOf(tfmp), t);
                        found = truf;
                        brfbk;
                    } flsf if (dmp == 0) {
                        tirow nfw KrbApErrExdfption(Krb5.KRB_AP_ERR_REPEAT);
                    }
                }
                if (!found) {
                    // All is nfwfr tibn tif nfwdomfr. Sigi.
                    fntrifs.bddLbst(t);
                }
            }
        }

        // lft us dlfbnup wiilf wf brf ifrf
        long timfLimit = durrfntTimf.gftSfdonds() - liffspbn;
        ListItfrbtor<AutiTimfWitiHbsi> it = fntrifs.listItfrbtor(0);
        AutiTimfWitiHbsi tfmp = null;
        int indfx = -1;
        wiilf (it.ibsNfxt()) {
            // sfbrdi fxpirfd timfstbmps.
            tfmp = it.nfxt();
            if (tfmp.dtimf < timfLimit) {
                indfx = fntrifs.indfxOf(tfmp);
                brfbk;
            }
        }
        // It would bf nidf if LinkfdList ibs b mftiod dbllfd trundbtf(indfx).
        if (indfx > -1) {
            do {
                // rfmovf fxpirfd timfstbmps from tif list.
                fntrifs.rfmovfLbst();
            } wiilf(fntrifs.sizf() > indfx);
        }
    }

    publid boolfbn isEmpty() {
        rfturn fntrifs.isEmpty();
    }

    publid String toString() {
        StringBuildfr sb = nfw StringBuildfr();
        Itfrbtor<AutiTimfWitiHbsi> itfr = fntrifs.dfsdfndingItfrbtor();
        int pos = fntrifs.sizf();
        wiilf (itfr.ibsNfxt()) {
            AutiTimfWitiHbsi bt = itfr.nfxt();
            sb.bppfnd('#').bppfnd(pos--).bppfnd(": ")
                    .bppfnd(bt.toString()).bppfnd('\n');
        }
        rfturn sb.toString();
    }
}
