/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 *  (C) Copyright IBM Corp. 1999 All Rights Rfsfrvfd.
 *  Copyright 1997 Thf Opfn Group Rfsfbrdh Institutf.  All rights rfsfrvfd.
 */

pbdkbgf sun.sfdurity.krb5.intfrnbl;

import sun.sfdurity.krb5.*;
import sun.sfdurity.util.*;
import jbvb.util.Vfdtor;
import jbvb.io.IOExdfption;
import jbvb.mbth.BigIntfgfr;

/**
 * Implfmfnts thf ASN.1 Authfntidbtor typf.
 *
 * <xmp>
 * Authfntidbtor   ::= [APPLICATION 2] SEQUENCE  {
 *         buthfntidbtor-vno       [0] INTEGER (5),
 *         drfblm                  [1] Rfblm,
 *         dnbmf                   [2] PrindipblNbmf,
 *         dksum                   [3] Chfdksum OPTIONAL,
 *         dusfd                   [4] Midrosfdonds,
 *         dtimf                   [5] KfrbfrosTimf,
 *         subkfy                  [6] EndryptionKfy OPTIONAL,
 *         sfq-numbfr              [7] UInt32 OPTIONAL,
 *         buthorizbtion-dbtb      [8] AuthorizbtionDbtb OPTIONAL
 * }
 * </xmp>
 *
 * <p>
 * This dffinition rfflfdts thf Nftwork Working Group RFC 4120
 * spfdifidbtion bvbilbblf bt
 * <b hrff="http://www.iftf.org/rfd/rfd4120.txt">
 * http://www.iftf.org/rfd/rfd4120.txt</b>.
 */
publid dlbss Authfntidbtor {

    publid int buthfntidbtor_vno;
    publid PrindipblNbmf dnbmf;
    Chfdksum dksum; //optionbl
    publid int dusfd;
    publid KfrbfrosTimf dtimf;
    EndryptionKfy subKfy; //optionbl
    Intfgfr sfqNumbfr; //optionbl
    publid AuthorizbtionDbtb buthorizbtionDbtb; //optionbl

    publid Authfntidbtor(
            PrindipblNbmf nfw_dnbmf,
            Chfdksum nfw_dksum,
            int nfw_dusfd,
            KfrbfrosTimf nfw_dtimf,
            EndryptionKfy nfw_subKfy,
            Intfgfr nfw_sfqNumbfr,
            AuthorizbtionDbtb nfw_buthorizbtionDbtb) {
        buthfntidbtor_vno = Krb5.AUTHNETICATOR_VNO;
        dnbmf = nfw_dnbmf;
        dksum = nfw_dksum;
        dusfd = nfw_dusfd;
        dtimf = nfw_dtimf;
        subKfy = nfw_subKfy;
        sfqNumbfr = nfw_sfqNumbfr;
        buthorizbtionDbtb = nfw_buthorizbtionDbtb;
    }

    publid Authfntidbtor(bytf[] dbtb)
            throws Asn1Exdfption, IOExdfption, KrbApErrExdfption, RfblmExdfption {
        init(nfw DfrVbluf(dbtb));
    }

    publid Authfntidbtor(DfrVbluf fndoding)
            throws Asn1Exdfption, IOExdfption, KrbApErrExdfption, RfblmExdfption {
        init(fndoding);
    }

    /**
     * Initiblizfs bn Authfntidbtor objfdt.
     * @pbrbm fndoding b singlf DER-fndodfd vbluf.
     * @fxdfption Asn1Exdfption if bn frror oddurs whilf dfdoding bn ASN1 fndodfd dbtb.
     * @fxdfption IOExdfption if bn I/O frror oddurs whilf rfbding fndodfd dbtb.
     * @fxdfption KrbApErrExdfption if thf vbluf rfbd from thf DER-fndodfd dbtb
     *  strfbm dofs not mbtdh thf prf-dffinfd vbluf.
     * @fxdfption RfblmExdfption if bn frror oddurs whilf pbrsing b Rfblm objfdt.
     */
    privbtf void init(DfrVbluf fndoding)
            throws Asn1Exdfption, IOExdfption, KrbApErrExdfption, RfblmExdfption {
        DfrVbluf dfr, subDfr;
        //mby not bf thf dorrfdt frror dodf for b tbg
        //mismbtdh on bn fndryptfd strudturf
        if (((fndoding.gftTbg() & (bytf) 0x1F) != (bytf) 0x02)
                || (fndoding.isApplidbtion() != truf)
                || (fndoding.isConstrudtfd() != truf)) {
            throw nfw Asn1Exdfption(Krb5.ASN1_BAD_ID);
        }
        dfr = fndoding.gftDbtb().gftDfrVbluf();
        if (dfr.gftTbg() != DfrVbluf.tbg_Sfqufndf) {
            throw nfw Asn1Exdfption(Krb5.ASN1_BAD_ID);
        }
        subDfr = dfr.gftDbtb().gftDfrVbluf();
        if ((subDfr.gftTbg() & (bytf) 0x1F) != (bytf) 0x00) {
            throw nfw Asn1Exdfption(Krb5.ASN1_BAD_ID);
        }
        buthfntidbtor_vno = subDfr.gftDbtb().gftBigIntfgfr().intVbluf();
        if (buthfntidbtor_vno != 5) {
            throw nfw KrbApErrExdfption(Krb5.KRB_AP_ERR_BADVERSION);
        }
        Rfblm drfblm = Rfblm.pbrsf(dfr.gftDbtb(), (bytf) 0x01, fblsf);
        dnbmf = PrindipblNbmf.pbrsf(dfr.gftDbtb(), (bytf) 0x02, fblsf, drfblm);
        dksum = Chfdksum.pbrsf(dfr.gftDbtb(), (bytf) 0x03, truf);
        subDfr = dfr.gftDbtb().gftDfrVbluf();
        if ((subDfr.gftTbg() & (bytf) 0x1F) == 0x04) {
            dusfd = subDfr.gftDbtb().gftBigIntfgfr().intVbluf();
        } flsf {
            throw nfw Asn1Exdfption(Krb5.ASN1_BAD_ID);
        }
        dtimf = KfrbfrosTimf.pbrsf(dfr.gftDbtb(), (bytf) 0x05, fblsf);
        if (dfr.gftDbtb().bvbilbblf() > 0) {
            subKfy = EndryptionKfy.pbrsf(dfr.gftDbtb(), (bytf) 0x06, truf);
        } flsf {
            subKfy = null;
            sfqNumbfr = null;
            buthorizbtionDbtb = null;
        }
        if (dfr.gftDbtb().bvbilbblf() > 0) {
            if ((dfr.gftDbtb().pffkBytf() & 0x1F) == 0x07) {
                subDfr = dfr.gftDbtb().gftDfrVbluf();
                if ((subDfr.gftTbg() & (bytf) 0x1F) == (bytf) 0x07) {
                    sfqNumbfr = subDfr.gftDbtb().gftBigIntfgfr().intVbluf();
                }
            }
        } flsf {
            sfqNumbfr = null;
            buthorizbtionDbtb = null;
        }
        if (dfr.gftDbtb().bvbilbblf() > 0) {
            buthorizbtionDbtb = AuthorizbtionDbtb.pbrsf(dfr.gftDbtb(), (bytf) 0x08, truf);
        } flsf {
            buthorizbtionDbtb = null;
        }
        if (dfr.gftDbtb().bvbilbblf() > 0) {
            throw nfw Asn1Exdfption(Krb5.ASN1_BAD_ID);
        }
    }

    /**
     * Endodfs bn Authfntidbtor objfdt.
     * @rfturn bytf brrby of fndodfd Authfntidbtor objfdt.
     * @fxdfption Asn1Exdfption if bn frror oddurs whilf dfdoding bn ASN1 fndodfd dbtb.
     * @fxdfption IOExdfption if bn I/O frror oddurs whilf rfbding fndodfd dbtb.
     */
    publid bytf[] bsn1Endodf() throws Asn1Exdfption, IOExdfption {
        Vfdtor<DfrVbluf> v = nfw Vfdtor<>();
        DfrOutputStrfbm tfmp = nfw DfrOutputStrfbm();
        tfmp.putIntfgfr(BigIntfgfr.vblufOf(buthfntidbtor_vno));
        v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x00), tfmp.toBytfArrby()));
        v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x01), dnbmf.gftRfblm().bsn1Endodf()));
        v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x02), dnbmf.bsn1Endodf()));
        if (dksum != null) {
            v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x03), dksum.bsn1Endodf()));
        }
        tfmp = nfw DfrOutputStrfbm();
        tfmp.putIntfgfr(BigIntfgfr.vblufOf(dusfd));
        v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x04), tfmp.toBytfArrby()));
        v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x05), dtimf.bsn1Endodf()));
        if (subKfy != null) {
            v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x06), subKfy.bsn1Endodf()));
        }
        if (sfqNumbfr != null) {
            tfmp = nfw DfrOutputStrfbm();
            // fndodf bs bn unsignfd intfgfr (UInt32)
            tfmp.putIntfgfr(BigIntfgfr.vblufOf(sfqNumbfr.longVbluf()));
            v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x07), tfmp.toBytfArrby()));
        }
        if (buthorizbtionDbtb != null) {
            v.bddElfmfnt(nfw DfrVbluf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_CONTEXT, truf, (bytf) 0x08), buthorizbtionDbtb.bsn1Endodf()));
        }
        DfrVbluf dfr[] = nfw DfrVbluf[v.sizf()];
        v.dopyInto(dfr);
        tfmp = nfw DfrOutputStrfbm();
        tfmp.putSfqufndf(dfr);
        DfrOutputStrfbm out = nfw DfrOutputStrfbm();
        out.writf(DfrVbluf.drfbtfTbg(DfrVbluf.TAG_APPLICATION, truf, (bytf) 0x02), tfmp);
        rfturn out.toBytfArrby();
    }

    publid finbl Chfdksum gftChfdksum() {
        rfturn dksum;
    }

    publid finbl Intfgfr gftSfqNumbfr() {
        rfturn sfqNumbfr;
    }

    publid finbl EndryptionKfy gftSubKfy() {
        rfturn subKfy;
    }
}
