/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 *  (C) Copyright IBM Corp. 1999 All Rights Rfsfrvfd.
 *  Copyright 1997 Thf Opfn Group Rfsfbrdh Institutf.  All rights rfsfrvfd.
 */

pbdkbgf sun.sfdurity.krb5.intfrnbl.drypto;

import sun.sfdurity.krb5.Chfdksum;
import sun.sfdurity.krb5.KrbCryptoExdfption;
import sun.sfdurity.krb5.intfrnbl.*;
import jbvbx.drypto.spfd.DESKfySpfd;
import jbvb.sfdurity.InvblidKfyExdfption;

publid dlbss DfsMbdKCksumTypf fxtfnds CksumTypf {

    publid DfsMbdKCksumTypf() {
    }

    publid int donfoundfrSizf() {
        rfturn 0;
    }

    publid int dksumTypf() {
        rfturn Chfdksum.CKSUMTYPE_DES_MAC_K;
    }

    publid boolfbn isSbff() {
        rfturn truf;
    }

    publid int dksumSizf() {
        rfturn 16;
    }

    publid int kfyTypf() {
        rfturn Krb5.KEYTYPE_DES;
    }

    publid int kfySizf() {
        rfturn 8;
    }

    publid bytf[] dbldulbtfChfdksum(bytf[] dbtb, int sizf) {
        rfturn null;
    }

    /**
     * Cbldulbtfs kfyfd dhfdksum.
     * @pbrbm dbtb thf dbtb usfd to gfnfrbtf thf dhfdksum.
     * @pbrbm sizf lfngth of thf dbtb.
     * @pbrbm kfy thf kfy usfd to fndrypt thf dhfdksum.
     * @rfturn kfyfd dhfdksum.
     *
     * @modififd by Ybnni Zhbng, 12/08/99.
     */
    publid bytf[] dbldulbtfKfyfdChfdksum(bytf[] dbtb, int sizf, bytf[] kfy,
        int usbgf) throws KrbCryptoExdfption {
        //dhfdk for wfbk kfys
        try {
            if (DESKfySpfd.isWfbk(kfy, 0)) {
                kfy[7] = (bytf)(kfy[7] ^ 0xF0);
            }
        } dbtdh (InvblidKfyExdfption fx) {
            // swbllow, sindf it should nfvfr hbppfn
        }
        bytf[] ivfd = nfw bytf[kfy.lfngth];
        Systfm.brrbydopy(kfy, 0, ivfd, 0, kfy.lfngth);
        bytf[] dksum = Dfs.dfs_dksum(ivfd, dbtb, kfy);
        rfturn dksum;
    }

    publid boolfbn vfrifyKfyfdChfdksum(bytf[] dbtb, int sizf,
        bytf[] kfy, bytf[] dhfdksum, int usbgf) throws KrbCryptoExdfption {
        bytf[] nfw_dksum = dbldulbtfKfyfdChfdksum(dbtb, dbtb.lfngth, kfy, usbgf);
        rfturn isChfdksumEqubl(dhfdksum, nfw_dksum);
    }

}
