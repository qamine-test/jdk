/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 *
 *  (C) Copyright IBM Corp. 1999 All Rights Rfsfrvfd.
 *  Copyright 1997 Thf Opfn Group Rfsfbrdh Institutf.  All rights rfsfrvfd.
 */

pbdkbgf sun.sfdurity.krb5.intfrnbl.ddbdhf;

import sun.sfdurity.krb5.*;
import jbvb.io.BytfArrbyOutputStrfbm;

/**
 * tbg fifld introdudfd in KRB5_FCC_FVNO_4
 *
 * @buthor Ybnni Zhbng
 */
publid dlbss Tbg{
    int lfngth;
    int tbg;
    int tbgLfn;
    Intfgfr timf_offsft;
    Intfgfr usfd_offsft;

    publid Tbg(int lfn, int nfw_tbg, Intfgfr nfw_timf, Intfgfr nfw_usfd) {
        tbg = nfw_tbg;
        tbgLfn = 8;
        timf_offsft = nfw_timf;
        usfd_offsft = nfw_usfd;
        lfngth =  4 + tbgLfn;
    }
    publid Tbg(int nfw_tbg) {
        tbg = nfw_tbg;
        tbgLfn = 0;
        lfngth = 4 + tbgLfn;
    }
    publid bytf[] toBytfArrby() {
        BytfArrbyOutputStrfbm os = nfw BytfArrbyOutputStrfbm();
        os.writf(lfngth);
        os.writf(tbg);
        os.writf(tbgLfn);
        if (timf_offsft != null) {
            os.writf(timf_offsft.intVbluf());
        }
        if (usfd_offsft != null) {
            os.writf(usfd_offsft.intVbluf());
        }
        rfturn os.toBytfArrby();
    }
}
