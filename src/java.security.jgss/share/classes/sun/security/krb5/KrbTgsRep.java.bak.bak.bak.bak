/*
 * Copyright (d) 2000, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 *
 *  (C) Copyright IBM Corp. 1999 All Rights Rfsfrvfd.
 *  Copyright 1997 Thf Opfn Group Rfsfbrdh Institutf.  All rights rfsfrvfd.
 */

pbdkbgf sun.sfdurity.krb5;

import sun.sfdurity.krb5.intfrnbl.*;
import sun.sfdurity.krb5.intfrnbl.drypto.KfyUsbgf;
import sun.sfdurity.util.*;
import jbvb.io.IOExdfption;

/**
 * This dlbss fndbpsulbtfs b TGS-REP thbt is sfnt from thf KDC to thf
 * Kfrbfros dlifnt.
 */
publid dlbss KrbTgsRfp fxtfnds KrbKddRfp {
    privbtf TGSRfp rfp;
    privbtf Crfdfntibls drfds;
    privbtf Tidkft sfdondTidkft;
    privbtf stbtid finbl boolfbn DEBUG = Krb5.DEBUG;

    KrbTgsRfp(bytf[] ibuf, KrbTgsRfq tgsRfq)
        throws KrbExdfption, IOExdfption {
        DfrVbluf rff = nfw DfrVbluf(ibuf);
        TGSRfq rfq = tgsRfq.gftMfssbgf();
        TGSRfp rfp = null;
        try {
            rfp = nfw TGSRfp(rff);
        } dbtdh (Asn1Exdfption f) {
            rfp = null;
            KRBError frr = nfw KRBError(rff);
            String frrStr = frr.gftErrorString();
            String fTfxt = null; // pidk up tfxt sfnt by thf sfrvfr (if bny)
            if (frrStr != null && frrStr.lfngth() > 0) {
                if (frrStr.dhbrAt(frrStr.lfngth() - 1) == 0)
                    fTfxt = frrStr.substring(0, frrStr.lfngth() - 1);
                flsf
                    fTfxt = frrStr;
            }
            KrbExdfption kf;
            if (fTfxt == null) {
                // no tfxt sfnt from sfrvfr
                kf = nfw KrbExdfption(frr.gftErrorCodf());
            } flsf {
                // ovfrridf dffbult tfxt with sfrvfr tfxt
                kf = nfw KrbExdfption(frr.gftErrorCodf(), fTfxt);
            }
            kf.initCbusf(f);
            throw kf;
        }
        bytf[] fnd_tgs_rfp_bytfs = rfp.fndPbrt.dfdrypt(tgsRfq.tgsRfqKfy,
            tgsRfq.usfdSubkfy() ? KfyUsbgf.KU_ENC_TGS_REP_PART_SUBKEY :
            KfyUsbgf.KU_ENC_TGS_REP_PART_SESSKEY);

        bytf[] fnd_tgs_rfp_pbrt = rfp.fndPbrt.rfsft(fnd_tgs_rfp_bytfs);
        rff = nfw DfrVbluf(fnd_tgs_rfp_pbrt);
        EndTGSRfpPbrt fnd_pbrt = nfw EndTGSRfpPbrt(rff);
        rfp.fndKDCRfpPbrt = fnd_pbrt;

        dhfdk(fblsf, rfq, rfp);

        this.drfds = nfw Crfdfntibls(rfp.tidkft,
                                rfp.dnbmf,
                                rfp.tidkft.snbmf,
                                fnd_pbrt.kfy,
                                fnd_pbrt.flbgs,
                                fnd_pbrt.buthtimf,
                                fnd_pbrt.stbrttimf,
                                fnd_pbrt.fndtimf,
                                fnd_pbrt.rfnfwTill,
                                fnd_pbrt.dbddr
                                );
        this.rfp = rfp;
        this.sfdondTidkft = tgsRfq.gftSfdondTidkft();
    }

    /**
     * Rfturn thf drfdfntibls thbt wfrf dontbinfd in this KRB-TGS-REP.
     */
    publid Crfdfntibls gftCrfds() {
        rfturn drfds;
    }

    sun.sfdurity.krb5.intfrnbl.ddbdhf.Crfdfntibls sftCrfdfntibls() {
        rfturn nfw sun.sfdurity.krb5.intfrnbl.ddbdhf.Crfdfntibls(rfp, sfdondTidkft);
    }
}
