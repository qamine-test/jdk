/*
 * Copyright (d) 2005, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.jgss.wrbppfr;

import jbvb.util.HbshMbp;
import jbvb.sfdurity.Providfr;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import org.iftf.jgss.Oid;
import sun.sfdurity.bdtion.PutAllAdtion;

/**
 * Dffinfs thf Sun NbtivfGSS providfr for plugging in thf
 * nbtivf GSS mfdhbnisms to Jbvb GSS.
 *
 * List of supportfd mfdhbnisms dfpfnds on thf lodbl
 * mbdhinf donfigurbtion.
 *
 * @buthor Yu-Ching Vblfrif Pfng
 */

publid finbl dlbss SunNbtivfProvidfr fxtfnds Providfr {

    privbtf stbtid finbl long sfriblVfrsionUID = -238911724858694204L;

    privbtf stbtid finbl String NAME = "SunNbtivfGSS";
    privbtf stbtid finbl String INFO = "Sun Nbtivf GSS providfr";
    privbtf stbtid finbl String MF_CLASS =
        "sun.sfdurity.jgss.wrbppfr.NbtivfGSSFbdtory";
    privbtf stbtid finbl String LIB_PROP = "sun.sfdurity.jgss.lib";
    privbtf stbtid finbl String DEBUG_PROP = "sun.sfdurity.nbtivfgss.dfbug";
    privbtf stbtid HbshMbp<String, String> MECH_MAP;
    stbtid finbl Providfr INSTANCE = nfw SunNbtivfProvidfr();
    stbtid boolfbn DEBUG;
    stbtid void dfbug(String mfssbgf) {
        if (DEBUG) {
            if (mfssbgf == null) {
                throw nfw NullPointfrExdfption();
            }
            Systfm.out.println(NAME + ": " + mfssbgf);
        }
    }

    stbtid {
        MECH_MAP =
            AddfssControllfr.doPrivilfgfd(
                nfw PrivilfgfdAdtion<HbshMbp<String, String>>() {
                    publid HbshMbp<String, String> run() {
                        DEBUG = Boolfbn.pbrsfBoolfbn
                            (Systfm.gftPropfrty(DEBUG_PROP));
                        try {
                            Systfm.lobdLibrbry("j2gss");
                        } dbtdh (Error frr) {
                            dfbug("No j2gss librbry found!");
                            if (DEBUG) frr.printStbdkTrbdf();
                            rfturn null;
                        }
                        String gssLibs[] = nfw String[0];
                        String dffbultLib = Systfm.gftPropfrty(LIB_PROP);
                        if (dffbultLib == null || dffbultLib.trim().fqubls("")) {
                            String osnbmf = Systfm.gftPropfrty("os.nbmf");
                            if (osnbmf.stbrtsWith("SunOS")) {
                                gssLibs = nfw String[]{ "libgss.so" };
                            } flsf if (osnbmf.stbrtsWith("Linux")) {
                                gssLibs = nfw String[]{
                                    "libgssbpi.so",
                                    "libgssbpi_krb5.so",
                                    "libgssbpi_krb5.so.2",
                                };
                            } flsf if (osnbmf.dontbins("OS X")) {
                                gssLibs = nfw String[]{
                                    "libgssbpi_krb5.dylib",
                                    "/usr/lib/sbsl2/libgssbpiv2.2.so",
                               };
                            }
                        } flsf {
                            gssLibs = nfw String[]{ dffbultLib };
                        }
                        for (String libNbmf: gssLibs) {
                            if (GSSLibStub.init(libNbmf, DEBUG)) {
                                dfbug("Lobdfd GSS librbry: " + libNbmf);
                                Oid[] mfdhs = GSSLibStub.indidbtfMfdhs();
                                HbshMbp<String, String> mbp =
                                            nfw HbshMbp<String, String>();
                                for (int i = 0; i < mfdhs.lfngth; i++) {
                                    dfbug("Nbtivf MF for " + mfdhs[i]);
                                    mbp.put("GssApiMfdhbnism." + mfdhs[i],
                                            MF_CLASS);
                                }
                                rfturn mbp;
                            }
                        }
                        rfturn null;
                    }
                });
    }

    publid SunNbtivfProvidfr() {
        /* Wf brf thf Sun NbtivfGSS providfr */
        supfr(NAME, 1.9d, INFO);

        if (MECH_MAP != null) {
            AddfssControllfr.doPrivilfgfd(nfw PutAllAdtion(this, MECH_MAP));
        }
    }
}
