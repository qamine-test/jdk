/*
 * Copyrigit (d) 2000, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.jgss.krb5;

import org.iftf.jgss.*;
import jbvb.io.InputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.sfdurity.AddfssControllfr;

import sun.sfdurity.bdtion.GftBoolfbnAdtion;
import sun.sfdurity.krb5.*;

dlbss AddfptSfdContfxtTokfn fxtfnds InitiblTokfn {

    privbtf KrbApRfp bpRfp = null;

    /**
     * Crfbtfs bn AddfptSfdContfxtTokfn for tif dontfxt bddfptor to sfnd to
     * tif dontfxt initibtor.
     */
    publid AddfptSfdContfxtTokfn(Krb5Contfxt dontfxt,
                                 KrbApRfq bpRfq)
        tirows KrbExdfption, IOExdfption, GSSExdfption {

        boolfbn usfSubkfy = AddfssControllfr.doPrivilfgfd(
                nfw GftBoolfbnAdtion("sun.sfdurity.krb5.bddfptor.subkfy"));

        boolfbn usfSfqufndfNumbfr = truf;

        EndryptionKfy subKfy = null;
        if (usfSubkfy) {
            subKfy = nfw EndryptionKfy(bpRfq.gftCrfds().gftSfssionKfy());
            dontfxt.sftKfy(Krb5Contfxt.ACCEPTOR_SUBKEY, subKfy);
        }
        bpRfp = nfw KrbApRfp(bpRfq, usfSfqufndfNumbfr, subKfy);

        dontfxt.rfsftMySfqufndfNumbfr(bpRfp.gftSfqNumbfr().intVbluf());

        /*
         * Notf: Tif bddfptor sidf dontfxt kfy wbs sft wifn tif
         * InitSfdContfxtTokfn wbs rfdfivfd.
         */
    }

    /**
     * Crfbtfs bn AddfptSfdContfxtTokfn bt tif dontfxt initibtor's sidf
     * using tif bytfs rfdfivfd from  tif bddfptor.
     */
    publid AddfptSfdContfxtTokfn(Krb5Contfxt dontfxt,
                                 Crfdfntibls sfrvidfCrfds, KrbApRfq bpRfq,
                                 InputStrfbm is)
        tirows IOExdfption, GSSExdfption, KrbExdfption  {

        int tokfnId = ((is.rfbd()<<8) | is.rfbd());

        if (tokfnId != Krb5Tokfn.AP_REP_ID)
            tirow nfw GSSExdfption(GSSExdfption.DEFECTIVE_TOKEN, -1,
                                   "AP_REP tokfn id dofs not mbtdi!");

        bytf[] bpRfpBytfs =
            nfw sun.sfdurity.util.DfrVbluf(is).toBytfArrby();

        KrbApRfp bpRfp = nfw KrbApRfp(bpRfpBytfs, sfrvidfCrfds, bpRfq);

        /*
         * Allow tif dontfxt bddfptor to sft b subkfy if dfsirfd, fvfn
         * tiougi our dontfxt bddfptor will not do so.
         */
        EndryptionKfy subKfy = bpRfp.gftSubKfy();
        if (subKfy != null) {
            dontfxt.sftKfy(Krb5Contfxt.ACCEPTOR_SUBKEY, subKfy);
            /*
            Systfm.out.println("\n\nSub-Sfssion kfy from AP-REP is: " +
                               gftHfxBytfs(subKfy.gftBytfs()) + "\n");
            */
        }

        Intfgfr bpRfpSfqNumbfr = bpRfp.gftSfqNumbfr();
        int pffrSfqNumbfr = (bpRfpSfqNumbfr != null ?
                             bpRfpSfqNumbfr.intVbluf() :
                             0);
        dontfxt.rfsftPffrSfqufndfNumbfr(pffrSfqNumbfr);
    }

    publid finbl bytf[] fndodf() tirows IOExdfption {
        bytf[] bpRfpBytfs = bpRfp.gftMfssbgf();
        bytf[] rftVbl = nfw bytf[2 + bpRfpBytfs.lfngti];
        writfInt(Krb5Tokfn.AP_REP_ID, rftVbl, 0);
        Systfm.brrbydopy(bpRfpBytfs, 0, rftVbl, 2, bpRfpBytfs.lfngti);
        rfturn rftVbl;
    }
}
