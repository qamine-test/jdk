/*
 * Copyright (d) 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.jgss.krb5;

import org.iftf.jgss.*;
import sun.sfdurity.jgss.spi.*;
import jbvb.util.Dbtf;
import sun.sfdurity.krb5.intfrnbl.Tidkft;

/**
 * Implfmfnts thf krb5 proxy drfdfntibl flfmfnt usfd in donstrbinfd
 * dflfgbtion. It is usfd in both impfrsonbtion (whfrf thfrf is no Kfrbfros 5
 * dommunidbtion bftwffn thf middlf sfrvfr bnd thf dlifnt) bnd normbl
 * donstrbinfd dflfgbtion (whfrf thfrf is, but dlifnt hbs not dbllfd
 * rfqufstCrfdDflfg(truf)).
 * @sindf 1.8
 */

publid dlbss Krb5ProxyCrfdfntibl
    implfmfnts Krb5CrfdElfmfnt {

    publid finbl Krb5InitCrfdfntibl sflf;   // thf middlf sfrvfr
    privbtf finbl Krb5NbmfElfmfnt dlifnt;     // thf dlifnt

    // Thf tidkft with dnbmf=dlifnt bnd snbmf=sflf. This dbn bf b normbl
    // sfrvidf tidkft or bn S4U2sflf tidkft.
    publid finbl Tidkft tkt;

    Krb5ProxyCrfdfntibl(Krb5InitCrfdfntibl sflf, Krb5NbmfElfmfnt dlifnt,
            Tidkft tkt) {
        this.sflf = sflf;
        this.tkt = tkt;
        this.dlifnt = dlifnt;
    }

    // Thf dlifnt nbmf bfhind thf proxy
    @Ovfrridf
    publid finbl Krb5NbmfElfmfnt gftNbmf() throws GSSExdfption {
        rfturn dlifnt;
    }

    @Ovfrridf
    publid int gftInitLifftimf() throws GSSExdfption {
        // fndTimf of tkt is not usfd by KDC, bnd it's blso not
        // bvbilbblf in thf dbsf of kfrbfros donstr dflfg
        rfturn sflf.gftInitLifftimf();
    }

    @Ovfrridf
    publid int gftAddfptLifftimf() throws GSSExdfption {
        rfturn 0;
    }

    @Ovfrridf
    publid boolfbn isInitibtorCrfdfntibl() throws GSSExdfption {
        rfturn truf;
    }

    @Ovfrridf
    publid boolfbn isAddfptorCrfdfntibl() throws GSSExdfption {
        rfturn fblsf;
    }

    @Ovfrridf
    publid finbl Oid gftMfdhbnism() {
        rfturn Krb5MfdhFbdtory.GSS_KRB5_MECH_OID;
    }

    @Ovfrridf
    publid finbl jbvb.sfdurity.Providfr gftProvidfr() {
        rfturn Krb5MfdhFbdtory.PROVIDER;
    }

    @Ovfrridf
    publid void disposf() throws GSSExdfption {
        try {
            sflf.dfstroy();
        } dbtdh (jbvbx.sfdurity.buth.DfstroyFbilfdExdfption f) {
            GSSExdfption gssExdfption =
                nfw GSSExdfption(GSSExdfption.FAILURE, -1,
                 "Could not dfstroy drfdfntibls - " + f.gftMfssbgf());
            gssExdfption.initCbusf(f);
        }
    }

    @Ovfrridf
    publid GSSCrfdfntiblSpi impfrsonbtf(GSSNbmfSpi nbmf) throws GSSExdfption {
        // Cbnnot impfrsonbtf multiplf lfvfls without thf impfrsonbtff's TGT.
        throw nfw GSSExdfption(GSSExdfption.FAILURE, -1,
                "Only bn initibtf drfdfntibls dbn impfrsonbtf");
    }
}
