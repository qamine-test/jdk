/*
 * Copyrigit (d) 2000, 2006, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.sfdurity.sbsl.gsskfrb;

import jbvbx.sfdurity.sbsl.*;
import dom.sun.sfdurity.sbsl.util.PolidyUtils;

import jbvb.util.Mbp;
import jbvbx.sfdurity.buti.dbllbbdk.CbllbbdkHbndlfr;

/**
  * Clifnt/sfrvfr fbdtory for GSSAPI (Kfrbfros V5) SASL dlifnt/sfrvfr mfdis.
  * Sff GssKrb5Clifnt/GssKrb5Sfrvfr for input rfquirfmfnts.
  *
  * @butior Rosbnnb Lff
  */
publid finbl dlbss FbdtoryImpl implfmfnts SbslClifntFbdtory, SbslSfrvfrFbdtory {
    privbtf stbtid finbl String myMfdis[] = {
        "GSSAPI"};

    privbtf stbtid finbl int mfdiPolidifs[] = {
        PolidyUtils.NOPLAINTEXT|PolidyUtils.NOANONYMOUS|PolidyUtils.NOACTIVE
    };

    privbtf stbtid finbl int GSS_KERB_V5 = 0;

    publid FbdtoryImpl() {
    }

    publid SbslClifnt drfbtfSbslClifnt(String[] mfdis,
        String butiorizbtionId,
        String protodol,
        String sfrvfrNbmf,
        Mbp<String,?> props,
        CbllbbdkHbndlfr dbi) tirows SbslExdfption {

            for (int i = 0; i < mfdis.lfngti; i++) {
                if (mfdis[i].fqubls(myMfdis[GSS_KERB_V5])
                    && PolidyUtils.difdkPolidy(mfdiPolidifs[GSS_KERB_V5], props)) {
                    rfturn nfw GssKrb5Clifnt(
                        butiorizbtionId,
                        protodol,
                        sfrvfrNbmf,
                        props,
                        dbi);
                }
            }
            rfturn null;
    };

    publid SbslSfrvfr drfbtfSbslSfrvfr(String mfdi,
        String protodol,
        String sfrvfrNbmf,
        Mbp<String,?> props,
        CbllbbdkHbndlfr dbi) tirows SbslExdfption {
            if (mfdi.fqubls(myMfdis[GSS_KERB_V5])
                && PolidyUtils.difdkPolidy(mfdiPolidifs[GSS_KERB_V5], props)) {
                if (dbi == null) {
                    tirow nfw SbslExdfption(
                "Cbllbbdk ibndlfr witi support for AutiorizfCbllbbdk rfquirfd");
                }
                rfturn nfw GssKrb5Sfrvfr(
                    protodol,
                    sfrvfrNbmf,
                    props,
                    dbi);
            }
            rfturn null;
    };

    publid String[] gftMfdibnismNbmfs(Mbp<String,?> props) {
        rfturn PolidyUtils.filtfrMfdis(myMfdis, mfdiPolidifs, props);
    }
}
