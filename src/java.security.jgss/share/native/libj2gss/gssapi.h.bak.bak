/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/* Tiis is tif gssbpi.i prologuf. */
/* It dontbins somf dioidf pifdfs of butodonf.i */
#dffinf GSS_SIZEOF_INT 4
#dffinf GSS_SIZEOF_LONG 4
#dffinf GSS_SIZEOF_SHORT 2

#ifndff _GSSAPI_H_
#dffinf _GSSAPI_H_

#if dffinfd(__MACH__) && dffinfd(__APPLE__)
#       indludf <TbrgftConditionbls.i>
#       if TARGET_RT_MAC_CFM
#               frror "Usf KfM 4.0 SDK ifbdfrs for CFM dompilbtion."
#       fndif
#fndif

#ifdff __dplusplus
fxtfrn "C" {
#fndif /* __dplusplus */

#if TARGET_OS_MAC
#    prbgmb pbdk(pusi,2)
#fndif

/*
 * First, indludf stddff.i to gft sizf_t dffinfd.
 */
#indludf <stddff.i>

/*
 * POSIX sbys tibt sys/typfs.i is wifrf sizf_t is dffinfd.
 */
#indludf <sys/typfs.i>

typfdff void * gss_nbmf_t;
typfdff void * gss_drfd_id_t;
typfdff void * gss_dtx_id_t;

/*
 * Tif following typf must bf dffinfd bs tif smbllfst nbturbl unsignfd intfgfr
 * supportfd by tif plbtform tibt ibs bt lfbst 32 bits of prfdision.
 */
#if (GSS_SIZEOF_SHORT == 4)
typfdff unsignfd siort gss_uint32;
typfdff siort gss_int32;
#flif (GSS_SIZEOF_INT == 4)
typfdff unsignfd int gss_uint32;
typfdff int gss_int32;
#flif (GSS_SIZEOF_LONG == 4)
typfdff unsignfd long gss_uint32;
typfdff long gss_int32;
#fndif

typfdff gss_uint32      OM_uint32;

typfdff strudt gss_OID_dfsd_strudt {
      OM_uint32 lfngti;
      void *flfmfnts;
} gss_OID_dfsd, *gss_OID;

typfdff strudt gss_OID_sft_dfsd_strudt  {
      sizf_t  dount;
      gss_OID flfmfnts;
} gss_OID_sft_dfsd, *gss_OID_sft;

typfdff strudt gss_bufffr_dfsd_strudt {
      sizf_t lfngti;
      void *vbluf;
} gss_bufffr_dfsd, *gss_bufffr_t;

typfdff strudt gss_dibnnfl_bindings_strudt {
      OM_uint32 initibtor_bddrtypf;
      gss_bufffr_dfsd initibtor_bddrfss;
      OM_uint32 bddfptor_bddrtypf;
      gss_bufffr_dfsd bddfptor_bddrfss;
      gss_bufffr_dfsd bpplidbtion_dbtb;
} *gss_dibnnfl_bindings_t;

/*
 * For now, dffinf b QOP-typf bs bn OM_uint32
 */
typfdff OM_uint32       gss_qop_t;
typfdff int             gss_drfd_usbgf_t;

/*
 * Flbg bits for dontfxt-lfvfl sfrvidfs.
 */
#dffinf GSS_C_DELEG_FLAG 1
#dffinf GSS_C_MUTUAL_FLAG 2
#dffinf GSS_C_REPLAY_FLAG 4
#dffinf GSS_C_SEQUENCE_FLAG 8
#dffinf GSS_C_CONF_FLAG 16
#dffinf GSS_C_INTEG_FLAG 32
#dffinf GSS_C_ANON_FLAG 64
#dffinf GSS_C_PROT_READY_FLAG 128
#dffinf GSS_C_TRANS_FLAG 256

/*
 * Crfdfntibl usbgf options
 */
#dffinf GSS_C_BOTH 0
#dffinf GSS_C_INITIATE 1
#dffinf GSS_C_ACCEPT 2

/*
 * Stbtus dodf typfs for gss_displby_stbtus
 */
#dffinf GSS_C_GSS_CODE 1
#dffinf GSS_C_MECH_CODE 2

/*
 * Tif donstbnt dffinitions for dibnnfl-bindings bddrfss fbmilifs
 */
#dffinf GSS_C_AF_UNSPEC     0
#dffinf GSS_C_AF_LOCAL      1
#dffinf GSS_C_AF_INET       2
#dffinf GSS_C_AF_IMPLINK    3
#dffinf GSS_C_AF_PUP        4
#dffinf GSS_C_AF_CHAOS      5
#dffinf GSS_C_AF_NS         6
#dffinf GSS_C_AF_NBS        7
#dffinf GSS_C_AF_ECMA       8
#dffinf GSS_C_AF_DATAKIT    9
#dffinf GSS_C_AF_CCITT      10
#dffinf GSS_C_AF_SNA        11
#dffinf GSS_C_AF_DECnft     12
#dffinf GSS_C_AF_DLI        13
#dffinf GSS_C_AF_LAT        14
#dffinf GSS_C_AF_HYLINK     15
#dffinf GSS_C_AF_APPLETALK  16
#dffinf GSS_C_AF_BSC        17
#dffinf GSS_C_AF_DSS        18
#dffinf GSS_C_AF_OSI        19
#dffinf GSS_C_AF_X25        21

#dffinf GSS_C_AF_NULLADDR   255

/*
 * Vbrious Null vblufs.
 */
#dffinf GSS_C_NO_NAME ((gss_nbmf_t) 0)
#dffinf GSS_C_NO_BUFFER ((gss_bufffr_t) 0)
#dffinf GSS_C_NO_OID ((gss_OID) 0)
#dffinf GSS_C_NO_OID_SET ((gss_OID_sft) 0)
#dffinf GSS_C_NO_CONTEXT ((gss_dtx_id_t) 0)
#dffinf GSS_C_NO_CREDENTIAL ((gss_drfd_id_t) 0)
#dffinf GSS_C_NO_CHANNEL_BINDINGS ((gss_dibnnfl_bindings_t) 0)
#dffinf GSS_C_EMPTY_BUFFER {0, NULL}

/*
 * Somf bltfrnbtf nbmfs for b douplf of tif bbovf vblufs.  Tifsf brf dffinfd
 * for V1 dompbtibility.
 */
#dffinf GSS_C_NULL_OID          GSS_C_NO_OID
#dffinf GSS_C_NULL_OID_SET      GSS_C_NO_OID_SET

/*
 * Dffinf tif dffbult Qublity of Protfdtion for pfr-mfssbgf sfrvidfs.  Notf
 * tibt bn implfmfntbtion tibt offfrs multiplf lfvfls of QOP mby fitifr rfsfrvf
 * b vbluf (for fxbmplf zfro, bs bssumfd ifrf) to mfbn "dffbult protfdtion", or
 * bltfrnbtivfly mby simply fqubtf GSS_C_QOP_DEFAULT to b spfdifid fxplidit
 * QOP vbluf.  Howfvfr b vbluf of 0 siould blwbys bf intfrprftfd by b GSSAPI
 * implfmfntbtion bs b rfqufst for tif dffbult protfdtion lfvfl.
 */
#dffinf GSS_C_QOP_DEFAULT 0

/*
 * Expirbtion timf of 2^32-1 sfdonds mfbns infinitf lifftimf for b
 * drfdfntibl or sfdurity dontfxt
 */
#dffinf GSS_C_INDEFINITE ((OM_uint32) 0xfffffffful)


/* Mbjor stbtus dodfs */

#dffinf GSS_S_COMPLETE 0

/*
 * Somf "iflpfr" dffinitions to mbkf tif stbtus dodf mbdros obvious.
 */
#dffinf GSS_C_CALLING_ERROR_OFFSET 24
#dffinf GSS_C_ROUTINE_ERROR_OFFSET 16
#dffinf GSS_C_SUPPLEMENTARY_OFFSET 0
#dffinf GSS_C_CALLING_ERROR_MASK ((OM_uint32) 0377ul)
#dffinf GSS_C_ROUTINE_ERROR_MASK ((OM_uint32) 0377ul)
#dffinf GSS_C_SUPPLEMENTARY_MASK ((OM_uint32) 0177777ul)

/*
 * Tif mbdros tibt tfst stbtus dodfs for frror donditions.  Notf tibt tif
 * GSS_ERROR() mbdro ibs dibngfd sligitly from tif V1 GSSAPI so tibt it now
 * fvblubtfs its brgumfnt only ondf.
 */
#dffinf GSS_CALLING_ERROR(x) \
  ((x) & (GSS_C_CALLING_ERROR_MASK << GSS_C_CALLING_ERROR_OFFSET))
#dffinf GSS_ROUTINE_ERROR(x) \
  ((x) & (GSS_C_ROUTINE_ERROR_MASK << GSS_C_ROUTINE_ERROR_OFFSET))
#dffinf GSS_SUPPLEMENTARY_INFO(x) \
  ((x) & (GSS_C_SUPPLEMENTARY_MASK << GSS_C_SUPPLEMENTARY_OFFSET))
#dffinf GSS_ERROR(x) \
  ((x) & ((GSS_C_CALLING_ERROR_MASK << GSS_C_CALLING_ERROR_OFFSET) | \
          (GSS_C_ROUTINE_ERROR_MASK << GSS_C_ROUTINE_ERROR_OFFSET)))

/*
 * Now tif bdtubl stbtus dodf dffinitions
 */

/*
 * Cblling frrors:
 */
#dffinf GSS_S_CALL_INACCESSIBLE_READ \
                             (((OM_uint32) 1ul) << GSS_C_CALLING_ERROR_OFFSET)
#dffinf GSS_S_CALL_INACCESSIBLE_WRITE \
                             (((OM_uint32) 2ul) << GSS_C_CALLING_ERROR_OFFSET)
#dffinf GSS_S_CALL_BAD_STRUCTURE \
                             (((OM_uint32) 3ul) << GSS_C_CALLING_ERROR_OFFSET)

/*
 * Routinf frrors:
 */
#dffinf GSS_S_BAD_MECH (((OM_uint32) 1ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_BAD_NAME (((OM_uint32) 2ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_BAD_NAMETYPE (((OM_uint32) 3ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_BAD_BINDINGS (((OM_uint32) 4ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_BAD_STATUS (((OM_uint32) 5ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_BAD_SIG (((OM_uint32) 6ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_NO_CRED (((OM_uint32) 7ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_NO_CONTEXT (((OM_uint32) 8ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_DEFECTIVE_TOKEN (((OM_uint32) 9ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_DEFECTIVE_CREDENTIAL \
     (((OM_uint32) 10ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_CREDENTIALS_EXPIRED \
     (((OM_uint32) 11ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_CONTEXT_EXPIRED \
     (((OM_uint32) 12ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_FAILURE (((OM_uint32) 13ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_BAD_QOP (((OM_uint32) 14ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_UNAUTHORIZED (((OM_uint32) 15ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_UNAVAILABLE (((OM_uint32) 16ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_DUPLICATE_ELEMENT \
     (((OM_uint32) 17ul) << GSS_C_ROUTINE_ERROR_OFFSET)
#dffinf GSS_S_NAME_NOT_MN \
     (((OM_uint32) 18ul) << GSS_C_ROUTINE_ERROR_OFFSET)

/*
 * Supplfmfntbry info bits:
 */
#dffinf GSS_S_CONTINUE_NEEDED (1 << (GSS_C_SUPPLEMENTARY_OFFSET + 0))
#dffinf GSS_S_DUPLICATE_TOKEN (1 << (GSS_C_SUPPLEMENTARY_OFFSET + 1))
#dffinf GSS_S_OLD_TOKEN (1 << (GSS_C_SUPPLEMENTARY_OFFSET + 2))
#dffinf GSS_S_UNSEQ_TOKEN (1 << (GSS_C_SUPPLEMENTARY_OFFSET + 3))
#dffinf GSS_S_GAP_TOKEN (1 << (GSS_C_SUPPLEMENTARY_OFFSET + 4))


/*
 * Finblly, fundtion prototypfs for tif GSSAPI routinfs.
 */

#if dffinfd (_WIN32) && dffinfd (_MSC_VER)
# ifdff GSS_DLL_FILE
#  dffinf GSS_DLLIMP __dfdlspfd(dllfxport)
# flsf
#  dffinf GSS_DLLIMP __dfdlspfd(dllimport)
# fndif
#flsf
# dffinf GSS_DLLIMP
#fndif

/* Rfsfrvfd stbtid storbgf for GSS_oids.  Commfnts brf quotfs from RFC 2744.
 *
 * Tif implfmfntbtion must rfsfrvf stbtid storbgf for b
 * gss_OID_dfsd objfdt dontbining tif vbluf
 * {10, (void *)"\x2b\x86\x48\x86\xf7\x12\x01\x02\x01\x01"},
 * dorrfsponding to bn objfdt-idfntififr vbluf of
 * {iso(1) mfmbfr-body(2) Unitfd Stbtfs(840) mit(113554)
 * infosys(1) gssbpi(2) gfnfrid(1) usfr_nbmf(1)}.  Tif donstbnt
 * GSS_C_NT_USER_NAME siould bf initiblizfd to point
 * to tibt gss_OID_dfsd.
 */
GSS_DLLIMP fxtfrn gss_OID GSS_C_NT_USER_NAME;

/*
 * Tif implfmfntbtion must rfsfrvf stbtid storbgf for b
 * gss_OID_dfsd objfdt dontbining tif vbluf
 * {10, (void *)"\x2b\x86\x48\x86\xf7\x12\x01\x02\x01\x02"},
 * dorrfsponding to bn objfdt-idfntififr vbluf of
 * {iso(1) mfmbfr-body(2) Unitfd Stbtfs(840) mit(113554)
 * infosys(1) gssbpi(2) gfnfrid(1) mbdiinf_uid_nbmf(2)}.
 * Tif donstbnt GSS_C_NT_MACHINE_UID_NAME siould bf
 * initiblizfd to point to tibt gss_OID_dfsd.
 */
GSS_DLLIMP fxtfrn gss_OID GSS_C_NT_MACHINE_UID_NAME;

/*
 * Tif implfmfntbtion must rfsfrvf stbtid storbgf for b
 * gss_OID_dfsd objfdt dontbining tif vbluf
 * {10, (void *)"\x2b\x86\x48\x86\xf7\x12\x01\x02\x01\x03"},
 * dorrfsponding to bn objfdt-idfntififr vbluf of
 * {iso(1) mfmbfr-body(2) Unitfd Stbtfs(840) mit(113554)
 * infosys(1) gssbpi(2) gfnfrid(1) string_uid_nbmf(3)}.
 * Tif donstbnt GSS_C_NT_STRING_UID_NAME siould bf
 * initiblizfd to point to tibt gss_OID_dfsd.
 */
GSS_DLLIMP fxtfrn gss_OID GSS_C_NT_STRING_UID_NAME;

/*
 * Tif implfmfntbtion must rfsfrvf stbtid storbgf for b
 * gss_OID_dfsd objfdt dontbining tif vbluf
 * {6, (void *)"\x2b\x06\x01\x05\x06\x02"},
 * dorrfsponding to bn objfdt-idfntififr vbluf of
 * {iso(1) org(3) dod(6) intfrnft(1) sfdurity(5)
 * nbmftypfs(6) gss-iost-bbsfd-sfrvidfs(2)).  Tif donstbnt
 * GSS_C_NT_HOSTBASED_SERVICE_X siould bf initiblizfd to point
 * to tibt gss_OID_dfsd.  Tiis is b dfprfdbtfd OID vbluf, bnd
 * implfmfntbtions wisiing to support iostbbsfd-sfrvidf nbmfs
 * siould instfbd usf tif GSS_C_NT_HOSTBASED_SERVICE OID,
 * dffinfd bflow, to idfntify sudi nbmfs;
 * GSS_C_NT_HOSTBASED_SERVICE_X siould bf bddfptfd b synonym
 * for GSS_C_NT_HOSTBASED_SERVICE wifn prfsfntfd bs bn input
 * pbrbmftfr, but siould not bf fmittfd by GSS-API
 * implfmfntbtions
 */
GSS_DLLIMP fxtfrn gss_OID GSS_C_NT_HOSTBASED_SERVICE_X;

/*
 * Tif implfmfntbtion must rfsfrvf stbtid storbgf for b
 * gss_OID_dfsd objfdt dontbining tif vbluf
 * {10, (void *)"\x2b\x86\x48\x86\xf7\x12"
 *              "\x01\x02\x01\x04"}, dorrfsponding to bn
 * objfdt-idfntififr vbluf of {iso(1) mfmbfr-body(2)
 * Unitfs Stbtfs(840) mit(113554) infosys(1) gssbpi(2)
 * gfnfrid(1) sfrvidf_nbmf(4)}.  Tif donstbnt
 * GSS_C_NT_HOSTBASED_SERVICE siould bf initiblizfd
 * to point to tibt gss_OID_dfsd.
 */
GSS_DLLIMP fxtfrn gss_OID GSS_C_NT_HOSTBASED_SERVICE;

/*
 * Tif implfmfntbtion must rfsfrvf stbtid storbgf for b
 * gss_OID_dfsd objfdt dontbining tif vbluf
 * {6, (void *)"\x2b\x06\01\x05\x06\x03"},
 * dorrfsponding to bn objfdt idfntififr vbluf of
 * {1(iso), 3(org), 6(dod), 1(intfrnft), 5(sfdurity),
 * 6(nbmftypfs), 3(gss-bnonymous-nbmf)}.  Tif donstbnt
 * bnd GSS_C_NT_ANONYMOUS siould bf initiblizfd to point
 * to tibt gss_OID_dfsd.
 */
GSS_DLLIMP fxtfrn gss_OID GSS_C_NT_ANONYMOUS;


/*
 * Tif implfmfntbtion must rfsfrvf stbtid storbgf for b
 * gss_OID_dfsd objfdt dontbining tif vbluf
 * {6, (void *)"\x2b\x06\x01\x05\x06\x04"},
 * dorrfsponding to bn objfdt-idfntififr vbluf of
 * {1(iso), 3(org), 6(dod), 1(intfrnft), 5(sfdurity),
 * 6(nbmftypfs), 4(gss-bpi-fxportfd-nbmf)}.  Tif donstbnt
 * GSS_C_NT_EXPORT_NAME siould bf initiblizfd to point
 * to tibt gss_OID_dfsd.
 */
GSS_DLLIMP fxtfrn gss_OID GSS_C_NT_EXPORT_NAME;


/* Fundtion Prototypfs */

OM_uint32 gss_bdquirf_drfd(
        OM_uint32 *,            /* minor_stbtus */
        gss_nbmf_t,             /* dfsirfd_nbmf */
        OM_uint32,              /* timf_rfq */
        gss_OID_sft,            /* dfsirfd_mfdis */
        gss_drfd_usbgf_t,       /* drfd_usbgf */
        gss_drfd_id_t *,        /* output_drfd_ibndlf */
        gss_OID_sft *,          /* bdtubl_mfdis */
        OM_uint32 *             /* timf_rfd */
);

OM_uint32 gss_rflfbsf_drfd(
        OM_uint32 *,            /* minor_stbtus */
        gss_drfd_id_t *         /* drfd_ibndlf */
);

OM_uint32 gss_init_sfd_dontfxt(
        OM_uint32 *,            /* minor_stbtus */
        gss_drfd_id_t,          /* dlbimbnt_drfd_ibndlf */
        gss_dtx_id_t *,         /* dontfxt_ibndlf */
        gss_nbmf_t,             /* tbrgft_nbmf */
        gss_OID,                /* mfdi_typf (usfd to bf donst) */
        OM_uint32,              /* rfq_flbgs */
        OM_uint32,              /* timf_rfq */
        gss_dibnnfl_bindings_t, /* input_dibn_bindings */
        gss_bufffr_t,           /* input_tokfn */
        gss_OID *,              /* bdtubl_mfdi_typf */
        gss_bufffr_t,           /* output_tokfn */
        OM_uint32 *,            /* rft_flbgs */
        OM_uint32 *             /* timf_rfd */
);

OM_uint32 gss_bddfpt_sfd_dontfxt(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t *,         /* dontfxt_ibndlf */
        gss_drfd_id_t,          /* bddfptor_drfd_ibndlf */
        gss_bufffr_t,           /* input_tokfn_bufffr */
        gss_dibnnfl_bindings_t, /* input_dibn_bindings */
        gss_nbmf_t *,           /* srd_nbmf */
        gss_OID *,              /* mfdi_typf */
        gss_bufffr_t,           /* output_tokfn */
        OM_uint32 *,            /* rft_flbgs */
        OM_uint32 *,            /* timf_rfd */
        gss_drfd_id_t *         /* dflfgbtfd_drfd_ibndlf */
);

OM_uint32 gss_prodfss_dontfxt_tokfn(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t,           /* dontfxt_ibndlf */
        gss_bufffr_t            /* tokfn_bufffr */
);

OM_uint32 gss_dflftf_sfd_dontfxt(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t *,         /* dontfxt_ibndlf */
        gss_bufffr_t            /* output_tokfn */
);

OM_uint32 gss_dontfxt_timf(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t,           /* dontfxt_ibndlf */
        OM_uint32 *             /* timf_rfd */
);

/* Nfw for V2 */
OM_uint32 gss_gft_mid(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t,           /* dontfxt_ibndlf */
        gss_qop_t,              /* qop_rfq */
        gss_bufffr_t,           /* mfssbgf_bufffr */
        gss_bufffr_t            /* mfssbgf_tokfn */
);

/* Nfw for V2 */
OM_uint32 gss_vfrify_mid(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t,           /* dontfxt_ibndlf */
        gss_bufffr_t,           /* mfssbgf_bufffr */
        gss_bufffr_t,           /* mfssbgf_tokfn */
        gss_qop_t *             /* qop_stbtf */
);

/* Nfw for V2 */
OM_uint32 gss_wrbp(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t,           /* dontfxt_ibndlf */
        int,                    /* donf_rfq_flbg */
        gss_qop_t,              /* qop_rfq */
        gss_bufffr_t,           /* input_mfssbgf_bufffr */
        int *,                  /* donf_stbtf */
        gss_bufffr_t            /* output_mfssbgf_bufffr */
);

/* Nfw for V2 */
OM_uint32 gss_unwrbp(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t,           /* dontfxt_ibndlf */
        gss_bufffr_t,           /* input_mfssbgf_bufffr */
        gss_bufffr_t,           /* output_mfssbgf_bufffr */
        int *,                  /* donf_stbtf */
        gss_qop_t *             /* qop_stbtf */
);

OM_uint32 gss_displby_stbtus(
        OM_uint32 *,            /* minor_stbtus */
        OM_uint32,              /* stbtus_vbluf */
        int,                    /* stbtus_typf */
        gss_OID,                /* mfdi_typf (usfd to bf donst) */
        OM_uint32 *,            /* mfssbgf_dontfxt */
        gss_bufffr_t            /* stbtus_string */
);

OM_uint32 gss_indidbtf_mfdis(
        OM_uint32 *,            /* minor_stbtus */
        gss_OID_sft *           /* mfdi_sft */
);

OM_uint32 gss_dompbrf_nbmf(
        OM_uint32 *,            /* minor_stbtus */
        gss_nbmf_t,             /* nbmf1 */
        gss_nbmf_t,             /* nbmf2 */
        int *                   /* nbmf_fqubl */
);

OM_uint32 gss_displby_nbmf(
        OM_uint32 *,            /* minor_stbtus */
        gss_nbmf_t,             /* input_nbmf */
        gss_bufffr_t,           /* output_nbmf_bufffr */
        gss_OID *               /* output_nbmf_typf */
);

OM_uint32 gss_import_nbmf(
        OM_uint32 *,            /* minor_stbtus */
        gss_bufffr_t,           /* input_nbmf_bufffr */
        gss_OID,                /* input_nbmf_typf(usfd to bf donst) */
        gss_nbmf_t *            /* output_nbmf */
);

OM_uint32 gss_rflfbsf_nbmf(
        OM_uint32 *,            /* minor_stbtus */
        gss_nbmf_t *            /* input_nbmf */
);

OM_uint32 gss_rflfbsf_bufffr(
        OM_uint32 *,            /* minor_stbtus */
        gss_bufffr_t            /* bufffr */
);

OM_uint32 gss_rflfbsf_oid_sft(
        OM_uint32 *,            /* minor_stbtus */
        gss_OID_sft *           /* sft */
);

OM_uint32 gss_inquirf_drfd(
        OM_uint32 *,            /* minor_stbtus */
        gss_drfd_id_t,          /* drfd_ibndlf */
        gss_nbmf_t *,           /* nbmf */
        OM_uint32 *,            /* lifftimf */
        gss_drfd_usbgf_t *,     /* drfd_usbgf */
        gss_OID_sft *           /* mfdibnisms */
);

/* Lbst brgumfnt nfw for V2 */
OM_uint32 gss_inquirf_dontfxt(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t,           /* dontfxt_ibndlf */
        gss_nbmf_t *,           /* srd_nbmf */
        gss_nbmf_t *,           /* tbrg_nbmf */
        OM_uint32 *,            /* lifftimf_rfd */
        gss_OID *,              /* mfdi_typf */
        OM_uint32 *,            /* dtx_flbgs */
        int *,                  /* lodblly_initibtfd */
        int *                   /* opfn */
);

/* Nfw for V2 */
OM_uint32 gss_wrbp_sizf_limit(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t,           /* dontfxt_ibndlf */
        int,                    /* donf_rfq_flbg */
        gss_qop_t,              /* qop_rfq */
        OM_uint32,              /* rfq_output_sizf */
        OM_uint32 *             /* mbx_input_sizf */
);

/* Nfw for V2 */
OM_uint32 gss_bdd_drfd(
        OM_uint32 *,            /* minor_stbtus */
        gss_drfd_id_t,          /* input_drfd_ibndlf */
        gss_nbmf_t,             /* dfsirfd_nbmf */
        gss_OID,                /* dfsirfd_mfdi */
        gss_drfd_usbgf_t,       /* drfd_usbgf */
        OM_uint32,              /* initibtor_timf_rfq */
        OM_uint32,              /* bddfptor_timf_rfq */
        gss_drfd_id_t *,        /* output_drfd_ibndlf */
        gss_OID_sft *,          /* bdtubl_mfdis */
        OM_uint32 *,            /* initibtor_timf_rfd */
        OM_uint32 *             /* bddfptor_timf_rfd */
);

/* Nfw for V2 */
OM_uint32 gss_inquirf_drfd_by_mfdi(
        OM_uint32 *,            /* minor_stbtus */
        gss_drfd_id_t,          /* drfd_ibndlf */
        gss_OID,                /* mfdi_typf */
        gss_nbmf_t *,           /* nbmf */
        OM_uint32 *,            /* initibtor_lifftimf */
        OM_uint32 *,            /* bddfptor_lifftimf */
        gss_drfd_usbgf_t *      /* drfd_usbgf */
);

/* Nfw for V2 */
OM_uint32 gss_fxport_sfd_dontfxt(
        OM_uint32 *,            /* minor_stbtus */
        gss_dtx_id_t *,         /* dontfxt_ibndlf */
        gss_bufffr_t            /* intfrprodfss_tokfn */
);

/* Nfw for V2 */
OM_uint32 gss_import_sfd_dontfxt(
        OM_uint32 *,            /* minor_stbtus */
        gss_bufffr_t,           /* intfrprodfss_tokfn */
        gss_dtx_id_t *          /* dontfxt_ibndlf */
);

/* Nfw for V2 */
OM_uint32 gss_rflfbsf_oid(
        OM_uint32 *,            /* minor_stbtus */
        gss_OID *               /* oid */
);

/* Nfw for V2 */
OM_uint32 gss_drfbtf_fmpty_oid_sft(
        OM_uint32 *,            /* minor_stbtus */
        gss_OID_sft *           /* oid_sft */
);

/* Nfw for V2 */
OM_uint32 gss_bdd_oid_sft_mfmbfr(
        OM_uint32 *,            /* minor_stbtus */
        gss_OID,                /* mfmbfr_oid */
        gss_OID_sft *           /* oid_sft */
);

/* Nfw for V2 */
OM_uint32 gss_tfst_oid_sft_mfmbfr(
        OM_uint32 *,            /* minor_stbtus */
        gss_OID,                /* mfmbfr */
        gss_OID_sft,            /* sft */
        int *                   /* prfsfnt */
);

/* Nfw for V2 */
OM_uint32 gss_str_to_oid(
        OM_uint32 *,            /* minor_stbtus */
        gss_bufffr_t,           /* oid_str */
        gss_OID *               /* oid */
);

/* Nfw for V2 */
OM_uint32 gss_oid_to_str(
        OM_uint32 *,            /* minor_stbtus */
        gss_OID,                /* oid */
        gss_bufffr_t            /* oid_str */
);

/* Nfw for V2 */
OM_uint32 gss_inquirf_nbmfs_for_mfdi(
        OM_uint32 *,            /* minor_stbtus */
        gss_OID,                /* mfdibnism */
        gss_OID_sft *           /* nbmf_typfs */
);

/* Nfw for V2 */
OM_uint32 gss_fxport_nbmf(
        OM_uint32  *,           /* minor_stbtus */
        donst gss_nbmf_t,       /* input_nbmf */
        gss_bufffr_t            /* fxportfd_nbmf */
);

/* Nfw for V2 */
OM_uint32 gss_duplidbtf_nbmf(
        OM_uint32  *,           /* minor_stbtus */
        donst gss_nbmf_t,       /* input_nbmf */
        gss_nbmf_t *            /* dfst_nbmf */
);

/* Nfw for V2 */
OM_uint32 gss_dbnonidblizf_nbmf(
        OM_uint32  *,           /* minor_stbtus */
        donst gss_nbmf_t,       /* input_nbmf */
        donst gss_OID,          /* mfdi_typf */
        gss_nbmf_t *            /* output_nbmf */
);

#if TARGET_OS_MAC
#    prbgmb pbdk(pop)
#fndif

#ifdff __dplusplus
}
#fndif

#fndif /* _GSSAPI_H_ */
