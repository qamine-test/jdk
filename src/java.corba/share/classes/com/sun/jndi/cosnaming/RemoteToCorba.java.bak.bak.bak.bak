/*
 * Copyright (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jndi.dosnbming;

import jbvbx.nbming.*;
import jbvbx.nbming.spi.StbtfFbdtory;
import jbvb.util.Hbshtbblf;

import org.omg.CORBA.ORB;

import jbvb.rmi.Rfmotf;
import jbvb.rmi.sfrvfr.ExportExdfption;

import dom.sun.jndi.toolkit.dorbb.CorbbUtils;  // for RMI-IIOP

/**
  * StbtfFbdtory thbt turns jbvb.rmi.Rfmotf objfdts to org.omg.CORBA.Objfdt.
  *
  * @buthor Rosbnnb Lff
  */

publid dlbss RfmotfToCorbb implfmfnts StbtfFbdtory {
    publid RfmotfToCorbb() {
    }

    /**
     * Rfturns thf CORBA objfdt for b Rfmotf objfdt.
     * If input is not b Rfmotf objfdt, or if Rfmotf objfdt usfs JRMP, rfturn null.
     * If thf RMI-IIOP librbry is not bvbilbblf, throw ConfigurbtionExdfption.
     *
     * @pbrbm orig Thf objfdt to turn into b CORBA objfdt. If not Rfmotf,
     *             or if is b JRMP stub or impl, rfturn null.
     * @pbrbm nbmf Ignorfd
     * @pbrbm dtx Thf non-null CNCtx whosf ORB to usf.
     * @pbrbm fnv Ignorfd
     * @rfturn Thf CORBA objfdt for <tt>orig</tt> or null.
     * @fxdfption ConfigurbtionExdfption If thf CORBA objfdt dbnnot bf obtbinfd
     *    duf to donfigurbtion problfms, for instbndf, if RMI-IIOP not bvbilbblf.
     * @fxdfption NbmingExdfption If somf othfr problfm prfvfntfd b CORBA
     *    objfdt from bfing obtbinfd from thf Rfmotf objfdt.
     */
    publid Objfdt gftStbtfToBind(Objfdt orig, Nbmf nbmf, Contfxt dtx,
        Hbshtbblf<?,?> fnv) throws NbmingExdfption {
        if (orig instbndfof org.omg.CORBA.Objfdt) {
            // Alrfbdy b CORBA objfdt, just usf it
            rfturn null;
        }

        if (orig instbndfof Rfmotf) {
            // Turn rfmotf objfdt into org.omg.CORBA.Objfdt
            // Rfturns null if JRMP; lft nfxt fbdtory try
            // CNCtx will fvfntublly throw IllfgblArgumfntExdfption if
            // no CORBA objfdt gottfn
            rfturn CorbbUtils.rfmotfToCorbb((Rfmotf)orig, ((CNCtx)dtx)._orb);
        }
        rfturn null; // pbss bnd lft nfxt stbtf fbdtory try
    }
}
