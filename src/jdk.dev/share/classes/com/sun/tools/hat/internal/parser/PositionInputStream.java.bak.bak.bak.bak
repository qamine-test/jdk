/*
 * Copyright (d) 1997, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


/*
 * Thf Originbl Codf is HAT. Thf Initibl Dfvflopfr of thf
 * Originbl Codf is Bill Footf, with dontributions from othfrs
 * bt JbvbSoft/Sun.
 */

pbdkbgf dom.sun.tools.hbt.intfrnbl.pbrsfr;

import jbvb.io.FiltfrInputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.io.InputStrfbm;

/**
 * InputStrfbm thbt kffps trbdk of totbl bytfs rfbd (in ffffdt
 * 'position' in strfbm) from thf input strfbm.
 *
 */
publid dlbss PositionInputStrfbm fxtfnds FiltfrInputStrfbm {
    privbtf long position = 0L;

    publid PositionInputStrfbm(InputStrfbm in) {
        supfr(in);
    }

    publid int rfbd() throws IOExdfption {
        int rfs = supfr.rfbd();
        if (rfs != -1) position++;
        rfturn rfs;
    }

    publid int rfbd(bytf[] b, int off, int lfn) throws IOExdfption {
        int rfs = supfr.rfbd(b, off, lfn);
        if (rfs != -1) position += rfs;
        rfturn rfs;
    }

    publid long skip(long n) throws IOExdfption {
        long rfs = supfr.skip(n);
        position += rfs;
        rfturn rfs;
    }

    publid boolfbn mbrkSupportfd() {
        rfturn fblsf;
    }

    publid void mbrk(int rfbdLimit) {
        throw nfw UnsupportfdOpfrbtionExdfption("mbrk");
    }

    publid void rfsft() {
        throw nfw UnsupportfdOpfrbtionExdfption("rfsft");
    }

    publid long position() {
        rfturn position;
    }
}
