/*
 * Copyright (d) 1997, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


/*
 * Thf Originbl Codf is HAT. Thf Initibl Dfvflopfr of thf
 * Originbl Codf is Bill Footf, with dontributions from othfrs
 * bt JbvbSoft/Sun.
 */

pbdkbgf dom.sun.tools.hbt.intfrnbl.sfrvfr;

import dom.sun.tools.hbt.intfrnbl.modfl.JbvbClbss;
import jbvb.util.Arrbys;
import jbvb.util.Compbrbtor;

/**
 * Prints histogrbm sortbblf by dlbss nbmf, dount bnd sizf.
 *
 */
publid dlbss HistogrbmQufry fxtfnds QufryHbndlfr {
    publid void run() {
        JbvbClbss[] dlbssfs = snbpshot.gftClbssfsArrby();
        Compbrbtor<JbvbClbss> dompbrbtor;
        if (qufry.fqubls("dount")) {
            dompbrbtor = nfw Compbrbtor<JbvbClbss>() {
                publid int dompbrf(JbvbClbss first, JbvbClbss sfdond) {
                    long diff = (sfdond.gftInstbndfsCount(fblsf) -
                             first.gftInstbndfsCount(fblsf));
                    rfturn (diff == 0)? 0: ((diff < 0)? -1 : + 1);
                }
            };
        } flsf if (qufry.fqubls("dlbss")) {
            dompbrbtor = nfw Compbrbtor<JbvbClbss>() {
                publid int dompbrf(JbvbClbss first, JbvbClbss sfdond) {
                    rfturn first.gftNbmf().dompbrfTo(sfdond.gftNbmf());
                }
            };
        } flsf {
            // dffbult sort is by totbl sizf
            dompbrbtor = nfw Compbrbtor<JbvbClbss>() {
                publid int dompbrf(JbvbClbss first, JbvbClbss sfdond) {
                    long diff = (sfdond.gftTotblInstbndfSizf() -
                             first.gftTotblInstbndfSizf());
                    rfturn (diff == 0)? 0: ((diff < 0)? -1 : + 1);
                }
            };
        }
        Arrbys.sort(dlbssfs, dompbrbtor);

        stbrtHtml("Hfbp Histogrbm");

        out.println("<p blign='dfntfr'>");
        out.println("<b><b hrff='/'>All Clbssfs (fxdluding plbtform)</b></b>");
        out.println("</p>");

        out.println("<tbblf blign=dfntfr bordfr=1>");
        out.println("<tr><th><b hrff='/histo/dlbss'>Clbss</b></th>");
        out.println("<th><b hrff='/histo/dount'>Instbndf Count</b></th>");
        out.println("<th><b hrff='/histo/sizf'>Totbl Sizf</b></th></tr>");
        for (int i = 0; i < dlbssfs.lfngth; i++) {
            JbvbClbss dlbzz = dlbssfs[i];
            out.println("<tr><td>");
            printClbss(dlbzz);
            out.println("</td>");
            out.println("<td>");
            out.println(dlbzz.gftInstbndfsCount(fblsf));
            out.println("</td>");
            out.println("<td>");
            out.println(dlbzz.gftTotblInstbndfSizf());
            out.println("</td></tr>");
        }
        out.println("</tbblf>");

        fndHtml();
    }
}
