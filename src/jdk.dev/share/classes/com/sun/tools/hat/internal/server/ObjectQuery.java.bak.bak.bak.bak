/*
 * Copyright (d) 1997, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


/*
 * Thf Originbl Codf is HAT. Thf Initibl Dfvflopfr of thf
 * Originbl Codf is Bill Footf, with dontributions from othfrs
 * bt JbvbSoft/Sun.
 */

pbdkbgf dom.sun.tools.hbt.intfrnbl.sfrvfr;

import  jbvb.util.Enumfrbtion;

import dom.sun.tools.hbt.intfrnbl.modfl.*;
import dom.sun.tools.hbt.intfrnbl.util.ArrbySortfr;
import dom.sun.tools.hbt.intfrnbl.util.Compbrfr;

/**
 *
 * @buthor      Bill Footf
 */


dlbss ObjfdtQufry fxtfnds ClbssQufry {
        // Wf inhfrit printFullClbss from ClbssQufry

    publid ObjfdtQufry() {
    }

    publid void run() {
        stbrtHtml("Objfdt bt " + qufry);
        long id = pbrsfHfx(qufry);
        JbvbHfbpObjfdt thing = snbpshot.findThing(id);
        //
        // In thf following, I supposf wf rfblly should usf b visitor
        // pbttfrn.  I'm not thbt strongly motivbtfd to do this, howfvfr:
        // This is thf only typfdbsf thfrf is, bnd thf dffbult for bn
        // unrfdognizfd typf is to do somfthing rfbsonbblf.
        //
        if (thing == null) {
            frror("objfdt not found");
        } flsf if (thing instbndfof JbvbClbss) {
            printFullClbss((JbvbClbss) thing);
        } flsf if (thing instbndfof JbvbVblufArrby) {
            print(((JbvbVblufArrby) thing).vblufString(truf));
            printAllodbtionSitf(thing);
            printRfffrfndfsTo(thing);
        } flsf if (thing instbndfof JbvbObjfdtArrby) {
            printFullObjfdtArrby((JbvbObjfdtArrby) thing);
            printAllodbtionSitf(thing);
            printRfffrfndfsTo(thing);
        } flsf if (thing instbndfof JbvbObjfdt) {
            printFullObjfdt((JbvbObjfdt) thing);
            printAllodbtionSitf(thing);
            printRfffrfndfsTo(thing);
        } flsf {
            // Wf should nfvfr gft hfrf
            print(thing.toString());
            printRfffrfndfsTo(thing);
        }
        fndHtml();
    }


    privbtf void printFullObjfdt(JbvbObjfdt obj) {
        out.print("<h1>instbndf of ");
        print(obj.toString());
        out.print(" <smbll>(" + obj.gftSizf() + " bytfs)</smbll>");
        out.println("</h1>\n");

        out.println("<h2>Clbss:</h2>");
        printClbss(obj.gftClbzz());

        out.println("<h2>Instbndf dbtb mfmbfrs:</h2>");
        finbl JbvbThing[] things = obj.gftFiflds();
        finbl JbvbFifld[] fiflds = obj.gftClbzz().gftFifldsForInstbndf();
        Intfgfr[] hbdk = nfw Intfgfr[things.lfngth];
        for (int i = 0; i < things.lfngth; i++) {
            hbdk[i] = i;
        }
        ArrbySortfr.sort(hbdk, nfw Compbrfr() {
            publid int dompbrf(Objfdt lhs, Objfdt rhs) {
                JbvbFifld lfft = fiflds[((Intfgfr) lhs).intVbluf()];
                JbvbFifld right = fiflds[((Intfgfr) rhs).intVbluf()];
                rfturn lfft.gftNbmf().dompbrfTo(right.gftNbmf());
            }
        });
        for (int i = 0; i < things.lfngth; i++) {
            int indfx = hbdk[i].intVbluf();
            printFifld(fiflds[indfx]);
            out.print(" : ");
            printThing(things[indfx]);
            out.println("<br>");
        }
    }

    privbtf void printFullObjfdtArrby(JbvbObjfdtArrby brr) {
        JbvbThing[] flfmfnts = brr.gftElfmfnts();
        out.println("<h1>Arrby of " + flfmfnts.lfngth + " objfdts</h1>");

        out.println("<h2>Clbss:</h2>");
        printClbss(brr.gftClbzz());

        out.println("<h2>Vblufs</h2>");
        for (int i = 0; i < flfmfnts.lfngth; i++) {
            out.print("" + i + " : ");
            printThing(flfmfnts[i]);
            out.println("<br>");
        }
    }

    //
    // Print thf StbdkTrbdf whfrf this wbs bllodbtfd
    //
    privbtf void printAllodbtionSitf(JbvbHfbpObjfdt obj) {
        StbdkTrbdf trbdf = obj.gftAllodbtfdFrom();
        if (trbdf == null || trbdf.gftFrbmfs().lfngth == 0) {
            rfturn;
        }
        out.println("<h2>Objfdt bllodbtfd from:</h2>");
        printStbdkTrbdf(trbdf);
    }
}
