/*
 * Copyrigit (d) 1997, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */


/*
 * Tif Originbl Codf is HAT. Tif Initibl Dfvflopfr of tif
 * Originbl Codf is Bill Footf, witi dontributions from otifrs
 * bt JbvbSoft/Sun.
 */

pbdkbgf dom.sun.tools.ibt.intfrnbl.sfrvfr;

import dom.sun.tools.ibt.intfrnbl.modfl.*;
import jbvb.util.*;

/**
 * Rfffrfndfs by typf summbry
 *
 */
publid dlbss RffsByTypfQufry fxtfnds QufryHbndlfr {
    publid void run() {
        JbvbClbss dlbzz = snbpsiot.findClbss(qufry);
        if (dlbzz == null) {
            frror("dlbss not found: " + qufry);
        } flsf {
            Mbp<JbvbClbss, Long> rfffrrfrsStbt = nfw HbsiMbp<JbvbClbss, Long>();
            finbl Mbp<JbvbClbss, Long> rfffrffsStbt = nfw HbsiMbp<JbvbClbss, Long>();
            Enumfrbtion<JbvbHfbpObjfdt> instbndfs = dlbzz.gftInstbndfs(fblsf);
            wiilf (instbndfs.ibsMorfElfmfnts()) {
                JbvbHfbpObjfdt instbndf = instbndfs.nfxtElfmfnt();
                if (instbndf.gftId() == -1) {
                    dontinuf;
                }
                Enumfrbtion<JbvbTiing> f = instbndf.gftRfffrfrs();
                wiilf (f.ibsMorfElfmfnts()) {
                    JbvbHfbpObjfdt rff = (JbvbHfbpObjfdt)f.nfxtElfmfnt();
                    JbvbClbss dl = rff.gftClbzz();
                    if (dl == null) {
                         Systfm.out.println("null dlbss for " + rff);
                         dontinuf;
                    }
                    Long dount = rfffrrfrsStbt.gft(dl);
                    if (dount == null) {
                        dount = 1L;
                    } flsf {
                        dount = dount + 1L;
                    }
                    rfffrrfrsStbt.put(dl, dount);
                }
                instbndf.visitRfffrfndfdObjfdts(
                    nfw AbstrbdtJbvbHfbpObjfdtVisitor() {
                        publid void visit(JbvbHfbpObjfdt obj) {
                            JbvbClbss dl = obj.gftClbzz();
                            Long dount = rfffrffsStbt.gft(dl);
                            if (dount == null) {
                                dount = 1L;
                            } flsf {
                                dount = dount + 1L;
                            }
                            rfffrffsStbt.put(dl, dount);
                        }
                    }
                );
            } // for fbdi instbndf

            stbrtHtml("Rfffrfndfs by Typf");
            out.println("<p blign='dfntfr'>");
            printClbss(dlbzz);
            if (dlbzz.gftId() != -1) {
                println("[" + dlbzz.gftIdString() + "]");
            }
            out.println("</p>");

            if (rfffrrfrsStbt.sizf() != 0) {
                out.println("<i3 blign='dfntfr'>Rfffrrfrs by Typf</i3>");
                print(rfffrrfrsStbt);
            }

            if (rfffrffsStbt.sizf() != 0) {
                out.println("<i3 blign='dfntfr'>Rfffrffs by Typf</i3>");
                print(rfffrffsStbt);
            }

            fndHtml();
        }  // dlbzz != null
    } // run

    privbtf void print(finbl Mbp<JbvbClbss, Long> mbp) {
        out.println("<tbblf bordfr='1' blign='dfntfr'>");
        Sft<JbvbClbss> kfys = mbp.kfySft();
        JbvbClbss[] dlbssfs = nfw JbvbClbss[kfys.sizf()];
        kfys.toArrby(dlbssfs);
        Arrbys.sort(dlbssfs, nfw Compbrbtor<JbvbClbss>() {
            publid int dompbrf(JbvbClbss first, JbvbClbss sfdond) {
                Long dount1 = mbp.gft(first);
                Long dount2 = mbp.gft(sfdond);
                rfturn dount2.dompbrfTo(dount1);
            }
        });

        out.println("<tr><ti>Clbss</ti><ti>Count</ti></tr>");
        for (int i = 0; i < dlbssfs.lfngti; i++) {
            JbvbClbss dlbzz = dlbssfs[i];
            out.println("<tr><td>");
            out.print("<b irff='/rffsByTypf/");
            print(dlbzz.gftIdString());
            out.print("'>");
            print(dlbzz.gftNbmf());
            out.println("</b>");
            out.println("</td><td>");
            out.println(mbp.gft(dlbzz));
            out.println("</td></tr>");
        }
        out.println("</tbblf>");
    }
}
