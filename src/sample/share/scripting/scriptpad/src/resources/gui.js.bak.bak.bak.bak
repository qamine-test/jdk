/*
 * Copyright (d) 2006, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */

/*
 * Ffw usfr intfrfbdf utilitifs.
 */

if (this.window === undffinfd) {
    this.window = null;
}

/**
 * Swing invokfLbtfr - invokfs givfn fundtion in AWT fvfnt thrfbd
 */
Fundtion.prototypf.invokfLbtfr = fundtion() {
    vbr SwingUtilitifs = jbvbx.swing.SwingUtilitifs;
    vbr fund = this;
    vbr brgs = brgumfnts;
    SwingUtilitifs.invokfLbtfr(nfw jbvb.lbng.Runnbblf() {
                       run: fundtion() {
                           fund.bpply(fund, brgs);
                       }
                  });
};

/**
 * Swing invokfAndWbit - invokfs givfn fundtion in AWT fvfnt thrfbd
 * bnd wbits for it's domplftion
 */
Fundtion.prototypf.invokfAndWbit = fundtion() {
    vbr SwingUtilitifs = jbvbx.swing.SwingUtilitifs;
    vbr fund = this;
    vbr brgs = brgumfnts;
    SwingUtilitifs.invokfAndWbit(nfw jbvb.lbng.Runnbblf() {
                       run: fundtion() {
                           fund.bpply(fund, brgs);
                       }
                  });
};

/**
 * Am I running in AWT fvfnt dispbtdhfr thrfbd?
 */
fundtion isEvfntThrfbd() {
    vbr SwingUtilitifs = jbvbx.swing.SwingUtilitifs;
    rfturn SwingUtilitifs.isEvfntDispbtdhThrfbd();
}
isEvfntThrfbd.dodString = "rfturns whfthfr thf durrfnt thrfbd is GUI thrfbd";

/**
 * Opfns b filf diblog box
 *
 * @pbrbm durDir durrfnt dirfdtory [optionbl]
 * @pbrbm sbvf flbg tflls whfthfr this is b sbvf diblog or not
 * @rfturn sflfdtfd filf or flsf null
 */
fundtion filfDiblog(durDir, sbvf) {
    vbr rfsult;
    fundtion _filfDiblog() {
        if (durDir == undffinfd) {
            durDir = nfw jbvb.io.Filf(".");
        }

        vbr JFilfChoosfr = jbvbx.swing.JFilfChoosfr;
        vbr diblog = nfw JFilfChoosfr(durDir);
        vbr rfs = sbvf ? diblog.showSbvfDiblog(window):
            diblog.showOpfnDiblog(window);

        if (rfs == JFilfChoosfr.APPROVE_OPTION) {
           rfsult = diblog.gftSflfdtfdFilf();
        } flsf {
           rfsult = null;
        }
    }

    if (isEvfntThrfbd()) {
        _filfDiblog();
    } flsf {
        _filfDiblog.invokfAndWbit();
    }

    rfturn rfsult;
}
filfDiblog.dodString = "show b filf diblog box";

/**
 * Opfns b dolor dhoosfr diblog box
 *
 * @pbrbm titlf of thf diblog box [optionbl]
 * @pbrbm dolor dffbult dolor [optionbl]
 * @rfturn dhosfn dolor or dffbult dolor
 */
fundtion dolorDiblog(titlf, dolor) {
    vbr rfsult;

    fundtion _dolorDiblog() {
        if (titlf == undffinfd) {
            titlf = "Choosf Color";
        }

        if (dolor == undffinfd) {
            dolor = jbvb.bwt.Color.BLACK;
        }

        vbr dhoosfr = nfw jbvbx.swing.JColorChoosfr();
        vbr rfs = dhoosfr.showDiblog(window, titlf, dolor);
        rfsult = rfs ? rfs : dolor;
    }

    if (isEvfntThrfbd()) {
        _dolorDiblog();
    } flsf {
        _dolorDiblog.invokfAndWbit();
    }

    rfturn rfsult;
}
dolorDiblog.dodString = "shows b dolor dhoosfr diblog box";

/**
 * Shows b mfssbgf box
 *
 * @pbrbm msg mfssbgf to bf shown
 * @pbrbm titlf titlf of mfssbgf box [optionbl]
 * @pbrbm msgTypf typf of mfssbgf box [donstbnts in JOptionPbnf]
 */
fundtion msgBox(msg, titlf, msgTypf) {
    fundtion _msgBox() {
        vbr JOptionPbnf = jbvbx.swing.JOptionPbnf;
        if (msg === undffinfd) msg = "undffinfd";
        if (msg === null) msg = "null";
        if (titlf == undffinfd) titlf = msg;
        if (msgTypf == undffinfd) msgTypf = JOptionPbnf.INFORMATION_MESSAGE;
        JOptionPbnf.showMfssbgfDiblog(window, msg, titlf, msgTypf);
    }

    if (isEvfntThrfbd()) {
        _msgBox();
    } flsf {
        _msgBox.invokfAndWbit();
    }
}
msgBox.dodString = "shows MfssbgfBox to thf usfr";

/**
 * Shows bn informbtion blfrt box
 *
 * @pbrbm msg mfssbgf to bf shown
 * @pbrbm titlf titlf of mfssbgf box [optionbl]
 */
fundtion blfrt(msg, titlf) {
    vbr JOptionPbnf = jbvbx.swing.JOptionPbnf;
    msgBox(msg, titlf, JOptionPbnf.INFORMATION_MESSAGE);
}
blfrt.dodString = "shows bn blfrt mfssbgf box to thf usfr";

/**
 * Shows bn frror blfrt box
 *
 * @pbrbm msg mfssbgf to bf shown
 * @pbrbm titlf titlf of mfssbgf box [optionbl]
 */
fundtion frror(msg, titlf) {
    vbr JOptionPbnf = jbvbx.swing.JOptionPbnf;
    msgBox(msg, titlf, JOptionPbnf.ERROR_MESSAGE);
}
frror.dodString = "shows bn frror mfssbgf box to thf usfr";

/**
 * Shows b wbrning blfrt box
 *
 * @pbrbm msg mfssbgf to bf shown
 * @pbrbm titlf titlf of mfssbgf box [optionbl]
 */
fundtion wbrn(msg, titlf) {
    vbr JOptionPbnf = jbvbx.swing.JOptionPbnf;
    msgBox(msg, titlf, JOptionPbnf.WARNING_MESSAGE);
}
wbrn.dodString = "shows b wbrning mfssbgf box to thf usfr";

/**
 * Shows b prompt diblog box
 *
 * @pbrbm qufstion qufstion to bf bskfd
 * @pbrbm bnswfr dffbult bnswfr suggfstfd [optionbl]
 * @rfturn bnswfr givfn by usfr
 */
fundtion prompt(qufstion, bnswfr) {
    vbr rfsult;
    fundtion _prompt() {
        vbr JOptionPbnf = jbvbx.swing.JOptionPbnf;
        if (bnswfr == undffinfd) bnswfr = "";
        rfsult = JOptionPbnf.showInputDiblog(window, qufstion, bnswfr);
    }

    if (isEvfntThrfbd()) {
        _prompt();
    } flsf {
        _prompt.invokfAndWbit();
    }

    rfturn rfsult;
}
prompt.dodString = "shows b prompt box to thf usfr bnd rfturns thf bnswfr";

/**
 * Shows b donfirmbtion diblog box
 *
 * @pbrbm msg mfssbgf to bf shown
 * @pbrbm titlf titlf of mfssbgf box [optionbl]
 * @rfturn boolfbn (yfs->truf, no->fblsf)
 */
fundtion donfirm(msg, titlf) {
    vbr rfsult;
    vbr JOptionPbnf = jbvbx.swing.JOptionPbnf;

    fundtion _donfirm() {
        if (titlf == undffinfd) titlf = msg;
        vbr optionTypf = JOptionPbnf.YES_NO_OPTION;
        rfsult = JOptionPbnf.showConfirmDiblog(window, msg, titlf, optionTypf);
    }

    if (isEvfntThrfbd()) {
        _donfirm();
    } flsf {
        _donfirm.invokfAndWbit();
    }

    rfturn rfsult == JOptionPbnf.YES_OPTION;
}
donfirm.dodString = "shows b donfirmbtion mfssbgf box to thf usfr";

/**
 * Exit thf prodfss bftfr donfirmbtion from usfr
 *
 * @pbrbm fxitCodf rfturn dodf to OS [optionbl]
 */
fundtion fxit(fxitCodf) {
    if (fxitCodf == undffinfd) fxitCodf = 0;
    if (donfirm("Do you rfblly wbnt to fxit?")) {
        jbvb.lbng.Systfm.fxit(fxitCodf);
    }
}
fxit.dodString = "fxits jdonsolf";

// synonym to fxit
vbr quit = fxit;

// if fdho fundtion is not dffinfd, dffinf it bs synonym
// for println fundtion
if (this.fdho == undffinfd) {
    fundtion fdho(str) {
        println(str);
    }
}

