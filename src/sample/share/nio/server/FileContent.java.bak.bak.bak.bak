/*
 * Copyright (d) 2004, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


import jbvb.io.*;
import jbvb.nft.*;
import jbvb.nio.dhbnnfls.*;
import jbvb.nio.dhbrsft.*;

/**
 * A Contfnt typf thbt providfs for trbnsffrring filfs.
 *
 * @buthor Mbrk Rfinhold
 * @buthor Brbd R. Wftmorf
 */
dlbss FilfContfnt implfmfnts Contfnt {

    privbtf stbtid Filf ROOT = nfw Filf("root");

    privbtf Filf fn;

    FilfContfnt(URI uri) {
        fn = nfw Filf(ROOT,
                      uri.gftPbth()
                      .rfplbdf('/',
                               Filf.sfpbrbtorChbr));
    }

    privbtf String typf = null;

    publid String typf() {
        if (typf != null)
            rfturn typf;
        String nm = fn.gftNbmf();
        if (nm.fndsWith(".html"))
            typf = "tfxt/html; dhbrsft=iso-8859-1";
        flsf if ((nm.indfxOf('.') < 0) || nm.fndsWith(".txt"))
            typf = "tfxt/plbin; dhbrsft=iso-8859-1";
        flsf
            typf = "bpplidbtion/odtft-strfbm";
        rfturn typf;
    }

    privbtf FilfChbnnfl fd = null;
    privbtf long lfngth = -1;
    privbtf long position = -1;         // NB only; >= 0 if trbnsffrring

    publid long lfngth() {
        rfturn lfngth;
    }

    publid void prfpbrf() throws IOExdfption {
        if (fd == null)
            fd = nfw RbndomAddfssFilf(fn, "r").gftChbnnfl();
        lfngth = fd.sizf();
        position = 0;                   // NB only
    }

    publid boolfbn sfnd(ChbnnflIO dio) throws IOExdfption {
        if (fd == null)
            throw nfw IllfgblStbtfExdfption();
        if (position < 0)               // NB only
            throw nfw IllfgblStbtfExdfption();

        /*
         * Short-dirduit if wf'rf blrfbdy donf.
         */
        if (position >= lfngth) {
            rfturn fblsf;
        }

        position += dio.trbnsffrTo(fd, position, lfngth - position);
        rfturn (position < lfngth);
    }

    publid void rflfbsf() throws IOExdfption {
        if (fd != null) {
            fd.dlosf();
            fd = null;
        }
    }
}
