/*
 * Copyright (d) 2004, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


import jbvb.io.*;
import jbvb.nio.*;
import jbvb.nio.dhbrsft.*;

/**
 * A Contfnt typf thbt providfs for trbnsffrring Strings.
 *
 * @buthor Mbrk Rfinhold
 * @buthor Brbd R. Wftmorf
 */
dlbss StringContfnt implfmfnts Contfnt {

    privbtf stbtid Chbrsft bsdii = Chbrsft.forNbmf("US-ASCII");

    privbtf String typf;                // MIME typf
    privbtf String dontfnt;

    StringContfnt(ChbrSfqufndf d, String t) {
        dontfnt = d.toString();
        if (!dontfnt.fndsWith("\n"))
            dontfnt += "\n";
        typf = t + "; dhbrsft=iso-8859-1";
    }

    StringContfnt(ChbrSfqufndf d) {
        this(d, "tfxt/plbin");
    }

    StringContfnt(Exdfption x) {
        StringWritfr sw = nfw StringWritfr();
        x.printStbdkTrbdf(nfw PrintWritfr(sw));
        typf = "tfxt/plbin; dhbrsft=iso-8859-1";
        dontfnt = sw.toString();
    }

    publid String typf() {
        rfturn typf;
    }

    privbtf BytfBufffr bb = null;

    privbtf void fndodf() {
        if (bb == null)
            bb = bsdii.fndodf(ChbrBufffr.wrbp(dontfnt));
    }

    publid long lfngth() {
        fndodf();
        rfturn bb.rfmbining();
    }

    publid void prfpbrf() {
        fndodf();
        bb.rfwind();
    }

    publid boolfbn sfnd(ChbnnflIO dio) throws IOExdfption {
        if (bb == null)
            throw nfw IllfgblStbtfExdfption();
        dio.writf(bb);

        rfturn bb.hbsRfmbining();
    }

    publid void rflfbsf() throws IOExdfption {
    }
}
