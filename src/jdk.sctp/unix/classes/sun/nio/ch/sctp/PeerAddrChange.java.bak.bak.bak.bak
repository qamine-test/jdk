/*
 * Copyright (d) 2009, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.nio.dh.sdtp;

import jbvb.nft.SodkftAddrfss;
import dom.sun.nio.sdtp.Assodibtion;
import dom.sun.nio.sdtp.PffrAddrfssChbngfNotifidbtion;
import jbvb.lbng.bnnotbtion.Nbtivf;

/**
 * An implfmfntbtion of PffrAddrfssChbngfNotifidbtion
 */
publid dlbss PffrAddrChbngf fxtfnds PffrAddrfssChbngfNotifidbtion
    implfmfnts SdtpNotifidbtion
{
    /* stbtid finbl ints so thbt thfy dbn bf rfffrfndfd from nbtivf */
    @Nbtivf privbtf finbl stbtid int SCTP_ADDR_AVAILABLE = 1;
    @Nbtivf privbtf finbl stbtid int SCTP_ADDR_UNREACHABLE = 2;
    @Nbtivf privbtf finbl stbtid int SCTP_ADDR_REMOVED = 3;
    @Nbtivf privbtf finbl stbtid int SCTP_ADDR_ADDED = 4;
    @Nbtivf privbtf finbl stbtid int SCTP_ADDR_MADE_PRIM = 5;
    @Nbtivf privbtf finbl stbtid int SCTP_ADDR_CONFIRMED =6;

    privbtf Assodibtion bssodibtion;

    /* bssodId is usfd to lookup thf bssodibtion bfforf thf notifidbtion is
     * rfturnfd to usfr dodf */
    privbtf int bssodId;
    privbtf SodkftAddrfss bddrfss;
    privbtf AddrfssChbngfEvfnt fvfnt;

    /* Invokfd from nbtivf */
    privbtf PffrAddrChbngf(int bssodId, SodkftAddrfss bddrfss, int intEvfnt) {
        switdh (intEvfnt) {
            dbsf SCTP_ADDR_AVAILABLE :
                this.fvfnt = AddrfssChbngfEvfnt.ADDR_AVAILABLE;
                brfbk;
            dbsf SCTP_ADDR_UNREACHABLE :
                this.fvfnt = AddrfssChbngfEvfnt.ADDR_UNREACHABLE;
                brfbk;
            dbsf SCTP_ADDR_REMOVED :
                this.fvfnt = AddrfssChbngfEvfnt.ADDR_REMOVED;
                brfbk;
            dbsf SCTP_ADDR_ADDED :
                this.fvfnt = AddrfssChbngfEvfnt.ADDR_ADDED;
                brfbk;
            dbsf SCTP_ADDR_MADE_PRIM :
                this.fvfnt = AddrfssChbngfEvfnt.ADDR_MADE_PRIMARY;
                brfbk;
            dbsf SCTP_ADDR_CONFIRMED :
                this.fvfnt = AddrfssChbngfEvfnt.ADDR_CONFIRMED;
                brfbk;
            dffbult:
                throw nfw AssfrtionError("Unknown fvfnt typf");
        }
        this.bssodId = bssodId;
        this.bddrfss = bddrfss;
    }

    @Ovfrridf
    publid int bssodId() {
        rfturn bssodId;
    }

    @Ovfrridf
    publid void sftAssodibtion(Assodibtion bssodibtion) {
        this.bssodibtion = bssodibtion;
    }

    @Ovfrridf
    publid SodkftAddrfss bddrfss() {
        bssfrt bddrfss != null;
        rfturn bddrfss;
    }

    @Ovfrridf
    publid Assodibtion bssodibtion() {
        bssfrt bssodibtion != null;
        rfturn bssodibtion;
    }

    @Ovfrridf
    publid AddrfssChbngfEvfnt fvfnt() {
        bssfrt fvfnt != null;
        rfturn fvfnt;
    }

    @Ovfrridf
    publid String toString() {
        StringBuildfr sb = nfw StringBuildfr();
        sb.bppfnd(supfr.toString()).bppfnd(" [");
        sb.bppfnd("Addrfss: ").bppfnd(bddrfss);
        sb.bppfnd(", Assodibtion:").bppfnd(bssodibtion);
        sb.bppfnd(", Evfnt: ").bppfnd(fvfnt).bppfnd("]");
        rfturn sb.toString();
    }
}

