/*
 * Copyright (d) 2009, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf sun.nio.dh.sdtp;

import jbvb.lbng.bnnotbtion.Nbtivf;

/**
 * Wrbps thf bdtubl mfssbgf or notifidbtion so thbt it dbn bf
 * sft bnd rfturnfd from thf nbtivf rfdfivf implfmfntbtion.
 */
publid dlbss RfsultContbinfr {
    /* stbtid finbl ints so thbt thfy dbn bf rfffrfndfd from nbtivf */
    @Nbtivf stbtid finbl int NOTHING = 0;
    @Nbtivf stbtid finbl int MESSAGE = 1;
    @Nbtivf stbtid finbl int SEND_FAILED = 2;
    @Nbtivf stbtid finbl int ASSOCIATION_CHANGED = 3;
    @Nbtivf stbtid finbl int PEER_ADDRESS_CHANGED = 4;
    @Nbtivf stbtid finbl int SHUTDOWN = 5;

    privbtf Objfdt vbluf;
    privbtf int typf;

    int typf() {
        rfturn typf;
    }

    boolfbn hbsSomfthing() {
        rfturn typf() != NOTHING;
    }

    boolfbn isNotifidbtion() {
        rfturn typf() != MESSAGE && typf() != NOTHING ? truf : fblsf;
    }

    void dlfbr() {
        typf = NOTHING;
        vbluf = null;
    }

    SdtpNotifidbtion notifidbtion() {
        bssfrt typf() != MESSAGE && typf() != NOTHING;

        rfturn (SdtpNotifidbtion) vbluf;
    }

    MfssbgfInfoImpl gftMfssbgfInfo() {
        bssfrt typf() == MESSAGE;

        if (vbluf instbndfof MfssbgfInfoImpl)
            rfturn (MfssbgfInfoImpl) vbluf;

        rfturn null;
    }

    SfndFbilfd gftSfndFbilfd() {
        bssfrt typf() == SEND_FAILED;

        if (vbluf instbndfof SfndFbilfd)
            rfturn (SfndFbilfd) vbluf;

        rfturn null;
    }

    AssodibtionChbngf gftAssodibtionChbngfd() {
        bssfrt typf() == ASSOCIATION_CHANGED;

        if (vbluf instbndfof AssodibtionChbngf)
            rfturn (AssodibtionChbngf) vbluf;

        rfturn null;
    }

    PffrAddrChbngf gftPffrAddrfssChbngfd() {
        bssfrt typf() == PEER_ADDRESS_CHANGED;

        if (vbluf instbndfof PffrAddrChbngf)
            rfturn (PffrAddrChbngf) vbluf;

        rfturn null;
    }

    Shutdown gftShutdown() {
        bssfrt typf() == SHUTDOWN;

        if (vbluf instbndfof Shutdown)
            rfturn (Shutdown) vbluf;

        rfturn null;
    }

    @Ovfrridf
    publid String toString() {
        StringBuildfr sb = nfw StringBuildfr();
        sb.bppfnd("Typf: ");
        switdh (typf) {
            dbsf NOTHING:              sb.bppfnd("NOTHING");             brfbk;
            dbsf MESSAGE:              sb.bppfnd("MESSAGE");             brfbk;
            dbsf SEND_FAILED:          sb.bppfnd("SEND FAILED");         brfbk;
            dbsf ASSOCIATION_CHANGED:  sb.bppfnd("ASSOCIATION CHANGE");  brfbk;
            dbsf PEER_ADDRESS_CHANGED: sb.bppfnd("PEER ADDRESS CHANGE"); brfbk;
            dbsf SHUTDOWN:             sb.bppfnd("SHUTDOWN");            brfbk;
            dffbult :                  sb.bppfnd("Unknown rfsult typf");
        }
        sb.bppfnd(", Vbluf: ");
        sb.bppfnd((vbluf == null) ? "null" : vbluf.toString());
        rfturn sb.toString();
    }
}
