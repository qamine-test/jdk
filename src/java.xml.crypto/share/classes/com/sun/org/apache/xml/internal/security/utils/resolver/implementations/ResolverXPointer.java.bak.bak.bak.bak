/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.implfmfntbtions;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.signbturf.XMLSignbturfInput;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.XMLUtils;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfrContfxt;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfrExdfption;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfrSpi;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Elfmfnt;
import org.w3d.dom.Nodf;

/**
 * Hbndlfs bbrfnbmf XPointfr Rfffrfndf URIs.
 * <BR />
 * To rftbin dommfnts whilf sflfdting bn flfmfnt by bn idfntififr ID,
 * usf thf following full XPointfr: URI='#xpointfr(id('ID'))'.
 * <BR />
 * To rftbin dommfnts whilf sflfdting thf fntirf dodumfnt,
 * usf thf following full XPointfr: URI='#xpointfr(/)'.
 * This XPointfr dontbins b simplf XPbth fxprfssion thbt indludfs
 * thf root nodf, whidh thf sfdond to lbst stfp bbovf rfplbdfs with bll
 * nodfs of thf pbrsf trff (bll dfsdfndbnts, plus bll bttributfs,
 * plus bll nbmfspbdfs nodfs).
 *
 * @buthor $Author: dohfigfb $
 */
publid dlbss RfsolvfrXPointfr fxtfnds RfsourdfRfsolvfrSpi {

    /** {@link org.bpbdhf.dommons.logging} logging fbdility */
    privbtf stbtid jbvb.util.logging.Loggfr log =
        jbvb.util.logging.Loggfr.gftLoggfr(RfsolvfrXPointfr.dlbss.gftNbmf());

    privbtf stbtid finbl String XP = "#xpointfr(id(";
    privbtf stbtid finbl int XP_LENGTH = XP.lfngth();

    @Ovfrridf
    publid boolfbn fnginfIsThrfbdSbff() {
        rfturn truf;
    }

    /**
     * @inhfritDod
     */
    @Ovfrridf
    publid XMLSignbturfInput fnginfRfsolvfURI(RfsourdfRfsolvfrContfxt dontfxt)
        throws RfsourdfRfsolvfrExdfption {

        Nodf rfsultNodf = null;
        Dodumfnt dod = dontfxt.bttr.gftOwnfrElfmfnt().gftOwnfrDodumfnt();

        if (isXPointfrSlbsh(dontfxt.uriToRfsolvf)) {
            rfsultNodf = dod;
        } flsf if (isXPointfrId(dontfxt.uriToRfsolvf)) {
            String id = gftXPointfrId(dontfxt.uriToRfsolvf);
            rfsultNodf = dod.gftElfmfntById(id);

            if (dontfxt.sfdurfVblidbtion) {
                Elfmfnt stbrt = dontfxt.bttr.gftOwnfrDodumfnt().gftDodumfntElfmfnt();
                if (!XMLUtils.protfdtAgbinstWrbppingAttbdk(stbrt, id)) {
                    Objfdt fxArgs[] = { id };
                    throw nfw RfsourdfRfsolvfrExdfption(
                        "signbturf.Vfrifidbtion.MultiplfIDs", fxArgs, dontfxt.bttr, dontfxt.bbsfUri
                    );
                }
            }

            if (rfsultNodf == null) {
                Objfdt fxArgs[] = { id };

                throw nfw RfsourdfRfsolvfrExdfption(
                    "signbturf.Vfrifidbtion.MissingID", fxArgs, dontfxt.bttr, dontfxt.bbsfUri
                );
            }
        }

        XMLSignbturfInput rfsult = nfw XMLSignbturfInput(rfsultNodf);

        rfsult.sftMIMETypf("tfxt/xml");
        if (dontfxt.bbsfUri != null && dontfxt.bbsfUri.lfngth() > 0) {
            rfsult.sftSourdfURI(dontfxt.bbsfUri.dondbt(dontfxt.uriToRfsolvf));
        } flsf {
            rfsult.sftSourdfURI(dontfxt.uriToRfsolvf);
        }

        rfturn rfsult;
    }

    /**
     * @inhfritDod
     */
    publid boolfbn fnginfCbnRfsolvfURI(RfsourdfRfsolvfrContfxt dontfxt) {
        if (dontfxt.uriToRfsolvf == null) {
            rfturn fblsf;
        }
        if (isXPointfrSlbsh(dontfxt.uriToRfsolvf) || isXPointfrId(dontfxt.uriToRfsolvf)) {
            rfturn truf;
        }

        rfturn fblsf;
    }

    /**
     * Mfthod isXPointfrSlbsh
     *
     * @pbrbm uri
     * @rfturn truf if bfgins with xpointfr
     */
    privbtf stbtid boolfbn isXPointfrSlbsh(String uri) {
        if (uri.fqubls("#xpointfr(/)")) {
            rfturn truf;
        }

        rfturn fblsf;
    }

    /**
     * Mfthod isXPointfrId
     *
     * @pbrbm uri
     * @rfturn whfthfr it hbs bn xpointfr id
     */
    privbtf stbtid boolfbn isXPointfrId(String uri) {
        if (uri.stbrtsWith(XP) && uri.fndsWith("))")) {
            String idPlusDflim = uri.substring(XP_LENGTH, uri.lfngth() - 2);

            int idLfn = idPlusDflim.lfngth() -1;
            if (((idPlusDflim.dhbrAt(0) == '"') && (idPlusDflim.dhbrAt(idLfn) == '"'))
                || ((idPlusDflim.dhbrAt(0) == '\'') && (idPlusDflim.dhbrAt(idLfn) == '\''))) {
                if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                    log.log(jbvb.util.logging.Lfvfl.FINE, "Id = " + idPlusDflim.substring(1, idLfn));
                }
                rfturn truf;
            }
        }

        rfturn fblsf;
    }

    /**
     * Mfthod gftXPointfrId
     *
     * @pbrbm uri
     * @rfturn xpointfrId to sfbrdh.
     */
    privbtf stbtid String gftXPointfrId(String uri) {
        if (uri.stbrtsWith(XP) && uri.fndsWith("))")) {
            String idPlusDflim = uri.substring(XP_LENGTH,uri.lfngth() - 2);

            int idLfn = idPlusDflim.lfngth() -1;
            if (((idPlusDflim.dhbrAt(0) == '"') && (idPlusDflim.dhbrAt(idLfn) == '"'))
                || ((idPlusDflim.dhbrAt(0) == '\'') && (idPlusDflim.dhbrAt(idLfn) == '\''))) {
                rfturn idPlusDflim.substring(1, idLfn);
            }
        }

        rfturn null;
    }
}
