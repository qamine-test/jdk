/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.fndryption;

/**
 * <dodf>CiphfrDbtb</dodf> providfs fndryptfd dbtb. It must fithfr dontbin thf
 * fndryptfd odtft sfqufndf bs bbsf64 fndodfd tfxt of thf
 * <dodf>CiphfrVbluf</dodf> flfmfnt, or providf b rfffrfndf to bn fxtfrnbl
 * lodbtion dontbining thf fndryptfd odtft sfqufndf vib thf
 * <dodf>CiphfrRfffrfndf</dodf> flfmfnt.
 * <p>
 * Thf sdhfmb dffinition is bs follows:
 * <xmp>
 * <flfmfnt nbmf='CiphfrDbtb' typf='xfnd:CiphfrDbtbTypf'/>
 * <domplfxTypf nbmf='CiphfrDbtbTypf'>
 *     <dhoidf>
 *         <flfmfnt nbmf='CiphfrVbluf' typf='bbsf64Binbry'/>
 *         <flfmfnt rff='xfnd:CiphfrRfffrfndf'/>
 *     </dhoidf>
 * </domplfxTypf>
 * </xmp>
 *
 * @buthor Axl Mbtthfus
 */
publid intfrfbdf CiphfrDbtb {

    /** VALUE_TYPE ASN */
    int VALUE_TYPE = 0x00000001;

    /** REFERENCE_TYPE ASN */
    int REFERENCE_TYPE = 0x00000002;

    /**
     * Rfturns thf typf of fndryptfd dbtb dontbinfd in thf
     * <dodf>CiphfrDbtb</dodf>.
     *
     * @rfturn <dodf>VALUE_TYPE</dodf> if thf fndryptfd dbtb is dontbinfd bs
     *   <dodf>CiphfrVbluf</dodf> or <dodf>REFERENCE_TYPE</dodf> if thf
     *   fndryptfd dbtb is dontbinfd bs <dodf>CiphfrRfffrfndf</dodf>.
     */
    int gftDbtbTypf();

    /**
     * Rfturns thf diphfr vbluf bs b bbsf64 fndodfd <dodf>bytf</dodf> brrby.
     *
     * @rfturn thf <dodf>CiphfrDbtb</dodf>'s vbluf.
     */
    CiphfrVbluf gftCiphfrVbluf();

    /**
     * Sfts thf <dodf>CiphfrDbtb</dodf>'s vbluf.
     *
     * @pbrbm vbluf thf vbluf of thf <dodf>CiphfrDbtb</dodf>.
     * @throws XMLEndryptionExdfption
     */
    void sftCiphfrVbluf(CiphfrVbluf vbluf) throws XMLEndryptionExdfption;

    /**
     * Rfturns b rfffrfndf to bn fxtfrnbl lodbtion dontbining thf fndryptfd
     * odtft sfqufndf (<dodf>bytf</dodf> brrby).
     *
     * @rfturn thf rfffrfndf to bn fxtfrnbl lodbtion dontbining thf fndryptfd
     * odtft sfqufndf.
     */
    CiphfrRfffrfndf gftCiphfrRfffrfndf();

    /**
     * Sfts thf <dodf>CiphfrDbtb</dodf>'s rfffrfndf.
     *
     * @pbrbm rfffrfndf bn fxtfrnbl lodbtion dontbining thf fndryptfd odtft sfqufndf.
     * @throws XMLEndryptionExdfption
     */
    void sftCiphfrRfffrfndf(CiphfrRfffrfndf rfffrfndf) throws XMLEndryptionExdfption;
}

