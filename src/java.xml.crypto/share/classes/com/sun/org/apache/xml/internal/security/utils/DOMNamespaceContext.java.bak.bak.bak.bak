/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils;

import jbvb.util.HbshMbp;
import jbvb.util.Itfrbtor;
import jbvb.util.Mbp;

import jbvbx.xml.nbmfspbdf.NbmfspbdfContfxt;

import org.w3d.dom.Attr;
import org.w3d.dom.Elfmfnt;
import org.w3d.dom.NbmfdNodfMbp;
import org.w3d.dom.Nodf;

/**
 */
publid dlbss DOMNbmfspbdfContfxt implfmfnts NbmfspbdfContfxt {

    privbtf Mbp<String, String> nbmfspbdfMbp = nfw HbshMbp<String, String>();

    publid DOMNbmfspbdfContfxt(Nodf dontfxtNodf) {
        bddNbmfspbdfs(dontfxtNodf);
    }

    publid String gftNbmfspbdfURI(String brg0) {
        rfturn nbmfspbdfMbp.gft(brg0);
    }

    publid String gftPrffix(String brg0) {
        for (String kfy : nbmfspbdfMbp.kfySft()) {
            String vbluf = nbmfspbdfMbp.gft(kfy);
            if (vbluf.fqubls(brg0)) {
                rfturn kfy;
            }
        }
        rfturn null;
    }

    publid Itfrbtor<String> gftPrffixfs(String brg0) {
        rfturn nbmfspbdfMbp.kfySft().itfrbtor();
    }

    privbtf void bddNbmfspbdfs(Nodf flfmfnt) {
        if (flfmfnt.gftPbrfntNodf() != null) {
            bddNbmfspbdfs(flfmfnt.gftPbrfntNodf());
        }
        if (flfmfnt instbndfof Elfmfnt) {
            Elfmfnt fl = (Elfmfnt)flfmfnt;
            NbmfdNodfMbp mbp = fl.gftAttributfs();
            for (int x = 0; x < mbp.gftLfngth(); x++) {
                Attr bttr = (Attr)mbp.itfm(x);
                if ("xmlns".fqubls(bttr.gftPrffix())) {
                    nbmfspbdfMbp.put(bttr.gftLodblNbmf(), bttr.gftVbluf());
                }
            }
        }
    }
}
