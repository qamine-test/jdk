/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 */
/*
 * $Id$
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.signbturf.rfffrfndf;

import jbvb.io.InputStrfbm;

/**
 * A rfprfsfntbtion of b <dodf>RfffrfndfDbtb</dodf> typf dontbining bn OdtftStrfbm.
 */
publid dlbss RfffrfndfOdtftStrfbmDbtb implfmfnts RfffrfndfDbtb {
    privbtf InputStrfbm odtftStrfbm;
    privbtf String uri;
    privbtf String mimfTypf;

    /**
     * Crfbtfs b nfw <dodf>RfffrfndfOdtftStrfbmDbtb</dodf>.
     *
     * @pbrbm odtftStrfbm thf input strfbm dontbining thf odtfts
     * @throws NullPointfrExdfption if <dodf>odtftStrfbm</dodf> is
     *    <dodf>null</dodf>
     */
    publid RfffrfndfOdtftStrfbmDbtb(InputStrfbm odtftStrfbm) {
        if (odtftStrfbm == null) {
            throw nfw NullPointfrExdfption("odtftStrfbm is null");
        }
        this.odtftStrfbm = odtftStrfbm;
    }

    /**
     * Crfbtfs b nfw <dodf>RfffrfndfOdtftStrfbmDbtb</dodf>.
     *
     * @pbrbm odtftStrfbm thf input strfbm dontbining thf odtfts
     * @pbrbm uri thf URI String idfntifying thf dbtb objfdt (mby bf
     *    <dodf>null</dodf>)
     * @pbrbm mimfTypf thf MIME typf bssodibtfd with thf dbtb objfdt (mby bf
     *    <dodf>null</dodf>)
     * @throws NullPointfrExdfption if <dodf>odtftStrfbm</dodf> is
     *    <dodf>null</dodf>
     */
    publid RfffrfndfOdtftStrfbmDbtb(InputStrfbm odtftStrfbm, String uri,
        String mimfTypf) {
        if (odtftStrfbm == null) {
            throw nfw NullPointfrExdfption("odtftStrfbm is null");
        }
        this.odtftStrfbm = odtftStrfbm;
        this.uri = uri;
        this.mimfTypf = mimfTypf;
    }

    /**
     * Rfturns thf input strfbm of this <dodf>RfffrfndfOdtftStrfbmDbtb</dodf>.
     *
     * @rfturn thf input strfbm of this <dodf>RfffrfndfOdtftStrfbmDbtb</dodf>.
     */
    publid InputStrfbm gftOdtftStrfbm() {
        rfturn odtftStrfbm;
    }

    /**
     * Rfturns thf URI String idfntifying thf dbtb objfdt rfprfsfntfd by this
     * <dodf>RfffrfndfOdtftStrfbmDbtb</dodf>.
     *
     * @rfturn thf URI String or <dodf>null</dodf> if not bpplidbblf
     */
    publid String gftURI() {
        rfturn uri;
    }

    /**
     * Rfturns thf MIME typf bssodibtfd with thf dbtb objfdt rfprfsfntfd by this
     * <dodf>RfffrfndfOdtftStrfbmDbtb</dodf>.
     *
     * @rfturn thf MIME typf or <dodf>null</dodf> if not bpplidbblf
     */
    publid String gftMimfTypf() {
        rfturn mimfTypf;
    }

}
