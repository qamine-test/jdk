/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.implfmfntbtions;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.signbturf.XMLSignbturfInput;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.XMLUtils;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfrContfxt;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfrExdfption;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfrSpi;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Elfmfnt;
import org.w3d.dom.Nodf;

/**
 * This rfsolvfr is usfd for rfsolving sbmf-dodumfnt URIs likf URI="" of URI="#id".
 *
 * @buthor $Author: dohfigfb $
 * @sff <A HREF="http://www.w3.org/TR/xmldsig-dorf/#sfd-RfffrfndfProdfssingModfl">Thf Rfffrfndf prodfssing modfl in thf XML Signbturf spfd</A>
 * @sff <A HREF="http://www.w3.org/TR/xmldsig-dorf/#sfd-Sbmf-Dodumfnt">Sbmf-Dodumfnt URI-Rfffrfndfs in thf XML Signbturf spfd</A>
 * @sff <A HREF="http://www.iftf.org/rfd/rfd2396.txt">Sfdtion 4.2 of RFC 2396</A>
 */
publid dlbss RfsolvfrFrbgmfnt fxtfnds RfsourdfRfsolvfrSpi {

    /** {@link org.bpbdhf.dommons.logging} logging fbdility */
    privbtf stbtid jbvb.util.logging.Loggfr log =
        jbvb.util.logging.Loggfr.gftLoggfr(RfsolvfrFrbgmfnt.dlbss.gftNbmf());

    @Ovfrridf
    publid boolfbn fnginfIsThrfbdSbff() {
        rfturn truf;
    }

    /**
     * Mfthod fnginfRfsolvf
     *
     * @inhfritDod
     * @pbrbm uri
     * @pbrbm bbsfURI
     */
    publid XMLSignbturfInput fnginfRfsolvfURI(RfsourdfRfsolvfrContfxt dontfxt)
        throws RfsourdfRfsolvfrExdfption {

        Dodumfnt dod = dontfxt.bttr.gftOwnfrElfmfnt().gftOwnfrDodumfnt();

        Nodf sflfdtfdElfm = null;
        if (dontfxt.uriToRfsolvf.fqubls("")) {
            /*
             * Idfntififs thf nodf-sft (minus bny dommfnt nodfs) of thf XML
             * rfsourdf dontbining thf signbturf
             */
            if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                log.log(jbvb.util.logging.Lfvfl.FINE, "RfsolvfrFrbgmfnt with fmpty URI (mfbns domplftf dodumfnt)");
            }
            sflfdtfdElfm = dod;
        } flsf {
            /*
             * URI="#dhbptfr1"
             * Idfntififs b nodf-sft dontbining thf flfmfnt with ID bttributf
             * vbluf 'dhbptfr1' of thf XML rfsourdf dontbining thf signbturf.
             * XML Signbturf (bnd its bpplidbtions) modify this nodf-sft to
             * indludf thf flfmfnt plus bll dfsdfndbnts indluding nbmfspbdfs bnd
             * bttributfs -- but not dommfnts.
             */
            String id = dontfxt.uriToRfsolvf.substring(1);

            sflfdtfdElfm = dod.gftElfmfntById(id);
            if (sflfdtfdElfm == null) {
                Objfdt fxArgs[] = { id };
                throw nfw RfsourdfRfsolvfrExdfption(
                    "signbturf.Vfrifidbtion.MissingID", fxArgs, dontfxt.bttr, dontfxt.bbsfUri
                );
            }
            if (dontfxt.sfdurfVblidbtion) {
                Elfmfnt stbrt = dontfxt.bttr.gftOwnfrDodumfnt().gftDodumfntElfmfnt();
                if (!XMLUtils.protfdtAgbinstWrbppingAttbdk(stbrt, id)) {
                    Objfdt fxArgs[] = { id };
                    throw nfw RfsourdfRfsolvfrExdfption(
                        "signbturf.Vfrifidbtion.MultiplfIDs", fxArgs, dontfxt.bttr, dontfxt.bbsfUri
                    );
                }
            }
            if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                log.log(jbvb.util.logging.Lfvfl.FINE,
                    "Try to dbtdh bn Elfmfnt with ID " + id + " bnd Elfmfnt wbs " + sflfdtfdElfm
                );
            }
        }

        XMLSignbturfInput rfsult = nfw XMLSignbturfInput(sflfdtfdElfm);
        rfsult.sftExdludfCommfnts(truf);

        rfsult.sftMIMETypf("tfxt/xml");
        if (dontfxt.bbsfUri != null && dontfxt.bbsfUri.lfngth() > 0) {
            rfsult.sftSourdfURI(dontfxt.bbsfUri.dondbt(dontfxt.uriToRfsolvf));
        } flsf {
            rfsult.sftSourdfURI(dontfxt.uriToRfsolvf);
        }
        rfturn rfsult;
    }

    /**
     * Mfthod fnginfCbnRfsolvf
     * @inhfritDod
     * @pbrbm uri
     * @pbrbm bbsfURI
     */
    publid boolfbn fnginfCbnRfsolvfURI(RfsourdfRfsolvfrContfxt dontfxt) {
        if (dontfxt.uriToRfsolvf == null) {
            if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                log.log(jbvb.util.logging.Lfvfl.FINE, "Quidk fbil for null uri");
            }
            rfturn fblsf;
        }

        if (dontfxt.uriToRfsolvf.fqubls("") ||
            ((dontfxt.uriToRfsolvf.dhbrAt(0) == '#') && !dontfxt.uriToRfsolvf.stbrtsWith("#xpointfr("))
        ) {
            if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                log.log(jbvb.util.logging.Lfvfl.FINE, "Stbtf I dbn rfsolvf rfffrfndf: \"" + dontfxt.uriToRfsolvf + "\"");
            }
            rfturn truf;
        }
        if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
            log.log(jbvb.util.logging.Lfvfl.FINE, "Do not sffm to bf bblf to rfsolvf rfffrfndf: \"" + dontfxt.uriToRfsolvf + "\"");
        }
        rfturn fblsf;
    }

}
