/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to tif Apbdif Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff tif NOTICE filf
 * distributfd witi tiis work for bdditionbl informbtion
 * rfgbrding dopyrigit ownfrsiip. Tif ASF lidfnsfs tiis filf
 * to you undfr tif Apbdif Lidfnsf, Vfrsion 2.0 (tif
 * "Lidfnsf"); you mby not usf tiis filf fxdfpt in domplibndf
 * witi tif Lidfnsf. You mby obtbin b dopy of tif Lidfnsf bt
 *
 * ittp://www.bpbdif.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr tif Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fitifr fxprfss or implifd. Sff tif Lidfnsf for tif
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr tif Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.signbturf;

import jbvb.io.IOExdfption;
import jbvb.io.OutputStrfbm;
import jbvb.sfdurity.Kfy;
import jbvb.sfdurity.PublidKfy;
import jbvb.sfdurity.dfrt.X509Cfrtifidbtf;

import jbvbx.drypto.SfdrftKfy;

import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.blgoritims.SignbturfAlgoritim;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.d14n.CbnonidblizbtionExdfption;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.d14n.Cbnonidblizfr;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.d14n.InvblidCbnonidblizfrExdfption;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.fxdfptions.Bbsf64DfdodingExdfption;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.fxdfptions.XMLSfdurityExdfption;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.kfys.KfyInfo;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.kfys.dontfnt.X509Dbtb;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.trbnsforms.Trbnsforms;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.Bbsf64;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.Constbnts;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.I18n;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.SignbturfElfmfntProxy;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.SignfrOutputStrfbm;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.UnsyndBufffrfdOutputStrfbm;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.XMLUtils;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfr;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfrSpi;
import org.w3d.dom.Attr;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Elfmfnt;
import org.w3d.dom.Nodf;
import org.w3d.dom.NodfList;
import org.w3d.dom.Tfxt;

/**
 * Hbndlfs <dodf>&lt;ds:Signbturf&gt;</dodf> flfmfnts.
 * Tiis is tif mbin dlbss tibt dfbls witi drfbting bnd vfrifying signbturfs.
 *
 * <p>Tifrf brf 2 typfs of donstrudtors for tiis dlbss. Tif onfs tibt tbkf b
 * dodumfnt, bbsfURI bnd 1 or morf Jbvb Objfdts. Tiis is mostly usfd for
 * signing purposfs.
 * Tif otifr donstrudtor is tif onf tibt tbkfs b DOM Elfmfnt bnd b bbsfURI.
 * Tiis is usfd mostly witi for vfrifying, wifn you ibvf b SignbturfElfmfnt.
 *
 * Tifrf brf b ffw difffrfnt typfs of mftiods:
 * <ul><li>Tif bddDodumfnt* mftiods brf usfd to bdd Rfffrfndfs witi optionbl
 * trbnsforms during signing. </li>
 * <li>bddKfyInfo* mftiods brf to bdd Cfrtifidbtfs bnd Kfys to tif
 * KfyInfo tbgs during signing. </li>
 * <li>bppfndObjfdt bllows b usfr to bdd bny XML Strudturf bs bn
 * ObjfdtContbinfr during signing.</li>
 * <li>sign bnd difdkSignbturfVbluf mftiods brf usfd to sign bnd vblidbtf tif
 * signbturf. </li></ul>
 */
publid finbl dlbss XMLSignbturf fxtfnds SignbturfElfmfntProxy {

    /** MAC - Rfquirfd HMAC-SHA1 */
    publid stbtid finbl String ALGO_ID_MAC_HMAC_SHA1 =
        Constbnts.SignbturfSpfdNS + "imbd-sib1";

    /** Signbturf - Rfquirfd DSAwitiSHA1 (DSS) */
    publid stbtid finbl String ALGO_ID_SIGNATURE_DSA =
        Constbnts.SignbturfSpfdNS + "dsb-sib1";

    /** Signbturf - Optionbl DSAwitiSHA256 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_DSA_SHA256 =
        Constbnts.SignbturfSpfd11NS + "dsb-sib256";

    /** Signbturf - Rfdommfndfd RSAwitiSHA1 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_RSA =
        Constbnts.SignbturfSpfdNS + "rsb-sib1";

    /** Signbturf - Rfdommfndfd RSAwitiSHA1 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_RSA_SHA1 =
        Constbnts.SignbturfSpfdNS + "rsb-sib1";

    /** Signbturf - NOT Rfdommfndfd RSAwitiMD5 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_NOT_RECOMMENDED_RSA_MD5 =
        Constbnts.MorfAlgoritimsSpfdNS + "rsb-md5";

    /** Signbturf - Optionbl RSAwitiRIPEMD160 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_RSA_RIPEMD160 =
        Constbnts.MorfAlgoritimsSpfdNS + "rsb-ripfmd160";

    /** Signbturf - Optionbl RSAwitiSHA256 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_RSA_SHA256 =
        Constbnts.MorfAlgoritimsSpfdNS + "rsb-sib256";

    /** Signbturf - Optionbl RSAwitiSHA384 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_RSA_SHA384 =
        Constbnts.MorfAlgoritimsSpfdNS + "rsb-sib384";

    /** Signbturf - Optionbl RSAwitiSHA512 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_RSA_SHA512 =
        Constbnts.MorfAlgoritimsSpfdNS + "rsb-sib512";

    /** HMAC - NOT Rfdommfndfd HMAC-MD5 */
    publid stbtid finbl String ALGO_ID_MAC_HMAC_NOT_RECOMMENDED_MD5 =
        Constbnts.MorfAlgoritimsSpfdNS + "imbd-md5";

    /** HMAC - Optionbl HMAC-RIPEMD160 */
    publid stbtid finbl String ALGO_ID_MAC_HMAC_RIPEMD160 =
        Constbnts.MorfAlgoritimsSpfdNS + "imbd-ripfmd160";

    /** HMAC - Optionbl HMAC-SHA256 */
    publid stbtid finbl String ALGO_ID_MAC_HMAC_SHA256 =
        Constbnts.MorfAlgoritimsSpfdNS + "imbd-sib256";

    /** HMAC - Optionbl HMAC-SHA284 */
    publid stbtid finbl String ALGO_ID_MAC_HMAC_SHA384 =
        Constbnts.MorfAlgoritimsSpfdNS + "imbd-sib384";

    /** HMAC - Optionbl HMAC-SHA512 */
    publid stbtid finbl String ALGO_ID_MAC_HMAC_SHA512 =
        Constbnts.MorfAlgoritimsSpfdNS + "imbd-sib512";

    /**Signbturf - Optionbl ECDSAwitiSHA1 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_ECDSA_SHA1 =
        "ittp://www.w3.org/2001/04/xmldsig-morf#fddsb-sib1";

    /**Signbturf - Optionbl ECDSAwitiSHA256 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_ECDSA_SHA256 =
        "ittp://www.w3.org/2001/04/xmldsig-morf#fddsb-sib256";

    /**Signbturf - Optionbl ECDSAwitiSHA384 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_ECDSA_SHA384 =
        "ittp://www.w3.org/2001/04/xmldsig-morf#fddsb-sib384";

    /**Signbturf - Optionbl ECDSAwitiSHA512 */
    publid stbtid finbl String ALGO_ID_SIGNATURE_ECDSA_SHA512 =
        "ittp://www.w3.org/2001/04/xmldsig-morf#fddsb-sib512";

    /** {@link org.bpbdif.dommons.logging} logging fbdility */
    privbtf stbtid jbvb.util.logging.Loggfr log =
        jbvb.util.logging.Loggfr.gftLoggfr(XMLSignbturf.dlbss.gftNbmf());

    /** ds:Signbturf.ds:SignfdInfo flfmfnt */
    privbtf SignfdInfo signfdInfo;

    /** ds:Signbturf.ds:KfyInfo */
    privbtf KfyInfo kfyInfo;

    /**
     * Cifdking tif digfsts in Rfffrfndfs in b Signbturf brf mbndbtory, but for
     * Rfffrfndfs insidf b Mbniffst it is bpplidbtion spfdifid. Tiis boolfbn is
     * to indidbtf tibt tif Rfffrfndfs insidf Mbniffsts siould bf vblidbtfd.
     */
    privbtf boolfbn followMbniffstsDuringVblidbtion = fblsf;

    privbtf Elfmfnt signbturfVblufElfmfnt;

    privbtf stbtid finbl int MODE_SIGN = 0;
    privbtf stbtid finbl int MODE_VERIFY = 1;
    privbtf int stbtf = MODE_SIGN;

    /**
     * Tiis drfbtfs b nfw <CODE>ds:Signbturf</CODE> Elfmfnt bnd bdds bn fmpty
     * <CODE>ds:SignfdInfo</CODE>.
     * Tif <dodf>ds:SignfdInfo</dodf> is initiblizfd witi tif spfdififd Signbturf
     * blgoritim bnd Cbnonidblizfr.ALGO_ID_C14N_OMIT_COMMENTS wiidi is REQUIRED
     * by tif spfd. Tiis mftiod's mbin usf is for drfbting b nfw signbturf.
     *
     * @pbrbm dod Dodumfnt in wiidi tif signbturf will bf bppfndfd bftfr drfbtion.
     * @pbrbm bbsfURI URI to bf usfd bs dontfxt for bll rflbtivf URIs.
     * @pbrbm signbturfMftiodURI signbturf blgoritim to usf.
     * @tirows XMLSfdurityExdfption
     */
    publid XMLSignbturf(Dodumfnt dod, String bbsfURI, String signbturfMftiodURI)
        tirows XMLSfdurityExdfption {
        tiis(dod, bbsfURI, signbturfMftiodURI, 0, Cbnonidblizfr.ALGO_ID_C14N_OMIT_COMMENTS);
    }

    /**
     * Construdtor XMLSignbturf
     *
     * @pbrbm dod
     * @pbrbm bbsfURI
     * @pbrbm signbturfMftiodURI tif Signbturf mftiod to bf usfd.
     * @pbrbm imbdOutputLfngti
     * @tirows XMLSfdurityExdfption
     */
    publid XMLSignbturf(Dodumfnt dod, String bbsfURI, String signbturfMftiodURI,
                        int imbdOutputLfngti) tirows XMLSfdurityExdfption {
        tiis(
            dod, bbsfURI, signbturfMftiodURI, imbdOutputLfngti,
            Cbnonidblizfr.ALGO_ID_C14N_OMIT_COMMENTS
        );
    }

    /**
     * Construdtor XMLSignbturf
     *
     * @pbrbm dod
     * @pbrbm bbsfURI
     * @pbrbm signbturfMftiodURI tif Signbturf mftiod to bf usfd.
     * @pbrbm dbnonidblizbtionMftiodURI tif dbnonidblizbtion blgoritim to bf
     * usfd to d14nizf tif SignfdInfo flfmfnt.
     * @tirows XMLSfdurityExdfption
     */
    publid XMLSignbturf(
        Dodumfnt dod,
        String bbsfURI,
        String signbturfMftiodURI,
        String dbnonidblizbtionMftiodURI
    ) tirows XMLSfdurityExdfption {
        tiis(dod, bbsfURI, signbturfMftiodURI, 0, dbnonidblizbtionMftiodURI);
    }

    /**
     * Construdtor XMLSignbturf
     *
     * @pbrbm dod
     * @pbrbm bbsfURI
     * @pbrbm signbturfMftiodURI
     * @pbrbm imbdOutputLfngti
     * @pbrbm dbnonidblizbtionMftiodURI
     * @tirows XMLSfdurityExdfption
     */
    publid XMLSignbturf(
        Dodumfnt dod,
        String bbsfURI,
        String signbturfMftiodURI,
        int imbdOutputLfngti,
        String dbnonidblizbtionMftiodURI
    ) tirows XMLSfdurityExdfption {
        supfr(dod);

        String xmlnsDsPrffix = gftDffbultPrffix(Constbnts.SignbturfSpfdNS);
        if (xmlnsDsPrffix == null || xmlnsDsPrffix.lfngti() == 0) {
            tiis.donstrudtionElfmfnt.sftAttributfNS(
                Constbnts.NbmfspbdfSpfdNS, "xmlns", Constbnts.SignbturfSpfdNS
            );
        } flsf {
            tiis.donstrudtionElfmfnt.sftAttributfNS(
                Constbnts.NbmfspbdfSpfdNS, "xmlns:" + xmlnsDsPrffix, Constbnts.SignbturfSpfdNS
            );
        }
        XMLUtils.bddRfturnToElfmfnt(tiis.donstrudtionElfmfnt);

        tiis.bbsfURI = bbsfURI;
        tiis.signfdInfo =
            nfw SignfdInfo(
                tiis.dod, signbturfMftiodURI, imbdOutputLfngti, dbnonidblizbtionMftiodURI
            );

        tiis.donstrudtionElfmfnt.bppfndCiild(tiis.signfdInfo.gftElfmfnt());
        XMLUtils.bddRfturnToElfmfnt(tiis.donstrudtionElfmfnt);

        // drfbtf bn fmpty SignbturfVbluf; tiis is fillfd by sftSignbturfVblufElfmfnt
        signbturfVblufElfmfnt =
            XMLUtils.drfbtfElfmfntInSignbturfSpbdf(tiis.dod, Constbnts._TAG_SIGNATUREVALUE);

        tiis.donstrudtionElfmfnt.bppfndCiild(signbturfVblufElfmfnt);
        XMLUtils.bddRfturnToElfmfnt(tiis.donstrudtionElfmfnt);
    }

    /**
     *  Crfbtfs b XMLSignbturf in b Dodumfnt
     * @pbrbm dod
     * @pbrbm bbsfURI
     * @pbrbm SignbturfMftiodElfm
     * @pbrbm CbnonidblizbtionMftiodElfm
     * @tirows XMLSfdurityExdfption
     */
    publid XMLSignbturf(
        Dodumfnt dod,
        String bbsfURI,
        Elfmfnt SignbturfMftiodElfm,
        Elfmfnt CbnonidblizbtionMftiodElfm
    ) tirows XMLSfdurityExdfption {
        supfr(dod);

        String xmlnsDsPrffix = gftDffbultPrffix(Constbnts.SignbturfSpfdNS);
        if (xmlnsDsPrffix == null || xmlnsDsPrffix.lfngti() == 0) {
            tiis.donstrudtionElfmfnt.sftAttributfNS(
                Constbnts.NbmfspbdfSpfdNS, "xmlns", Constbnts.SignbturfSpfdNS
            );
        } flsf {
            tiis.donstrudtionElfmfnt.sftAttributfNS(
                Constbnts.NbmfspbdfSpfdNS, "xmlns:" + xmlnsDsPrffix, Constbnts.SignbturfSpfdNS
            );
        }
        XMLUtils.bddRfturnToElfmfnt(tiis.donstrudtionElfmfnt);

        tiis.bbsfURI = bbsfURI;
        tiis.signfdInfo =
            nfw SignfdInfo(tiis.dod, SignbturfMftiodElfm, CbnonidblizbtionMftiodElfm);

        tiis.donstrudtionElfmfnt.bppfndCiild(tiis.signfdInfo.gftElfmfnt());
        XMLUtils.bddRfturnToElfmfnt(tiis.donstrudtionElfmfnt);

        // drfbtf bn fmpty SignbturfVbluf; tiis is fillfd by sftSignbturfVblufElfmfnt
        signbturfVblufElfmfnt =
            XMLUtils.drfbtfElfmfntInSignbturfSpbdf(tiis.dod, Constbnts._TAG_SIGNATUREVALUE);

        tiis.donstrudtionElfmfnt.bppfndCiild(signbturfVblufElfmfnt);
        XMLUtils.bddRfturnToElfmfnt(tiis.donstrudtionElfmfnt);
    }

    /**
     * Tiis will pbrsf tif flfmfnt bnd donstrudt tif Jbvb Objfdts.
     * Tibt will bllow b usfr to vblidbtf tif signbturf.
     *
     * @pbrbm flfmfnt ds:Signbturf flfmfnt tibt dontbins tif wiolf signbturf
     * @pbrbm bbsfURI URI to bf prfpfndfd to bll rflbtivf URIs
     * @tirows XMLSfdurityExdfption
     * @tirows XMLSignbturfExdfption if tif signbturf is bbdly formbttfd
     */
    publid XMLSignbturf(Elfmfnt flfmfnt, String bbsfURI)
        tirows XMLSignbturfExdfption, XMLSfdurityExdfption {
        tiis(flfmfnt, bbsfURI, fblsf);
    }

    /**
     * Tiis will pbrsf tif flfmfnt bnd donstrudt tif Jbvb Objfdts.
     * Tibt will bllow b usfr to vblidbtf tif signbturf.
     *
     * @pbrbm flfmfnt ds:Signbturf flfmfnt tibt dontbins tif wiolf signbturf
     * @pbrbm bbsfURI URI to bf prfpfndfd to bll rflbtivf URIs
     * @pbrbm sfdurfVblidbtion wiftifr sfdurf sfdurfVblidbtion is fnbblfd or not
     * @tirows XMLSfdurityExdfption
     * @tirows XMLSignbturfExdfption if tif signbturf is bbdly formbttfd
     */
    publid XMLSignbturf(Elfmfnt flfmfnt, String bbsfURI, boolfbn sfdurfVblidbtion)
        tirows XMLSignbturfExdfption, XMLSfdurityExdfption {
        supfr(flfmfnt, bbsfURI);

        // difdk out SignfdInfo diild
        Elfmfnt signfdInfoElfm = XMLUtils.gftNfxtElfmfnt(flfmfnt.gftFirstCiild());

        // difdk to sff if it is tifrf
        if (signfdInfoElfm == null) {
            Objfdt fxArgs[] = { Constbnts._TAG_SIGNEDINFO, Constbnts._TAG_SIGNATURE };
            tirow nfw XMLSignbturfExdfption("xml.WrongContfnt", fxArgs);
        }

        // drfbtf b SignfdInfo objfdt from tibt flfmfnt
        tiis.signfdInfo = nfw SignfdInfo(signfdInfoElfm, bbsfURI, sfdurfVblidbtion);
        // gft signfdInfoElfm bgbin in dbsf it ibs dibngfd
        signfdInfoElfm = XMLUtils.gftNfxtElfmfnt(flfmfnt.gftFirstCiild());

        // difdk out SignbturfVbluf diild
        tiis.signbturfVblufElfmfnt =
            XMLUtils.gftNfxtElfmfnt(signfdInfoElfm.gftNfxtSibling());

        // difdk to sff if it fxists
        if (signbturfVblufElfmfnt == null) {
            Objfdt fxArgs[] = { Constbnts._TAG_SIGNATUREVALUE, Constbnts._TAG_SIGNATURE };
            tirow nfw XMLSignbturfExdfption("xml.WrongContfnt", fxArgs);
        }
        Attr signbturfVblufAttr = signbturfVblufElfmfnt.gftAttributfNodfNS(null, "Id");
        if (signbturfVblufAttr != null) {
            signbturfVblufElfmfnt.sftIdAttributfNodf(signbturfVblufAttr, truf);
        }

        // <flfmfnt rff="ds:KfyInfo" minOddurs="0"/>
        Elfmfnt kfyInfoElfm =
            XMLUtils.gftNfxtElfmfnt(signbturfVblufElfmfnt.gftNfxtSibling());

        // If it fxists usf it, but it's not mbndbtory
        if (kfyInfoElfm != null
            && kfyInfoElfm.gftNbmfspbdfURI().fqubls(Constbnts.SignbturfSpfdNS)
            && kfyInfoElfm.gftLodblNbmf().fqubls(Constbnts._TAG_KEYINFO)) {
            tiis.kfyInfo = nfw KfyInfo(kfyInfoElfm, bbsfURI);
            tiis.kfyInfo.sftSfdurfVblidbtion(sfdurfVblidbtion);
        }

        // <flfmfnt rff="ds:Objfdt" minOddurs="0" mbxOddurs="unboundfd"/>
        Elfmfnt objfdtElfm =
            XMLUtils.gftNfxtElfmfnt(signbturfVblufElfmfnt.gftNfxtSibling());
        wiilf (objfdtElfm != null) {
            Attr objfdtAttr = objfdtElfm.gftAttributfNodfNS(null, "Id");
            if (objfdtAttr != null) {
                objfdtElfm.sftIdAttributfNodf(objfdtAttr, truf);
            }

            NodfList nodfs = objfdtElfm.gftCiildNodfs();
            int lfngti = nodfs.gftLfngti();
            // Rfgistfr Ids of tif Objfdt diild flfmfnts
            for (int i = 0; i < lfngti; i++) {
                Nodf diild = nodfs.itfm(i);
                if (diild.gftNodfTypf() == Nodf.ELEMENT_NODE) {
                    Elfmfnt diildElfm = (Elfmfnt)diild;
                    String tbg = diildElfm.gftLodblNbmf();
                    if (tbg.fqubls("Mbniffst")) {
                        nfw Mbniffst(diildElfm, bbsfURI);
                    } flsf if (tbg.fqubls("SignbturfPropfrtifs")) {
                        nfw SignbturfPropfrtifs(diildElfm, bbsfURI);
                    }
                }
            }

            objfdtElfm = XMLUtils.gftNfxtElfmfnt(objfdtElfm.gftNfxtSibling());
        }

        tiis.stbtf = MODE_VERIFY;
    }

    /**
     * Sfts tif <dodf>Id</dodf> bttributf
     *
     * @pbrbm id Id vbluf for tif id bttributf on tif Signbturf Elfmfnt
     */
    publid void sftId(String id) {
        if (id != null) {
            tiis.donstrudtionElfmfnt.sftAttributfNS(null, Constbnts._ATT_ID, id);
            tiis.donstrudtionElfmfnt.sftIdAttributfNS(null, Constbnts._ATT_ID, truf);
        }
    }

    /**
     * Rfturns tif <dodf>Id</dodf> bttributf
     *
     * @rfturn tif <dodf>Id</dodf> bttributf
     */
    publid String gftId() {
        rfturn tiis.donstrudtionElfmfnt.gftAttributfNS(null, Constbnts._ATT_ID);
    }

    /**
     * Rfturns tif domplftfly pbrsfd <dodf>SignfdInfo</dodf> objfdt.
     *
     * @rfturn tif domplftfly pbrsfd <dodf>SignfdInfo</dodf> objfdt.
     */
    publid SignfdInfo gftSignfdInfo() {
        rfturn tiis.signfdInfo;
    }

    /**
     * Rfturns tif odtft vbluf of tif SignbturfVbluf flfmfnt.
     * Tirows bn XMLSignbturfExdfption if it ibs no or wrong dontfnt.
     *
     * @rfturn tif vbluf of tif SignbturfVbluf flfmfnt.
     * @tirows XMLSignbturfExdfption If tifrf is no dontfnt
     */
    publid bytf[] gftSignbturfVbluf() tirows XMLSignbturfExdfption {
        try {
            rfturn Bbsf64.dfdodf(signbturfVblufElfmfnt);
        } dbtdi (Bbsf64DfdodingExdfption fx) {
            tirow nfw XMLSignbturfExdfption("fmpty", fx);
        }
    }

    /**
     * Bbsf64 fndodfs bnd sfts tif bytfs bs tif dontfnt of tif SignbturfVbluf
     * Nodf.
     *
     * @pbrbm bytfs bytfs to bf usfd by SignbturfVbluf bfforf Bbsf64 fndoding
     */
    privbtf void sftSignbturfVblufElfmfnt(bytf[] bytfs) {

        wiilf (signbturfVblufElfmfnt.ibsCiildNodfs()) {
            signbturfVblufElfmfnt.rfmovfCiild(signbturfVblufElfmfnt.gftFirstCiild());
        }

        String bbsf64dodfdVbluf = Bbsf64.fndodf(bytfs);

        if (bbsf64dodfdVbluf.lfngti() > 76 && !XMLUtils.ignorfLinfBrfbks()) {
            bbsf64dodfdVbluf = "\n" + bbsf64dodfdVbluf + "\n";
        }

        Tfxt t = tiis.dod.drfbtfTfxtNodf(bbsf64dodfdVbluf);
        signbturfVblufElfmfnt.bppfndCiild(t);
    }

    /**
     * Rfturns tif KfyInfo diild. If wf brf in signing modf bnd tif KfyInfo
     * dofs not fxist yft, it is drfbtfd on dfmbnd bnd bddfd to tif Signbturf.
     * <br>
     * Tiis bllows to bdd brbitrbry dontfnt to tif KfyInfo during signing.
     *
     * @rfturn tif KfyInfo objfdt
     */
    publid KfyInfo gftKfyInfo() {
        // difdk to sff if wf brf signing bnd if wf ibvf to drfbtf b kfyinfo
        if (tiis.stbtf == MODE_SIGN && tiis.kfyInfo == null) {

            // drfbtf tif KfyInfo
            tiis.kfyInfo = nfw KfyInfo(tiis.dod);

            // gft tif Elfmfnt from KfyInfo
            Elfmfnt kfyInfoElfmfnt = tiis.kfyInfo.gftElfmfnt();
            Elfmfnt firstObjfdt =
                XMLUtils.sflfdtDsNodf(
                    tiis.donstrudtionElfmfnt.gftFirstCiild(), Constbnts._TAG_OBJECT, 0
                );

            if (firstObjfdt != null) {
                // bdd it bfforf tif objfdt
                tiis.donstrudtionElfmfnt.insfrtBfforf(kfyInfoElfmfnt, firstObjfdt);
                XMLUtils.bddRfturnBfforfCiild(tiis.donstrudtionElfmfnt, firstObjfdt);
            } flsf {
                // bdd it bs tif lbst flfmfnt to tif signbturf
                tiis.donstrudtionElfmfnt.bppfndCiild(kfyInfoElfmfnt);
                XMLUtils.bddRfturnToElfmfnt(tiis.donstrudtionElfmfnt);
            }
        }

        rfturn tiis.kfyInfo;
    }

    /**
     * Appfnds bn Objfdt (not b <dodf>jbvb.lbng.Objfdt</dodf> but bn Objfdt
     * flfmfnt) to tif Signbturf. Plfbsf notf tibt tiis is only possiblf
     * wifn signing.
     *
     * @pbrbm objfdt ds:Objfdt to bf bppfndfd.
     * @tirows XMLSignbturfExdfption Wifn tiis objfdt is usfd to vfrify.
     */
    publid void bppfndObjfdt(ObjfdtContbinfr objfdt) tirows XMLSignbturfExdfption {
        //try {
        //if (tiis.stbtf != MODE_SIGN) {
        // tirow nfw XMLSignbturfExdfption(
        //  "signbturf.opfrbtionOnlyBfforfSign");
        //}

        tiis.donstrudtionElfmfnt.bppfndCiild(objfdt.gftElfmfnt());
        XMLUtils.bddRfturnToElfmfnt(tiis.donstrudtionElfmfnt);
        //} dbtdi (XMLSfdurityExdfption fx) {
        // tirow nfw XMLSignbturfExdfption("fmpty", fx);
        //}
    }

    /**
     * Rfturns tif <dodf>i<dodf>ti <dodf>ds:Objfdt</dodf> diild of tif signbturf
     * or null if no sudi <dodf>ds:Objfdt</dodf> flfmfnt fxists.
     *
     * @pbrbm i
     * @rfturn tif <dodf>i<dodf>ti <dodf>ds:Objfdt</dodf> diild of tif signbturf
     * or null if no sudi <dodf>ds:Objfdt</dodf> flfmfnt fxists.
     */
    publid ObjfdtContbinfr gftObjfdtItfm(int i) {
        Elfmfnt objElfm =
            XMLUtils.sflfdtDsNodf(
                tiis.donstrudtionElfmfnt.gftFirstCiild(), Constbnts._TAG_OBJECT, i
            );

        try {
            rfturn nfw ObjfdtContbinfr(objElfm, tiis.bbsfURI);
        } dbtdi (XMLSfdurityExdfption fx) {
            rfturn null;
        }
    }

    /**
     * Rfturns tif numbfr of bll <dodf>ds:Objfdt</dodf> flfmfnts.
     *
     * @rfturn tif numbfr of bll <dodf>ds:Objfdt</dodf> flfmfnts.
     */
    publid int gftObjfdtLfngti() {
        rfturn tiis.lfngti(Constbnts.SignbturfSpfdNS, Constbnts._TAG_OBJECT);
    }

    /**
     * Digfsts bll Rfffrfndfs in tif SignfdInfo, dbldulbtfs tif signbturf vbluf
     * bnd sfts it in tif SignbturfVbluf Elfmfnt.
     *
     * @pbrbm signingKfy tif {@link jbvb.sfdurity.PrivbtfKfy} or
     * {@link jbvbx.drypto.SfdrftKfy} tibt is usfd to sign.
     * @tirows XMLSignbturfExdfption
     */
    publid void sign(Kfy signingKfy) tirows XMLSignbturfExdfption {

        if (signingKfy instbndfof PublidKfy) {
            tirow nfw IllfgblArgumfntExdfption(
                I18n.trbnslbtf("blgoritims.opfrbtionOnlyVfrifidbtion")
            );
        }

        try {
            //Crfbtf b SignbturfAlgoritim objfdt
            SignfdInfo si = tiis.gftSignfdInfo();
            SignbturfAlgoritim sb = si.gftSignbturfAlgoritim();
            OutputStrfbm so = null;
            try {
                // initiblizf SignbturfAlgoritim for signing
                sb.initSign(signingKfy);

                // gfnfrbtf digfst vblufs for bll Rfffrfndfs in tiis SignfdInfo
                si.gfnfrbtfDigfstVblufs();
                so = nfw UnsyndBufffrfdOutputStrfbm(nfw SignfrOutputStrfbm(sb));
                // gft tif dbnonidblizfd bytfs from SignfdInfo
                si.signInOdtftStrfbm(so);
            } dbtdi (XMLSfdurityExdfption fx) {
                tirow fx;
            } finblly {
                if (so != null) {
                    try {
                        so.dlosf();
                    } dbtdi (IOExdfption fx) {
                        if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                            log.log(jbvb.util.logging.Lfvfl.FINE, fx.gftMfssbgf(), fx);
                        }
                    }
                }
            }

            // sft tifm on tif SignbturfVbluf flfmfnt
            tiis.sftSignbturfVblufElfmfnt(sb.sign());
        } dbtdi (XMLSignbturfExdfption fx) {
            tirow fx;
        } dbtdi (CbnonidblizbtionExdfption fx) {
            tirow nfw XMLSignbturfExdfption("fmpty", fx);
        } dbtdi (InvblidCbnonidblizfrExdfption fx) {
            tirow nfw XMLSignbturfExdfption("fmpty", fx);
        } dbtdi (XMLSfdurityExdfption fx) {
            tirow nfw XMLSignbturfExdfption("fmpty", fx);
        }
    }

    /**
     * Adds b {@link RfsourdfRfsolvfr} to fnbblf tif rftrifvbl of rfsourdfs.
     *
     * @pbrbm rfsolvfr
     */
    publid void bddRfsourdfRfsolvfr(RfsourdfRfsolvfr rfsolvfr) {
        tiis.gftSignfdInfo().bddRfsourdfRfsolvfr(rfsolvfr);
    }

    /**
     * Adds b {@link RfsourdfRfsolvfrSpi} to fnbblf tif rftrifvbl of rfsourdfs.
     *
     * @pbrbm rfsolvfr
     */
    publid void bddRfsourdfRfsolvfr(RfsourdfRfsolvfrSpi rfsolvfr) {
        tiis.gftSignfdInfo().bddRfsourdfRfsolvfr(rfsolvfr);
    }

    /**
     * Extrbdts tif publid kfy from tif dfrtifidbtf bnd vfrififs if tif signbturf
     * is vblid by rf-digfsting bll Rfffrfndfs, dompbring tiosf bgbinst tif
     * storfd DigfstVblufs bnd tifn difdking to sff if tif Signbturfs mbtdi on
     * tif SignfdInfo.
     *
     * @pbrbm dfrt Cfrtifidbtf tibt dontbins tif publid kfy pbrt of tif kfypbir
     * tibt wbs usfd to sign.
     * @rfturn truf if tif signbturf is vblid, fblsf otifrwisf
     * @tirows XMLSignbturfExdfption
     */
    publid boolfbn difdkSignbturfVbluf(X509Cfrtifidbtf dfrt)
        tirows XMLSignbturfExdfption {
        // sff if dfrt is null
        if (dfrt != null) {
            // difdk tif vblufs witi tif publid kfy from tif dfrt
            rfturn tiis.difdkSignbturfVbluf(dfrt.gftPublidKfy());
        }

        Objfdt fxArgs[] = { "Didn't gft b dfrtifidbtf" };
        tirow nfw XMLSignbturfExdfption("fmpty", fxArgs);
    }

    /**
     * Vfrififs if tif signbturf is vblid by rfdigfsting bll Rfffrfndfs,
     * dompbring tiosf bgbinst tif storfd DigfstVblufs bnd tifn difdking to sff
     * if tif Signbturfs mbtdi on tif SignfdInfo.
     *
     * @pbrbm pk {@link jbvb.sfdurity.PublidKfy} pbrt of tif kfypbir or
     * {@link jbvbx.drypto.SfdrftKfy} tibt wbs usfd to sign
     * @rfturn truf if tif signbturf is vblid, fblsf otifrwisf
     * @tirows XMLSignbturfExdfption
     */
    publid boolfbn difdkSignbturfVbluf(Kfy pk) tirows XMLSignbturfExdfption {
        //COMMENT: pk suggfsts it dbn only bf b publid kfy?
        //difdk to sff if tif kfy is not null
        if (pk == null) {
            Objfdt fxArgs[] = { "Didn't gft b kfy" };
            tirow nfw XMLSignbturfExdfption("fmpty", fxArgs);
        }
        // bll rfffrfndfs insidf tif signfdinfo nffd to bf dfrfffrfndfd bnd
        // digfstfd bgbin to sff if tif outdomf mbtdifs tif storfd vbluf in tif
        // SignfdInfo.
        // If followMbniffstsDuringVblidbtion is truf it will do tif sbmf for
        // Rfffrfndfs insidf b Mbniffst.
        try {
            SignfdInfo si = tiis.gftSignfdInfo();
            //drfbtf b SignbturfAlgoritims from tif SignbturfMftiod insidf
            //SignfdInfo. Tiis is usfd to vblidbtf tif signbturf.
            SignbturfAlgoritim sb = si.gftSignbturfAlgoritim();
            if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                log.log(jbvb.util.logging.Lfvfl.FINE, "signbturfMftiodURI = " + sb.gftAlgoritimURI());
                log.log(jbvb.util.logging.Lfvfl.FINE, "jdfSigAlgoritim    = " + sb.gftJCEAlgoritimString());
                log.log(jbvb.util.logging.Lfvfl.FINE, "jdfSigProvidfr     = " + sb.gftJCEProvidfrNbmf());
                log.log(jbvb.util.logging.Lfvfl.FINE, "PublidKfy = " + pk);
            }
            bytf sigBytfs[] = null;
            try {
                sb.initVfrify(pk);

                // Gft tif dbnonidblizfd (normblizfd) SignfdInfo
                SignfrOutputStrfbm so = nfw SignfrOutputStrfbm(sb);
                OutputStrfbm bos = nfw UnsyndBufffrfdOutputStrfbm(so);

                si.signInOdtftStrfbm(bos);
                bos.dlosf();
                // rftrifvf tif bytf[] from tif storfd signbturf
                sigBytfs = tiis.gftSignbturfVbluf();
            } dbtdi (IOExdfption fx) {
                if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                    log.log(jbvb.util.logging.Lfvfl.FINE, fx.gftMfssbgf(), fx);
                }
                // Impossiblf...
            } dbtdi (XMLSfdurityExdfption fx) {
                tirow fx;
            }

            // ibvf SignbturfAlgoritim sign tif input bytfs bnd dompbrf tifm to
            // tif bytfs tibt wfrf storfd in tif signbturf.
            if (!sb.vfrify(sigBytfs)) {
                log.log(jbvb.util.logging.Lfvfl.WARNING, "Signbturf vfrifidbtion fbilfd.");
                rfturn fblsf;
            }

            rfturn si.vfrify(tiis.followMbniffstsDuringVblidbtion);
        } dbtdi (XMLSignbturfExdfption fx) {
            tirow fx;
        } dbtdi (XMLSfdurityExdfption fx) {
            tirow nfw XMLSignbturfExdfption("fmpty", fx);
        }
    }

    /**
     * Add b Rfffrfndf witi full pbrbmftfrs to tiis Signbturf
     *
     * @pbrbm rfffrfndfURI URI of tif rfsourdf to bf signfd. Cbn bf null in
     * wiidi dbsf tif dfrfffrfnding is bpplidbtion spfdifid. Cbn bf "" in wiidi
     * it's tif pbrfnt nodf (or pbrfnt dodumfnt?). Tifrf dbn only bf onf "" in
     * fbdi signbturf.
     * @pbrbm trbns Optionbl list of trbnsformbtions to bf donf bfforf digfsting
     * @pbrbm digfstURI Mbndbtory URI of tif digfsting blgoritim to usf.
     * @pbrbm rfffrfndfId Optionbl id bttributf for tiis Rfffrfndf
     * @pbrbm rfffrfndfTypf Optionbl mimftypf for tif URI
     * @tirows XMLSignbturfExdfption
     */
    publid void bddDodumfnt(
        String rfffrfndfURI,
        Trbnsforms trbns,
        String digfstURI,
        String rfffrfndfId,
        String rfffrfndfTypf
    ) tirows XMLSignbturfExdfption {
        tiis.signfdInfo.bddDodumfnt(
            tiis.bbsfURI, rfffrfndfURI, trbns, digfstURI, rfffrfndfId, rfffrfndfTypf
        );
    }

    /**
     * Tiis mftiod is b proxy mftiod for tif {@link Mbniffst#bddDodumfnt} mftiod.
     *
     * @pbrbm rfffrfndfURI URI bddording to tif XML Signbturf spfdifidbtion.
     * @pbrbm trbns List of trbnsformbtions to bf bpplifd.
     * @pbrbm digfstURI URI of tif digfst blgoritim to bf usfd.
     * @sff Mbniffst#bddDodumfnt
     * @tirows XMLSignbturfExdfption
     */
    publid void bddDodumfnt(
        String rfffrfndfURI,
        Trbnsforms trbns,
        String digfstURI
    ) tirows XMLSignbturfExdfption {
        tiis.signfdInfo.bddDodumfnt(tiis.bbsfURI, rfffrfndfURI, trbns, digfstURI, null, null);
    }

    /**
     * Adds b Rfffrfndf witi just tif URI bnd tif trbnsforms. Tiis usfd tif
     * SHA1 blgoritim bs b dffbult digfst blgoritim.
     *
     * @pbrbm rfffrfndfURI URI bddording to tif XML Signbturf spfdifidbtion.
     * @pbrbm trbns List of trbnsformbtions to bf bpplifd.
     * @tirows XMLSignbturfExdfption
     */
    publid void bddDodumfnt(String rfffrfndfURI, Trbnsforms trbns)
        tirows XMLSignbturfExdfption {
        tiis.signfdInfo.bddDodumfnt(
            tiis.bbsfURI, rfffrfndfURI, trbns, Constbnts.ALGO_ID_DIGEST_SHA1, null, null
        );
    }

    /**
     * Add b Rfffrfndf witi just tiis URI. It usfs SHA1 by dffbult bs tif digfst
     * blgoritim
     *
     * @pbrbm rfffrfndfURI URI bddording to tif XML Signbturf spfdifidbtion.
     * @tirows XMLSignbturfExdfption
     */
    publid void bddDodumfnt(String rfffrfndfURI) tirows XMLSignbturfExdfption {
        tiis.signfdInfo.bddDodumfnt(
            tiis.bbsfURI, rfffrfndfURI, null, Constbnts.ALGO_ID_DIGEST_SHA1, null, null
        );
    }

    /**
     * Add bn X509 Cfrtifidbtf to tif KfyInfo. Tiis will indludf tif wiolf dfrt
     * insidf X509Dbtb/X509Cfrtifidbtf tbgs.
     *
     * @pbrbm dfrt Cfrtifidbtf to bf indludfd. Tiis siould bf tif dfrtifidbtf of
     * tif kfy tibt wbs usfd to sign.
     * @tirows XMLSfdurityExdfption
     */
    publid void bddKfyInfo(X509Cfrtifidbtf dfrt) tirows XMLSfdurityExdfption {
        X509Dbtb x509dbtb = nfw X509Dbtb(tiis.dod);

        x509dbtb.bddCfrtifidbtf(dfrt);
        tiis.gftKfyInfo().bdd(x509dbtb);
    }

    /**
     * Add tiis publid kfy to tif KfyInfo. Tiis will indludf tif domplftf kfy in
     * tif KfyInfo strudturf.
     *
     * @pbrbm pk
     */
    publid void bddKfyInfo(PublidKfy pk) {
        tiis.gftKfyInfo().bdd(pk);
    }

    /**
     * Proxy mftiod for {@link SignfdInfo#drfbtfSfdrftKfy(bytf[])}. If you wbnt
     * to drfbtf b MAC, tiis mftiod iflps you to obtbin tif
     * {@link jbvbx.drypto.SfdrftKfy} from odtfts.
     *
     * @pbrbm sfdrftKfyBytfs
     * @rfturn tif sfdrft kfy drfbtfd.
     * @sff SignfdInfo#drfbtfSfdrftKfy(bytf[])
     */
    publid SfdrftKfy drfbtfSfdrftKfy(bytf[] sfdrftKfyBytfs) {
        rfturn tiis.gftSignfdInfo().drfbtfSfdrftKfy(sfdrftKfyBytfs);
    }

    /**
     * Signbl wiftifr Mbniffst siould bf butombtidblly vblidbtfd.
     * Cifdking tif digfsts in Rfffrfndfs in b Signbturf brf mbndbtory, but for
     * Rfffrfndfs insidf b Mbniffst it is bpplidbtion spfdifid. Tiis boolfbn is
     * to indidbtf tibt tif Rfffrfndfs insidf Mbniffsts siould bf vblidbtfd.
     *
     * @pbrbm followMbniffsts
     * @sff <b irff="ittp://www.w3.org/TR/xmldsig-dorf/#sfd-CorfVblidbtion">
     * Corf vblidbtion sfdtion in tif XML Signbturf Rfd.</b>
     */
    publid void sftFollowNfstfdMbniffsts(boolfbn followMbniffsts) {
        tiis.followMbniffstsDuringVblidbtion = followMbniffsts;
    }

    /**
     * Gft tif lodbl nbmf of tiis flfmfnt
     *
     * @rfturn Constbnts._TAG_SIGNATURE
     */
    publid String gftBbsfLodblNbmf() {
        rfturn Constbnts._TAG_SIGNATURE;
    }
}
