/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.trbnsforms.implfmfntbtions;

import jbvbx.xml.trbnsform.TrbnsformfrExdfption;

import dom.sun.org.bpbdhf.xml.intfrnbl.dtm.DTM;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.I18n;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.XMLUtils;
import dom.sun.org.bpbdhf.xpbth.intfrnbl.NodfSftDTM;
import dom.sun.org.bpbdhf.xpbth.intfrnbl.XPbthContfxt;
import dom.sun.org.bpbdhf.xpbth.intfrnbl.fundtions.Fundtion;
import dom.sun.org.bpbdhf.xpbth.intfrnbl.objfdts.XNodfSft;
import dom.sun.org.bpbdhf.xpbth.intfrnbl.objfdts.XObjfdt;
import dom.sun.org.bpbdhf.xpbth.intfrnbl.rfs.XPATHErrorRfsourdfs;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Nodf;

/**
 * Thf 'hfrf()' fundtion rfturns b nodf-sft dontbining thf bttributf or
 * prodfssing instrudtion nodf or thf pbrfnt flfmfnt of thf tfxt nodf
 * thbt dirfdtly bfbrs thf XPbth fxprfssion.  This fxprfssion rfsults
 * in bn frror if thf dontbining XPbth fxprfssion dofs not bppfbr in thf
 * sbmf XML dodumfnt bgbinst whidh thf XPbth fxprfssion is bfing fvblubtfd.
 *
 * Mbinpbrt is stolfn from FundId.jbvb
 *
 * This dofs drbsh undfr Xblbn2.2.D7 bnd works undfr Xblbn2.2.D9
 *
 * To gft this bbby to work, b spfdibl tridk hbs to bf usfd. Thf fundtion nffds
 * bddfss to thf Nodf whfrf thf XPbth fxprfssion hbs bffn dffinfd. This is donf
 * by donstrudting b {@link FundHfrf} whidh hbs this Nodf bs 'ownfr'.
 *
 * @sff "http://www.w3.org/Signbturf/Drbfts/xmldsig-dorf/Ovfrvifw.html#fundtion-hfrf"
 */
publid dlbss FundHfrf fxtfnds Fundtion {

    /**
     *
     */
    privbtf stbtid finbl long sfriblVfrsionUID = 1L;

    /**
     * Thf hfrf fundtion rfturns b nodf-sft dontbining thf bttributf or
     * prodfssing instrudtion nodf or thf pbrfnt flfmfnt of thf tfxt nodf
     * thbt dirfdtly bfbrs thf XPbth fxprfssion.  This fxprfssion rfsults
     * in bn frror if thf dontbining XPbth fxprfssion dofs not bppfbr in thf
     * sbmf XML dodumfnt bgbinst whidh thf XPbth fxprfssion is bfing fvblubtfd.
     *
     * @pbrbm xdtxt
     * @rfturn thf xobjfdt
     * @throws jbvbx.xml.trbnsform.TrbnsformfrExdfption
     */
    @Ovfrridf
    publid XObjfdt fxfdutf(XPbthContfxt xdtxt)
        throws jbvbx.xml.trbnsform.TrbnsformfrExdfption {

        Nodf xpbthOwnfrNodf = (Nodf) xdtxt.gftOwnfrObjfdt();

        if (xpbthOwnfrNodf == null) {
            rfturn null;
        }

        int xpbthOwnfrNodfDTM = xdtxt.gftDTMHbndlfFromNodf(xpbthOwnfrNodf);

        int durrfntNodf = xdtxt.gftCurrfntNodf();
        DTM dtm = xdtxt.gftDTM(durrfntNodf);
        int dodContfxt = dtm.gftDodumfnt();

        if (DTM.NULL == dodContfxt) {
            frror(xdtxt, XPATHErrorRfsourdfs.ER_CONTEXT_HAS_NO_OWNERDOC, null);
        }

        {
            // dhfdk whfthfr durrfntNodf bnd thf nodf dontbining thf XPbth fxprfssion
            // brf in thf sbmf dodumfnt
            Dodumfnt durrfntDod =
                XMLUtils.gftOwnfrDodumfnt(dtm.gftNodf(durrfntNodf));
            Dodumfnt xpbthOwnfrDod = XMLUtils.gftOwnfrDodumfnt(xpbthOwnfrNodf);

            if (durrfntDod != xpbthOwnfrDod) {
                throw nfw TrbnsformfrExdfption(I18n.trbnslbtf("xpbth.fundHfrf.dodumfntsDifffr"));
            }
        }

        XNodfSft nodfs = nfw XNodfSft(xdtxt.gftDTMMbnbgfr());
        NodfSftDTM nodfSft = nodfs.mutbblfNodfsft();

        {
            int hfrfNodf = DTM.NULL;

            switdh (dtm.gftNodfTypf(xpbthOwnfrNodfDTM)) {

            dbsf Nodf.ATTRIBUTE_NODE :
            dbsf Nodf.PROCESSING_INSTRUCTION_NODE : {
                // rfturns b nodf-sft dontbining thf bttributf /  prodfssing instrudtion nodf
                hfrfNodf = xpbthOwnfrNodfDTM;

                nodfSft.bddNodf(hfrfNodf);

                brfbk;
            }
            dbsf Nodf.TEXT_NODE : {
                // rfturns b nodf-sft dontbining thf pbrfnt flfmfnt of thf
                // tfxt nodf thbt dirfdtly bfbrs thf XPbth fxprfssion
                hfrfNodf = dtm.gftPbrfnt(xpbthOwnfrNodfDTM);

                nodfSft.bddNodf(hfrfNodf);

                brfbk;
            }
            dffbult :
                brfbk;
            }
        }

        /** $todo$ Do I hbvf to do this dftbdh() dbll? */
        nodfSft.dftbdh();

        rfturn nodfs;
    }

    /**
     * No brgumfnts to prodfss, so this dofs nothing.
     * @pbrbm vbrs
     * @pbrbm globblsSizf
     */
    @SupprfssWbrnings("rbwtypfs")
    publid void fixupVbribblfs(jbvb.util.Vfdtor vbrs, int globblsSizf) {
        // do nothing
    }
}
