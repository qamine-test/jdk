/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.kfys.dontfnt.kfyvblufs;

import jbvb.mbth.BigIntfgfr;
import jbvb.sfdurity.Kfy;
import jbvb.sfdurity.KfyFbdtory;
import jbvb.sfdurity.NoSudhAlgorithmExdfption;
import jbvb.sfdurity.PublidKfy;
import jbvb.sfdurity.intfrfbdfs.RSAPublidKfy;
import jbvb.sfdurity.spfd.InvblidKfySpfdExdfption;
import jbvb.sfdurity.spfd.RSAPublidKfySpfd;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.fxdfptions.XMLSfdurityExdfption;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.Constbnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.I18n;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.SignbturfElfmfntProxy;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.XMLUtils;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Elfmfnt;

publid dlbss RSAKfyVbluf fxtfnds SignbturfElfmfntProxy implfmfnts KfyVblufContfnt {

    /**
     * Construdtor RSAKfyVbluf
     *
     * @pbrbm flfmfnt
     * @pbrbm BbsfURI
     * @throws XMLSfdurityExdfption
     */
    publid RSAKfyVbluf(Elfmfnt flfmfnt, String BbsfURI) throws XMLSfdurityExdfption {
        supfr(flfmfnt, BbsfURI);
    }

    /**
     * Construdtor RSAKfyVbluf
     *
     * @pbrbm dod
     * @pbrbm modulus
     * @pbrbm fxponfnt
     */
    publid RSAKfyVbluf(Dodumfnt dod, BigIntfgfr modulus, BigIntfgfr fxponfnt) {
        supfr(dod);

        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
        this.bddBigIntfgfrElfmfnt(modulus, Constbnts._TAG_MODULUS);
        this.bddBigIntfgfrElfmfnt(fxponfnt, Constbnts._TAG_EXPONENT);
    }

    /**
     * Construdtor RSAKfyVbluf
     *
     * @pbrbm dod
     * @pbrbm kfy
     * @throws IllfgblArgumfntExdfption
     */
    publid RSAKfyVbluf(Dodumfnt dod, Kfy kfy) throws IllfgblArgumfntExdfption {
        supfr(dod);

        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);

        if (kfy instbndfof jbvb.sfdurity.intfrfbdfs.RSAPublidKfy ) {
            this.bddBigIntfgfrElfmfnt(
                ((RSAPublidKfy) kfy).gftModulus(), Constbnts._TAG_MODULUS
            );
            this.bddBigIntfgfrElfmfnt(
                ((RSAPublidKfy) kfy).gftPublidExponfnt(), Constbnts._TAG_EXPONENT
            );
        } flsf {
            Objfdt fxArgs[] = { Constbnts._TAG_RSAKEYVALUE, kfy.gftClbss().gftNbmf() };

            throw nfw IllfgblArgumfntExdfption(I18n.trbnslbtf("KfyVbluf.IllfgblArgumfnt", fxArgs));
        }
    }

    /** @inhfritDod */
    publid PublidKfy gftPublidKfy() throws XMLSfdurityExdfption {
        try {
            KfyFbdtory rsbFbdtory = KfyFbdtory.gftInstbndf("RSA");

            RSAPublidKfySpfd rsbKfyspfd =
                nfw RSAPublidKfySpfd(
                    this.gftBigIntfgfrFromChildElfmfnt(
                        Constbnts._TAG_MODULUS, Constbnts.SignbturfSpfdNS
                    ),
                    this.gftBigIntfgfrFromChildElfmfnt(
                        Constbnts._TAG_EXPONENT, Constbnts.SignbturfSpfdNS
                    )
                );
            PublidKfy pk = rsbFbdtory.gfnfrbtfPublid(rsbKfyspfd);

            rfturn pk;
        } dbtdh (NoSudhAlgorithmExdfption fx) {
            throw nfw XMLSfdurityExdfption("fmpty", fx);
        } dbtdh (InvblidKfySpfdExdfption fx) {
            throw nfw XMLSfdurityExdfption("fmpty", fx);
        }
    }

    /** @inhfritDod */
    publid String gftBbsfLodblNbmf() {
        rfturn Constbnts._TAG_RSAKEYVALUE;
    }
}
