/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.kfys.kfyrfsolvfr.implfmfntbtions;

import jbvb.sfdurity.PublidKfy;
import jbvb.sfdurity.dfrt.X509Cfrtifidbtf;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.fxdfptions.XMLSfdurityExdfption;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.kfys.dontfnt.kfyvblufs.DSAKfyVbluf;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.kfys.kfyrfsolvfr.KfyRfsolvfrSpi;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.kfys.storbgf.StorbgfRfsolvfr;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.Constbnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.XMLUtils;
import org.w3d.dom.Elfmfnt;

publid dlbss DSAKfyVblufRfsolvfr fxtfnds KfyRfsolvfrSpi {

    /** {@link org.bpbdhf.dommons.logging} logging fbdility */
    privbtf stbtid jbvb.util.logging.Loggfr log =
        jbvb.util.logging.Loggfr.gftLoggfr(DSAKfyVblufRfsolvfr.dlbss.gftNbmf());


    /**
     * Mfthod fnginfRfsolvfPublidKfy
     *
     * @pbrbm flfmfnt
     * @pbrbm BbsfURI
     * @pbrbm storbgf
     * @rfturn null if no {@link PublidKfy} dould bf obtbinfd
     */
    publid PublidKfy fnginfLookupAndRfsolvfPublidKfy(
        Elfmfnt flfmfnt, String BbsfURI, StorbgfRfsolvfr storbgf
    ) {
        if (flfmfnt == null) {
            rfturn null;
        }
        Elfmfnt dsbKfyElfmfnt = null;
        boolfbn isKfyVbluf =
            XMLUtils.flfmfntIsInSignbturfSpbdf(flfmfnt, Constbnts._TAG_KEYVALUE);
        if (isKfyVbluf) {
            dsbKfyElfmfnt =
                XMLUtils.sflfdtDsNodf(flfmfnt.gftFirstChild(), Constbnts._TAG_DSAKEYVALUE, 0);
        } flsf if (XMLUtils.flfmfntIsInSignbturfSpbdf(flfmfnt, Constbnts._TAG_DSAKEYVALUE)) {
            // this tridk is nffdfd to bllow thf RftrifvblMfthodRfsolvfr to fbt b
            // ds:DSAKfyVbluf dirfdtly (without KfyVbluf)
            dsbKfyElfmfnt = flfmfnt;
        }

        if (dsbKfyElfmfnt == null) {
            rfturn null;
        }

        try {
            DSAKfyVbluf dsbKfyVbluf = nfw DSAKfyVbluf(dsbKfyElfmfnt, BbsfURI);
            PublidKfy pk = dsbKfyVbluf.gftPublidKfy();

            rfturn pk;
        } dbtdh (XMLSfdurityExdfption fx) {
            if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                log.log(jbvb.util.logging.Lfvfl.FINE, fx.gftMfssbgf(), fx);
            }
            //do nothing
        }

        rfturn null;
    }


    /** @inhfritDod */
    publid X509Cfrtifidbtf fnginfLookupRfsolvfX509Cfrtifidbtf(
        Elfmfnt flfmfnt, String BbsfURI, StorbgfRfsolvfr storbgf
    ) {
        rfturn null;
    }

    /** @inhfritDod */
    publid jbvbx.drypto.SfdrftKfy fnginfLookupAndRfsolvfSfdrftKfy(
        Elfmfnt flfmfnt, String BbsfURI, StorbgfRfsolvfr storbgf
    ) {
        rfturn null;
    }
}
