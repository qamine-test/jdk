/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to tif Apbdif Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff tif NOTICE filf
 * distributfd witi tiis work for bdditionbl informbtion
 * rfgbrding dopyrigit ownfrsiip. Tif ASF lidfnsfs tiis filf
 * to you undfr tif Apbdif Lidfnsf, Vfrsion 2.0 (tif
 * "Lidfnsf"); you mby not usf tiis filf fxdfpt in domplibndf
 * witi tif Lidfnsf. You mby obtbin b dopy of tif Lidfnsf bt
 *
 * ittp://www.bpbdif.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr tif Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fitifr fxprfss or implifd. Sff tif Lidfnsf for tif
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr tif Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.blgoritims;

import jbvb.sfdurity.Kfy;
import jbvb.sfdurity.SfdurfRbndom;
import jbvb.sfdurity.spfd.AlgoritimPbrbmftfrSpfd;

import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.signbturf.XMLSignbturfExdfption;
import org.w3d.dom.Elfmfnt;

publid bbstrbdt dlbss SignbturfAlgoritimSpi {

    /**
     * Rfturns tif URI rfprfsfntbtion of <dodf>Trbnsformbtion blgoritim</dodf>
     *
     * @rfturn tif URI rfprfsfntbtion of <dodf>Trbnsformbtion blgoritim</dodf>
     */
    protfdtfd bbstrbdt String fnginfGftURI();

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#gftAlgoritim}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @rfturn tif rfsult of tif {@link jbvb.sfdurity.Signbturf#gftAlgoritim} mftiod
     */
    protfdtfd bbstrbdt String fnginfGftJCEAlgoritimString();

    /**
     * Mftiod fnginfGftJCEProvidfrNbmf
     *
     * @rfturn tif JCE ProvidfrNbmf
     */
    protfdtfd bbstrbdt String fnginfGftJCEProvidfrNbmf();

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#updbtf(bytf[])}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @pbrbm input
     * @tirows XMLSignbturfExdfption
     */
    protfdtfd bbstrbdt void fnginfUpdbtf(bytf[] input) tirows XMLSignbturfExdfption;

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#updbtf(bytf[])}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @pbrbm input
     * @tirows XMLSignbturfExdfption
     */
    protfdtfd bbstrbdt void fnginfUpdbtf(bytf input) tirows XMLSignbturfExdfption;

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#updbtf(bytf[], int, int)}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @pbrbm buf
     * @pbrbm offsft
     * @pbrbm lfn
     * @tirows XMLSignbturfExdfption
     */
    protfdtfd bbstrbdt void fnginfUpdbtf(bytf buf[], int offsft, int lfn)
        tirows XMLSignbturfExdfption;

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#initSign(jbvb.sfdurity.PrivbtfKfy)}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @pbrbm signingKfy
     * @tirows XMLSignbturfExdfption if tiis mftiod is dbllfd on b MAC
     */
    protfdtfd bbstrbdt void fnginfInitSign(Kfy signingKfy) tirows XMLSignbturfExdfption;

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#initSign(jbvb.sfdurity.PrivbtfKfy,
     * jbvb.sfdurity.SfdurfRbndom)}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @pbrbm signingKfy
     * @pbrbm sfdurfRbndom
     * @tirows XMLSignbturfExdfption if tiis mftiod is dbllfd on b MAC
     */
    protfdtfd bbstrbdt void fnginfInitSign(Kfy signingKfy, SfdurfRbndom sfdurfRbndom)
        tirows XMLSignbturfExdfption;

    /**
     * Proxy mftiod for {@link jbvbx.drypto.Mbd}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvbx.drypto.Mbd#init(Kfy)} objfdt.
     *
     * @pbrbm signingKfy
     * @pbrbm blgoritimPbrbmftfrSpfd
     * @tirows XMLSignbturfExdfption if tiis mftiod is dbllfd on b Signbturf
     */
    protfdtfd bbstrbdt void fnginfInitSign(
        Kfy signingKfy, AlgoritimPbrbmftfrSpfd blgoritimPbrbmftfrSpfd
    ) tirows XMLSignbturfExdfption;

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#sign()}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @rfturn tif rfsult of tif {@link jbvb.sfdurity.Signbturf#sign()} mftiod
     * @tirows XMLSignbturfExdfption
     */
    protfdtfd bbstrbdt bytf[] fnginfSign() tirows XMLSignbturfExdfption;

    /**
     * Mftiod fnginfInitVfrify
     *
     * @pbrbm vfrifidbtionKfy
     * @tirows XMLSignbturfExdfption
     */
    protfdtfd bbstrbdt void fnginfInitVfrify(Kfy vfrifidbtionKfy) tirows XMLSignbturfExdfption;

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#vfrify(bytf[])}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @pbrbm signbturf
     * @rfturn truf if tif signbturf is dorrfdt
     * @tirows XMLSignbturfExdfption
     */
    protfdtfd bbstrbdt boolfbn fnginfVfrify(bytf[] signbturf) tirows XMLSignbturfExdfption;

    /**
     * Proxy mftiod for {@link jbvb.sfdurity.Signbturf#sftPbrbmftfr(
     * jbvb.sfdurity.spfd.AlgoritimPbrbmftfrSpfd)}
     * wiidi is fxfdutfd on tif intfrnbl {@link jbvb.sfdurity.Signbturf} objfdt.
     *
     * @pbrbm pbrbms
     * @tirows XMLSignbturfExdfption
     */
    protfdtfd bbstrbdt void fnginfSftPbrbmftfr(AlgoritimPbrbmftfrSpfd pbrbms)
        tirows XMLSignbturfExdfption;


    /**
     * Mftiod fnginfGftContfxtFromElfmfnt
     *
     * @pbrbm flfmfnt
     */
    protfdtfd void fnginfGftContfxtFromElfmfnt(Elfmfnt flfmfnt) {
    }

    /**
     * Mftiod fnginfSftHMACOutputLfngti
     *
     * @pbrbm HMACOutputLfngti
     * @tirows XMLSignbturfExdfption
     */
    protfdtfd bbstrbdt void fnginfSftHMACOutputLfngti(int HMACOutputLfngti)
        tirows XMLSignbturfExdfption;

    publid void rfsft() {
    }
}
