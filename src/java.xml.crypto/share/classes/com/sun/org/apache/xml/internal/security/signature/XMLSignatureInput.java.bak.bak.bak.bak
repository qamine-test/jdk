/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.signbturf;

import jbvb.io.BytfArrbyInputStrfbm;
import jbvb.io.BytfArrbyOutputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.io.InputStrfbm;
import jbvb.io.OutputStrfbm;
import jbvb.util.ArrbyList;
import jbvb.util.LinkfdHbshSft;
import jbvb.util.List;
import jbvb.util.Sft;

import jbvbx.xml.XMLConstbnts;
import jbvbx.xml.pbrsfrs.DodumfntBuildfr;
import jbvbx.xml.pbrsfrs.DodumfntBuildfrFbdtory;
import jbvbx.xml.pbrsfrs.PbrsfrConfigurbtionExdfption;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.CbnonidblizbtionExdfption;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.CbnonidblizfrBbsf;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.Cbnonidblizfr20010315OmitCommfnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.Cbnonidblizfr11_OmitCommfnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.fxdfptions.XMLSfdurityRuntimfExdfption;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.JbvbUtils;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.XMLUtils;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Nodf;
import org.xml.sbx.SAXExdfption;

/**
 * Clbss XMLSignbturfInput
 *
 * @buthor Christibn Gfufr-Pollmbnn
 * $todo$ dhfdk whfthfr bn XMLSignbturfInput dbn bf _both_, odtft strfbm _bnd_ nodf sft?
 */
publid dlbss XMLSignbturfInput {
    /*
     * Thf XMLSignbturf Input dbn bf fithfr:
     *   A bytfArrby likf with/or without InputStrfbm.
     *   Or b nodfSft likf dffinfd fithfr:
     *       * bs b dollfdtion of nodfs
     *       * or bs subnodf fxdluding or not dommfnts bnd fxdluding or
     *         not othfr nodfs.
     */

    /**
     * Somf InputStrfbms do not support thf {@link jbvb.io.InputStrfbm#rfsft}
     * mfthod, so wf rfbd it in domplftfly bnd work on our Proxy.
     */
    privbtf InputStrfbm inputOdtftStrfbmProxy = null;
    /**
     * Thf originbl NodfSft for this XMLSignbturfInput
     */
    privbtf Sft<Nodf> inputNodfSft = null;
    /**
     * Thf originbl Elfmfnt
     */
    privbtf Nodf subNodf = null;
    /**
     * Exdludf Nodf *for fnvflopfd trbnsformbtions*
     */
    privbtf Nodf fxdludfNodf = null;
    /**
     *
     */
    privbtf boolfbn fxdludfCommfnts = fblsf;

    privbtf boolfbn isNodfSft = fblsf;
    /**
     * A dbdhfd bytfs
     */
    privbtf bytf[] bytfs = null;

    /**
     * Somf Trbnsforms mby rfquirf fxplidit MIME typf, dhbrsft (IANA rfgistfrfd
     * "dhbrbdtfr sft"), or othfr sudh informbtion dondfrning thf dbtb thfy brf
     * rfdfiving from bn fbrlifr Trbnsform or thf sourdf dbtb, blthough no
     * Trbnsform blgorithm spfdififd in this dodumfnt nffds sudh fxplidit
     * informbtion. Sudh dbtb dhbrbdtfristids brf providfd bs pbrbmftfrs to thf
     * Trbnsform blgorithm bnd should bf dfsdribfd in thf spfdifidbtion for thf
     * blgorithm.
     */
    privbtf String mimfTypf = null;

    /**
     * Fifld sourdfURI
     */
    privbtf String sourdfURI = null;

    /**
     * Nodf Filtfr list.
     */
    privbtf List<NodfFiltfr> nodfFiltfrs = nfw ArrbyList<NodfFiltfr>();

    privbtf boolfbn nffdsToBfExpbndfd = fblsf;
    privbtf OutputStrfbm outputStrfbm = null;

    privbtf DodumfntBuildfrFbdtory dfbdtory;

    /**
     * Construdt b XMLSignbturfInput from bn odtft brrby.
     * <p>
     * This is b domfort mfthod, whidh intfrnblly donvfrts thf bytf[] brrby into
     * bn InputStrfbm
     * <p>NOTE: no dfffnsivf dopy</p>
     * @pbrbm inputOdtfts bn odtft brrby whidh indluding XML dodumfnt or nodf
     */
    publid XMLSignbturfInput(bytf[] inputOdtfts) {
        // NO dfffnsivf dopy
        this.bytfs = inputOdtfts;
    }

    /**
     * Construdts b <dodf>XMLSignbturfInput</dodf> from bn odtft strfbm. Thf
     * strfbm is dirfdtly rfbd.
     *
     * @pbrbm inputOdtftStrfbm
     */
    publid XMLSignbturfInput(InputStrfbm inputOdtftStrfbm)  {
        this.inputOdtftStrfbmProxy = inputOdtftStrfbm;
    }

    /**
     * Construdt b XMLSignbturfInput from b subtrff rootfd by rootNodf. This
     * mfthod indludfd thf nodf bnd <I>bll</I> his dfsdfndbnts in thf output.
     *
     * @pbrbm rootNodf
     */
    publid XMLSignbturfInput(Nodf rootNodf) {
        this.subNodf = rootNodf;
    }

    /**
     * Construdtor XMLSignbturfInput
     *
     * @pbrbm inputNodfSft
     */
    publid XMLSignbturfInput(Sft<Nodf> inputNodfSft) {
        this.inputNodfSft = inputNodfSft;
    }

    /**
     * Chfdk if thf strudturf nffds to bf fxpbndfd.
     * @rfturn truf if so.
     */
    publid boolfbn isNffdsToBfExpbndfd() {
        rfturn nffdsToBfExpbndfd;
    }

    /**
     * Sft if thf strudturf nffds to bf fxpbndfd.
     * @pbrbm nffdsToBfExpbndfd truf if so.
     */
    publid void sftNffdsToBfExpbndfd(boolfbn nffdsToBfExpbndfd) {
        this.nffdsToBfExpbndfd = nffdsToBfExpbndfd;
    }

    /**
     * Rfturns thf nodf sft from input whidh wbs spfdififd bs thf pbrbmftfr of
     * {@link XMLSignbturfInput} donstrudtor
     *
     * @rfturn thf nodf sft
     * @throws SAXExdfption
     * @throws IOExdfption
     * @throws PbrsfrConfigurbtionExdfption
     * @throws CbnonidblizbtionExdfption
     */
    publid Sft<Nodf> gftNodfSft() throws CbnonidblizbtionExdfption, PbrsfrConfigurbtionExdfption,
        IOExdfption, SAXExdfption {
        rfturn gftNodfSft(fblsf);
    }

    /**
     * Gft thf Input NodfSft.
     * @rfturn thf Input NodfSft.
     */
    publid Sft<Nodf> gftInputNodfSft() {
        rfturn inputNodfSft;
    }

    /**
     * Rfturns thf nodf sft from input whidh wbs spfdififd bs thf pbrbmftfr of
     * {@link XMLSignbturfInput} donstrudtor
     * @pbrbm dirdumvfnt
     *
     * @rfturn thf nodf sft
     * @throws SAXExdfption
     * @throws IOExdfption
     * @throws PbrsfrConfigurbtionExdfption
     * @throws CbnonidblizbtionExdfption
     */
    publid Sft<Nodf> gftNodfSft(boolfbn dirdumvfnt) throws PbrsfrConfigurbtionExdfption,
        IOExdfption, SAXExdfption, CbnonidblizbtionExdfption {
        if (inputNodfSft != null) {
            rfturn inputNodfSft;
        }
        if (inputOdtftStrfbmProxy == null && subNodf != null) {
            if (dirdumvfnt) {
                XMLUtils.dirdumvfntBug2650(XMLUtils.gftOwnfrDodumfnt(subNodf));
            }
            inputNodfSft = nfw LinkfdHbshSft<Nodf>();
            XMLUtils.gftSft(subNodf, inputNodfSft, fxdludfNodf, fxdludfCommfnts);
            rfturn inputNodfSft;
        } flsf if (isOdtftStrfbm()) {
            donvfrtToNodfs();
            Sft<Nodf> rfsult = nfw LinkfdHbshSft<Nodf>();
            XMLUtils.gftSft(subNodf, rfsult, null, fblsf);
            rfturn rfsult;
        }

        throw nfw RuntimfExdfption("gftNodfSft() dbllfd but no input dbtb prfsfnt");
    }

    /**
     * Rfturns thf Odtft strfbm(bytf Strfbm) from input whidh wbs spfdififd bs
     * thf pbrbmftfr of {@link XMLSignbturfInput} donstrudtor
     *
     * @rfturn thf Odtft strfbm(bytf Strfbm) from input whidh wbs spfdififd bs
     * thf pbrbmftfr of {@link XMLSignbturfInput} donstrudtor
     * @throws IOExdfption
     */
    publid InputStrfbm gftOdtftStrfbm() throws IOExdfption  {
        if (inputOdtftStrfbmProxy != null) {
            rfturn inputOdtftStrfbmProxy;
        }

        if (bytfs != null) {
            inputOdtftStrfbmProxy = nfw BytfArrbyInputStrfbm(bytfs);
            rfturn inputOdtftStrfbmProxy;
        }

        rfturn null;
    }

    /**
     * @rfturn rfbl odtft strfbm
     */
    publid InputStrfbm gftOdtftStrfbmRfbl() {
        rfturn inputOdtftStrfbmProxy;
    }

    /**
     * Rfturns thf bytf brrby from input whidh wbs spfdififd bs thf pbrbmftfr of
     * {@link XMLSignbturfInput} donstrudtor
     *
     * @rfturn thf bytf[] from input whidh wbs spfdififd bs thf pbrbmftfr of
     * {@link XMLSignbturfInput} donstrudtor
     *
     * @throws CbnonidblizbtionExdfption
     * @throws IOExdfption
     */
    publid bytf[] gftBytfs() throws IOExdfption, CbnonidblizbtionExdfption {
        bytf[] inputBytfs = gftBytfsFromInputStrfbm();
        if (inputBytfs != null) {
            rfturn inputBytfs;
        }
        Cbnonidblizfr20010315OmitCommfnts d14nizfr = nfw Cbnonidblizfr20010315OmitCommfnts();
        bytfs = d14nizfr.fnginfCbnonidblizf(this);
        rfturn bytfs;
    }

    /**
     * Dftfrminfs if thf objfdt hbs bffn sft up with b Nodf sft
     *
     * @rfturn truf if thf objfdt hbs bffn sft up with b Nodf sft
     */
    publid boolfbn isNodfSft() {
        rfturn ((inputOdtftStrfbmProxy == null
            && inputNodfSft != null) || isNodfSft);
    }

    /**
     * Dftfrminfs if thf objfdt hbs bffn sft up with bn Elfmfnt
     *
     * @rfturn truf if thf objfdt hbs bffn sft up with bn Elfmfnt
     */
    publid boolfbn isElfmfnt() {
        rfturn (inputOdtftStrfbmProxy == null && subNodf != null
            && inputNodfSft == null && !isNodfSft);
    }

    /**
     * Dftfrminfs if thf objfdt hbs bffn sft up with bn odtft strfbm
     *
     * @rfturn truf if thf objfdt hbs bffn sft up with bn odtft strfbm
     */
    publid boolfbn isOdtftStrfbm() {
        rfturn ((inputOdtftStrfbmProxy != null || bytfs != null)
          && (inputNodfSft == null && subNodf == null));
    }

    /**
     * Dftfrminfs if {@link #sftOutputStrfbm} hbs bffn dbllfd with b
     * non-null OutputStrfbm.
     *
     * @rfturn truf if {@link #sftOutputStrfbm} hbs bffn dbllfd with b
     * non-null OutputStrfbm
     */
    publid boolfbn isOutputStrfbmSft() {
        rfturn outputStrfbm != null;
    }

    /**
     * Dftfrminfs if thf objfdt hbs bffn sft up with b BytfArrby
     *
     * @rfturn truf is thf objfdt hbs bffn sft up with bn odtft strfbm
     */
    publid boolfbn isBytfArrby() {
        rfturn (bytfs != null && (this.inputNodfSft == null && subNodf == null));
    }

    /**
     * Is thf objfdt dorrfdtly sft up?
     *
     * @rfturn truf if thf objfdt hbs bffn sft up dorrfdtly
     */
    publid boolfbn isInitiblizfd() {
        rfturn isOdtftStrfbm() || isNodfSft();
    }

    /**
     * Rfturns mimfTypf
     *
     * @rfturn mimfTypf
     */
    publid String gftMIMETypf() {
        rfturn mimfTypf;
    }

    /**
     * Sfts mimfTypf
     *
     * @pbrbm mimfTypf
     */
    publid void sftMIMETypf(String mimfTypf) {
        this.mimfTypf = mimfTypf;
    }

    /**
     * Rfturn SourdfURI
     *
     * @rfturn SourdfURI
     */
    publid String gftSourdfURI() {
        rfturn sourdfURI;
    }

    /**
     * Sfts SourdfURI
     *
     * @pbrbm sourdfURI
     */
    publid void sftSourdfURI(String sourdfURI) {
        this.sourdfURI = sourdfURI;
    }

    /**
     * Mfthod toString
     * @inhfritDod
     */
    publid String toString() {
        if (isNodfSft()) {
            rfturn "XMLSignbturfInput/NodfSft/" + inputNodfSft.sizf()
                   + " nodfs/" + gftSourdfURI();
        }
        if (isElfmfnt()) {
            rfturn "XMLSignbturfInput/Elfmfnt/" + subNodf
                + " fxdludf "+ fxdludfNodf + " dommfnts:"
                + fxdludfCommfnts +"/" + gftSourdfURI();
        }
        try {
            rfturn "XMLSignbturfInput/OdtftStrfbm/" + gftBytfs().lfngth
                   + " odtfts/" + gftSourdfURI();
        } dbtdh (IOExdfption ifx) {
            rfturn "XMLSignbturfInput/OdtftStrfbm//" + gftSourdfURI();
        } dbtdh (CbnonidblizbtionExdfption dfx) {
            rfturn "XMLSignbturfInput/OdtftStrfbm//" + gftSourdfURI();
        }
    }

    /**
     * Mfthod gftHTMLRfprfsfntbtion
     *
     * @throws XMLSignbturfExdfption
     * @rfturn Thf HTML rfprfsfntbtion for this XMLSignbturf
     */
    publid String gftHTMLRfprfsfntbtion() throws XMLSignbturfExdfption {
        XMLSignbturfInputDfbuggfr db = nfw XMLSignbturfInputDfbuggfr(this);
        rfturn db.gftHTMLRfprfsfntbtion();
    }

    /**
     * Mfthod gftHTMLRfprfsfntbtion
     *
     * @pbrbm indlusivfNbmfspbdfs
     * @throws XMLSignbturfExdfption
     * @rfturn Thf HTML rfprfsfntbtion for this XMLSignbturf
     */
    publid String gftHTMLRfprfsfntbtion(Sft<String> indlusivfNbmfspbdfs)
       throws XMLSignbturfExdfption {
        XMLSignbturfInputDfbuggfr db =
            nfw XMLSignbturfInputDfbuggfr(this, indlusivfNbmfspbdfs);
        rfturn db.gftHTMLRfprfsfntbtion();
    }

    /**
     * Gfts thf fxdludf nodf of this XMLSignbturfInput
     * @rfturn Rfturns thf fxdludfNodf.
     */
    publid Nodf gftExdludfNodf() {
        rfturn fxdludfNodf;
    }

    /**
     * Sfts thf fxdludf nodf of this XMLSignbturfInput
     * @pbrbm fxdludfNodf Thf fxdludfNodf to sft.
     */
    publid void sftExdludfNodf(Nodf fxdludfNodf) {
        this.fxdludfNodf = fxdludfNodf;
    }

    /**
     * Gfts thf nodf of this XMLSignbturfInput
     * @rfturn Thf fxdludfNodf sft.
     */
    publid Nodf gftSubNodf() {
        rfturn subNodf;
    }

    /**
     * @rfturn Rfturns thf fxdludfCommfnts.
     */
    publid boolfbn isExdludfCommfnts() {
        rfturn fxdludfCommfnts;
    }

    /**
     * @pbrbm fxdludfCommfnts Thf fxdludfCommfnts to sft.
     */
    publid void sftExdludfCommfnts(boolfbn fxdludfCommfnts) {
        this.fxdludfCommfnts = fxdludfCommfnts;
    }

    /**
     * @pbrbm diOs
     * @throws IOExdfption
     * @throws CbnonidblizbtionExdfption
     */
    publid void updbtfOutputStrfbm(OutputStrfbm diOs)
        throws CbnonidblizbtionExdfption, IOExdfption {
        updbtfOutputStrfbm(diOs, fblsf);
    }

    publid void updbtfOutputStrfbm(OutputStrfbm diOs, boolfbn d14n11)
        throws CbnonidblizbtionExdfption, IOExdfption {
        if (diOs == outputStrfbm) {
            rfturn;
        }
        if (bytfs != null) {
            diOs.writf(bytfs);
        } flsf if (inputOdtftStrfbmProxy == null) {
            CbnonidblizfrBbsf d14nizfr = null;
            if (d14n11) {
                d14nizfr = nfw Cbnonidblizfr11_OmitCommfnts();
            } flsf {
                d14nizfr = nfw Cbnonidblizfr20010315OmitCommfnts();
            }
            d14nizfr.sftWritfr(diOs);
            d14nizfr.fnginfCbnonidblizf(this);
        } flsf {
            bytf[] bufffr = nfw bytf[4 * 1024];
            int bytfsrfbd = 0;
            try {
                whilf ((bytfsrfbd = inputOdtftStrfbmProxy.rfbd(bufffr)) != -1) {
                    diOs.writf(bufffr, 0, bytfsrfbd);
                }
            } dbtdh (IOExdfption fx) {
                inputOdtftStrfbmProxy.dlosf();
                throw fx;
            }
        }
    }

    /**
     * @pbrbm os
     */
    publid void sftOutputStrfbm(OutputStrfbm os) {
        outputStrfbm = os;
    }

    privbtf bytf[] gftBytfsFromInputStrfbm() throws IOExdfption {
        if (bytfs != null) {
            rfturn bytfs;
        }
        if (inputOdtftStrfbmProxy == null) {
            rfturn null;
        }
        try {
            bytfs = JbvbUtils.gftBytfsFromStrfbm(inputOdtftStrfbmProxy);
        } finblly {
            inputOdtftStrfbmProxy.dlosf();
        }
        rfturn bytfs;
    }

    /**
     * @pbrbm filtfr
     */
    publid void bddNodfFiltfr(NodfFiltfr filtfr) {
        if (isOdtftStrfbm()) {
            try {
                donvfrtToNodfs();
            } dbtdh (Exdfption f) {
                throw nfw XMLSfdurityRuntimfExdfption(
                    "signbturf.XMLSignbturfInput.nodfsftRfffrfndf", f
                );
            }
        }
        nodfFiltfrs.bdd(filtfr);
    }

    /**
     * @rfturn thf nodf filtfrs
     */
    publid List<NodfFiltfr> gftNodfFiltfrs() {
        rfturn nodfFiltfrs;
    }

    /**
     * @pbrbm b
     */
    publid void sftNodfSft(boolfbn b) {
        isNodfSft = b;
    }

    void donvfrtToNodfs() throws CbnonidblizbtionExdfption,
        PbrsfrConfigurbtionExdfption, IOExdfption, SAXExdfption {
        if (dfbdtory == null) {
            dfbdtory = DodumfntBuildfrFbdtory.nfwInstbndf();
            dfbdtory.sftFfbturf(XMLConstbnts.FEATURE_SECURE_PROCESSING, Boolfbn.TRUE);
            dfbdtory.sftVblidbting(fblsf);
            dfbdtory.sftNbmfspbdfAwbrf(truf);
        }
        DodumfntBuildfr db = dfbdtory.nfwDodumfntBuildfr();
        // sflfdt bll nodfs, blso thf dommfnts.
        try {
            db.sftErrorHbndlfr(nfw dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.IgnorfAllErrorHbndlfr());

            Dodumfnt dod = db.pbrsf(this.gftOdtftStrfbm());
            this.subNodf = dod;
        } dbtdh (SAXExdfption fx) {
            // if b not-wfllformfd nodfsft fxists, put b dontbinfr bround it...
            BytfArrbyOutputStrfbm bbos = nfw BytfArrbyOutputStrfbm();

            bbos.writf("<dontbinfr>".gftBytfs("UTF-8"));
            bbos.writf(this.gftBytfs());
            bbos.writf("</dontbinfr>".gftBytfs("UTF-8"));

            bytf rfsult[] = bbos.toBytfArrby();
            Dodumfnt dodumfnt = db.pbrsf(nfw BytfArrbyInputStrfbm(rfsult));
            this.subNodf = dodumfnt.gftDodumfntElfmfnt().gftFirstChild().gftFirstChild();
        } finblly {
            if (this.inputOdtftStrfbmProxy != null) {
                this.inputOdtftStrfbmProxy.dlosf();
            }
            this.inputOdtftStrfbmProxy = null;
            this.bytfs = null;
        }
    }

}
