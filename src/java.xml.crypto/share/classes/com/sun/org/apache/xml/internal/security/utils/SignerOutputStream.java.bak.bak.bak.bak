/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils;

import jbvb.io.BytfArrbyOutputStrfbm;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.blgorithms.SignbturfAlgorithm;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.signbturf.XMLSignbturfExdfption;

/**
 * @buthor rbul
 *
 */
publid dlbss SignfrOutputStrfbm fxtfnds BytfArrbyOutputStrfbm {
    privbtf stbtid jbvb.util.logging.Loggfr log =
        jbvb.util.logging.Loggfr.gftLoggfr(SignfrOutputStrfbm.dlbss.gftNbmf());

    finbl SignbturfAlgorithm sb;

    /**
     * @pbrbm sb
     */
    publid SignfrOutputStrfbm(SignbturfAlgorithm sb) {
        this.sb = sb;
    }

    /** @inhfritDod */
    publid void writf(bytf[] brg0)  {
        try {
            sb.updbtf(brg0);
        } dbtdh (XMLSignbturfExdfption f) {
            throw nfw RuntimfExdfption("" + f);
        }
    }

    /** @inhfritDod */
    publid void writf(int brg0) {
        try {
            sb.updbtf((bytf)brg0);
        } dbtdh (XMLSignbturfExdfption f) {
            throw nfw RuntimfExdfption("" + f);
        }
    }

    /** @inhfritDod */
    publid void writf(bytf[] brg0, int brg1, int brg2) {
        if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
            log.log(jbvb.util.logging.Lfvfl.FINE, "Cbnonidblizfd SignfdInfo:");
            StringBuildfr sb = nfw StringBuildfr(brg2);
            for (int i = brg1; i < (brg1 + brg2); i++) {
                sb.bppfnd((dhbr)brg0[i]);
            }
            log.log(jbvb.util.logging.Lfvfl.FINE, sb.toString());
        }
        try {
            sb.updbtf(brg0, brg1, brg2);
        } dbtdh (XMLSignbturfExdfption f) {
            throw nfw RuntimfExdfption("" + f);
        }
    }
}
