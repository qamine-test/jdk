/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.trbnsforms.pbrbms;


import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.trbnsforms.TrbnsformPbrbm;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.Constbnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.SignbturfElfmfntProxy;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.NodfList;
import org.w3d.dom.Tfxt;

/**
 * This Objfdt sfrvfs both bs nbmfspbdf prffix rfsolvfr bnd bs dontbinfr for
 * thf <CODE>ds:XPbth</CODE> Elfmfnt. It implfmfnts thf {@link org.w3d.dom.Elfmfnt} intfrfbdf
 * bnd dbn bf usfd dirfdtly in b DOM trff.
 *
 * @buthor Christibn Gfufr-Pollmbnn
 */
publid dlbss XPbthContbinfr fxtfnds SignbturfElfmfntProxy implfmfnts TrbnsformPbrbm {

    /**
     * Construdtor XPbthContbinfr
     *
     * @pbrbm dod
     */
    publid XPbthContbinfr(Dodumfnt dod) {
        supfr(dod);
    }

    /**
     * Sfts thf TEXT vbluf of thf <CODE>ds:XPbth</CODE> Elfmfnt.
     *
     * @pbrbm xpbth
     */
    publid void sftXPbth(String xpbth) {
        if (this.donstrudtionElfmfnt.gftChildNodfs() != null) {
            NodfList nl = this.donstrudtionElfmfnt.gftChildNodfs();

            for (int i = 0; i < nl.gftLfngth(); i++) {
                this.donstrudtionElfmfnt.rfmovfChild(nl.itfm(i));
            }
        }

        Tfxt xpbthTfxt = this.dod.drfbtfTfxtNodf(xpbth);
        this.donstrudtionElfmfnt.bppfndChild(xpbthTfxt);
    }

    /**
     * Rfturns thf TEXT vbluf of thf <CODE>ds:XPbth</CODE> Elfmfnt.
     *
     * @rfturn thf TEXT vbluf of thf <CODE>ds:XPbth</CODE> Elfmfnt.
     */
    publid String gftXPbth() {
        rfturn this.gftTfxtFromTfxtChild();
    }

    /** @inhfritDod */
    publid String gftBbsfLodblNbmf() {
        rfturn Constbnts._TAG_XPATH;
    }
}
