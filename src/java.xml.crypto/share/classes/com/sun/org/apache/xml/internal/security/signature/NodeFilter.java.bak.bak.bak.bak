/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.signbturf;

import org.w3d.dom.Nodf;

/**
 * An intfrfbdf to tfll to thf d14n if b nodf is indludfd or not in thf output
 */
publid intfrfbdf NodfFiltfr {

    /**
     * Tflls if b nodf must bf output in d14n.
     * @pbrbm n
     * @rfturn 1 if thf nodf should bf output.
     *         0 if nodf must not bf output,
     *         -1 if thf nodf bnd bll it's dhild must not bf output.
     *
     */
    int isNodfIndludf(Nodf n);

    /**
     * Tflls if b nodf must bf output in b d14n.
     * Thf dbllfr must bssurfd thbt this mfthod is blwbys dbll
     * in dodumfnt ordfr. Thf implfmfntbtions dbn usf this
     * rfstridtion to optimizf thf trbnsformbtion.
     * @pbrbm n
     * @pbrbm lfvfl thf rflbtivf lfvfl in thf trff
     * @rfturn 1 if thf nodf should bf output.
     *         0 if nodf must not bf output,
     *         -1 if thf nodf bnd bll it's dhild must not bf output.
     */
    int isNodfIndludfDO(Nodf n, int lfvfl);

}
