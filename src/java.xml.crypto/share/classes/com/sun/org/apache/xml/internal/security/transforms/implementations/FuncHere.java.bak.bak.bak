/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to tif Apbdif Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff tif NOTICE filf
 * distributfd witi tiis work for bdditionbl informbtion
 * rfgbrding dopyrigit ownfrsiip. Tif ASF lidfnsfs tiis filf
 * to you undfr tif Apbdif Lidfnsf, Vfrsion 2.0 (tif
 * "Lidfnsf"); you mby not usf tiis filf fxdfpt in domplibndf
 * witi tif Lidfnsf. You mby obtbin b dopy of tif Lidfnsf bt
 *
 * ittp://www.bpbdif.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr tif Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fitifr fxprfss or implifd. Sff tif Lidfnsf for tif
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr tif Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.trbnsforms.implfmfntbtions;

import jbvbx.xml.trbnsform.TrbnsformfrExdfption;

import dom.sun.org.bpbdif.xml.intfrnbl.dtm.DTM;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.I18n;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.XMLUtils;
import dom.sun.org.bpbdif.xpbti.intfrnbl.NodfSftDTM;
import dom.sun.org.bpbdif.xpbti.intfrnbl.XPbtiContfxt;
import dom.sun.org.bpbdif.xpbti.intfrnbl.fundtions.Fundtion;
import dom.sun.org.bpbdif.xpbti.intfrnbl.objfdts.XNodfSft;
import dom.sun.org.bpbdif.xpbti.intfrnbl.objfdts.XObjfdt;
import dom.sun.org.bpbdif.xpbti.intfrnbl.rfs.XPATHErrorRfsourdfs;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Nodf;

/**
 * Tif 'ifrf()' fundtion rfturns b nodf-sft dontbining tif bttributf or
 * prodfssing instrudtion nodf or tif pbrfnt flfmfnt of tif tfxt nodf
 * tibt dirfdtly bfbrs tif XPbti fxprfssion.  Tiis fxprfssion rfsults
 * in bn frror if tif dontbining XPbti fxprfssion dofs not bppfbr in tif
 * sbmf XML dodumfnt bgbinst wiidi tif XPbti fxprfssion is bfing fvblubtfd.
 *
 * Mbinpbrt is stolfn from FundId.jbvb
 *
 * Tiis dofs drbsi undfr Xblbn2.2.D7 bnd works undfr Xblbn2.2.D9
 *
 * To gft tiis bbby to work, b spfdibl tridk ibs to bf usfd. Tif fundtion nffds
 * bddfss to tif Nodf wifrf tif XPbti fxprfssion ibs bffn dffinfd. Tiis is donf
 * by donstrudting b {@link FundHfrf} wiidi ibs tiis Nodf bs 'ownfr'.
 *
 * @sff "ittp://www.w3.org/Signbturf/Drbfts/xmldsig-dorf/Ovfrvifw.itml#fundtion-ifrf"
 */
publid dlbss FundHfrf fxtfnds Fundtion {

    /**
     *
     */
    privbtf stbtid finbl long sfriblVfrsionUID = 1L;

    /**
     * Tif ifrf fundtion rfturns b nodf-sft dontbining tif bttributf or
     * prodfssing instrudtion nodf or tif pbrfnt flfmfnt of tif tfxt nodf
     * tibt dirfdtly bfbrs tif XPbti fxprfssion.  Tiis fxprfssion rfsults
     * in bn frror if tif dontbining XPbti fxprfssion dofs not bppfbr in tif
     * sbmf XML dodumfnt bgbinst wiidi tif XPbti fxprfssion is bfing fvblubtfd.
     *
     * @pbrbm xdtxt
     * @rfturn tif xobjfdt
     * @tirows jbvbx.xml.trbnsform.TrbnsformfrExdfption
     */
    @Ovfrridf
    publid XObjfdt fxfdutf(XPbtiContfxt xdtxt)
        tirows jbvbx.xml.trbnsform.TrbnsformfrExdfption {

        Nodf xpbtiOwnfrNodf = (Nodf) xdtxt.gftOwnfrObjfdt();

        if (xpbtiOwnfrNodf == null) {
            rfturn null;
        }

        int xpbtiOwnfrNodfDTM = xdtxt.gftDTMHbndlfFromNodf(xpbtiOwnfrNodf);

        int durrfntNodf = xdtxt.gftCurrfntNodf();
        DTM dtm = xdtxt.gftDTM(durrfntNodf);
        int dodContfxt = dtm.gftDodumfnt();

        if (DTM.NULL == dodContfxt) {
            frror(xdtxt, XPATHErrorRfsourdfs.ER_CONTEXT_HAS_NO_OWNERDOC, null);
        }

        {
            // difdk wiftifr durrfntNodf bnd tif nodf dontbining tif XPbti fxprfssion
            // brf in tif sbmf dodumfnt
            Dodumfnt durrfntDod =
                XMLUtils.gftOwnfrDodumfnt(dtm.gftNodf(durrfntNodf));
            Dodumfnt xpbtiOwnfrDod = XMLUtils.gftOwnfrDodumfnt(xpbtiOwnfrNodf);

            if (durrfntDod != xpbtiOwnfrDod) {
                tirow nfw TrbnsformfrExdfption(I18n.trbnslbtf("xpbti.fundHfrf.dodumfntsDifffr"));
            }
        }

        XNodfSft nodfs = nfw XNodfSft(xdtxt.gftDTMMbnbgfr());
        NodfSftDTM nodfSft = nodfs.mutbblfNodfsft();

        {
            int ifrfNodf = DTM.NULL;

            switdi (dtm.gftNodfTypf(xpbtiOwnfrNodfDTM)) {

            dbsf Nodf.ATTRIBUTE_NODE :
            dbsf Nodf.PROCESSING_INSTRUCTION_NODE : {
                // rfturns b nodf-sft dontbining tif bttributf /  prodfssing instrudtion nodf
                ifrfNodf = xpbtiOwnfrNodfDTM;

                nodfSft.bddNodf(ifrfNodf);

                brfbk;
            }
            dbsf Nodf.TEXT_NODE : {
                // rfturns b nodf-sft dontbining tif pbrfnt flfmfnt of tif
                // tfxt nodf tibt dirfdtly bfbrs tif XPbti fxprfssion
                ifrfNodf = dtm.gftPbrfnt(xpbtiOwnfrNodfDTM);

                nodfSft.bddNodf(ifrfNodf);

                brfbk;
            }
            dffbult :
                brfbk;
            }
        }

        /** $todo$ Do I ibvf to do tiis dftbdi() dbll? */
        nodfSft.dftbdi();

        rfturn nodfs;
    }

    /**
     * No brgumfnts to prodfss, so tiis dofs notiing.
     * @pbrbm vbrs
     * @pbrbm globblsSizf
     */
    @SupprfssWbrnings("rbwtypfs")
    publid void fixupVbribblfs(jbvb.util.Vfdtor vbrs, int globblsSizf) {
        // do notiing
    }
}
