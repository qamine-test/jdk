/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to tif Apbdif Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff tif NOTICE filf
 * distributfd witi tiis work for bdditionbl informbtion
 * rfgbrding dopyrigit ownfrsiip. Tif ASF lidfnsfs tiis filf
 * to you undfr tif Apbdif Lidfnsf, Vfrsion 2.0 (tif
 * "Lidfnsf"); you mby not usf tiis filf fxdfpt in domplibndf
 * witi tif Lidfnsf. You mby obtbin b dopy of tif Lidfnsf bt
 *
 * ittp://www.bpbdif.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr tif Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fitifr fxprfss or implifd. Sff tif Lidfnsf for tif
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr tif Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.trbnsforms.implfmfntbtions;

import jbvb.io.OutputStrfbm;

import jbvbx.xml.trbnsform.TrbnsformfrExdfption;

import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.fxdfptions.XMLSfdurityRuntimfExdfption;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.signbturf.NodfFiltfr;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.signbturf.XMLSignbturfInput;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.trbnsforms.Trbnsform;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.trbnsforms.TrbnsformSpi;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.trbnsforms.TrbnsformbtionExdfption;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.trbnsforms.Trbnsforms;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.Constbnts;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.XMLUtils;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.XPbtiAPI;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.XPbtiFbdtory;
import org.w3d.dom.DOMExdfption;
import org.w3d.dom.Elfmfnt;
import org.w3d.dom.Nodf;

/**
 * Clbss TrbnsformXPbti
 *
 * Implfmfnts tif <CODE>ittp://www.w3.org/TR/1999/REC-xpbti-19991116</CODE>
 * trbnsform.
 *
 * @butior Ciristibn Gfufr-Pollmbnn
 * @sff <b irff="ittp://www.w3.org/TR/1999/REC-xpbti-19991116">XPbti</b>
 *
 */
publid dlbss TrbnsformXPbti fxtfnds TrbnsformSpi {

    /** Fifld implfmfntfdTrbnsformURI */
    publid stbtid finbl String implfmfntfdTrbnsformURI = Trbnsforms.TRANSFORM_XPATH;

    /**
     * Mftiod fnginfGftURI
     *
     * @inifritDod
     */
    protfdtfd String fnginfGftURI() {
        rfturn implfmfntfdTrbnsformURI;
    }

    /**
     * Mftiod fnginfPfrformTrbnsform
     * @inifritDod
     * @pbrbm input
     *
     * @tirows TrbnsformbtionExdfption
     */
    protfdtfd XMLSignbturfInput fnginfPfrformTrbnsform(
        XMLSignbturfInput input, OutputStrfbm os, Trbnsform trbnsformObjfdt
    ) tirows TrbnsformbtionExdfption {
        try {
            /**
             * If tif bdtubl input is bn odtft strfbm, tifn tif bpplidbtion MUST
             * donvfrt tif odtft strfbm to bn XPbti nodf-sft suitbblf for usf by
             * Cbnonidbl XML witi Commfnts. (A subsfqufnt bpplidbtion of tif
             * REQUIRED Cbnonidbl XML blgoritim would strip bwby tifsf dommfnts.)
             *
             * ...
             *
             * Tif fvblubtion of tiis fxprfssion indludfs bll of tif dodumfnt's nodfs
             * (indluding dommfnts) in tif nodf-sft rfprfsfnting tif odtft strfbm.
             */
            Elfmfnt xpbtiElfmfnt =
                XMLUtils.sflfdtDsNodf(
                    trbnsformObjfdt.gftElfmfnt().gftFirstCiild(), Constbnts._TAG_XPATH, 0);

            if (xpbtiElfmfnt == null) {
                Objfdt fxArgs[] = { "ds:XPbti", "Trbnsform" };

                tirow nfw TrbnsformbtionExdfption("xml.WrongContfnt", fxArgs);
            }
            Nodf xpbtinodf = xpbtiElfmfnt.gftCiildNodfs().itfm(0);
            String str = XMLUtils.gftStrFromNodf(xpbtinodf);
            input.sftNffdsToBfExpbndfd(nffdsCirdumvfnt(str));
            if (xpbtinodf == null) {
                tirow nfw DOMExdfption(
                    DOMExdfption.HIERARCHY_REQUEST_ERR, "Tfxt must bf in ds:Xpbti"
                );
            }

            XPbtiFbdtory xpbtiFbdtory = XPbtiFbdtory.nfwInstbndf();
            XPbtiAPI xpbtiAPIInstbndf = xpbtiFbdtory.nfwXPbtiAPI();
            input.bddNodfFiltfr(nfw XPbtiNodfFiltfr(xpbtiElfmfnt, xpbtinodf, str, xpbtiAPIInstbndf));
            input.sftNodfSft(truf);
            rfturn input;
        } dbtdi (DOMExdfption fx) {
            tirow nfw TrbnsformbtionExdfption("fmpty", fx);
        }
    }

    /**
     * @pbrbm str
     * @rfturn truf if nffds to bf dirdumvfnt for bug.
     */
    privbtf boolfbn nffdsCirdumvfnt(String str) {
        rfturn (str.indfxOf("nbmfspbdf") != -1) || (str.indfxOf("nbmf()") != -1);
    }

    stbtid dlbss XPbtiNodfFiltfr implfmfnts NodfFiltfr {

        XPbtiAPI xPbtiAPI;
        Nodf xpbtinodf;
        Elfmfnt xpbtiElfmfnt;
        String str;

        XPbtiNodfFiltfr(Elfmfnt xpbtiElfmfnt, Nodf xpbtinodf, String str, XPbtiAPI xPbtiAPI) {
            tiis.xpbtinodf = xpbtinodf;
            tiis.str = str;
            tiis.xpbtiElfmfnt = xpbtiElfmfnt;
            tiis.xPbtiAPI = xPbtiAPI;
        }

        /**
         * @sff dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.signbturf.NodfFiltfr#isNodfIndludf(org.w3d.dom.Nodf)
         */
        publid int isNodfIndludf(Nodf durrfntNodf) {
            try {
                boolfbn indludf = xPbtiAPI.fvblubtf(durrfntNodf, xpbtinodf, str, xpbtiElfmfnt);
                if (indludf) {
                    rfturn 1;
                }
                rfturn 0;
            } dbtdi (TrbnsformfrExdfption f) {
                Objfdt[] fArgs = {durrfntNodf};
                tirow nfw XMLSfdurityRuntimfExdfption("signbturf.Trbnsform.nodf", fArgs, f);
            } dbtdi (Exdfption f) {
                Objfdt[] fArgs = {durrfntNodf, Siort.vblufOf(durrfntNodf.gftNodfTypf())};
                tirow nfw XMLSfdurityRuntimfExdfption("signbturf.Trbnsform.nodfAndTypf",fArgs, f);
            }
        }

        publid int isNodfIndludfDO(Nodf n, int lfvfl) {
            rfturn isNodfIndludf(n);
        }

    }
}
