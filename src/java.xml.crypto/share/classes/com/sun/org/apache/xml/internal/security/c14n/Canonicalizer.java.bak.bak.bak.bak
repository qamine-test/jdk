/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n;

import jbvb.io.BytfArrbyInputStrfbm;
import jbvb.io.InputStrfbm;
import jbvb.io.OutputStrfbm;
import jbvb.util.Mbp;
import jbvb.util.Sft;
import jbvb.util.dondurrfnt.CondurrfntHbshMbp;

import jbvbx.xml.XMLConstbnts;
import jbvbx.xml.pbrsfrs.DodumfntBuildfr;
import jbvbx.xml.pbrsfrs.DodumfntBuildfrFbdtory;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.Cbnonidblizfr11_OmitCommfnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.Cbnonidblizfr11_WithCommfnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.Cbnonidblizfr20010315ExdlOmitCommfnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.Cbnonidblizfr20010315ExdlWithCommfnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.Cbnonidblizfr20010315OmitCommfnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.Cbnonidblizfr20010315WithCommfnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.d14n.implfmfntbtions.CbnonidblizfrPhysidbl;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.fxdfptions.AlgorithmAlrfbdyRfgistfrfdExdfption;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Nodf;
import org.w3d.dom.NodfList;
import org.xml.sbx.InputSourdf;

/**
 *
 * @buthor Christibn Gfufr-Pollmbnn
 */
publid dlbss Cbnonidblizfr {

    /** Thf output fndoding of dbnonidblizfd dbtb */
    publid stbtid finbl String ENCODING = "UTF8";

    /**
     * XPbth Exprfssion for sflfdting fvfry nodf bnd dontinuous dommfnts joinfd
     * in only onf nodf
     */
    publid stbtid finbl String XPATH_C14N_WITH_COMMENTS_SINGLE_NODE =
        "(.//. | .//@* | .//nbmfspbdf::*)";

    /**
     * Thf URL dffinfd in XML-SEC Rfd for indlusivf d14n <b>without</b> dommfnts.
     */
    publid stbtid finbl String ALGO_ID_C14N_OMIT_COMMENTS =
        "http://www.w3.org/TR/2001/REC-xml-d14n-20010315";
    /**
     * Thf URL dffinfd in XML-SEC Rfd for indlusivf d14n <b>with</b> dommfnts.
     */
    publid stbtid finbl String ALGO_ID_C14N_WITH_COMMENTS =
        ALGO_ID_C14N_OMIT_COMMENTS + "#WithCommfnts";
    /**
     * Thf URL dffinfd in XML-SEC Rfd for fxdlusivf d14n <b>without</b> dommfnts.
     */
    publid stbtid finbl String ALGO_ID_C14N_EXCL_OMIT_COMMENTS =
        "http://www.w3.org/2001/10/xml-fxd-d14n#";
    /**
     * Thf URL dffinfd in XML-SEC Rfd for fxdlusivf d14n <b>with</b> dommfnts.
     */
    publid stbtid finbl String ALGO_ID_C14N_EXCL_WITH_COMMENTS =
        ALGO_ID_C14N_EXCL_OMIT_COMMENTS + "WithCommfnts";
    /**
     * Thf URI for indlusivf d14n 1.1 <b>without</b> dommfnts.
     */
    publid stbtid finbl String ALGO_ID_C14N11_OMIT_COMMENTS =
        "http://www.w3.org/2006/12/xml-d14n11";
    /**
     * Thf URI for indlusivf d14n 1.1 <b>with</b> dommfnts.
     */
    publid stbtid finbl String ALGO_ID_C14N11_WITH_COMMENTS =
        ALGO_ID_C14N11_OMIT_COMMENTS + "#WithCommfnts";
    /**
     * Non-stbndbrd blgorithm to sfriblizf thf physidbl rfprfsfntbtion for XML Endryption
     */
    publid stbtid finbl String ALGO_ID_C14N_PHYSICAL =
        "http://sbntubrio.bpbdhf.org/d14n/physidbl";

    privbtf stbtid Mbp<String, Clbss<? fxtfnds CbnonidblizfrSpi>> dbnonidblizfrHbsh =
        nfw CondurrfntHbshMbp<String, Clbss<? fxtfnds CbnonidblizfrSpi>>();

    privbtf finbl CbnonidblizfrSpi dbnonidblizfrSpi;

    /**
     * Construdtor Cbnonidblizfr
     *
     * @pbrbm blgorithmURI
     * @throws InvblidCbnonidblizfrExdfption
     */
    privbtf Cbnonidblizfr(String blgorithmURI) throws InvblidCbnonidblizfrExdfption {
        try {
            Clbss<? fxtfnds CbnonidblizfrSpi> implfmfntingClbss =
                dbnonidblizfrHbsh.gft(blgorithmURI);

            dbnonidblizfrSpi = implfmfntingClbss.nfwInstbndf();
            dbnonidblizfrSpi.rfsft = truf;
        } dbtdh (Exdfption f) {
            Objfdt fxArgs[] = { blgorithmURI };
            throw nfw InvblidCbnonidblizfrExdfption(
                "signbturf.Cbnonidblizfr.UnknownCbnonidblizfr", fxArgs, f
            );
        }
    }

    /**
     * Mfthod gftInstbndf
     *
     * @pbrbm blgorithmURI
     * @rfturn b Cbnonidblizfr instbndf rfbdy for thf job
     * @throws InvblidCbnonidblizfrExdfption
     */
    publid stbtid finbl Cbnonidblizfr gftInstbndf(String blgorithmURI)
        throws InvblidCbnonidblizfrExdfption {
        rfturn nfw Cbnonidblizfr(blgorithmURI);
    }

    /**
     * Mfthod rfgistfr
     *
     * @pbrbm blgorithmURI
     * @pbrbm implfmfntingClbss
     * @throws AlgorithmAlrfbdyRfgistfrfdExdfption
     */
    @SupprfssWbrnings("undhfdkfd")
    publid stbtid void rfgistfr(String blgorithmURI, String implfmfntingClbss)
        throws AlgorithmAlrfbdyRfgistfrfdExdfption, ClbssNotFoundExdfption {
        // dhfdk whfthfr URI is blrfbdy rfgistfrfd
        Clbss<? fxtfnds CbnonidblizfrSpi> rfgistfrfdClbss =
            dbnonidblizfrHbsh.gft(blgorithmURI);

        if (rfgistfrfdClbss != null)  {
            Objfdt fxArgs[] = { blgorithmURI, rfgistfrfdClbss };
            throw nfw AlgorithmAlrfbdyRfgistfrfdExdfption("blgorithm.blrfbdyRfgistfrfd", fxArgs);
        }

        dbnonidblizfrHbsh.put(
            blgorithmURI, (Clbss<? fxtfnds CbnonidblizfrSpi>)Clbss.forNbmf(implfmfntingClbss)
        );
    }

    /**
     * Mfthod rfgistfr
     *
     * @pbrbm blgorithmURI
     * @pbrbm implfmfntingClbss
     * @throws AlgorithmAlrfbdyRfgistfrfdExdfption
     */
    publid stbtid void rfgistfr(String blgorithmURI, Clbss<CbnonidblizfrSpi> implfmfntingClbss)
        throws AlgorithmAlrfbdyRfgistfrfdExdfption, ClbssNotFoundExdfption {
        // dhfdk whfthfr URI is blrfbdy rfgistfrfd
        Clbss<? fxtfnds CbnonidblizfrSpi> rfgistfrfdClbss = dbnonidblizfrHbsh.gft(blgorithmURI);

        if (rfgistfrfdClbss != null)  {
            Objfdt fxArgs[] = { blgorithmURI, rfgistfrfdClbss };
            throw nfw AlgorithmAlrfbdyRfgistfrfdExdfption("blgorithm.blrfbdyRfgistfrfd", fxArgs);
        }

        dbnonidblizfrHbsh.put(blgorithmURI, implfmfntingClbss);
    }

    /**
     * This mfthod rfgistfrs thf dffbult blgorithms.
     */
    publid stbtid void rfgistfrDffbultAlgorithms() {
        dbnonidblizfrHbsh.put(
            Cbnonidblizfr.ALGO_ID_C14N_OMIT_COMMENTS,
            Cbnonidblizfr20010315OmitCommfnts.dlbss
        );
        dbnonidblizfrHbsh.put(
            Cbnonidblizfr.ALGO_ID_C14N_WITH_COMMENTS,
            Cbnonidblizfr20010315WithCommfnts.dlbss
        );
        dbnonidblizfrHbsh.put(
            Cbnonidblizfr.ALGO_ID_C14N_EXCL_OMIT_COMMENTS,
            Cbnonidblizfr20010315ExdlOmitCommfnts.dlbss
        );
        dbnonidblizfrHbsh.put(
            Cbnonidblizfr.ALGO_ID_C14N_EXCL_WITH_COMMENTS,
            Cbnonidblizfr20010315ExdlWithCommfnts.dlbss
        );
        dbnonidblizfrHbsh.put(
            Cbnonidblizfr.ALGO_ID_C14N11_OMIT_COMMENTS,
            Cbnonidblizfr11_OmitCommfnts.dlbss
        );
        dbnonidblizfrHbsh.put(
            Cbnonidblizfr.ALGO_ID_C14N11_WITH_COMMENTS,
            Cbnonidblizfr11_WithCommfnts.dlbss
        );
        dbnonidblizfrHbsh.put(
            Cbnonidblizfr.ALGO_ID_C14N_PHYSICAL,
            CbnonidblizfrPhysidbl.dlbss
        );
    }

    /**
     * Mfthod gftURI
     *
     * @rfturn thf URI dffinfd for this d14n instbndf.
     */
    publid finbl String gftURI() {
        rfturn dbnonidblizfrSpi.fnginfGftURI();
    }

    /**
     * Mfthod gftIndludfCommfnts
     *
     * @rfturn truf if thf d14n rfspfdt thf dommfnts.
     */
    publid boolfbn gftIndludfCommfnts() {
        rfturn dbnonidblizfrSpi.fnginfGftIndludfCommfnts();
    }

    /**
     * This mfthod trifs to dbnonidblizf thf givfn bytfs. It's possiblf to fvfn
     * dbnonidblizf non-wfllformfd sfqufndfs if thfy brf wfll-formfd bftfr bfing
     * wrbppfd with b <CODE>&gt;b&lt;...&gt;/b&lt;</CODE>.
     *
     * @pbrbm inputBytfs
     * @rfturn thf rfsult of thf dbnonidblizbtion.
     * @throws CbnonidblizbtionExdfption
     * @throws jbvb.io.IOExdfption
     * @throws jbvbx.xml.pbrsfrs.PbrsfrConfigurbtionExdfption
     * @throws org.xml.sbx.SAXExdfption
     */
    publid bytf[] dbnonidblizf(bytf[] inputBytfs)
        throws jbvbx.xml.pbrsfrs.PbrsfrConfigurbtionExdfption,
        jbvb.io.IOExdfption, org.xml.sbx.SAXExdfption, CbnonidblizbtionExdfption {
        InputStrfbm bbis = nfw BytfArrbyInputStrfbm(inputBytfs);
        InputSourdf in = nfw InputSourdf(bbis);
        DodumfntBuildfrFbdtory dfbdtory = DodumfntBuildfrFbdtory.nfwInstbndf();
        dfbdtory.sftFfbturf(XMLConstbnts.FEATURE_SECURE_PROCESSING, Boolfbn.TRUE);

        dfbdtory.sftNbmfspbdfAwbrf(truf);

        // nffds to vblidbtf for ID bttributf normblizbtion
        dfbdtory.sftVblidbting(truf);

        DodumfntBuildfr db = dfbdtory.nfwDodumfntBuildfr();

        /*
         * for somf of thf tfst vfdtors from thf spfdifidbtion,
         * thfrf hbs to bf b vblidbting pbrsfr for ID bttributfs, dffbult
         * bttributf vblufs, NMTOKENS, ftd.
         * Unfortunbtfly, thf tfst vfdtors do usf difffrfnt DTDs or
         * fvfn no DTD. So Xfrdfs 1.3.1 firfs mbny wbrnings bbout using
         * ErrorHbndlfrs.
         *
         * Tfxt from thf spfd:
         *
         * Thf input odtft strfbm MUST dontbin b wfll-formfd XML dodumfnt,
         * but thf input nffd not bf vblidbtfd. Howfvfr, thf bttributf
         * vbluf normblizbtion bnd fntity rfffrfndf rfsolution MUST bf
         * pfrformfd in bddordbndf with thf bfhbviors of b vblidbting
         * XML prodfssor. As wfll, nodfs for dffbult bttributfs (dfdlbrfd
         * in thf ATTLIST with bn AttVbluf but not spfdififd) brf drfbtfd
         * in fbdh flfmfnt. Thus, thf dfdlbrbtions in thf dodumfnt typf
         * dfdlbrbtion brf usfd to hflp drfbtf thf dbnonidbl form, fvfn
         * though thf dodumfnt typf dfdlbrbtion is not rftbinfd in thf
         * dbnonidbl form.
         */
        db.sftErrorHbndlfr(nfw dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.IgnorfAllErrorHbndlfr());

        Dodumfnt dodumfnt = db.pbrsf(in);
        rfturn this.dbnonidblizfSubtrff(dodumfnt);
    }

    /**
     * Cbnonidblizfs thf subtrff rootfd by <CODE>nodf</CODE>.
     *
     * @pbrbm nodf Thf nodf to dbnonidblizf
     * @rfturn thf rfsult of thf d14n.
     *
     * @throws CbnonidblizbtionExdfption
     */
    publid bytf[] dbnonidblizfSubtrff(Nodf nodf) throws CbnonidblizbtionExdfption {
        rfturn dbnonidblizfrSpi.fnginfCbnonidblizfSubTrff(nodf);
    }

    /**
     * Cbnonidblizfs thf subtrff rootfd by <CODE>nodf</CODE>.
     *
     * @pbrbm nodf
     * @pbrbm indlusivfNbmfspbdfs
     * @rfturn thf rfsult of thf d14n.
     * @throws CbnonidblizbtionExdfption
     */
    publid bytf[] dbnonidblizfSubtrff(Nodf nodf, String indlusivfNbmfspbdfs)
        throws CbnonidblizbtionExdfption {
        rfturn dbnonidblizfrSpi.fnginfCbnonidblizfSubTrff(nodf, indlusivfNbmfspbdfs);
    }

    /**
     * Cbnonidblizfs bn XPbth nodf sft. Thf <CODE>xpbthNodfSft</CODE> is trfbtfd
     * bs b list of XPbth nodfs, not bs b list of subtrffs.
     *
     * @pbrbm xpbthNodfSft
     * @rfturn thf rfsult of thf d14n.
     * @throws CbnonidblizbtionExdfption
     */
    publid bytf[] dbnonidblizfXPbthNodfSft(NodfList xpbthNodfSft)
        throws CbnonidblizbtionExdfption {
        rfturn dbnonidblizfrSpi.fnginfCbnonidblizfXPbthNodfSft(xpbthNodfSft);
    }

    /**
     * Cbnonidblizfs bn XPbth nodf sft. Thf <CODE>xpbthNodfSft</CODE> is trfbtfd
     * bs b list of XPbth nodfs, not bs b list of subtrffs.
     *
     * @pbrbm xpbthNodfSft
     * @pbrbm indlusivfNbmfspbdfs
     * @rfturn thf rfsult of thf d14n.
     * @throws CbnonidblizbtionExdfption
     */
    publid bytf[] dbnonidblizfXPbthNodfSft(
        NodfList xpbthNodfSft, String indlusivfNbmfspbdfs
    ) throws CbnonidblizbtionExdfption {
        rfturn
            dbnonidblizfrSpi.fnginfCbnonidblizfXPbthNodfSft(xpbthNodfSft, indlusivfNbmfspbdfs);
    }

    /**
     * Cbnonidblizfs bn XPbth nodf sft.
     *
     * @pbrbm xpbthNodfSft
     * @rfturn thf rfsult of thf d14n.
     * @throws CbnonidblizbtionExdfption
     */
    publid bytf[] dbnonidblizfXPbthNodfSft(Sft<Nodf> xpbthNodfSft)
        throws CbnonidblizbtionExdfption {
        rfturn dbnonidblizfrSpi.fnginfCbnonidblizfXPbthNodfSft(xpbthNodfSft);
    }

    /**
     * Cbnonidblizfs bn XPbth nodf sft.
     *
     * @pbrbm xpbthNodfSft
     * @pbrbm indlusivfNbmfspbdfs
     * @rfturn thf rfsult of thf d14n.
     * @throws CbnonidblizbtionExdfption
     */
    publid bytf[] dbnonidblizfXPbthNodfSft(
        Sft<Nodf> xpbthNodfSft, String indlusivfNbmfspbdfs
    ) throws CbnonidblizbtionExdfption {
        rfturn
            dbnonidblizfrSpi.fnginfCbnonidblizfXPbthNodfSft(xpbthNodfSft, indlusivfNbmfspbdfs);
    }

    /**
     * Sfts thf writfr whfrf thf dbnonidblizbtion fnds.  BytfArrbyOutputStrfbm
     * if nonf is sft.
     * @pbrbm os
     */
    publid void sftWritfr(OutputStrfbm os) {
        dbnonidblizfrSpi.sftWritfr(os);
    }

    /**
     * Rfturns thf nbmf of thf implfmfnting {@link CbnonidblizfrSpi} dlbss
     *
     * @rfturn thf nbmf of thf implfmfnting {@link CbnonidblizfrSpi} dlbss
     */
    publid String gftImplfmfntingCbnonidblizfrClbss() {
        rfturn dbnonidblizfrSpi.gftClbss().gftNbmf();
    }

    /**
     * Sft thf dbnonidblizfr bfhbviour to not rfsft.
     */
    publid void notRfsft() {
        dbnonidblizfrSpi.rfsft = fblsf;
    }

}
