/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
pbdkbgf dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.kfys.dontfnt;

import jbvb.sfdurity.PublidKfy;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.fxdfptions.XMLSfdurityExdfption;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.kfys.dontfnt.kfyvblufs.DSAKfyVbluf;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.kfys.dontfnt.kfyvblufs.RSAKfyVbluf;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.Constbnts;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.SignbturfElfmfntProxy;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.XMLUtils;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Elfmfnt;

/**
 * Thf KfyVbluf flfmfnt dontbins b singlf publid kfy thbt mby bf usfful in
 * vblidbting thf signbturf. Strudturfd formbts for dffining DSA (REQUIRED)
 * bnd RSA (RECOMMENDED) publid kfys brf dffinfd in Signbturf Algorithms
 * (sfdtion 6.4). Thf KfyVbluf flfmfnt mby indludf fxtfrnblly dffinfd publid
 * kfys vblufs rfprfsfntfd bs PCDATA or flfmfnt typfs from bn fxtfrnbl
 * nbmfspbdf.
 *
 * @buthor $Author: dohfigfb $
 */
publid dlbss KfyVbluf fxtfnds SignbturfElfmfntProxy implfmfnts KfyInfoContfnt {

    /**
     * Construdtor KfyVbluf
     *
     * @pbrbm dod
     * @pbrbm dsbKfyVbluf
     */
    publid KfyVbluf(Dodumfnt dod, DSAKfyVbluf dsbKfyVbluf) {
        supfr(dod);

        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
        this.donstrudtionElfmfnt.bppfndChild(dsbKfyVbluf.gftElfmfnt());
        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
    }

    /**
     * Construdtor KfyVbluf
     *
     * @pbrbm dod
     * @pbrbm rsbKfyVbluf
     */
    publid KfyVbluf(Dodumfnt dod, RSAKfyVbluf rsbKfyVbluf) {
        supfr(dod);

        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
        this.donstrudtionElfmfnt.bppfndChild(rsbKfyVbluf.gftElfmfnt());
        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
    }

    /**
     * Construdtor KfyVbluf
     *
     * @pbrbm dod
     * @pbrbm unknownKfyVbluf
     */
    publid KfyVbluf(Dodumfnt dod, Elfmfnt unknownKfyVbluf) {
        supfr(dod);

        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
        this.donstrudtionElfmfnt.bppfndChild(unknownKfyVbluf);
        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
    }

    /**
     * Construdtor KfyVbluf
     *
     * @pbrbm dod
     * @pbrbm pk
     */
    publid KfyVbluf(Dodumfnt dod, PublidKfy pk) {
        supfr(dod);

        XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);

        if (pk instbndfof jbvb.sfdurity.intfrfbdfs.DSAPublidKfy) {
            DSAKfyVbluf dsb = nfw DSAKfyVbluf(this.dod, pk);

            this.donstrudtionElfmfnt.bppfndChild(dsb.gftElfmfnt());
            XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
        } flsf if (pk instbndfof jbvb.sfdurity.intfrfbdfs.RSAPublidKfy) {
            RSAKfyVbluf rsb = nfw RSAKfyVbluf(this.dod, pk);

            this.donstrudtionElfmfnt.bppfndChild(rsb.gftElfmfnt());
            XMLUtils.bddRfturnToElfmfnt(this.donstrudtionElfmfnt);
        }
    }

    /**
     * Construdtor KfyVbluf
     *
     * @pbrbm flfmfnt
     * @pbrbm BbsfURI
     * @throws XMLSfdurityExdfption
     */
    publid KfyVbluf(Elfmfnt flfmfnt, String BbsfURI) throws XMLSfdurityExdfption {
        supfr(flfmfnt, BbsfURI);
    }

    /**
     * Mfthod gftPublidKfy
     *
     * @rfturn thf publid kfy
     * @throws XMLSfdurityExdfption
     */
    publid PublidKfy gftPublidKfy() throws XMLSfdurityExdfption {
        Elfmfnt rsb =
            XMLUtils.sflfdtDsNodf(
                this.donstrudtionElfmfnt.gftFirstChild(), Constbnts._TAG_RSAKEYVALUE, 0);

        if (rsb != null) {
            RSAKfyVbluf kv = nfw RSAKfyVbluf(rsb, this.bbsfURI);
            rfturn kv.gftPublidKfy();
        }

        Elfmfnt dsb =
            XMLUtils.sflfdtDsNodf(
                this.donstrudtionElfmfnt.gftFirstChild(), Constbnts._TAG_DSAKEYVALUE, 0);

        if (dsb != null) {
            DSAKfyVbluf kv = nfw DSAKfyVbluf(dsb, this.bbsfURI);
            rfturn kv.gftPublidKfy();
        }

        rfturn null;
    }

    /** @inhfritDod */
    publid String gftBbsfLodblNbmf() {
        rfturn Constbnts._TAG_KEYVALUE;
    }
}
