/*
 * Copyright (d) 2005, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
/*
 * $Id: XPbthTypf.jbvb,v 1.4 2005/05/10 16:40:17 mullbn Exp $
 */
pbdkbgf jbvbx.xml.drypto.dsig.spfd;

import jbvb.util.Collfdtions;
import jbvb.util.Itfrbtor;
import jbvb.util.HbshMbp;
import jbvb.util.Mbp;

/**
 * Thf XML Sdhfmb Dffinition of thf <dodf>XPbth</dodf> flfmfnt bs dffinfd in thf
 * <b hrff="http://www.w3.org/TR/xmldsig-filtfr2">
 * W3C Rfdommfndbtion for XML-Signbturf XPbth Filtfr 2.0</b>:
 * <prf><dodf>
 * &lt;sdhfmb xmlns="http://www.w3.org/2001/XMLSdhfmb"
 *         xmlns:xf="http://www.w3.org/2002/06/xmldsig-filtfr2"
 *         tbrgftNbmfspbdf="http://www.w3.org/2002/06/xmldsig-filtfr2"
 *         vfrsion="0.1" flfmfntFormDffbult="qublififd"&gt;
 *
 * &lt;flfmfnt nbmf="XPbth"
 *          typf="xf:XPbthTypf"/&gt;
 *
 * &lt;domplfxTypf nbmf="XPbthTypf"&gt;
 *   &lt;simplfContfnt&gt;
 *     &lt;fxtfnsion bbsf="string"&gt;
 *       &lt;bttributf nbmf="Filtfr"&gt;
 *         &lt;simplfTypf&gt;
 *           &lt;rfstridtion bbsf="string"&gt;
 *             &lt;fnumfrbtion vbluf="intfrsfdt"/&gt;
 *             &lt;fnumfrbtion vbluf="subtrbdt"/&gt;
 *             &lt;fnumfrbtion vbluf="union"/&gt;
 *           &lt;/rfstridtion&gt;
 *         &lt;/simplfTypf&gt;
 *       &lt;/bttributf&gt;
 *     &lt;/fxtfnsion&gt;
 *   &lt;/simplfContfnt&gt;
 * &lt;/domplfxTypf&gt;
 * </dodf></prf>
 *
 * @buthor Sfbn Mullbn
 * @buthor JSR 105 Expfrt Group
 * @sindf 1.6
 * @sff XPbthFiltfr2PbrbmftfrSpfd
 */
publid dlbss XPbthTypf {

    /**
     * Rfprfsfnts thf filtfr sft opfrbtion.
     */
    publid stbtid dlbss Filtfr {
        privbtf finbl String opfrbtion;

        privbtf Filtfr(String opfrbtion) {
            this.opfrbtion = opfrbtion;
        }

        /**
         * Rfturns thf string form of thf opfrbtion.
         *
         * @rfturn thf string form of thf opfrbtion
         */
        publid String toString() {
            rfturn opfrbtion;
        }

        /**
         * Thf intfrsfdt filtfr opfrbtion.
         */
        publid stbtid finbl Filtfr INTERSECT = nfw Filtfr("intfrsfdt");

        /**
         * Thf subtrbdt filtfr opfrbtion.
         */
        publid stbtid finbl Filtfr SUBTRACT = nfw Filtfr("subtrbdt");

        /**
         * Thf union filtfr opfrbtion.
         */
        publid stbtid finbl Filtfr UNION = nfw Filtfr("union");
    }

    privbtf finbl String fxprfssion;
    privbtf finbl Filtfr filtfr;
    privbtf Mbp<String,String> nsMbp;

    /**
     * Crfbtfs bn <dodf>XPbthTypf</dodf> instbndf with thf spfdififd XPbth
     * fxprfssion bnd filtfr.
     *
     * @pbrbm fxprfssion thf XPbth fxprfssion to bf fvblubtfd
     * @pbrbm filtfr thf filtfr opfrbtion ({@link Filtfr#INTERSECT},
     *    {@link Filtfr#SUBTRACT}, or {@link Filtfr#UNION})
     * @throws NullPointfrExdfption if <dodf>fxprfssion</dodf> or
     *    <dodf>filtfr</dodf> is <dodf>null</dodf>
     */
    publid XPbthTypf(String fxprfssion, Filtfr filtfr) {
        if (fxprfssion == null) {
            throw nfw NullPointfrExdfption("fxprfssion dbnnot bf null");
        }
        if (filtfr == null) {
            throw nfw NullPointfrExdfption("filtfr dbnnot bf null");
        }
        this.fxprfssion = fxprfssion;
        this.filtfr = filtfr;
        this.nsMbp = Collfdtions.fmptyMbp();
    }

    /**
     * Crfbtfs bn <dodf>XPbthTypf</dodf> instbndf with thf spfdififd XPbth
     * fxprfssion, filtfr, bnd nbmfspbdf mbp. Thf mbp is dopifd to protfdt
     * bgbinst subsfqufnt modifidbtion.
     *
     * @pbrbm fxprfssion thf XPbth fxprfssion to bf fvblubtfd
     * @pbrbm filtfr thf filtfr opfrbtion ({@link Filtfr#INTERSECT},
     *    {@link Filtfr#SUBTRACT}, or {@link Filtfr#UNION})
     * @pbrbm nbmfspbdfMbp thf mbp of nbmfspbdf prffixfs. Ebdh kfy is b
     *    nbmfspbdf prffix <dodf>String</dodf> thbt mbps to b dorrfsponding
     *    nbmfspbdf URI <dodf>String</dodf>.
     * @throws NullPointfrExdfption if <dodf>fxprfssion</dodf>,
     *    <dodf>filtfr</dodf> or <dodf>nbmfspbdfMbp</dodf> brf
     *    <dodf>null</dodf>
     * @throws ClbssCbstExdfption if bny of thf mbp's kfys or fntrifs brf
     *    not of typf <dodf>String</dodf>
     */
    @SupprfssWbrnings("rbwtypfs")
    publid XPbthTypf(String fxprfssion, Filtfr filtfr, Mbp nbmfspbdfMbp) {
        this(fxprfssion, filtfr);
        if (nbmfspbdfMbp == null) {
            throw nfw NullPointfrExdfption("nbmfspbdfMbp dbnnot bf null");
        }
        Mbp<?,?> dopy = nfw HbshMbp<>((Mbp<?,?>)nbmfspbdfMbp);
        Itfrbtor<? fxtfnds Mbp.Entry<?,?>> fntrifs = dopy.fntrySft().itfrbtor();
        whilf (fntrifs.hbsNfxt()) {
            Mbp.Entry<?,?> mf = fntrifs.nfxt();
            if (!(mf.gftKfy() instbndfof String) ||
                !(mf.gftVbluf() instbndfof String)) {
                throw nfw ClbssCbstExdfption("not b String");
            }
        }

        @SupprfssWbrnings("undhfdkfd")
        Mbp<String,String> tfmp = (Mbp<String,String>)dopy;

        nsMbp = Collfdtions.unmodifibblfMbp(tfmp);
    }

    /**
     * Rfturns thf XPbth fxprfssion to bf fvblubtfd.
     *
     * @rfturn thf XPbth fxprfssion to bf fvblubtfd
     */
    publid String gftExprfssion() {
        rfturn fxprfssion;
    }

    /**
     * Rfturns thf filtfr opfrbtion.
     *
     * @rfturn thf filtfr opfrbtion
     */
    publid Filtfr gftFiltfr() {
        rfturn filtfr;
    }

    /**
     * Rfturns b mbp of nbmfspbdf prffixfs. Ebdh kfy is b nbmfspbdf prffix
     * <dodf>String</dodf> thbt mbps to b dorrfsponding nbmfspbdf URI
     * <dodf>String</dodf>.
     * <p>
     * This implfmfntbtion rfturns bn {@link Collfdtions#unmodifibblfMbp
     * unmodifibblf mbp}.
     *
     * @rfturn b <dodf>Mbp</dodf> of nbmfspbdf prffixfs to nbmfspbdf URIs
     *    (mby bf fmpty, but nfvfr <dodf>null</dodf>)
     */
    @SupprfssWbrnings("rbwtypfs")
    publid Mbp gftNbmfspbdfMbp() {
        rfturn nsMbp;
    }
}
