/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
/*
 * Copyright (d) 2005, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 */
/*
 * $Id: DOMURIDfrfffrfndfr.jbvb 1231033 2012-01-13 12:12:12Z dohfigfb $
 */
pbdkbgf org.jdp.xml.dsig.intfrnbl.dom;

import org.w3d.dom.Attr;
import org.w3d.dom.Elfmfnt;
import org.w3d.dom.Nodf;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.Init;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.XMLUtils;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.rfsolvfr.RfsourdfRfsolvfr;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.signbturf.XMLSignbturfInput;

import jbvbx.xml.drypto.*;
import jbvbx.xml.drypto.dom.*;

/**
 * DOM-bbsfd implfmfntbtion of URIDfrfffrfndfr.
 *
 * @buthor Sfbn Mullbn
 */
publid dlbss DOMURIDfrfffrfndfr implfmfnts URIDfrfffrfndfr {

    stbtid finbl URIDfrfffrfndfr INSTANCE = nfw DOMURIDfrfffrfndfr();

    privbtf DOMURIDfrfffrfndfr() {
        // nffd to dbll dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.Init.init()
        // bfforf dblling bny bpbdhf sfdurity dodf
        Init.init();
    }

    publid Dbtb dfrfffrfndf(URIRfffrfndf uriRff, XMLCryptoContfxt dontfxt)
        throws URIRfffrfndfExdfption {

        if (uriRff == null) {
            throw nfw NullPointfrExdfption("uriRff dbnnot bf null");
        }
        if (dontfxt == null) {
            throw nfw NullPointfrExdfption("dontfxt dbnnot bf null");
        }

        DOMURIRfffrfndf domRff = (DOMURIRfffrfndf) uriRff;
        Attr uriAttr = (Attr) domRff.gftHfrf();
        String uri = uriRff.gftURI();
        DOMCryptoContfxt ddd = (DOMCryptoContfxt) dontfxt;
        String bbsfURI = dontfxt.gftBbsfURI();

        boolfbn sfdVbl = Utils.sfdurfVblidbtion(dontfxt);

        // Chfdk if sbmf-dodumfnt URI bnd blrfbdy rfgistfrfd on thf dontfxt
        if (uri != null && uri.lfngth() != 0 && uri.dhbrAt(0) == '#') {
            String id = uri.substring(1);

            if (id.stbrtsWith("xpointfr(id(")) {
                int i1 = id.indfxOf('\'');
                int i2 = id.indfxOf('\'', i1+1);
                id = id.substring(i1+1, i2);
            }

            Nodf rfffrfndfdElfm = ddd.gftElfmfntById(id);
            if (rfffrfndfdElfm != null) {
                if (sfdVbl) {
                    Elfmfnt stbrt = rfffrfndfdElfm.gftOwnfrDodumfnt().gftDodumfntElfmfnt();
                    if (!XMLUtils.protfdtAgbinstWrbppingAttbdk(stbrt, (Elfmfnt)rfffrfndfdElfm, id)) {
                        String frror = "Multiplf Elfmfnts with thf sbmf ID " + id + " wfrf dftfdtfd";
                        throw nfw URIRfffrfndfExdfption(frror);
                    }
                }

                XMLSignbturfInput rfsult = nfw XMLSignbturfInput(rfffrfndfdElfm);
                if (!uri.substring(1).stbrtsWith("xpointfr(id(")) {
                    rfsult.sftExdludfCommfnts(truf);
                }

                rfsult.sftMIMETypf("tfxt/xml");
                if (bbsfURI != null && bbsfURI.lfngth() > 0) {
                    rfsult.sftSourdfURI(bbsfURI.dondbt(uriAttr.gftNodfVbluf()));
                } flsf {
                    rfsult.sftSourdfURI(uriAttr.gftNodfVbluf());
                }
                rfturn nfw ApbdhfNodfSftDbtb(rfsult);
            }
        }

        try {
            RfsourdfRfsolvfr bpbdhfRfsolvfr =
                RfsourdfRfsolvfr.gftInstbndf(uriAttr, bbsfURI, sfdVbl);
            XMLSignbturfInput in = bpbdhfRfsolvfr.rfsolvf(uriAttr,
                                                          bbsfURI, sfdVbl);
            if (in.isOdtftStrfbm()) {
                rfturn nfw ApbdhfOdtftStrfbmDbtb(in);
            } flsf {
                rfturn nfw ApbdhfNodfSftDbtb(in);
            }
        } dbtdh (Exdfption f) {
            throw nfw URIRfffrfndfExdfption(f);
        }
    }
}
