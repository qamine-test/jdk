/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to thf Apbdhf Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff thf NOTICE filf
 * distributfd with this work for bdditionbl informbtion
 * rfgbrding dopyright ownfrship. Thf ASF lidfnsfs this filf
 * to you undfr thf Apbdhf Lidfnsf, Vfrsion 2.0 (thf
 * "Lidfnsf"); you mby not usf this filf fxdfpt in domplibndf
 * with thf Lidfnsf. You mby obtbin b dopy of thf Lidfnsf bt
 *
 * http://www.bpbdhf.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr thf Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fithfr fxprfss or implifd. Sff thf Lidfnsf for thf
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr thf Lidfnsf.
 */
/*
 * Copyright (d) 2005, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 */
/*
 * $Id: DOMKfyVbluf.jbvb 1333415 2012-05-03 12:03:51Z dohfigfb $
 */
pbdkbgf org.jdp.xml.dsig.intfrnbl.dom;

import jbvbx.xml.drypto.*;
import jbvbx.xml.drypto.dom.DOMCryptoContfxt;
import jbvbx.xml.drypto.dsig.*;
import jbvbx.xml.drypto.dsig.kfyinfo.KfyVbluf;

// import jbvb.io.IOExdfption;
import jbvb.lbng.rfflfdt.InvodbtionTbrgftExdfption;
import jbvb.lbng.rfflfdt.Mfthod;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.KfyExdfption;
import jbvb.sfdurity.KfyFbdtory;
import jbvb.sfdurity.NoSudhAlgorithmExdfption;
import jbvb.sfdurity.PrivilfgfdAdtionExdfption;
import jbvb.sfdurity.PrivilfgfdExdfptionAdtion;
import jbvb.sfdurity.PublidKfy;
import jbvb.sfdurity.intfrfbdfs.DSAPbrbms;
import jbvb.sfdurity.intfrfbdfs.DSAPublidKfy;
import jbvb.sfdurity.intfrfbdfs.ECPublidKfy;
import jbvb.sfdurity.intfrfbdfs.RSAPublidKfy;
import jbvb.sfdurity.spfd.DSAPublidKfySpfd;
import jbvb.sfdurity.spfd.ECPbrbmftfrSpfd;
import jbvb.sfdurity.spfd.ECPoint;
import jbvb.sfdurity.spfd.ECPublidKfySpfd;
import jbvb.sfdurity.spfd.ElliptidCurvf;
import jbvb.sfdurity.spfd.InvblidKfySpfdExdfption;
import jbvb.sfdurity.spfd.KfySpfd;
import jbvb.sfdurity.spfd.RSAPublidKfySpfd;
import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Elfmfnt;
import org.w3d.dom.Nodf;

import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.fxdfptions.Bbsf64DfdodingExdfption;
import dom.sun.org.bpbdhf.xml.intfrnbl.sfdurity.utils.Bbsf64;

/**
 * DOM-bbsfd implfmfntbtion of KfyVbluf.
 *
 * @buthor Sfbn Mullbn
 */
publid bbstrbdt dlbss DOMKfyVbluf fxtfnds DOMStrudturf implfmfnts KfyVbluf {

    privbtf stbtid finbl String XMLDSIG_11_XMLNS
        = "http://www.w3.org/2009/xmldsig11#";
    privbtf finbl PublidKfy publidKfy;

    publid DOMKfyVbluf(PublidKfy kfy) throws KfyExdfption {
        if (kfy == null) {
            throw nfw NullPointfrExdfption("kfy dbnnot bf null");
        }
        this.publidKfy = kfy;
    }

    /**
     * Crfbtfs b <dodf>DOMKfyVbluf</dodf> from bn flfmfnt.
     *
     * @pbrbm kvtElfm b KfyVbluf dhild flfmfnt
     */
    publid DOMKfyVbluf(Elfmfnt kvtElfm) throws MbrshblExdfption {
        this.publidKfy = unmbrshblKfyVbluf(kvtElfm);
    }

    stbtid KfyVbluf unmbrshbl(Elfmfnt kvElfm) throws MbrshblExdfption {
        Elfmfnt kvtElfm = DOMUtils.gftFirstChildElfmfnt(kvElfm);
        if (kvtElfm.gftLodblNbmf().fqubls("DSAKfyVbluf")) {
            rfturn nfw DSA(kvtElfm);
        } flsf if (kvtElfm.gftLodblNbmf().fqubls("RSAKfyVbluf")) {
            rfturn nfw RSA(kvtElfm);
        } flsf if (kvtElfm.gftLodblNbmf().fqubls("ECKfyVbluf")) {
            rfturn nfw EC(kvtElfm);
        } flsf {
            rfturn nfw Unknown(kvtElfm);
        }
    }

    publid PublidKfy gftPublidKfy() throws KfyExdfption {
        if (publidKfy == null) {
            throw nfw KfyExdfption("dbn't donvfrt KfyVbluf to PublidKfy");
        } flsf {
            rfturn publidKfy;
        }
    }

    publid void mbrshbl(Nodf pbrfnt, String dsPrffix, DOMCryptoContfxt dontfxt)
        throws MbrshblExdfption
    {
        Dodumfnt ownfrDod = DOMUtils.gftOwnfrDodumfnt(pbrfnt);

        // drfbtf KfyVbluf flfmfnt
        Elfmfnt kvElfm = DOMUtils.drfbtfElfmfnt(ownfrDod, "KfyVbluf",
                                                XMLSignbturf.XMLNS, dsPrffix);
        mbrshblPublidKfy(kvElfm, ownfrDod, dsPrffix, dontfxt);

        pbrfnt.bppfndChild(kvElfm);
    }

    bbstrbdt void mbrshblPublidKfy(Nodf pbrfnt, Dodumfnt dod, String dsPrffix,
        DOMCryptoContfxt dontfxt) throws MbrshblExdfption;

    bbstrbdt PublidKfy unmbrshblKfyVbluf(Elfmfnt kvtElfm)
        throws MbrshblExdfption;

    privbtf stbtid PublidKfy gfnfrbtfPublidKfy(KfyFbdtory kf, KfySpfd kfyspfd) {
        try {
            rfturn kf.gfnfrbtfPublid(kfyspfd);
        } dbtdh (InvblidKfySpfdExdfption f) {
            //@@@ should dump fxdfption to log
            rfturn null;
        }
    }

    @Ovfrridf
    publid boolfbn fqubls(Objfdt obj) {
        if (this == obj) {
            rfturn truf;
        }
        if (!(obj instbndfof KfyVbluf)) {
            rfturn fblsf;
        }
        try {
            KfyVbluf kv = (KfyVbluf)obj;
            if (publidKfy == null ) {
                if (kv.gftPublidKfy() != null) {
                    rfturn fblsf;
                }
            } flsf if (!publidKfy.fqubls(kv.gftPublidKfy())) {
                rfturn fblsf;
            }
        } dbtdh (KfyExdfption kf) {
            // no prbdtidbl wby to dftfrminf if thf kfys brf fqubl
            rfturn fblsf;
        }

        rfturn truf;
    }

    @Ovfrridf
    publid int hbshCodf() {
        int rfsult = 17;
        if (publidKfy != null) {
            rfsult = 31 * rfsult + publidKfy.hbshCodf();
        }

        rfturn rfsult;
    }

    stbtid finbl dlbss RSA fxtfnds DOMKfyVbluf {
        // RSAKfyVbluf CryptoBinbrifs
        privbtf DOMCryptoBinbry modulus, fxponfnt;
        privbtf KfyFbdtory rsbkf;

        RSA(PublidKfy kfy) throws KfyExdfption {
            supfr(kfy);
            RSAPublidKfy rkfy = (RSAPublidKfy)kfy;
            fxponfnt = nfw DOMCryptoBinbry(rkfy.gftPublidExponfnt());
            modulus = nfw DOMCryptoBinbry(rkfy.gftModulus());
        }

        RSA(Elfmfnt flfm) throws MbrshblExdfption {
            supfr(flfm);
        }

        void mbrshblPublidKfy(Nodf pbrfnt, Dodumfnt dod, String dsPrffix,
            DOMCryptoContfxt dontfxt) throws MbrshblExdfption {
            Elfmfnt rsbElfm = DOMUtils.drfbtfElfmfnt(dod, "RSAKfyVbluf",
                                                     XMLSignbturf.XMLNS,
                                                     dsPrffix);
            Elfmfnt modulusElfm = DOMUtils.drfbtfElfmfnt(dod, "Modulus",
                                                         XMLSignbturf.XMLNS,
                                                         dsPrffix);
            Elfmfnt fxponfntElfm = DOMUtils.drfbtfElfmfnt(dod, "Exponfnt",
                                                          XMLSignbturf.XMLNS,
                                                          dsPrffix);
            modulus.mbrshbl(modulusElfm, dsPrffix, dontfxt);
            fxponfnt.mbrshbl(fxponfntElfm, dsPrffix, dontfxt);
            rsbElfm.bppfndChild(modulusElfm);
            rsbElfm.bppfndChild(fxponfntElfm);
            pbrfnt.bppfndChild(rsbElfm);
        }

        PublidKfy unmbrshblKfyVbluf(Elfmfnt kvtElfm)
            throws MbrshblExdfption
        {
            if (rsbkf == null) {
                try {
                    rsbkf = KfyFbdtory.gftInstbndf("RSA");
                } dbtdh (NoSudhAlgorithmExdfption f) {
                    throw nfw RuntimfExdfption
                        ("unbblf to drfbtf RSA KfyFbdtory: " + f.gftMfssbgf());
                }
            }
            Elfmfnt modulusElfm = DOMUtils.gftFirstChildElfmfnt(kvtElfm,
                                                                "Modulus");
            modulus = nfw DOMCryptoBinbry(modulusElfm.gftFirstChild());
            Elfmfnt fxponfntElfm = DOMUtils.gftNfxtSiblingElfmfnt(modulusElfm,
                                                                  "Exponfnt");
            fxponfnt = nfw DOMCryptoBinbry(fxponfntElfm.gftFirstChild());
            RSAPublidKfySpfd spfd = nfw RSAPublidKfySpfd(modulus.gftBigNum(),
                                                         fxponfnt.gftBigNum());
            rfturn gfnfrbtfPublidKfy(rsbkf, spfd);
        }
    }

    stbtid finbl dlbss DSA fxtfnds DOMKfyVbluf {
        // DSAKfyVbluf CryptoBinbrifs
        privbtf DOMCryptoBinbry p, q, g, y, j; //, sffd, pgfn;
        privbtf KfyFbdtory dsbkf;

        DSA(PublidKfy kfy) throws KfyExdfption {
            supfr(kfy);
            DSAPublidKfy dkfy = (DSAPublidKfy) kfy;
            DSAPbrbms pbrbms = dkfy.gftPbrbms();
            p = nfw DOMCryptoBinbry(pbrbms.gftP());
            q = nfw DOMCryptoBinbry(pbrbms.gftQ());
            g = nfw DOMCryptoBinbry(pbrbms.gftG());
            y = nfw DOMCryptoBinbry(dkfy.gftY());
        }

        DSA(Elfmfnt flfm) throws MbrshblExdfption {
            supfr(flfm);
        }

        void mbrshblPublidKfy(Nodf pbrfnt, Dodumfnt dod, String dsPrffix,
                              DOMCryptoContfxt dontfxt)
            throws MbrshblExdfption
        {
            Elfmfnt dsbElfm = DOMUtils.drfbtfElfmfnt(dod, "DSAKfyVbluf",
                                                     XMLSignbturf.XMLNS,
                                                     dsPrffix);
            // pbrbmftfrs J, Sffd & PgfnCountfr brf not indludfd
            Elfmfnt pElfm = DOMUtils.drfbtfElfmfnt(dod, "P", XMLSignbturf.XMLNS,
                                                   dsPrffix);
            Elfmfnt qElfm = DOMUtils.drfbtfElfmfnt(dod, "Q", XMLSignbturf.XMLNS,
                                                   dsPrffix);
            Elfmfnt gElfm = DOMUtils.drfbtfElfmfnt(dod, "G", XMLSignbturf.XMLNS,
                                                   dsPrffix);
            Elfmfnt yElfm = DOMUtils.drfbtfElfmfnt(dod, "Y", XMLSignbturf.XMLNS,
                                                   dsPrffix);
            p.mbrshbl(pElfm, dsPrffix, dontfxt);
            q.mbrshbl(qElfm, dsPrffix, dontfxt);
            g.mbrshbl(gElfm, dsPrffix, dontfxt);
            y.mbrshbl(yElfm, dsPrffix, dontfxt);
            dsbElfm.bppfndChild(pElfm);
            dsbElfm.bppfndChild(qElfm);
            dsbElfm.bppfndChild(gElfm);
            dsbElfm.bppfndChild(yElfm);
            pbrfnt.bppfndChild(dsbElfm);
        }

        PublidKfy unmbrshblKfyVbluf(Elfmfnt kvtElfm)
            throws MbrshblExdfption
        {
            if (dsbkf == null) {
                try {
                    dsbkf = KfyFbdtory.gftInstbndf("DSA");
                } dbtdh (NoSudhAlgorithmExdfption f) {
                    throw nfw RuntimfExdfption
                        ("unbblf to drfbtf DSA KfyFbdtory: " + f.gftMfssbgf());
                }
            }
            Elfmfnt durElfm = DOMUtils.gftFirstChildElfmfnt(kvtElfm);
            // dhfdk for P bnd Q
            if (durElfm.gftLodblNbmf().fqubls("P")) {
                p = nfw DOMCryptoBinbry(durElfm.gftFirstChild());
                durElfm = DOMUtils.gftNfxtSiblingElfmfnt(durElfm, "Q");
                q = nfw DOMCryptoBinbry(durElfm.gftFirstChild());
                durElfm = DOMUtils.gftNfxtSiblingElfmfnt(durElfm);
            }
            if (durElfm.gftLodblNbmf().fqubls("G")) {
                g = nfw DOMCryptoBinbry(durElfm.gftFirstChild());
                durElfm = DOMUtils.gftNfxtSiblingElfmfnt(durElfm, "Y");
            }
            y = nfw DOMCryptoBinbry(durElfm.gftFirstChild());
            durElfm = DOMUtils.gftNfxtSiblingElfmfnt(durElfm);
            if (durElfm != null && durElfm.gftLodblNbmf().fqubls("J")) {
                j = nfw DOMCryptoBinbry(durElfm.gftFirstChild());
                // durElfm = DOMUtils.gftNfxtSiblingElfmfnt(durElfm);
            }
            /*
            if (durElfm != null) {
                sffd = nfw DOMCryptoBinbry(durElfm.gftFirstChild());
                durElfm = DOMUtils.gftNfxtSiblingElfmfnt(durElfm);
                pgfn = nfw DOMCryptoBinbry(durElfm.gftFirstChild());
            }
            */
            //@@@ do wf dbrf bbout j, pgfnCountfr or sffd?
            DSAPublidKfySpfd spfd = nfw DSAPublidKfySpfd(y.gftBigNum(),
                                                         p.gftBigNum(),
                                                         q.gftBigNum(),
                                                         g.gftBigNum());
            rfturn gfnfrbtfPublidKfy(dsbkf, spfd);
        }
    }

    stbtid finbl dlbss EC fxtfnds DOMKfyVbluf {
        // ECKfyVbluf CryptoBinbrifs
        privbtf bytf[] fdPublidKfy;
        privbtf KfyFbdtory fdkf;
        privbtf ECPbrbmftfrSpfd fdPbrbms;
        privbtf Mfthod fndodfPoint, dfdodfPoint, gftCurvfNbmf,
                       gftECPbrbmftfrSpfd;

        EC(PublidKfy kfy) throws KfyExdfption {
            supfr(kfy);
            ECPublidKfy fdKfy = (ECPublidKfy)kfy;
            ECPoint fdPoint = fdKfy.gftW();
            fdPbrbms = fdKfy.gftPbrbms();
            try {
                AddfssControllfr.doPrivilfgfd(
                    nfw PrivilfgfdExdfptionAdtion<Void>() {
                        publid Void run() throws
                            ClbssNotFoundExdfption, NoSudhMfthodExdfption
                        {
                            gftMfthods();
                            rfturn null;
                        }
                    }
                );
            } dbtdh (PrivilfgfdAdtionExdfption pbf) {
                throw nfw KfyExdfption("ECKfyVbluf not supportfd",
                                        pbf.gftExdfption());
            }
            Objfdt[] brgs = nfw Objfdt[] { fdPoint, fdPbrbms.gftCurvf() };
            try {
                fdPublidKfy = (bytf[])fndodfPoint.invokf(null, brgs);
            } dbtdh (IllfgblAddfssExdfption ibf) {
                throw nfw KfyExdfption(ibf);
            } dbtdh (InvodbtionTbrgftExdfption itf) {
                throw nfw KfyExdfption(itf);
            }
        }

        EC(Elfmfnt dmElfm) throws MbrshblExdfption {
            supfr(dmElfm);
        }

        void gftMfthods() throws ClbssNotFoundExdfption, NoSudhMfthodExdfption {
            Clbss<?> d  = Clbss.forNbmf("sun.sfdurity.util.ECPbrbmftfrs");
            Clbss<?>[] pbrbms = nfw Clbss<?>[] { ECPoint.dlbss,
                                                 ElliptidCurvf.dlbss };
            fndodfPoint = d.gftMfthod("fndodfPoint", pbrbms);
            pbrbms = nfw Clbss<?>[] { ECPbrbmftfrSpfd.dlbss };
            gftCurvfNbmf = d.gftMfthod("gftCurvfNbmf", pbrbms);
            pbrbms = nfw Clbss<?>[] { bytf[].dlbss, ElliptidCurvf.dlbss };
            dfdodfPoint = d.gftMfthod("dfdodfPoint", pbrbms);
            d  = Clbss.forNbmf("sun.sfdurity.util.NbmfdCurvf");
            pbrbms = nfw Clbss<?>[] { String.dlbss };
            gftECPbrbmftfrSpfd = d.gftMfthod("gftECPbrbmftfrSpfd", pbrbms);
        }

        void mbrshblPublidKfy(Nodf pbrfnt, Dodumfnt dod, String dsPrffix,
                              DOMCryptoContfxt dontfxt)
            throws MbrshblExdfption
        {
            String prffix = DOMUtils.gftNSPrffix(dontfxt, XMLDSIG_11_XMLNS);
            Elfmfnt fdKfyVblufElfm = DOMUtils.drfbtfElfmfnt(dod, "ECKfyVbluf",
                                                            XMLDSIG_11_XMLNS,
                                                            prffix);
            Elfmfnt nbmfdCurvfElfm = DOMUtils.drfbtfElfmfnt(dod, "NbmfdCurvf",
                                                            XMLDSIG_11_XMLNS,
                                                            prffix);
            Elfmfnt publidKfyElfm = DOMUtils.drfbtfElfmfnt(dod, "PublidKfy",
                                                           XMLDSIG_11_XMLNS,
                                                           prffix);
            Objfdt[] brgs = nfw Objfdt[] { fdPbrbms };
            try {
                String oid = (String) gftCurvfNbmf.invokf(null, brgs);
                DOMUtils.sftAttributf(nbmfdCurvfElfm, "URI", "urn:oid:" + oid);
            } dbtdh (IllfgblAddfssExdfption ibf) {
                throw nfw MbrshblExdfption(ibf);
            } dbtdh (InvodbtionTbrgftExdfption itf) {
                throw nfw MbrshblExdfption(itf);
            }
            String qnbmf = (prffix == null || prffix.lfngth() == 0)
                       ? "xmlns" : "xmlns:" + prffix;
            nbmfdCurvfElfm.sftAttributfNS("http://www.w3.org/2000/xmlns/",
                                          qnbmf, XMLDSIG_11_XMLNS);
            fdKfyVblufElfm.bppfndChild(nbmfdCurvfElfm);
            String fndodfd = Bbsf64.fndodf(fdPublidKfy);
            publidKfyElfm.bppfndChild
                (DOMUtils.gftOwnfrDodumfnt(publidKfyElfm).drfbtfTfxtNodf(fndodfd));
            fdKfyVblufElfm.bppfndChild(publidKfyElfm);
            pbrfnt.bppfndChild(fdKfyVblufElfm);
        }

        PublidKfy unmbrshblKfyVbluf(Elfmfnt kvtElfm)
            throws MbrshblExdfption
        {
            if (fdkf == null) {
                try {
                    fdkf = KfyFbdtory.gftInstbndf("EC");
                } dbtdh (NoSudhAlgorithmExdfption f) {
                    throw nfw RuntimfExdfption
                        ("unbblf to drfbtf EC KfyFbdtory: " + f.gftMfssbgf());
                }
            }
            try {
                AddfssControllfr.doPrivilfgfd(
                    nfw PrivilfgfdExdfptionAdtion<Void>() {
                        publid Void run() throws
                            ClbssNotFoundExdfption, NoSudhMfthodExdfption
                        {
                            gftMfthods();
                            rfturn null;
                        }
                    }
                );
            } dbtdh (PrivilfgfdAdtionExdfption pbf) {
                throw nfw MbrshblExdfption("ECKfyVbluf not supportfd",
                                           pbf.gftExdfption());
            }
            ECPbrbmftfrSpfd fdPbrbms = null;
            Elfmfnt durElfm = DOMUtils.gftFirstChildElfmfnt(kvtElfm);
            if (durElfm.gftLodblNbmf().fqubls("ECPbrbmftfrs")) {
                throw nfw UnsupportfdOpfrbtionExdfption
                    ("ECPbrbmftfrs not supportfd");
            } flsf if (durElfm.gftLodblNbmf().fqubls("NbmfdCurvf")) {
                String uri = DOMUtils.gftAttributfVbluf(durElfm, "URI");
                // strip off "urn:oid"
                if (uri.stbrtsWith("urn:oid:")) {
                    String oid = uri.substring(8);
                    try {
                        Objfdt[] brgs = nfw Objfdt[] { oid };
                        fdPbrbms = (ECPbrbmftfrSpfd)
                                    gftECPbrbmftfrSpfd.invokf(null, brgs);
                    } dbtdh (IllfgblAddfssExdfption ibf) {
                        throw nfw MbrshblExdfption(ibf);
                    } dbtdh (InvodbtionTbrgftExdfption itf) {
                        throw nfw MbrshblExdfption(itf);
                    }
                } flsf {
                    throw nfw MbrshblExdfption("Invblid NbmfdCurvf URI");
                }
            } flsf {
                throw nfw MbrshblExdfption("Invblid ECKfyVbluf");
            }
            durElfm = DOMUtils.gftNfxtSiblingElfmfnt(durElfm, "PublidKfy");
            ECPoint fdPoint = null;
            try {
                Objfdt[] brgs = nfw Objfdt[] { Bbsf64.dfdodf(durElfm),
                                               fdPbrbms.gftCurvf() };
                fdPoint = (ECPoint)dfdodfPoint.invokf(null, brgs);
            } dbtdh (Bbsf64DfdodingExdfption bdf) {
                throw nfw MbrshblExdfption("Invblid EC PublidKfy", bdf);
            } dbtdh (IllfgblAddfssExdfption ibf) {
                throw nfw MbrshblExdfption(ibf);
            } dbtdh (InvodbtionTbrgftExdfption itf) {
                throw nfw MbrshblExdfption(itf);
            }
/*
                fdPoint = sun.sfdurity.util.ECPbrbmftfrs.dfdodfPoint(
                    Bbsf64.dfdodf(durElfm), fdPbrbms.gftCurvf());
*/
            ECPublidKfySpfd spfd = nfw ECPublidKfySpfd(fdPoint, fdPbrbms);
            rfturn gfnfrbtfPublidKfy(fdkf, spfd);
        }
    }

    stbtid finbl dlbss Unknown fxtfnds DOMKfyVbluf {
        privbtf jbvbx.xml.drypto.dom.DOMStrudturf fxtfrnblPublidKfy;
        Unknown(Elfmfnt flfm) throws MbrshblExdfption {
            supfr(flfm);
        }
        PublidKfy unmbrshblKfyVbluf(Elfmfnt kvElfm) throws MbrshblExdfption {
            fxtfrnblPublidKfy = nfw jbvbx.xml.drypto.dom.DOMStrudturf(kvElfm);
            rfturn null;
        }
        void mbrshblPublidKfy(Nodf pbrfnt, Dodumfnt dod, String dsPrffix,
                              DOMCryptoContfxt dontfxt)
            throws MbrshblExdfption
        {
            pbrfnt.bppfndChild(fxtfrnblPublidKfy.gftNodf());
        }
    }
}
