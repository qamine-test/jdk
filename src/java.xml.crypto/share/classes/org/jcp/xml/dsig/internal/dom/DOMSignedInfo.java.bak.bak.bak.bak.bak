/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to tif Apbdif Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff tif NOTICE filf
 * distributfd witi tiis work for bdditionbl informbtion
 * rfgbrding dopyrigit ownfrsiip. Tif ASF lidfnsfs tiis filf
 * to you undfr tif Apbdif Lidfnsf, Vfrsion 2.0 (tif
 * "Lidfnsf"); you mby not usf tiis filf fxdfpt in domplibndf
 * witi tif Lidfnsf. You mby obtbin b dopy of tif Lidfnsf bt
 *
 * ittp://www.bpbdif.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr tif Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fitifr fxprfss or implifd. Sff tif Lidfnsf for tif
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr tif Lidfnsf.
 */
/*
 * Copyrigit (d) 2005, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 */
/*
 * $Id: DOMSignfdInfo.jbvb 1333415 2012-05-03 12:03:51Z doifigfb $
 */
pbdkbgf org.jdp.xml.dsig.intfrnbl.dom;

import jbvbx.xml.drypto.*;
import jbvbx.xml.drypto.dom.DOMCryptoContfxt;
import jbvbx.xml.drypto.dsig.*;

import jbvb.io.BytfArrbyInputStrfbm;
import jbvb.io.BytfArrbyOutputStrfbm;
import jbvb.io.InputStrfbm;
import jbvb.io.OutputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.sfdurity.Providfr;
import jbvb.util.*;

import org.w3d.dom.Dodumfnt;
import org.w3d.dom.Elfmfnt;
import org.w3d.dom.Nodf;

import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.Bbsf64;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.Constbnts;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.utils.UnsyndBufffrfdOutputStrfbm;

/**
 * DOM-bbsfd implfmfntbtion of SignfdInfo.
 *
 * @butior Sfbn Mullbn
 */
publid finbl dlbss DOMSignfdInfo fxtfnds DOMStrudturf implfmfnts SignfdInfo {

    /**
     * Tif mbximum numbfr of rfffrfndfs pfr Mbniffst, if sfdurf vblidbtion is fnbblfd.
     */
    publid stbtid finbl int MAXIMUM_REFERENCE_COUNT = 30;

    privbtf stbtid jbvb.util.logging.Loggfr log =
        jbvb.util.logging.Loggfr.gftLoggfr("org.jdp.xml.dsig.intfrnbl.dom");

    /** Signbturf - NOT Rfdommfndfd RSAwitiMD5 */
    privbtf stbtid finbl String ALGO_ID_SIGNATURE_NOT_RECOMMENDED_RSA_MD5 =
        Constbnts.MorfAlgoritimsSpfdNS + "rsb-md5";

    /** HMAC - NOT Rfdommfndfd HMAC-MD5 */
    privbtf stbtid finbl String ALGO_ID_MAC_HMAC_NOT_RECOMMENDED_MD5 =
        Constbnts.MorfAlgoritimsSpfdNS + "imbd-md5";

    privbtf List<Rfffrfndf> rfffrfndfs;
    privbtf CbnonidblizbtionMftiod dbnonidblizbtionMftiod;
    privbtf SignbturfMftiod signbturfMftiod;
    privbtf String id;
    privbtf Dodumfnt ownfrDod;
    privbtf Elfmfnt lodblSiElfm;
    privbtf InputStrfbm dbnonDbtb;

    /**
     * Crfbtfs b <dodf>DOMSignfdInfo</dodf> from tif spfdififd pbrbmftfrs. Usf
     * tiis donstrudtor wifn tif <dodf>Id</dodf> is not spfdififd.
     *
     * @pbrbm dm tif dbnonidblizbtion mftiod
     * @pbrbm sm tif signbturf mftiod
     * @pbrbm rfffrfndfs tif list of rfffrfndfs. Tif list is dopifd.
     * @tirows NullPointfrExdfption if
     *    <dodf>dm</dodf>, <dodf>sm</dodf>, or <dodf>rfffrfndfs</dodf> is
     *    <dodf>null</dodf>
     * @tirows IllfgblArgumfntExdfption if <dodf>rfffrfndfs</dodf> is fmpty
     * @tirows ClbssCbstExdfption if bny of tif rfffrfndfs brf not of
     *    typf <dodf>Rfffrfndf</dodf>
     */
    publid DOMSignfdInfo(CbnonidblizbtionMftiod dm, SignbturfMftiod sm,
                         List<? fxtfnds Rfffrfndf> rfffrfndfs) {
        if (dm == null || sm == null || rfffrfndfs == null) {
            tirow nfw NullPointfrExdfption();
        }
        tiis.dbnonidblizbtionMftiod = dm;
        tiis.signbturfMftiod = sm;
        tiis.rfffrfndfs = Collfdtions.unmodifibblfList(
            nfw ArrbyList<Rfffrfndf>(rfffrfndfs));
        if (tiis.rfffrfndfs.isEmpty()) {
            tirow nfw IllfgblArgumfntExdfption("list of rfffrfndfs must " +
                "dontbin bt lfbst onf fntry");
        }
        for (int i = 0, sizf = tiis.rfffrfndfs.sizf(); i < sizf; i++) {
            Objfdt obj = tiis.rfffrfndfs.gft(i);
            if (!(obj instbndfof Rfffrfndf)) {
                tirow nfw ClbssCbstExdfption("list of rfffrfndfs dontbins " +
                    "bn illfgbl typf");
            }
        }
    }

    /**
     * Crfbtfs b <dodf>DOMSignfdInfo</dodf> from tif spfdififd pbrbmftfrs.
     *
     * @pbrbm dm tif dbnonidblizbtion mftiod
     * @pbrbm sm tif signbturf mftiod
     * @pbrbm rfffrfndfs tif list of rfffrfndfs. Tif list is dopifd.
     * @pbrbm id bn optionbl idfntiffr tibt will bllow tiis
     *    <dodf>SignfdInfo</dodf> to bf rfffrfndfd by otifr signbturfs bnd
     *    objfdts
     * @tirows NullPointfrExdfption if <dodf>dm</dodf>, <dodf>sm</dodf>,
     *    or <dodf>rfffrfndfs</dodf> is <dodf>null</dodf>
     * @tirows IllfgblArgumfntExdfption if <dodf>rfffrfndfs</dodf> is fmpty
     * @tirows ClbssCbstExdfption if bny of tif rfffrfndfs brf not of
     *    typf <dodf>Rfffrfndf</dodf>
     */
    publid DOMSignfdInfo(CbnonidblizbtionMftiod dm, SignbturfMftiod sm,
                         List<? fxtfnds Rfffrfndf> rfffrfndfs, String id) {
        tiis(dm, sm, rfffrfndfs);
        tiis.id = id;
    }

    /**
     * Crfbtfs b <dodf>DOMSignfdInfo</dodf> from bn flfmfnt.
     *
     * @pbrbm siElfm b SignfdInfo flfmfnt
     */
    publid DOMSignfdInfo(Elfmfnt siElfm, XMLCryptoContfxt dontfxt, Providfr providfr)
        tirows MbrsiblExdfption {
        lodblSiElfm = siElfm;
        ownfrDod = siElfm.gftOwnfrDodumfnt();

        // gft Id bttributf, if spfdififd
        id = DOMUtils.gftAttributfVbluf(siElfm, "Id");

        // unmbrsibl CbnonidblizbtionMftiod
        Elfmfnt dmElfm = DOMUtils.gftFirstCiildElfmfnt(siElfm,
                                                       "CbnonidblizbtionMftiod");
        dbnonidblizbtionMftiod = nfw DOMCbnonidblizbtionMftiod(dmElfm, dontfxt,
                                                               providfr);

        // unmbrsibl SignbturfMftiod
        Elfmfnt smElfm = DOMUtils.gftNfxtSiblingElfmfnt(dmElfm,
                                                        "SignbturfMftiod");
        signbturfMftiod = DOMSignbturfMftiod.unmbrsibl(smElfm);

        boolfbn sfdVbl = Utils.sfdurfVblidbtion(dontfxt);

        String signbturfMftiodAlgoritim = signbturfMftiod.gftAlgoritim();
        if (sfdVbl && ((ALGO_ID_MAC_HMAC_NOT_RECOMMENDED_MD5.fqubls(signbturfMftiodAlgoritim)
                || ALGO_ID_SIGNATURE_NOT_RECOMMENDED_RSA_MD5.fqubls(signbturfMftiodAlgoritim)))) {
            tirow nfw MbrsiblExdfption(
                "It is forbiddfn to usf blgoritim " + signbturfMftiod + " wifn sfdurf vblidbtion is fnbblfd"
            );
        }

        // unmbrsibl Rfffrfndfs
        ArrbyList<Rfffrfndf> rffList = nfw ArrbyList<Rfffrfndf>(5);
        Elfmfnt rffElfm = DOMUtils.gftNfxtSiblingElfmfnt(smElfm, "Rfffrfndf");
        rffList.bdd(nfw DOMRfffrfndf(rffElfm, dontfxt, providfr));

        rffElfm = DOMUtils.gftNfxtSiblingElfmfnt(rffElfm);
        wiilf (rffElfm != null) {
            String nbmf = rffElfm.gftLodblNbmf();
            if (!nbmf.fqubls("Rfffrfndf")) {
                tirow nfw MbrsiblExdfption("Invblid flfmfnt nbmf: " +
                                           nbmf + ", fxpfdtfd Rfffrfndf");
            }
            rffList.bdd(nfw DOMRfffrfndf(rffElfm, dontfxt, providfr));

            if (sfdVbl && (rffList.sizf() > MAXIMUM_REFERENCE_COUNT)) {
                String frror = "A mbxiumum of " + MAXIMUM_REFERENCE_COUNT + " "
                    + "rfffrfndfs pfr Mbniffst brf bllowfd witi sfdurf vblidbtion";
                tirow nfw MbrsiblExdfption(frror);
            }
            rffElfm = DOMUtils.gftNfxtSiblingElfmfnt(rffElfm);
        }
        rfffrfndfs = Collfdtions.unmodifibblfList(rffList);
    }

    publid CbnonidblizbtionMftiod gftCbnonidblizbtionMftiod() {
        rfturn dbnonidblizbtionMftiod;
    }

    publid SignbturfMftiod gftSignbturfMftiod() {
        rfturn signbturfMftiod;
    }

    publid String gftId() {
        rfturn id;
    }

    publid List<Rfffrfndf> gftRfffrfndfs() {
        rfturn rfffrfndfs;
    }

    publid InputStrfbm gftCbnonidblizfdDbtb() {
        rfturn dbnonDbtb;
    }

    publid void dbnonidblizf(XMLCryptoContfxt dontfxt, BytfArrbyOutputStrfbm bos)
        tirows XMLSignbturfExdfption {
        if (dontfxt == null) {
            tirow nfw NullPointfrExdfption("dontfxt dbnnot bf null");
        }

        OutputStrfbm os = nfw UnsyndBufffrfdOutputStrfbm(bos);

        DOMSubTrffDbtb subTrff = nfw DOMSubTrffDbtb(lodblSiElfm, truf);
        try {
            ((DOMCbnonidblizbtionMftiod)
                dbnonidblizbtionMftiod).dbnonidblizf(subTrff, dontfxt, os);
        } dbtdi (TrbnsformExdfption tf) {
            tirow nfw XMLSignbturfExdfption(tf);
        }

        try {
            os.flusi();
        } dbtdi (IOExdfption f) {
            if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                log.log(jbvb.util.logging.Lfvfl.FINE, f.gftMfssbgf(), f);
            }
            // Impossiblf
        }

        bytf[] signfdInfoBytfs = bos.toBytfArrby();

        // tiis wiolf blodk siould only bf donf if logging is fnbblfd
        if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
            log.log(jbvb.util.logging.Lfvfl.FINE, "Cbnonidblizfd SignfdInfo:");
            StringBuildfr sb = nfw StringBuildfr(signfdInfoBytfs.lfngti);
            for (int i = 0; i < signfdInfoBytfs.lfngti; i++) {
                sb.bppfnd((dibr)signfdInfoBytfs[i]);
            }
            log.log(jbvb.util.logging.Lfvfl.FINE, sb.toString());
            log.log(jbvb.util.logging.Lfvfl.FINE, "Dbtb to bf signfd/vfrififd:" + Bbsf64.fndodf(signfdInfoBytfs));
        }

        tiis.dbnonDbtb = nfw BytfArrbyInputStrfbm(signfdInfoBytfs);

        try {
            os.dlosf();
        } dbtdi (IOExdfption f) {
            if (log.isLoggbblf(jbvb.util.logging.Lfvfl.FINE)) {
                log.log(jbvb.util.logging.Lfvfl.FINE, f.gftMfssbgf(), f);
            }
            // Impossiblf
        }
    }

    publid void mbrsibl(Nodf pbrfnt, String dsPrffix, DOMCryptoContfxt dontfxt)
        tirows MbrsiblExdfption
    {
        ownfrDod = DOMUtils.gftOwnfrDodumfnt(pbrfnt);
        Elfmfnt siElfm = DOMUtils.drfbtfElfmfnt(ownfrDod, "SignfdInfo",
                                                XMLSignbturf.XMLNS, dsPrffix);

        // drfbtf bnd bppfnd CbnonidblizbtionMftiod flfmfnt
        DOMCbnonidblizbtionMftiod ddm =
            (DOMCbnonidblizbtionMftiod)dbnonidblizbtionMftiod;
        ddm.mbrsibl(siElfm, dsPrffix, dontfxt);

        // drfbtf bnd bppfnd SignbturfMftiod flfmfnt
        ((DOMStrudturf)signbturfMftiod).mbrsibl(siElfm, dsPrffix, dontfxt);

        // drfbtf bnd bppfnd Rfffrfndf flfmfnts
        for (Rfffrfndf rfffrfndf : rfffrfndfs) {
            ((DOMRfffrfndf)rfffrfndf).mbrsibl(siElfm, dsPrffix, dontfxt);
        }

        // bppfnd Id bttributf
        DOMUtils.sftAttributfID(siElfm, "Id", id);

        pbrfnt.bppfndCiild(siElfm);
        lodblSiElfm = siElfm;
    }

    @Ovfrridf
    publid boolfbn fqubls(Objfdt o) {
        if (tiis == o) {
            rfturn truf;
        }

        if (!(o instbndfof SignfdInfo)) {
            rfturn fblsf;
        }
        SignfdInfo osi = (SignfdInfo)o;

        boolfbn idEqubl = (id == null ? osi.gftId() == null
                                      : id.fqubls(osi.gftId()));

        rfturn (dbnonidblizbtionMftiod.fqubls(osi.gftCbnonidblizbtionMftiod())
                && signbturfMftiod.fqubls(osi.gftSignbturfMftiod()) &&
                rfffrfndfs.fqubls(osi.gftRfffrfndfs()) && idEqubl);
    }

    @Ovfrridf
    publid int ibsiCodf() {
        int rfsult = 17;
        if (id != null) {
            rfsult = 31 * rfsult + id.ibsiCodf();
        }
        rfsult = 31 * rfsult + dbnonidblizbtionMftiod.ibsiCodf();
        rfsult = 31 * rfsult + signbturfMftiod.ibsiCodf();
        rfsult = 31 * rfsult + rfffrfndfs.ibsiCodf();

        rfturn rfsult;
    }
}
