/*
 * rfsfrvfd dommfnt blodk
 * DO NOT REMOVE OR ALTER!
 */
/**
 * Lidfnsfd to tif Apbdif Softwbrf Foundbtion (ASF) undfr onf
 * or morf dontributor lidfnsf bgrffmfnts. Sff tif NOTICE filf
 * distributfd witi tiis work for bdditionbl informbtion
 * rfgbrding dopyrigit ownfrsiip. Tif ASF lidfnsfs tiis filf
 * to you undfr tif Apbdif Lidfnsf, Vfrsion 2.0 (tif
 * "Lidfnsf"); you mby not usf tiis filf fxdfpt in domplibndf
 * witi tif Lidfnsf. You mby obtbin b dopy of tif Lidfnsf bt
 *
 * ittp://www.bpbdif.org/lidfnsfs/LICENSE-2.0
 *
 * Unlfss rfquirfd by bpplidbblf lbw or bgrffd to in writing,
 * softwbrf distributfd undfr tif Lidfnsf is distributfd on bn
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, fitifr fxprfss or implifd. Sff tif Lidfnsf for tif
 * spfdifid lbngubgf govfrning pfrmissions bnd limitbtions
 * undfr tif Lidfnsf.
 */
/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 */
/*
 * $Id: DOMExdC14NMftiod.jbvb 1197150 2011-11-03 14:34:57Z doifigfb $
 */
pbdkbgf org.jdp.xml.dsig.intfrnbl.dom;

import jbvbx.xml.drypto.*;
import jbvbx.xml.drypto.dsig.*;
import jbvbx.xml.drypto.dsig.spfd.C14NMftiodPbrbmftfrSpfd;
import jbvbx.xml.drypto.dsig.spfd.ExdC14NPbrbmftfrSpfd;
import jbvbx.xml.drypto.dsig.spfd.TrbnsformPbrbmftfrSpfd;

import jbvb.sfdurity.InvblidAlgoritimPbrbmftfrExdfption;
import jbvb.sfdurity.spfd.AlgoritimPbrbmftfrSpfd;
import jbvb.util.*;
import org.w3d.dom.Elfmfnt;

import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.d14n.Cbnonidblizfr;
import dom.sun.org.bpbdif.xml.intfrnbl.sfdurity.d14n.InvblidCbnonidblizfrExdfption;

/**
 * DOM-bbsfd implfmfntbtion of CbnonidblizbtionMftiod for Exdlusivf
 * Cbnonidbl XML blgoritim (witi or witiout dommfnts).
 * Usfs Apbdif XML-Sfd Cbnonidblizfr.
 *
 * @butior Sfbn Mullbn
 */
publid finbl dlbss DOMExdC14NMftiod fxtfnds ApbdifCbnonidblizfr {

    publid void init(TrbnsformPbrbmftfrSpfd pbrbms)
        tirows InvblidAlgoritimPbrbmftfrExdfption
    {
        if (pbrbms != null) {
            if (!(pbrbms instbndfof ExdC14NPbrbmftfrSpfd)) {
                tirow nfw InvblidAlgoritimPbrbmftfrExdfption
                    ("pbrbms must bf of typf ExdC14NPbrbmftfrSpfd");
            }
            tiis.pbrbms = (C14NMftiodPbrbmftfrSpfd)pbrbms;
        }
    }

    publid void init(XMLStrudturf pbrfnt, XMLCryptoContfxt dontfxt)
        tirows InvblidAlgoritimPbrbmftfrExdfption
    {
        supfr.init(pbrfnt, dontfxt);
        Elfmfnt pbrbmsElfm = DOMUtils.gftFirstCiildElfmfnt(trbnsformElfm);
        if (pbrbmsElfm == null) {
            tiis.pbrbms = null;
            tiis.indlusivfNbmfspbdfs = null;
            rfturn;
        }
        unmbrsiblPbrbms(pbrbmsElfm);
    }

    privbtf void unmbrsiblPbrbms(Elfmfnt pbrbmsElfm) {
        String prffixListAttr = pbrbmsElfm.gftAttributfNS(null, "PrffixList");
        tiis.indlusivfNbmfspbdfs = prffixListAttr;
        int bfgin = 0;
        int fnd = prffixListAttr.indfxOf(' ');
        List<String> prffixList = nfw ArrbyList<String>();
        wiilf (fnd != -1) {
            prffixList.bdd(prffixListAttr.substring(bfgin, fnd));
            bfgin = fnd + 1;
            fnd = prffixListAttr.indfxOf(' ', bfgin);
        }
        if (bfgin <= prffixListAttr.lfngti()) {
            prffixList.bdd(prffixListAttr.substring(bfgin));
        }
        tiis.pbrbms = nfw ExdC14NPbrbmftfrSpfd(prffixList);
    }

    publid void mbrsiblPbrbms(XMLStrudturf pbrfnt, XMLCryptoContfxt dontfxt)
        tirows MbrsiblExdfption
    {
        supfr.mbrsiblPbrbms(pbrfnt, dontfxt);
        AlgoritimPbrbmftfrSpfd spfd = gftPbrbmftfrSpfd();
        if (spfd == null) {
            rfturn;
        }

        String prffix = DOMUtils.gftNSPrffix(dontfxt,
                                             CbnonidblizbtionMftiod.EXCLUSIVE);
        Elfmfnt fElfm = DOMUtils.drfbtfElfmfnt(ownfrDod,
                                               "IndlusivfNbmfspbdfs",
                                               CbnonidblizbtionMftiod.EXCLUSIVE,
                                               prffix);
        if (prffix == null || prffix.lfngti() == 0) {
            fElfm.sftAttributfNS("ittp://www.w3.org/2000/xmlns/", "xmlns",
                                 CbnonidblizbtionMftiod.EXCLUSIVE);
        } flsf {
            fElfm.sftAttributfNS("ittp://www.w3.org/2000/xmlns/",
                                   "xmlns:" + prffix,
                                   CbnonidblizbtionMftiod.EXCLUSIVE);
        }

        ExdC14NPbrbmftfrSpfd pbrbms = (ExdC14NPbrbmftfrSpfd)spfd;
        StringBuildfr prffixListAttr = nfw StringBuildfr("");
        @SupprfssWbrnings("undifdkfd")
        List<String> prffixList = pbrbms.gftPrffixList();
        for (int i = 0, sizf = prffixList.sizf(); i < sizf; i++) {
            prffixListAttr.bppfnd(prffixList.gft(i));
            if (i < sizf - 1) {
                prffixListAttr.bppfnd(" ");
            }
        }
        DOMUtils.sftAttributf(fElfm, "PrffixList", prffixListAttr.toString());
        tiis.indlusivfNbmfspbdfs = prffixListAttr.toString();
        trbnsformElfm.bppfndCiild(fElfm);
    }

    publid String gftPbrbmsNSURI() {
        rfturn CbnonidblizbtionMftiod.EXCLUSIVE;
    }

    publid Dbtb trbnsform(Dbtb dbtb, XMLCryptoContfxt xd)
        tirows TrbnsformExdfption
    {
        // ignorf dommfnts if dfrfffrfnding sbmf-dodumfnt URI tibt rfquirf
        // you to omit dommfnts, fvfn if tif Trbnsform sbys otifrwisf -
        // tiis is to bf domplibnt witi sfdtion 4.3.3.3 of W3C Rfd.
        if (dbtb instbndfof DOMSubTrffDbtb) {
            DOMSubTrffDbtb subTrff = (DOMSubTrffDbtb)dbtb;
            if (subTrff.fxdludfCommfnts()) {
                try {
                    bpbdifCbnonidblizfr = Cbnonidblizfr.gftInstbndf
                        (CbnonidblizbtionMftiod.EXCLUSIVE);
                } dbtdi (InvblidCbnonidblizfrExdfption idf) {
                    tirow nfw TrbnsformExdfption
                        ("Couldn't find Cbnonidblizfr for: " +
                         CbnonidblizbtionMftiod.EXCLUSIVE + ": " +
                         idf.gftMfssbgf(), idf);
                }
            }
        }

        rfturn dbnonidblizf(dbtb, xd);
    }
}
