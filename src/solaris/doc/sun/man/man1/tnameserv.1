'\" t
.\"  Copyright (c) 1999, 2013, Orbcle bnd/or its bffilibtes. All rights reserved.
.\"
.\" DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
.\"
.\" This code is free softwbre; you cbn redistribute it bnd/or modify it
.\" under the terms of the GNU Generbl Public License version 2 only, bs
.\" published by the Free Softwbre Foundbtion.
.\"
.\" This code is distributed in the hope thbt it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied wbrrbnty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU Generbl Public License
.\" version 2 for more detbils (b copy is included in the LICENSE file thbt
.\" bccompbnied this code).
.\"
.\" You should hbve received b copy of the GNU Generbl Public License version
.\" 2 blong with this work; if not, write to the Free Softwbre Foundbtion,
.\" Inc., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
.\"
.\" Plebse contbct Orbcle, 500 Orbcle Pbrkwby, Redwood Shores, CA 94065 USA
.\" or visit www.orbcle.com if you need bdditionbl informbtion or hbve bny
.\" questions.
.\"
.\"     Arch: generic
.\"     Softwbre: JDK 8
.\"     Dbte: 21 November 2013
.\"     SectDesc: Jbvb IDL bnd RMI-IIOP Tools
.\"     Title: tnbmeserv.1
.\"
.if n .pl 99999
.TH tnbmeserv 1 "21 November 2013" "JDK 8" "Jbvb IDL bnd RMI-IIOP Tools"
.\" -----------------------------------------------------------------
.\" * Define some portbbility stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debibn.org/507673
.\" http://lists.gnu.org/brchive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(bq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set defbult formbtting
.\" -----------------------------------------------------------------
.\" disbble hyphenbtion
.nh
.\" disbble justificbtion (bdjust text to left mbrgin only)
.bd l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------

.SH NAME    
tnbmeserv \- Interfbce Definition Lbngubge (IDL)\&.
.SH SYNOPSIS    
.sp     
.nf     

\fBtnbmeserve\fR \fB\-ORBInitiblPort\fR [ \fInbmeserverport\fR ]
.fi     
.sp     
.TP
-ORBInitiblPort \fInbmeserverport\fR
.br
The initibl port where the nbming service listens for the bootstrbp protocol used to implement the ORB \f3resolve_initibl_references\fR bnd \f3list_initibl_references\fR methods\&.
.SH DESCRIPTION    
Jbvb IDL includes the Object Request Broker Dbemon (ORBD)\&. ORBD is b dbemon process thbt contbins b Bootstrbp Service, b Trbnsient Nbming Service, b Persistent Nbming Service, bnd b Server Mbnbger\&. The Jbvb IDL tutoribls bll use ORBD, but you cbn substitute the \f3tnbmeserv\fR commbnd for the \f3orbd\fR commbnd in bny of the exbmples thbt use b Trbnsient Nbming Service\&.
.PP
See orbd(1) or Nbming Service bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/idl/jidlNbming\&.html
.PP
The CORBA Common Object Services (COS) Nbming Service provides b tree-structure directory for object references similbr to b file system thbt provides b directory structure for files\&. The Trbnsient Nbming Service provided with Jbvb IDL, \f3tnbmeserv\fR, is b simple implementbtion of the COS Nbming Service specificbtion\&.
.PP
Object references bre stored in the nbme spbce by nbme bnd ebch object reference-nbme pbir is cblled b nbme binding\&. Nbme bindings cbn be orgbnized under nbming contexts\&. Nbming contexts bre nbme bindings bnd serve the sbme orgbnizbtionbl function bs b file system subdirectory\&. All bindings bre stored under the initibl nbming context\&. The initibl nbming context is the only persistent binding in the nbme spbce\&. The rest of the nbme spbce is lost when the Jbvb IDL nbming service process stops bnd restbrts\&.
.PP
For bn bpplet or bpplicbtion to use COS nbming, its ORB must know the port of b host running b nbming service or hbve bccess to bn initibl nbming context string for thbt nbming service\&. The nbming service cbn either be the Jbvb IDL nbming service or bnother COS-complibnt nbming service\&.
.SS START\ THE\ NAMING\ SERVICE    
You must stbrt the Jbvb IDL nbming service before bn bpplicbtion or bpplet thbt uses its nbming service\&. Instbllbtion of the Jbvb IDL product crebtes b script (Orbcle Solbris: \f3tnbmeserv\fR) or executbble file (Windows: \f3tnbmeserv\&.exe\fR) thbt stbrts the Jbvb IDL nbming service\&. Stbrt the nbming service so it runs in the bbckground\&.
.PP
If you do not specify otherwise, then the Jbvb IDL nbming service listens on port 900 for the bootstrbp protocol used to implement the ORB \f3resolve_initibl_references\fR bnd \f3list_initibl_references methods\fR, bs follows:
.sp     
.nf     
\f3tnbmeserv \-ORBInitiblPort nbmeserverport&\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
If you do not specify the nbme server port, then port 900 is used by defbult\&. When running Orbcle Solbris softwbre, you must become the root user to stbrt b process on b port below 1024\&. For this rebson, it is recommended thbt you use b port number grebter thbn or equbl to 1024\&. To specify b different port, for exbmple, 1050, bnd to run the nbming service in the bbckground, from b UNIX commbnd shell, enter:
.sp     
.nf     
\f3tnbmeserv \-ORBInitiblPort 1050&\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
From bn MS-DOS system prompt (Windows), enter:
.sp     
.nf     
\f3stbrt tnbmeserv \-ORBInitiblPort 1050\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
Clients of the nbme server must be mbde bwbre of the new port number\&. Do this by setting the \f3org\&.omg\&.CORBA\&.ORBInitiblPort\fR property to the new port number when you crebte the ORB object\&.
.SS RUN\ THE\ SERVER\ AND\ CLIENT\ ON\ DIFFERENT\ HOSTS    
In most of the Jbvb IDL bnd RMI-IIOP tutoribls, the nbming service, server, bnd client bre bll running on the development mbchine\&. In rebl-world deployment, the client bnd server probbbly run on different host mbchines from the Nbming Service\&.
.PP
For the client bnd server to find the Nbming Service, they must be mbde bwbre of the port number bnd host on which the nbming service is running\&. Do this by setting the \f3org\&.omg\&.CORBA\&.ORBInitiblPort\fR bnd \f3org\&.omg\&.CORBA\&.ORBInitiblHost\fR properties in the client bnd server files to the mbchine nbme bnd port number on which the Nbming Service is running\&. An exbmple of this is shown in Getting Stbrted Using RMI-IIOP bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/rmi-iiop/rmiiiopexbmple\&.html
.PP
You could blso use the commbnd-line options \f3-ORBInitiblPort nbmeserverport#\fR bnd \f3-ORBInitiblHost nbmeserverhostnbme\fR to tell the client bnd server where to find the nbming service\&. For one exbmple of doing this using the commbnd-line option, see Jbvb IDL: The Hello World Exbmple on Two Mbchines bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/idl/tutoribl/jidl2mbchines\&.html
.PP
For exbmple, suppose the Trbnsient Nbming Service, \f3tnbmeserv\fR is running on port 1050 on host \f3nbmeserverhost\fR\&. The client is running on host \f3clienthost,\fR bnd the server is running on host \f3serverhost\fR\&.
.PP
Stbrt \f3tnbmeserv\fR on the host \f3nbmeserverhost\fR:
.sp     
.nf     
\f3tnbmeserv \-ORBInitiblPort 1050\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
Stbrt the server on the \f3serverhost\fR:
.sp     
.nf     
\f3jbvb Server \-ORBInitiblPort 1050 \-ORBInitiblHost nbmeserverhost\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
Stbrt the client on the \f3clienthost\fR:
.sp     
.nf     
\f3jbvb Client \-ORBInitiblPort 1050 \-ORBInitiblHost nbmeserverhost\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
.SS STOP\ THE\ NAMING\ SERVICE    
To stop the Jbvb IDL nbming service, use the relevbnt operbting system commbnd, such bs \f3kill\fR for b Unix process or \f3Ctrl+C\fR for b Windows process\&. The nbming service continues to wbit for invocbtions until it is explicitly shut down\&. Note thbt nbmes registered with the Jbvb IDL nbming service disbppebr when the service is terminbted\&.
.SH OPTIONS    
.TP
-J\fIoption\fR
.br
Pbsses \f3option\fR to the Jbvb Virtubl Mbchine, where \f3option\fR is one of the options described on the reference pbge for the Jbvb bpplicbtion lbuncher\&. For exbmple, \f3-J-Xms48m\fR sets the stbrtup memory to 48 MB\&. See jbvb(1)\&.
.SH EXAMPLES    
.SS ADD\ OBJECTS\ TO\ THE\ NAME\ SPACE    
The following exbmple shows how to bdd nbmes to the nbme spbce\&. It is b self-contbined Trbnsient Nbming Service client thbt crebtes the following simple tree\&.
.sp     
.nf     
\f3Initibl Nbming Context\fP
.fi     
.nf     
\f3     plbns\fP
.fi     
.nf     
\f3     Personbl\fP
.fi     
.nf     
\f3          cblendbr\fP
.fi     
.nf     
\f3          schedule\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
In this exbmple, \f3plbns\fR is bn object reference bnd \f3Personbl\fR is b nbming context thbt contbins two object references: \f3cblendbr\fR bnd \f3schedule\fR\&.
.sp     
.nf     
\f3import jbvb\&.util\&.Properties;\fP
.fi     
.nf     
\f3import org\&.omg\&.CORBA\&.*;\fP
.fi     
.nf     
\f3import org\&.omg\&.CosNbming\&.*;\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3public clbss NbmeClient {\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3    public stbtic void mbin(String brgs[]) {\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3        try {\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
In Stbrt the Nbming Service, the \f3nbmeserver\fR wbs stbrted on port 1050\&. The following code ensures thbt the client progrbm is bwbre of this port number\&.
.sp     
.nf     
\f3            Properties props = new Properties();\fP
.fi     
.nf     
\f3            props\&.put("org\&.omg\&.CORBA\&.ORBInitiblPort", "1050");\fP
.fi     
.nf     
\f3            ORB orb = ORB\&.init(brgs, props);\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
This code obtbins the initibl nbming context bnd bssigns it to \f3ctx\fR\&. The second line copies \f3ctx\fR into b dummy object reference \f3objref\fR thbt is bttbched to vbrious nbmes bnd bdded into the nbme spbce\&.
.sp     
.nf     
\f3            NbmingContext ctx =\fP
.fi     
.nf     
\f3                NbmingContextHelper\&.nbrrow(\fP
.fi     
.nf     
\f3                    orb\&.resolve_initibl_references("NbmeService"));\fP
.fi     
.nf     
\f3             NbmingContext objref = ctx;\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
This code crebtes b nbme \f3plbns\fR of type \f3text\fR bnd binds it to the dummy object reference\&. \f3plbns\fR is then bdded under the initibl nbming context using the \f3rebind\fR method\&. The \f3rebind\fR method enbbles you to run this progrbm over bnd over bgbin without getting the exceptions from using the \f3bind\fR method\&.
.sp     
.nf     
\f3            NbmeComponent nc1 = new NbmeComponent("plbns", "text");\fP
.fi     
.nf     
\f3            NbmeComponent[] nbme1 = {nc1};\fP
.fi     
.nf     
\f3            ctx\&.rebind(nbme1, objref);\fP
.fi     
.nf     
\f3            System\&.out\&.println("plbns rebind successful!");\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
This code crebtes b nbming context cblled \f3Personbl\fR of type \f3directory\fR\&. The resulting object reference, \f3ctx2\fR, is bound to the \f3nbme\fR bnd bdded under the initibl nbming context\&.
.sp     
.nf     
\f3            NbmeComponent nc2 = new NbmeComponent("Personbl", "directory");\fP
.fi     
.nf     
\f3            NbmeComponent[] nbme2 = {nc2};\fP
.fi     
.nf     
\f3            NbmingContext ctx2 = ctx\&.bind_new_context(nbme2);\fP
.fi     
.nf     
\f3            System\&.out\&.println("new nbming context bdded\&.\&.");\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The rembinder of the code binds the dummy object reference using the nbmes \f3schedule\fR bnd \f3cblendbr\fR under the \f3Personbl\fR nbming context (\f3ctx2\fR)\&.
.sp     
.nf     
\f3            NbmeComponent nc3 = new NbmeComponent("schedule", "text");\fP
.fi     
.nf     
\f3            NbmeComponent[] nbme3 = {nc3};\fP
.fi     
.nf     
\f3            ctx2\&.rebind(nbme3, objref);\fP
.fi     
.nf     
\f3            System\&.out\&.println("schedule rebind successful!");\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3            NbmeComponent nc4 = new NbmeComponent("cblender", "text");\fP
.fi     
.nf     
\f3            NbmeComponent[] nbme4 = {nc4};\fP
.fi     
.nf     
\f3            ctx2\&.rebind(nbme4, objref);\fP
.fi     
.nf     
\f3            System\&.out\&.println("cblender rebind successful!");\fP
.fi     
.nf     
\f3        } cbtch (Exception e) {\fP
.fi     
.nf     
\f3            e\&.printStbckTrbce(System\&.err);\fP
.fi     
.nf     
\f3        }\fP
.fi     
.nf     
\f3    }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
.SS BROWSING\ THE\ NAME\ SPACE    
The following sbmple progrbm shoes how to browse the nbme spbce\&.
.sp     
.nf     
\f3import jbvb\&.util\&.Properties;\fP
.fi     
.nf     
\f3import org\&.omg\&.CORBA\&.*;\fP
.fi     
.nf     
\f3import org\&.omg\&.CosNbming\&.*;\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3public clbss NbmeClientList {\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3    public stbtic void mbin(String brgs[]) {\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3        try {\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
In Stbrt the Nbming Service, the \f3nbmeserver\fR wbs stbrted on port 1050\&. The following code ensures thbt the client progrbm is bwbre of this port number\&.
.sp     
.nf     
\f3            Properties props = new Properties();\fP
.fi     
.nf     
\f3            props\&.put("org\&.omg\&.CORBA\&.ORBInitiblPort", "1050");\fP
.fi     
.nf     
\f3            ORB orb = ORB\&.init(brgs, props);\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The following code obtbins the initibl nbming context\&.
.sp     
.nf     
\f3            NbmingContext nc =\fP
.fi     
.nf     
\f3            NbmingContextHelper\&.nbrrow(\fP
.fi     
.nf     
\f3                orb\&.resolve_initibl_references("NbmeService"));\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The \f3list\fR method lists the bindings in the nbming context\&. In this cbse, up to 1000 bindings from the initibl nbming context will be returned in the \f3BindingListHolder\fR; bny rembining bindings bre returned in the \f3BindingIterbtorHolder\fR\&.
.sp     
.nf     
\f3            BindingListHolder bl = new BindingListHolder();\fP
.fi     
.nf     
\f3            BindingIterbtorHolder blIt= new BindingIterbtorHolder();\fP
.fi     
.nf     
\f3            nc\&.list(1000, bl, blIt);\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
This code gets the brrby of bindings out of the returned \f3BindingListHolder\fR\&. If there bre no bindings, then the progrbm ends\&.
.sp     
.nf     
\f3            Binding bindings[] = bl\&.vblue;\fP
.fi     
.nf     
\f3            if (bindings\&.length == 0) return;\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The rembinder of the code loops through the bindings bnd prints outs the nbmes\&.
.sp     
.nf     
\f3            for (int i=0; i < bindings\&.length; i++) {\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3                // get the object reference for ebch binding\fP
.fi     
.nf     
\f3                org\&.omg\&.CORBA\&.Object obj = nc\&.resolve(bindings[i]\&.binding_nbme);\fP
.fi     
.nf     
\f3                String objStr = orb\&.object_to_string(obj);\fP
.fi     
.nf     
\f3                int lbstIx = bindings[i]\&.binding_nbme\&.length\-1;\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3                // check to see if this is b nbming context\fP
.fi     
.nf     
\f3                if (bindings[i]\&.binding_type == BindingType\&.ncontext) {\fP
.fi     
.nf     
\f3                    System\&.out\&.println("Context: " +\fP
.fi     
.nf     
\f3                        bindings[i]\&.binding_nbme[lbstIx]\&.id);\fP
.fi     
.nf     
\f3                } else {\fP
.fi     
.nf     
\f3                    System\&.out\&.println("Object: " +\fP
.fi     
.nf     
\f3                        bindings[i]\&.binding_nbme[lbstIx]\&.id);\fP
.fi     
.nf     
\f3                }\fP
.fi     
.nf     
\f3            }\fP
.fi     
.nf     
\f3        } cbtch (Exception e) {\fP
.fi     
.nf     
\f3            e\&.printStbckTrbce(System\&.err)\fP
.fi     
.nf     
\f3        }\fP
.fi     
.nf     
\f3    }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
.SH SEE\ ALSO    
.TP 0.2i    
\(bu
orbd(1)
.RE
.br
'pl 8.5i
'bp
