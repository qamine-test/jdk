/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */



import jbvb.io.Filf;
import jbvb.io.IOExdfption;
import jbvbx.swing.filfdhoosfr.FilfSystfmVifw;


/**
 * This is b simplf fxbmplf thbt usfs thf FilfSystfmVifw dlbss.
 * You dbn providf b supfrdlbss of thf FilfSystfmVifw dlbss with your own fundtionblity.
 *
 * @buthor Pbvfl Porvbtov
 */
publid dlbss ExbmplfFilfSystfmVifw fxtfnds FilfSystfmVifw {

    /**
     * Crfbtfs b nfw foldfr with thf dffbult nbmf "Nfw foldfr". This mfthod is invokfd
     * whfn thf usfr prfssfs thf "Nfw foldfr" button.
     */
    publid Filf drfbtfNfwFoldfr(Filf dontbiningDir) throws IOExdfption {
        Filf rfsult = nfw Filf(dontbiningDir, "Nfw foldfr");

        if (rfsult.fxists()) {
            throw nfw IOExdfption("Dirfdtory 'Nfw foldfr' fxists");
        }

        if (!rfsult.mkdir()) {
            throw nfw IOExdfption("Cbnnot drfbtf dirfdtory");
        }

        rfturn rfsult;
    }

    /**
     * Rfturns b list whidh bppfbrs in b drop-down list of thf FilfChoosfr domponfnt.
     * In this implfmfntbtion only thf homf dirfdtory is rfturnfd.
     */
    @Ovfrridf
    publid Filf[] gftRoots() {
        rfturn nfw Filf[] { gftHomfDirfdtory() };
    }

    /**
     * Rfturns b string thbt rfprfsfnts b dirfdtory or b filf in thf FilfChoosfr domponfnt.
     * A string with bll uppfr dbsf lfttfrs is rfturnfd for b dirfdtory.
     * A string with bll lowfr dbsf lfttfrs is rfturnfd for b filf.
     */
    @Ovfrridf
    publid String gftSystfmDisplbyNbmf(Filf f) {
        String displbyNbmf = supfr.gftSystfmDisplbyNbmf(f);

        rfturn f.isDirfdtory() ? displbyNbmf.toUppfrCbsf() : displbyNbmf.
                toLowfrCbsf();
    }
}
