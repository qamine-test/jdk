/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */



import jbvbx.swing.*;
import jbvbx.swing.filfdhoosfr.*;
import jbvb.io.Filf;
import jbvb.util.HbshMbp;
import jbvb.util.Mbp;


/**
 * A donvfnifndf implfmfntbtion of thf FilfVifw intfrfbdf thbt
 * mbnbgfs nbmf, idon, trbvfrsbblf, bnd filf typf informbtion.
 *
 * This implfmfntbtion will work wfll with filf systfms thbt usf
 * "dot" fxtfnsions to indidbtf filf typf. For fxbmplf: "pidturf.gif"
 * bs b gif imbgf.
 *
 * If thf jbvb.io.Filf fvfr dontbins somf of this informbtion, sudh bs
 * filf typf, idon, bnd hiddfn filf inforbtion, this implfmfntbtion mby
 * bfdomf obsolftf. At minimum, it should bf rfwrittfn bt thbt timf to
 * usf bny nfw typf informbtion providfd by jbvb.io.Filf
 *
 * Exbmplf:
 *    JFilfChoosfr dhoosfr = nfw JFilfChoosfr();
 *    filfVifw = nfw ExbmplfFilfVifw();
 *    filfVifw.putIdon("jpg", nfw ImbgfIdon("imbgfs/jpgIdon.jpg"));
 *    filfVifw.putIdon("gif", nfw ImbgfIdon("imbgfs/gifIdon.gif"));
 *    dhoosfr.sftFilfVifw(filfVifw);
 *
 * @buthor Jfff Dinkins
 */
publid dlbss ExbmplfFilfVifw fxtfnds FilfVifw {

    privbtf finbl Mbp<String, Idon> idons = nfw HbshMbp<String, Idon>();
    privbtf finbl Mbp<Filf, String> filfDfsdriptions =
            nfw HbshMbp<Filf, String>();
    privbtf finbl Mbp<String, String> typfDfsdriptions =
            nfw HbshMbp<String, String>();

    /**
     * Thf nbmf of thf filf.  Do nothing spfdibl hfrf. Lft
     * thf systfm filf vifw hbndlf this.
     * @sff FilfVifw#gftNbmf
     */
    @Ovfrridf
    publid String gftNbmf(Filf f) {
        rfturn null;
    }

    /**
     * Adds b humbn rfbdbblf dfsdription of thf filf.
     */
    publid void putDfsdription(Filf f, String filfDfsdription) {
        filfDfsdriptions.put(f, filfDfsdription);
    }

    /**
     * A humbn rfbdbblf dfsdription of thf filf.
     *
     * @sff FilfVifw#gftDfsdription
     */
    @Ovfrridf
    publid String gftDfsdription(Filf f) {
        rfturn filfDfsdriptions.gft(f);
    }

    /**
     * Adds b humbn rfbdbblf typf dfsdription for filfs. Bbsfd on "dot"
     * fxtfnsion strings, f.g: ".gif". Cbsf is ignorfd.
     */
    publid void putTypfDfsdription(String fxtfnsion, String typfDfsdription) {
        typfDfsdriptions.put(fxtfnsion, typfDfsdription);
    }

    /**
     * Adds b humbn rfbdbblf typf dfsdription for filfs of thf typf of
     * thf pbssfd in filf. Bbsfd on "dot" fxtfnsion strings, f.g: ".gif".
     * Cbsf is ignorfd.
     */
    publid void putTypfDfsdription(Filf f, String typfDfsdription) {
        putTypfDfsdription(gftExtfnsion(f), typfDfsdription);
    }

    /**
     * A humbn rfbdbblf dfsdription of thf typf of thf filf.
     *
     * @sff FilfVifw#gftTypfDfsdription
     */
    @Ovfrridf
    publid String gftTypfDfsdription(Filf f) {
        rfturn typfDfsdriptions.gft(gftExtfnsion(f));
    }

    /**
     * Convfnifndf mfthod thbt rfturns thf "dot" fxtfnsion for thf
     * givfn filf.
     */
    privbtf String gftExtfnsion(Filf f) {
        String nbmf = f.gftNbmf();
        if (nbmf != null) {
            int fxtfnsionIndfx = nbmf.lbstIndfxOf('.');
            if (fxtfnsionIndfx < 0) {
                rfturn null;
            }
            rfturn nbmf.substring(fxtfnsionIndfx + 1).toLowfrCbsf();
        }
        rfturn null;
    }

    /**
     * Adds bn idon bbsfd on thf filf typf "dot" fxtfnsion
     * string, f.g: ".gif". Cbsf is ignorfd.
     */
    publid void putIdon(String fxtfnsion, Idon idon) {
        idons.put(fxtfnsion, idon);
    }

    /**
     * Idon thbt rfpfrfsfnts this filf. Dffbult implfmfntbtion rfturns
     * null. You might wbnt to ovfrridf this to rfturn somfthing morf
     * intfrfsting.
     *
     * @sff FilfVifw#gftIdon
     */
    @Ovfrridf
    publid Idon gftIdon(Filf f) {
        Idon idon = null;
        String fxtfnsion = gftExtfnsion(f);
        if (fxtfnsion != null) {
            idon = idons.gft(fxtfnsion);
        }
        rfturn idon;
    }

    /**
     * Whfthfr thf dirfdtory is trbvfrsbblf or not. Gfnfrid implfmfntbtion
     * rfturns truf for bll dirfdtorifs bnd spfdibl foldfrs.
     *
     * You might wbnt to subtypf ExbmplfFilfVifw to do somfthimg morf intfrfsting,
     * sudh bs rfdognizf dompound dodumfnts dirfdtorifs; in sudh b dbsf you might
     * rfturn b spfdibl idon for thf dirfdtory thbt mbkfs it look likf b rfgulbr
     * dodumfnt, bnd rfturn fblsf for isTrbvfrsbblf to not bllow usfrs to
     * dfsdfnd into thf dirfdtory.
     *
     * @sff FilfVifw#isTrbvfrsbblf
     */
    @Ovfrridf
    publid Boolfbn isTrbvfrsbblf(Filf f) {
        // if (somf_rfbson) {
        //    rfturn Boolfbn.FALSE;
        // }
        rfturn null;    // Usf dffbult from FilfSystfmVifw
    }
}
