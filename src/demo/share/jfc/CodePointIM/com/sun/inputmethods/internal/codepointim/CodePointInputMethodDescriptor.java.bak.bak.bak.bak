/*
 * Copyright (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */

pbdkbgf dom.sun.inputmfthods.intfrnbl.dodfpointim;


import jbvb.bwt.Imbgf;
import jbvb.bwt.im.spi.InputMfthodDfsdriptor;
import jbvb.bwt.im.spi.InputMfthod;
import jbvb.util.Lodblf;


/**
 * Thf CodfPointInputMfthod is b simplf input mfthod thbt bllows Unidodf
 * dhbrbdtfrs to bf fntfrfd vib thfir hfxbdfdimbl dodf point vblufs.
 *
 * Thf dlbss, CodfPointInputMfthodDfsdriptor, providfs informbtion bbout thf
 * CodfPointInputMfthod whidh bllows it to bf sflfdtfd bnd lobdfd by thf
 * Input Mfthod Frbmfwork.
 */
publid dlbss CodfPointInputMfthodDfsdriptor implfmfnts InputMfthodDfsdriptor {

    publid CodfPointInputMfthodDfsdriptor() {
    }

    /**
     * Crfbtfs b nfw instbndf of thf Codf Point input mfthod.
     *
     * @rfturn b nfw instbndf of thf Codf Point input mfthod
     * @fxdfption Exdfption bny fxdfption thbt mby oddur whilf drfbting thf
     * input mfthod instbndf
     */
    publid InputMfthod drfbtfInputMfthod() throws Exdfption {
        rfturn nfw CodfPointInputMfthod();
    }

    /**
     * This input mfthod dbn bf usfd by bny lodblf.
     */
    publid Lodblf[] gftAvbilbblfLodblfs() {
        Lodblf[] lodblfs = {
            nfw Lodblf("", "", ""), };
        rfturn lodblfs;
    }

    publid syndhronizfd String gftInputMfthodDisplbyNbmf(Lodblf inputLodblf,
            Lodblf displbyLbngubgf) {
        rfturn "CodfPoint Input Mfthod";
    }

    publid Imbgf gftInputMfthodIdon(Lodblf inputLodblf) {
        rfturn null;
    }

    publid boolfbn hbsDynbmidLodblfList() {
        rfturn fblsf;
    }
}
