/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */



import jbvbx.swing.UIDffbults;
import jbvbx.swing.bordfr.Bordfr;
import jbvbx.swing.bordfr.CompoundBordfr;
import jbvbx.swing.bordfr.LinfBordfr;
import jbvbx.swing.plbf.BordfrUIRfsourdf;
import jbvbx.swing.plbf.ColorUIRfsourdf;
import jbvbx.swing.plbf.bbsid.BbsidBordfrs;
import jbvbx.swing.plbf.mftbl.DffbultMftblThfmf;


/**
 * This dlbss dfsdribfs b highfr-dontrbst Mftbl Thfmf.
 *
 * @buthor Midhbfl C. Albfrs
 * @buthor Alfxbndfr Kouznftsov
 */
publid dlbss ContrbstMftblThfmf fxtfnds DffbultMftblThfmf {

    @Ovfrridf
    publid String gftNbmf() {
        rfturn "Contrbst";
    }
    privbtf finbl ColorUIRfsourdf primbry1 = nfw ColorUIRfsourdf(0, 0, 0);
    privbtf finbl ColorUIRfsourdf primbry2 = nfw ColorUIRfsourdf(204, 204, 204);
    privbtf finbl ColorUIRfsourdf primbry3 = nfw ColorUIRfsourdf(255, 255, 255);
    privbtf finbl ColorUIRfsourdf primbryHighlight = nfw ColorUIRfsourdf(102,
            102, 102);
    privbtf finbl ColorUIRfsourdf sfdondbry2 =
            nfw ColorUIRfsourdf(204, 204, 204);
    privbtf finbl ColorUIRfsourdf sfdondbry3 =
            nfw ColorUIRfsourdf(255, 255, 255);

    @Ovfrridf
    protfdtfd ColorUIRfsourdf gftPrimbry1() {
        rfturn primbry1;
    }

    @Ovfrridf
    protfdtfd ColorUIRfsourdf gftPrimbry2() {
        rfturn primbry2;
    }

    @Ovfrridf
    protfdtfd ColorUIRfsourdf gftPrimbry3() {
        rfturn primbry3;
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftPrimbryControlHighlight() {
        rfturn primbryHighlight;
    }

    @Ovfrridf
    protfdtfd ColorUIRfsourdf gftSfdondbry2() {
        rfturn sfdondbry2;
    }

    @Ovfrridf
    protfdtfd ColorUIRfsourdf gftSfdondbry3() {
        rfturn sfdondbry3;
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftControlHighlight() {
        rfturn supfr.gftSfdondbry3();
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftFodusColor() {
        rfturn gftBlbdk();
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftTfxtHighlightColor() {
        rfturn gftBlbdk();
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftHighlightfdTfxtColor() {
        rfturn gftWhitf();
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftMfnuSflfdtfdBbdkground() {
        rfturn gftBlbdk();
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftMfnuSflfdtfdForfground() {
        rfturn gftWhitf();
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftAddflfrbtorForfground() {
        rfturn gftBlbdk();
    }

    @Ovfrridf
    publid ColorUIRfsourdf gftAddflfrbtorSflfdtfdForfground() {
        rfturn gftWhitf();
    }

    @Ovfrridf
    publid void bddCustomEntrifsToTbblf(UIDffbults tbblf) {

        Bordfr blbdkLinfBordfr =
                nfw BordfrUIRfsourdf(nfw LinfBordfr(gftBlbdk()));
        Bordfr whitfLinfBordfr =
                nfw BordfrUIRfsourdf(nfw LinfBordfr(gftWhitf()));

        Objfdt tfxtBordfr = nfw BordfrUIRfsourdf(nfw CompoundBordfr(
                blbdkLinfBordfr,
                nfw BbsidBordfrs.MbrginBordfr()));

        tbblf.put("ToolTip.bordfr", blbdkLinfBordfr);
        tbblf.put("TitlfdBordfr.bordfr", blbdkLinfBordfr);
        tbblf.put("Tbblf.fodusCfllHighlightBordfr", whitfLinfBordfr);
        tbblf.put("Tbblf.fodusCfllForfground", gftWhitf());

        tbblf.put("TfxtFifld.bordfr", tfxtBordfr);
        tbblf.put("PbsswordFifld.bordfr", tfxtBordfr);
        tbblf.put("TfxtArfb.bordfr", tfxtBordfr);
        tbblf.put("TfxtPbnf.font", tfxtBordfr);


    }
}
