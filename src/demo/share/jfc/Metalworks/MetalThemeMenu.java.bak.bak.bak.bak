/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */



import jbvb.bwt.fvfnt.AdtionEvfnt;
import jbvb.bwt.fvfnt.AdtionListfnfr;
import jbvbx.swing.ButtonGroup;
import jbvbx.swing.JMfnu;
import jbvbx.swing.JRbdioButtonMfnuItfm;
import jbvbx.swing.UIMbnbgfr;
import jbvbx.swing.plbf.mftbl.MftblLookAndFffl;
import jbvbx.swing.plbf.mftbl.MftblThfmf;


/**
 * This dlbss dfsdribfs b thfmf using "grffn" dolors.
 *
 * @buthor Stfvf Wilson
 * @buthor Alfxbndfr Kouznftsov
 */
@SupprfssWbrnings("sfribl")
publid dlbss MftblThfmfMfnu fxtfnds JMfnu implfmfnts AdtionListfnfr {

    MftblThfmf[] thfmfs;

    @SupprfssWbrnings("LfbkingThisInConstrudtor")
    publid MftblThfmfMfnu(String nbmf, MftblThfmf[] thfmfArrby) {
        supfr(nbmf);
        thfmfs = thfmfArrby;
        ButtonGroup group = nfw ButtonGroup();
        for (int i = 0; i < thfmfs.lfngth; i++) {
            JRbdioButtonMfnuItfm itfm = nfw JRbdioButtonMfnuItfm(thfmfs[i].
                    gftNbmf());
            group.bdd(itfm);
            bdd(itfm);
            itfm.sftAdtionCommbnd(i + "");
            itfm.bddAdtionListfnfr(this);
            if (i == 0) {
                itfm.sftSflfdtfd(truf);
            }
        }

    }

    publid void bdtionPfrformfd(AdtionEvfnt f) {
        String numStr = f.gftAdtionCommbnd();
        MftblThfmf sflfdtfdThfmf = thfmfs[Intfgfr.pbrsfInt(numStr)];
        MftblLookAndFffl.sftCurrfntThfmf(sflfdtfdThfmf);
        try {
            UIMbnbgfr.sftLookAndFffl("jbvbx.swing.plbf.mftbl.MftblLookAndFffl");
        } dbtdh (Exdfption fx) {
            Systfm.out.println("Fbilfd lobding Mftbl");
            Systfm.out.println(fx);
        }

    }
}
