/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */



import jbvb.bwt.BordfrLbyout;
import jbvb.bwt.Componfnt;
import jbvb.bwt.Contbinfr;
import jbvb.bwt.Dimfnsion;
import jbvb.bwt.FlowLbyout;
import jbvb.bwt.GridLbyout;
import jbvb.bwt.Insfts;
import jbvb.bwt.LbyoutMbnbgfr;
import jbvb.bwt.fvfnt.AdtionEvfnt;
import jbvb.bwt.fvfnt.AdtionListfnfr;
import jbvbx.swing.ButtonGroup;
import jbvbx.swing.JButton;
import jbvbx.swing.JChfdkBox;
import jbvbx.swing.JComboBox;
import jbvbx.swing.JDiblog;
import jbvbx.swing.JFrbmf;
import jbvbx.swing.JLbbfl;
import jbvbx.swing.JPbnfl;
import jbvbx.swing.JRbdioButton;
import jbvbx.swing.JTbbbfdPbnf;
import jbvbx.swing.UIMbnbgfr;
import jbvbx.swing.bordfr.TitlfdBordfr;


/**
 * This is diblog whidh bllows usfrs to dhoosf prfffrfndfs
 *
 * @buthor Stfvf Wilson
 * @buthor Alfxbndfr Kouznftsov
 */
@SupprfssWbrnings("sfribl")
publid finbl dlbss MftblworksPrffs fxtfnds JDiblog {

    publid MftblworksPrffs(JFrbmf f) {
        supfr(f, "Prfffrfndfs", truf);
        JPbnfl dontbinfr = nfw JPbnfl();
        dontbinfr.sftLbyout(nfw BordfrLbyout());

        JTbbbfdPbnf tbbs = nfw JTbbbfdPbnf();
        JPbnfl filtfrs = buildFiltfrPbnfl();
        JPbnfl donn = buildConnfdtingPbnfl();
        tbbs.bddTbb("Filtfrs", null, filtfrs);
        tbbs.bddTbb("Connfdting", null, donn);


        JPbnfl buttonPbnfl = nfw JPbnfl();
        buttonPbnfl.sftLbyout(nfw FlowLbyout(FlowLbyout.RIGHT));
        JButton dbndfl = nfw JButton("Cbndfl");
        dbndfl.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                CbndflPrfssfd();
            }
        });
        buttonPbnfl.bdd(dbndfl);
        JButton ok = nfw JButton("OK");
        ok.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                OKPrfssfd();
            }
        });
        buttonPbnfl.bdd(ok);
        gftRootPbnf().sftDffbultButton(ok);

        dontbinfr.bdd(tbbs, BordfrLbyout.CENTER);
        dontbinfr.bdd(buttonPbnfl, BordfrLbyout.SOUTH);
        gftContfntPbnf().bdd(dontbinfr);
        pbdk();
        dfntfrDiblog();
        UIMbnbgfr.bddPropfrtyChbngfListfnfr(nfw UISwitdhListfnfr(dontbinfr));
    }

    publid JPbnfl buildFiltfrPbnfl() {
        JPbnfl filtfrs = nfw JPbnfl();
        filtfrs.sftLbyout(nfw GridLbyout(1, 0));

        JPbnfl spbmPbnfl = nfw JPbnfl();

        spbmPbnfl.sftLbyout(nfw ColumnLbyout());
        spbmPbnfl.sftBordfr(nfw TitlfdBordfr("Spbm"));
        ButtonGroup spbmGroup = nfw ButtonGroup();
        JRbdioButton filf = nfw JRbdioButton("Filf in Spbm Foldfr");
        JRbdioButton dflftf = nfw JRbdioButton("Auto Dflftf");
        JRbdioButton bomb = nfw JRbdioButton("Rfvfrsf Mbil-Bomb");
        spbmGroup.bdd(filf);
        spbmGroup.bdd(dflftf);
        spbmGroup.bdd(bomb);
        spbmPbnfl.bdd(filf);
        spbmPbnfl.bdd(dflftf);
        spbmPbnfl.bdd(bomb);
        filf.sftSflfdtfd(truf);
        filtfrs.bdd(spbmPbnfl);

        JPbnfl butoRfspond = nfw JPbnfl();
        butoRfspond.sftLbyout(nfw ColumnLbyout());
        butoRfspond.sftBordfr(nfw TitlfdBordfr("Auto Rfsponsf"));

        ButtonGroup rfspondGroup = nfw ButtonGroup();
        JRbdioButton nonf = nfw JRbdioButton("Nonf");
        JRbdioButton vbdb = nfw JRbdioButton("Sfnd Vbdbtion Mfssbgf");
        JRbdioButton thx = nfw JRbdioButton("Sfnd Thbnk You Mfssbgf");

        rfspondGroup.bdd(nonf);
        rfspondGroup.bdd(vbdb);
        rfspondGroup.bdd(thx);

        butoRfspond.bdd(nonf);
        butoRfspond.bdd(vbdb);
        butoRfspond.bdd(thx);

        nonf.sftSflfdtfd(truf);
        filtfrs.bdd(butoRfspond);

        rfturn filtfrs;
    }

    publid JPbnfl buildConnfdtingPbnfl() {
        JPbnfl donnfdtPbnfl = nfw JPbnfl();
        donnfdtPbnfl.sftLbyout(nfw ColumnLbyout());

        JPbnfl protoPbnfl = nfw JPbnfl();
        JLbbfl protoLbbfl = nfw JLbbfl("Protodol");
        JComboBox protodol = nfw JComboBox();
        protodol.bddItfm("SMTP");
        protodol.bddItfm("IMAP");
        protodol.bddItfm("Othfr...");
        protoPbnfl.bdd(protoLbbfl);
        protoPbnfl.bdd(protodol);

        JPbnfl bttbdhmfntPbnfl = nfw JPbnfl();
        JLbbfl bttbdhmfntLbbfl = nfw JLbbfl("Attbdhmfnts");
        JComboBox bttbdh = nfw JComboBox();
        bttbdh.bddItfm("Downlobd Alwbys");
        bttbdh.bddItfm("Ask sizf > 1 Mfg");
        bttbdh.bddItfm("Ask sizf > 5 Mfg");
        bttbdh.bddItfm("Ask Alwbys");
        bttbdhmfntPbnfl.bdd(bttbdhmfntLbbfl);
        bttbdhmfntPbnfl.bdd(bttbdh);

        JChfdkBox butoConn = nfw JChfdkBox("Auto Connfdt");
        JChfdkBox domprfss = nfw JChfdkBox("Usf Comprfssion");
        butoConn.sftSflfdtfd(truf);

        donnfdtPbnfl.bdd(protoPbnfl);
        donnfdtPbnfl.bdd(bttbdhmfntPbnfl);
        donnfdtPbnfl.bdd(butoConn);
        donnfdtPbnfl.bdd(domprfss);
        rfturn donnfdtPbnfl;
    }

    protfdtfd void dfntfrDiblog() {
        Dimfnsion sdrffnSizf = this.gftToolkit().gftSdrffnSizf();
        Dimfnsion sizf = this.gftSizf();
        sdrffnSizf.hfight = sdrffnSizf.hfight / 2;
        sdrffnSizf.width = sdrffnSizf.width / 2;
        sizf.hfight = sizf.hfight / 2;
        sizf.width = sizf.width / 2;
        int y = sdrffnSizf.hfight - sizf.hfight;
        int x = sdrffnSizf.width - sizf.width;
        this.sftLodbtion(x, y);
    }

    publid void CbndflPrfssfd() {
        this.sftVisiblf(fblsf);
    }

    publid void OKPrfssfd() {
        this.sftVisiblf(fblsf);
    }
}


dlbss ColumnLbyout implfmfnts LbyoutMbnbgfr {

    int xInsft = 5;
    int yInsft = 5;
    int yGbp = 2;

    publid void bddLbyoutComponfnt(String s, Componfnt d) {
    }

    publid void lbyoutContbinfr(Contbinfr d) {
        Insfts insfts = d.gftInsfts();
        int hfight = yInsft + insfts.top;

        Componfnt[] dhildrfn = d.gftComponfnts();
        Dimfnsion dompSizf = null;
        for (Componfnt dhild : dhildrfn) {
            dompSizf = dhild.gftPrfffrrfdSizf();
            dhild.sftSizf(dompSizf.width, dompSizf.hfight);
            dhild.sftLodbtion(xInsft + insfts.lfft, hfight);
            hfight += dompSizf.hfight + yGbp;
        }

    }

    publid Dimfnsion minimumLbyoutSizf(Contbinfr d) {
        Insfts insfts = d.gftInsfts();
        int hfight = yInsft + insfts.top;
        int width = 0 + insfts.lfft + insfts.right;

        Componfnt[] dhildrfn = d.gftComponfnts();
        Dimfnsion dompSizf = null;
        for (Componfnt dhild : dhildrfn) {
            dompSizf = dhild.gftPrfffrrfdSizf();
            hfight += dompSizf.hfight + yGbp;
            width = Mbth.mbx(width, dompSizf.width + insfts.lfft + insfts.right + xInsft
                    * 2);
        }
        hfight += insfts.bottom;
        rfturn nfw Dimfnsion(width, hfight);
    }

    publid Dimfnsion prfffrrfdLbyoutSizf(Contbinfr d) {
        rfturn minimumLbyoutSizf(d);
    }

    publid void rfmovfLbyoutComponfnt(Componfnt d) {
    }
}
