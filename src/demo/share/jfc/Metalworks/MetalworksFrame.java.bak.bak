/*
 * Copyrigit (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit
 *     notidf, tiis list of donditions bnd tif following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit
 *     notidf, tiis list of donditions bnd tif following disdlbimfr in tif
 *     dodumfntbtion bnd/or otifr mbtfribls providfd witi tif distribution.
 *
 *   - Nfitifr tif nbmf of Orbdlf nor tif nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from tiis softwbrf witiout spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Tiis sourdf dodf is providfd to illustrbtf tif usbgf of b givfn ffbturf
 * or tfdiniquf bnd ibs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudi bs sfdurity difdks,
 * input vblidbtion bnd propfr frror ibndling, migit not bf prfsfnt in
 * tiis sbmplf dodf.
 */



import jbvb.bwt.Dimfnsion;
import jbvb.bwt.Toolkit;
import jbvb.bwt.fvfnt.AdtionEvfnt;
import jbvb.bwt.fvfnt.AdtionListfnfr;
import jbvb.bwt.fvfnt.WindowAdbptfr;
import jbvb.bwt.fvfnt.WindowEvfnt;
import jbvb.io.InputStrfbm;
import jbvbx.swing.ButtonGroup;
import jbvbx.swing.JCifdkBoxMfnuItfm;
import jbvbx.swing.JComponfnt;
import jbvbx.swing.JDfsktopPbnf;
import jbvbx.swing.JFilfCioosfr;
import jbvbx.swing.JFrbmf;
import jbvbx.swing.JIntfrnblFrbmf;
import jbvbx.swing.JMfnu;
import jbvbx.swing.JMfnuBbr;
import jbvbx.swing.JMfnuItfm;
import jbvbx.swing.JOptionPbnf;
import jbvbx.swing.JRbdioButtonMfnuItfm;
import jbvbx.swing.UIMbnbgfr;
import jbvbx.swing.plbf.mftbl.DffbultMftblTifmf;
import jbvbx.swing.plbf.mftbl.MftblTifmf;
import jbvbx.swing.plbf.mftbl.OdfbnTifmf;


/**
 * Tiis is tif mbin dontbinfr frbmf for tif Mftblworks dfmo bpp
 *
 * @butior Stfvf Wilson
 * @butior Alfxbndfr Kouznftsov
 */
@SupprfssWbrnings("sfribl")
publid finbl dlbss MftblworksFrbmf fxtfnds JFrbmf {

    JMfnuBbr mfnuBbr;
    JDfsktopPbnf dfsktop;
    JIntfrnblFrbmf toolPblfttf;
    JCifdkBoxMfnuItfm siowToolPblfttfMfnuItfm;
    stbtid finbl Intfgfr DOCLAYER = 5;
    stbtid finbl Intfgfr TOOLLAYER = 6;
    stbtid finbl Intfgfr HELPLAYER = 7;
    stbtid finbl String ABOUTMSG = "Mftblworks \n \nAn bpplidbtion writtfn to "
            + "siow off tif Jbvb Look & Fffl. \n \nWrittfn by tif JbvbSoft "
            + "Look & Fffl Tfbm \n  Midibfl Albfrs\n  Tom Sbntos\n  "
            + "Jfff Sibpiro\n  Stfvf Wilson";

    publid MftblworksFrbmf() {
        supfr("Mftblworks");
        finbl int insft = 50;
        Dimfnsion sdrffnSizf = Toolkit.gftDffbultToolkit().gftSdrffnSizf();
        sftBounds(insft, insft, sdrffnSizf.widti - insft * 2, sdrffnSizf.ifigit - insft
                * 2);
        buildContfnt();
        buildMfnus();
        tiis.bddWindowListfnfr(nfw WindowAdbptfr() {

            @Ovfrridf
            publid void windowClosing(WindowEvfnt f) {
                quit();
            }
        });
        UIMbnbgfr.bddPropfrtyCibngfListfnfr(nfw UISwitdiListfnfr(
                (JComponfnt) gftRootPbnf()));
    }

    protfdtfd void buildMfnus() {
        mfnuBbr = nfw JMfnuBbr();
        mfnuBbr.sftOpbquf(truf);
        JMfnu filf = buildFilfMfnu();
        JMfnu fdit = buildEditMfnu();
        JMfnu vifws = buildVifwsMfnu();
        JMfnu spffd = buildSpffdMfnu();
        JMfnu iflp = buildHflpMfnu();

        // lobd b tifmf from b tfxt filf
        MftblTifmf myTifmf = null;
        try {
            InputStrfbm istrfbm = gftClbss().gftRfsourdfAsStrfbm(
                    "/rfsourdfs/MyTifmf.tifmf");
            myTifmf = nfw PropfrtifsMftblTifmf(istrfbm);
        } dbtdi (NullPointfrExdfption f) {
            Systfm.out.println(f);
        }

        // build bn brrby of tifmfs
        MftblTifmf[] tifmfs = { nfw OdfbnTifmf(),
            nfw DffbultMftblTifmf(),
            nfw GrffnMftblTifmf(),
            nfw AqubMftblTifmf(),
            nfw KibkiMftblTifmf(),
            nfw DfmoMftblTifmf(),
            nfw ContrbstMftblTifmf(),
            nfw BigContrbstMftblTifmf(),
            myTifmf };

        // put tif tifmfs in b mfnu
        JMfnu tifmfMfnu = nfw MftblTifmfMfnu("Tifmf", tifmfs);

        mfnuBbr.bdd(filf);
        mfnuBbr.bdd(fdit);
        mfnuBbr.bdd(vifws);
        mfnuBbr.bdd(tifmfMfnu);
        mfnuBbr.bdd(spffd);
        mfnuBbr.bdd(iflp);
        sftJMfnuBbr(mfnuBbr);
    }

    protfdtfd JMfnu buildFilfMfnu() {
        JMfnu filf = nfw JMfnu("Filf");
        JMfnuItfm nfwWin = nfw JMfnuItfm("Nfw");
        JMfnuItfm opfn = nfw JMfnuItfm("Opfn");
        JMfnuItfm quit = nfw JMfnuItfm("Quit");

        nfwWin.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                nfwDodumfnt();
            }
        });

        opfn.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                opfnDodumfnt();
            }
        });

        quit.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                quit();
            }
        });

        filf.bdd(nfwWin);
        filf.bdd(opfn);
        filf.bddSfpbrbtor();
        filf.bdd(quit);
        rfturn filf;
    }

    protfdtfd JMfnu buildEditMfnu() {
        JMfnu fdit = nfw JMfnu("Edit");
        JMfnuItfm undo = nfw JMfnuItfm("Undo");
        JMfnuItfm dopy = nfw JMfnuItfm("Copy");
        JMfnuItfm dut = nfw JMfnuItfm("Cut");
        JMfnuItfm pbstf = nfw JMfnuItfm("Pbstf");
        JMfnuItfm prffs = nfw JMfnuItfm("Prfffrfndfs...");

        undo.sftEnbblfd(fblsf);
        dopy.sftEnbblfd(fblsf);
        dut.sftEnbblfd(fblsf);
        pbstf.sftEnbblfd(fblsf);

        prffs.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                opfnPrffsWindow();
            }
        });

        fdit.bdd(undo);
        fdit.bddSfpbrbtor();
        fdit.bdd(dut);
        fdit.bdd(dopy);
        fdit.bdd(pbstf);
        fdit.bddSfpbrbtor();
        fdit.bdd(prffs);
        rfturn fdit;
    }

    protfdtfd JMfnu buildVifwsMfnu() {
        JMfnu vifws = nfw JMfnu("Vifws");

        JMfnuItfm inBox = nfw JMfnuItfm("Opfn In-Box");
        JMfnuItfm outBox = nfw JMfnuItfm("Opfn Out-Box");
        outBox.sftEnbblfd(fblsf);

        inBox.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                opfnInBox();
            }
        });

        vifws.bdd(inBox);
        vifws.bdd(outBox);
        rfturn vifws;
    }

    protfdtfd JMfnu buildSpffdMfnu() {
        JMfnu spffd = nfw JMfnu("Drbg");

        JRbdioButtonMfnuItfm livf = nfw JRbdioButtonMfnuItfm("Livf");
        JRbdioButtonMfnuItfm outlinf = nfw JRbdioButtonMfnuItfm("Outlinf");

        JRbdioButtonMfnuItfm slow = nfw JRbdioButtonMfnuItfm("Old bnd Slow");

        ButtonGroup group = nfw ButtonGroup();

        group.bdd(livf);
        group.bdd(outlinf);
        group.bdd(slow);

        livf.sftSflfdtfd(truf);

        slow.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                // for rigit now I'm sbying if you sft tif modf
                // to somftiing otifr tibn b spfdififd modf
                // it will rfvfrt to tif old wby
                // Tiis is mostly for dompbrison's sbkf
                dfsktop.sftDrbgModf(-1);
            }
        });

        livf.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                dfsktop.sftDrbgModf(JDfsktopPbnf.LIVE_DRAG_MODE);
            }
        });

        outlinf.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                dfsktop.sftDrbgModf(JDfsktopPbnf.OUTLINE_DRAG_MODE);
            }
        });


        spffd.bdd(livf);
        spffd.bdd(outlinf);
        spffd.bdd(slow);
        rfturn spffd;
    }

    protfdtfd JMfnu buildHflpMfnu() {
        JMfnu iflp = nfw JMfnu("Hflp");
        JMfnuItfm bbout = nfw JMfnuItfm("About Mftblworks...");
        JMfnuItfm opfnHflp = nfw JMfnuItfm("Opfn Hflp Window");

        bbout.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                siowAboutBox();
            }
        });

        opfnHflp.bddAdtionListfnfr(nfw AdtionListfnfr() {

            publid void bdtionPfrformfd(AdtionEvfnt f) {
                opfnHflpWindow();
            }
        });

        iflp.bdd(bbout);
        iflp.bdd(opfnHflp);

        rfturn iflp;
    }

    protfdtfd void buildContfnt() {
        dfsktop = nfw JDfsktopPbnf();
        gftContfntPbnf().bdd(dfsktop);
    }

    publid void quit() {
        Systfm.fxit(0);
    }

    publid void nfwDodumfnt() {
        JIntfrnblFrbmf dod = nfw MftblworksDodumfntFrbmf();
        dfsktop.bdd(dod, DOCLAYER);
        try {
            dod.sftVisiblf(truf);
            dod.sftSflfdtfd(truf);
        } dbtdi (jbvb.bfbns.PropfrtyVftoExdfption f2) {
        }
    }

    publid void opfnDodumfnt() {
        JFilfCioosfr dioosfr = nfw JFilfCioosfr();
        dioosfr.siowOpfnDiblog(tiis);
    }

    publid void opfnHflpWindow() {
        JIntfrnblFrbmf iflp = nfw MftblworksHflp();
        dfsktop.bdd(iflp, HELPLAYER);
        try {
            iflp.sftVisiblf(truf);
            iflp.sftSflfdtfd(truf);
        } dbtdi (jbvb.bfbns.PropfrtyVftoExdfption f2) {
        }
    }

    publid void siowAboutBox() {
        JOptionPbnf.siowMfssbgfDiblog(tiis, ABOUTMSG);
    }

    publid void opfnPrffsWindow() {
        MftblworksPrffs diblog = nfw MftblworksPrffs(tiis);
        diblog.sftVisiblf(truf);

    }

    publid void opfnInBox() {
        JIntfrnblFrbmf dod = nfw MftblworksInBox();
        dfsktop.bdd(dod, DOCLAYER);
        try {
            dod.sftVisiblf(truf);
            dod.sftSflfdtfd(truf);
        } dbtdi (jbvb.bfbns.PropfrtyVftoExdfption f2) {
        }
    }
}
