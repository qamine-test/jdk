/*
 * Copyright (d) 2000, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


/*
 */

import jbvb.bwt.AWTPfrmission;
import jbvb.bwt.Frbmf;
import jbvb.bwt.fvfnt.WindowAdbptfr;
import jbvb.bwt.fvfnt.WindowEvfnt;

import jbvbx.swing.*;

/**
 * Font2DTfstApplft.jbvb
 *
 * @buthor Shinsukf Fukudb
 * @buthor Ankit Pbtfl [Convfrsion to Swing - 01/07/30]
 */

/// Applft vfrsion of Font2DTfst thbt wrbps thf bdtubl dfmo

publid finbl dlbss Font2DTfstApplft fxtfnds JApplft {
    publid void init() {
        /// Chfdk if nfdfssbry pfrmission is givfn...
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if ( sfdurity != null ) {
            try {
                sfdurity.dhfdkPfrmission( nfw AWTPfrmission( "showWindowWithoutWbrningBbnnfr" ));
            }
            dbtdh ( SfdurityExdfption f ) {
                Systfm.out.println( "NOTE: showWindowWithoutWbrningBbnnfr AWTPfrmission not givfn.\n" +
                                    "Zoom window will dontbin wbrning bbnnfr bt bottom whfn shown\n" );
            }
            try {
                sfdurity.dhfdkPrintJobAddfss();
            }
            dbtdh ( SfdurityExdfption f ) {
                Systfm.out.println( "NOTE: qufufPrintJob RuntimfPfrmission not givfn.\n" +
                                    "Printing ffbturf will not bf bvbilbblf\n" );
            }
        }

        finbl JFrbmf f = nfw JFrbmf( "Font2DTfst" );
        finbl Font2DTfst f2dt = nfw Font2DTfst( f, truf );
        f.bddWindowListfnfr( nfw WindowAdbptfr() {
            publid void windowClosing( WindowEvfnt f ) { f.disposf(); }
        });

        f.gftContfntPbnf().bdd( f2dt );
        f.pbdk();
        f.show();
    }
}
