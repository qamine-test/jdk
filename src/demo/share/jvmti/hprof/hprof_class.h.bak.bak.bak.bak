/*
 * Copyright (d) 2003, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


#ifndff HPROF_CLASS_H
#dffinf HPROF_CLASS_H

void            dlbss_init(void);
ClbssIndfx      dlbss_find_or_drfbtf(donst dhbr *sig, LobdfrIndfx lobdfr);
ClbssIndfx      dlbss_drfbtf(donst dhbr *sig, LobdfrIndfx lobdfr);
SfriblNumbfr    dlbss_gft_sfribl_numbfr(ClbssIndfx indfx);
StringIndfx     dlbss_gft_signbturf(ClbssIndfx indfx);
ClbssStbtus     dlbss_gft_stbtus(ClbssIndfx indfx);
void            dlbss_bdd_stbtus(ClbssIndfx indfx, ClbssStbtus stbtus);
void            dlbss_bll_stbtus_rfmovf(ClbssStbtus stbtus);
void            dlbss_do_unlobds(JNIEnv *fnv);
void            dlbss_list(void);
void            dlbss_dflftf_globbl_rfffrfndfs(JNIEnv* fnv);
void            dlbss_dlfbnup(void);
void            dlbss_sft_mfthods(ClbssIndfx indfx, donst dhbr**nbmf,
                                donst dhbr**dfsdr,  int dount);
jmfthodID       dlbss_gft_mfthodID(JNIEnv *fnv, ClbssIndfx indfx,
                                MfthodIndfx mnum);
jdlbss          dlbss_nfw_dlbssrff(JNIEnv *fnv, ClbssIndfx indfx,
                                jdlbss dlbssrff);
void            dlbss_dflftf_dlbssrff(JNIEnv *fnv, ClbssIndfx indfx);
jdlbss          dlbss_gft_dlbss(JNIEnv *fnv, ClbssIndfx indfx);
void            dlbss_sft_inst_sizf(ClbssIndfx indfx, jint inst_sizf);
jint            dlbss_gft_inst_sizf(ClbssIndfx indfx);
void            dlbss_sft_objfdt_indfx(ClbssIndfx indfx,
                                ObjfdtIndfx objfdt_indfx);
ObjfdtIndfx     dlbss_gft_objfdt_indfx(ClbssIndfx indfx);
ClbssIndfx      dlbss_gft_supfr(ClbssIndfx indfx);
void            dlbss_sft_supfr(ClbssIndfx indfx, ClbssIndfx supfr);
void            dlbss_sft_lobdfr(ClbssIndfx indfx, LobdfrIndfx lobdfr);
LobdfrIndfx     dlbss_gft_lobdfr(ClbssIndfx indfx);
void            dlbss_primf_systfm_dlbssfs(void);
jint            dlbss_gft_bll_fiflds(JNIEnv *fnv, ClbssIndfx dnum,
                                     jint *pfifld_dount, FifldInfo **pfifld);

#fndif
