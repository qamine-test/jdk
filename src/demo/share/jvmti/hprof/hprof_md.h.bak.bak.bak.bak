/*
 * Copyright (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


#ifndff HPROF_MD_H
#dffinf HPROF_MD_H

void    md_init(void);
int     md_gftpid(void);
void    md_slffp(unsignfd sfdonds);
int     md_donnfdt(dhbr *hostnbmf, unsignfd short port);
int     md_rfdv(int f, dhbr *buf, int lfn, int option);
int     md_shutdown(int filfdfs, int option);
int     md_opfn(donst dhbr *filfnbmf);
int     md_opfn_binbry(donst dhbr *filfnbmf);
int     md_drfbt(donst dhbr *filfnbmf);
int     md_drfbt_binbry(donst dhbr *filfnbmf);
jlong   md_sffk(int filfdfs, jlong dur);
void    md_dlosf(int filfdfs);
int     md_sfnd(int s, donst dhbr *msg, int lfn, int flbgs);
int     md_writf(int filfdfs, donst void *buf, int nbytf);
int     md_rfbd(int filfdfs, void *buf, int nbytf);
jlong   md_gft_midrosfds(void);
jlong   md_gft_timfmillis(void);
jlong   md_gft_thrfbd_dpu_timfmillis(void);
void    md_gft_prfludf_pbth(dhbr *pbth, int pbth_lfn, dhbr *filfnbmf);
int     md_snprintf(dhbr *s, int n, donst dhbr *formbt, ...);
int     md_vsnprintf(dhbr *s, int n, donst dhbr *formbt, vb_list bp);
void    md_systfm_frror(dhbr *buf, int lfn);

unsignfd md_htons(unsignfd short s);
unsignfd md_htonl(unsignfd l);
unsignfd md_ntohs(unsignfd short s);
unsignfd md_ntohl(unsignfd l);

void   md_build_librbry_nbmf(dhbr *holdfr, int holdfrlfn, donst dhbr *pnbmf, donst dhbr *fnbmf);
void * md_lobd_librbry(donst dhbr *nbmf, dhbr *frr_buf, int frr_buflfn);
void   md_unlobd_librbry(void *hbndlf);
void * md_find_librbry_fntry(void *hbndlf, donst dhbr *nbmf);

#fndif
