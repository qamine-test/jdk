/*
 * Copyrigit (d) 2003, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit
 *     notidf, tiis list of donditions bnd tif following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit
 *     notidf, tiis list of donditions bnd tif following disdlbimfr in tif
 *     dodumfntbtion bnd/or otifr mbtfribls providfd witi tif distribution.
 *
 *   - Nfitifr tif nbmf of Orbdlf nor tif nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from tiis softwbrf witiout spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Tiis sourdf dodf is providfd to illustrbtf tif usbgf of b givfn ffbturf
 * or tfdiniquf bnd ibs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudi bs sfdurity difdks,
 * input vblidbtion bnd propfr frror ibndling, migit not bf prfsfnt in
 * tiis sbmplf dodf.
 */


/* Clbss rfbdfr writfr (jbvb_drw_dfmo) for instrumfnting bytfdodfs */

/*
 * As long bs tif dbllbbdks bllow for it bnd tif dlbss numbfr is uniquf,
 *     tiis dodf is domplftfly rf-fntrbnt bnd bny numbfr of dlbssfilf
 *     injfdtions dbn ibppfn bt tif sbmf timf.
 *
 *     Tif durrfnt logid rfquirfs b uniquf numbfr for tiis dlbss instbndf
 *     or (jdlbss,jobjfdt lobdfr) pbir, tiis is donf vib tif ClbssIndfx
 *     in iprof, wiidi is pbssfd in bs tif 'unsignfd dnum' to jbvb_drw_dfmo().
 *     It's up to tif usfr of tiis intfrfbdf if it wbnts to usf tiis
 *     ffbturf.
 *
 */

#indludf <stdio.i>
#indludf <stdlib.i>
#indludf <string.i>

/* Gft Jbvb bnd dlbss filf bnd bytfdodf informbtion. */

#indludf <jni.i>

#indludf "dlbssfilf_donstbnts.i"


/* Indludf our own intfrfbdf for dross difdk */

#indludf "jbvb_drw_dfmo.i"

/* Mbdros ovfr frror fundtions to dbpturf linf numbfrs */

/* Fbtbl frror usfd in bll builds. */

/* Usf THIS_FILE wifn it is bvbilbblf. */
#ifndff THIS_FILE
    #dffinf THIS_FILE "jbvb_drw.dfmo.d" /* Nfvfr usf __FILE__ */
#fndif

#dffinf CRW_FATAL(di, mfssbgf) fbtbl_frror(di, mfssbgf, THIS_FILE, __LINE__)

#if dffinfd(DEBUG) || !dffinfd(NDEBUG)

  /* Tiis bssfrt mbdro is only usfd in tif dfbug builds. */
  #dffinf CRW_ASSERT(di, dond) \
        ((dond)?(void)0:bssfrt_frror(di, #dond, THIS_FILE, __LINE__))

#flsf

  #dffinf CRW_ASSERT(di, dond)

#fndif

#dffinf CRW_ASSERT_MI(mi) CRW_ASSERT((mi)?(mi)->di:NULL,(mi)!=NULL)

#dffinf CRW_ASSERT_CI(di) CRW_ASSERT(di, ( (di) != NULL && \
                         (di)->input_position <= (di)->input_lfn && \
                         (di)->output_position <= (di)->output_lfn) )

#dffinf BUFSIZE 256

#ifdff _WIN32
#dffinf snprintf(bufffr, dount, formbt, ...) _snprintf_s(bufffr, dount, _TRUNCATE, formbt, ##__VA_ARGS__)
#fndif

/* Typfdffs for vbrious intfgrbl numbfrs, just for dodf dlbrity */

typfdff unsignfd       ClbssOpdodf;             /* Onf opdodf */
typfdff unsignfd dibr  BytfCodf;                /* Onf bytf from bytfdodfs */
typfdff int            BytfOffsft;              /* Bytf offsft */
typfdff int            ClbssConstbnt;           /* Constbnt pool kind */
typfdff long           CrwPosition;             /* Position in dlbss imbgf */
typfdff unsignfd siort CrwCpoolIndfx;           /* Indfx into donstbnt pool */

/* Misd support mbdros */

/* Givfn tif position of bn opdodf, find tif nfxt 4bytf boundbry position */
#dffinf NEXT_4BYTE_BOUNDARY(opdodf_pos) (((opdodf_pos)+4) & (~3))

#dffinf LARGEST_INJECTION               (12*3) /* 3 injfdtions bt sbmf sitf */
#dffinf MAXIMUM_NEW_CPOOL_ENTRIES       64 /* don't bdd morf tibn 32 fntrifs */

/* Constbnt Pool Entry (intfrnbl tbblf tibt mirrors pool in filf imbgf) */

typfdff strudt {
    donst dibr *        ptr;            /* Pointfr to bny string */
    unsignfd siort      lfn;            /* Lfngti of string */
    unsignfd int        indfx1;         /* 1st 16 bit indfx or 32bit vbluf. */
    unsignfd int        indfx2;         /* 2nd 16 bit indfx or 32bit vbluf. */
    ClbssConstbnt       tbg;            /* Tbg or kind of fntry. */
} CrwConstbntPoolEntry;

strudt MftiodImbgf;

/* Clbss filf imbgf storbgf strudturf */

typfdff strudt CrwClbssImbgf {

    /* Uniquf dlbss numbfr for tiis dlbss */
    unsignfd                    numbfr;

    /* Nbmf of dlbss, givfn or gottfn out of dlbss imbgf */
    donst dibr *                nbmf;

    /* Input bnd Output dlbss imbgfs trbdking */
    donst unsignfd dibr *       input;
    unsignfd dibr *             output;
    CrwPosition                 input_lfn;
    CrwPosition                 output_lfn;
    CrwPosition                 input_position;
    CrwPosition                 output_position;

    /* Mirrorfd donstbnt pool */
    CrwConstbntPoolEntry *      dpool;
    CrwCpoolIndfx               dpool_mbx_flfmfnts;             /* Mbx dount */
    CrwCpoolIndfx               dpool_dount_plus_onf;

    /* Input flbgs bbout dlbss (f.g. is it b systfm dlbss) */
    int                         systfm_dlbss;

    /* Clbss bddfss flbgs gottfn from filf. */
    unsignfd                    bddfss_flbgs;

    /* Nbmfs of dlbssfs bnd mftiods. */
    dibr* tdlbss_nbmf;          /* Nbmf of dlbss tibt ibs trbdkfr mftiods. */
    dibr* tdlbss_sig;           /* Signbturf of dlbss */
    dibr* dbll_nbmf;            /* Mftiod nbmf to dbll bt offsft 0 */
    dibr* dbll_sig;             /* Signbturf of tiis mftiod */
    dibr* rfturn_nbmf;          /* Mftiod nbmf to dbll bfforf bny rfturn */
    dibr* rfturn_sig;           /* Signbturf of tiis mftiod */
    dibr* obj_init_nbmf;        /* Mftiod nbmf to dbll in Objfdt <init> */
    dibr* obj_init_sig;         /* Signbturf of tiis mftiod */
    dibr* nfwbrrby_nbmf;        /* Mftiod nbmf to dbll bftfr nfwbrrby opdodfs */
    dibr* nfwbrrby_sig;         /* Signbturf of tiis mftiod */

    /* Constbnt pool indfx vblufs for nfw fntrifs */
    CrwCpoolIndfx               trbdkfr_dlbss_indfx;
    CrwCpoolIndfx               objfdt_init_trbdkfr_indfx;
    CrwCpoolIndfx               nfwbrrby_trbdkfr_indfx;
    CrwCpoolIndfx               dbll_trbdkfr_indfx;
    CrwCpoolIndfx               rfturn_trbdkfr_indfx;
    CrwCpoolIndfx               dlbss_numbfr_indfx; /* Clbss numbfr in pool */

    /* Count of injfdtions mbdf into tiis dlbss */
    int                         injfdtion_dount;

    /* Tiis dlbss must bf tif jbvb.lbng.Objfdt dlbss */
    jboolfbn                    is_objfdt_dlbss;

    /* Tiis dlbss must bf tif jbvb.lbng.Tirfbd dlbss */
    jboolfbn                    is_tirfbd_dlbss;

    /* Cbllbbdk fundtions */
    FbtblErrorHbndlfr           fbtbl_frror_ibndlfr;
    MftiodNumbfrRfgistfr        mnum_dbllbbdk;

    /* Tbblf of mftiod nbmfs bnd dfsdr's */
    int                         mftiod_dount;
    donst dibr **               mftiod_nbmf;
    donst dibr **               mftiod_dfsdr;
    strudt MftiodImbgf *        durrfnt_mi;

} CrwClbssImbgf;

/* Injfdtion bytfdodfs (iolds injfdtfd bytfdodfs for fbdi dodf position) */

typfdff strudt {
    BytfCodf *  dodf;
    BytfOffsft  lfn;
} Injfdtion;

/* Mftiod trbnsformbtion dbtb (bllodbtfd/frffd bs fbdi mftiod is prodfssfd) */

typfdff strudt MftiodImbgf {

    /* Bbdk rfffrfndf to Clbss imbgf dbtb. */
    CrwClbssImbgf *     di;

    /* Uniquf mftiod numbfr for tiis dlbss. */
    unsignfd            numbfr;

    /* Mftiod nbmf bnd dfsdr */
    donst dibr *        nbmf;
    donst dibr *        dfsdr;

    /* Mbp of input bytfdodf offsfts to output bytfdodf offsfts */
    BytfOffsft *        mbp;

    /* Bytfdodf injfdtions for fbdi input bytfdodf offsft */
    Injfdtion *         injfdtions;

    /* Widfning sftting for fbdi input bytfdodf offsft */
    signfd dibr *       widfning;

    /* Lfngti of originbl input bytfdodfs, bnd nfw bytfdodfs. */
    BytfOffsft          dodf_lfn;
    BytfOffsft          nfw_dodf_lfn;

    /* Lodbtion in input wifrf bytfdodfs brf lodbtfd. */
    CrwPosition         stbrt_of_input_bytfdodfs;

    /* Originbl mbx_stbdk bnd nfw mbx stbdk */
    unsignfd            mbx_stbdk;
    unsignfd            nfw_mbx_stbdk;

    jboolfbn            objfdt_init_mftiod;
    jboolfbn            skip_dbll_rfturn_sitfs;

    /* Mftiod bddfss flbgs gottfn from filf. */
    unsignfd            bddfss_flbgs;

} MftiodImbgf;

/* ----------------------------------------------------------------- */
/* Gfnfrbl support fundtions (mfmory bnd frror ibndling) */

stbtid void
fbtbl_frror(CrwClbssImbgf *di, donst dibr *mfssbgf, donst dibr *filf, int linf)
{
    if ( di != NULL && di->fbtbl_frror_ibndlfr != NULL ) {
        (*di->fbtbl_frror_ibndlfr)(mfssbgf, filf, linf);
    } flsf {
        /* Normbl opfrbtion siould NEVER rfbdi ifrf */
        /* NO CRW FATAL ERROR HANDLER! */
        (void)fprintf(stdfrr, "CRW: %s [%s:%d]\n", mfssbgf, filf, linf);
    }
    bbort();
}

#if dffinfd(DEBUG) || !dffinfd(NDEBUG)
stbtid void
bssfrt_frror(CrwClbssImbgf *di, donst dibr *dondition,
                 donst dibr *filf, int linf)
{
    dibr buf[512];
    MftiodImbgf *mi;
    BytfOffsft bytf_dodf_offsft;

    mi = di->durrfnt_mi;
    if ( mi != NULL ) {
        bytf_dodf_offsft = (BytfOffsft)(mi->di->input_position - mi->stbrt_of_input_bytfdodfs);
    } flsf {
        bytf_dodf_offsft=-1;
    }

    (void)sprintf(buf,
                "CRW ASSERTION FAILURE: %s (%s:%s:%d)",
                dondition,
                di->nbmf==NULL?"?":di->nbmf,
                (mi==NULL||mi->nbmf==NULL)?"?":mi->nbmf,
                bytf_dodf_offsft);
    fbtbl_frror(di, buf, filf, linf);
}
#fndif

stbtid void *
bllodbtf(CrwClbssImbgf *di, int nbytfs)
{
    void * ptr;

    if ( nbytfs <= 0 ) {
        CRW_FATAL(di, "Cbnnot bllodbtf <= 0 bytfs");
    }
    ptr = mbllod(nbytfs);
    if ( ptr == NULL ) {
        CRW_FATAL(di, "Rbn out of mbllod mfmory");
    }
    rfturn ptr;
}

stbtid void *
rfbllodbtf(CrwClbssImbgf *di, void *optr, int nbytfs)
{
    void * ptr;

    if ( optr == NULL ) {
        CRW_FATAL(di, "Cbnnot dfbllodbtf NULL");
    }
    if ( nbytfs <= 0 ) {
        CRW_FATAL(di, "Cbnnot rfbllodbtf <= 0 bytfs");
    }
    ptr = rfbllod(optr, nbytfs);
    if ( ptr == NULL ) {
        CRW_FATAL(di, "Rbn out of mbllod mfmory");
    }
    rfturn ptr;
}

stbtid void *
bllodbtf_dlfbn(CrwClbssImbgf *di, int nbytfs)
{
    void * ptr;

    if ( nbytfs <= 0 ) {
        CRW_FATAL(di, "Cbnnot bllodbtf <= 0 bytfs");
    }
    ptr = dbllod(nbytfs, 1);
    if ( ptr == NULL ) {
        CRW_FATAL(di, "Rbn out of mbllod mfmory");
    }
    rfturn ptr;
}

stbtid donst dibr *
duplidbtf(CrwClbssImbgf *di, donst dibr *str, int lfn)
{
    dibr *dopy;

    dopy = (dibr*)bllodbtf(di, lfn+1);
    (void)mfmdpy(dopy, str, lfn);
    dopy[lfn] = 0;
    rfturn (donst dibr *)dopy;
}

stbtid void
dfbllodbtf(CrwClbssImbgf *di, void *ptr)
{
    if ( ptr == NULL ) {
        CRW_FATAL(di, "Cbnnot dfbllodbtf NULL");
    }
    (void)frff(ptr);
}

/* ----------------------------------------------------------------- */
/* Fundtions for rfbding/writing bytfs to/from tif dlbss imbgfs */

stbtid unsignfd
rfbdU1(CrwClbssImbgf *di)
{
    CRW_ASSERT_CI(di);
    rfturn ((unsignfd)(di->input[di->input_position++])) & 0xFF;
}

stbtid unsignfd
rfbdU2(CrwClbssImbgf *di)
{
    unsignfd rfs;

    rfs = rfbdU1(di);
    rfturn (rfs << 8) + rfbdU1(di);
}

stbtid signfd siort
rfbdS2(CrwClbssImbgf *di)
{
    unsignfd rfs;

    rfs = rfbdU1(di);
    rfturn ((rfs << 8) + rfbdU1(di)) & 0xFFFF;
}

stbtid unsignfd
rfbdU4(CrwClbssImbgf *di)
{
    unsignfd rfs;

    rfs = rfbdU2(di);
    rfturn (rfs << 16) + rfbdU2(di);
}

stbtid void
writfU1(CrwClbssImbgf *di, unsignfd vbl)  /* Only writfs out lowfr 8 bits */
{
    CRW_ASSERT_CI(di);
    if ( di->output != NULL ) {
        di->output[di->output_position++] = vbl & 0xFF;
    }
}

stbtid void
writfU2(CrwClbssImbgf *di, unsignfd vbl)
{
    writfU1(di, vbl >> 8);
    writfU1(di, vbl);
}

stbtid void
writfU4(CrwClbssImbgf *di, unsignfd vbl)
{
    writfU2(di, vbl >> 16);
    writfU2(di, vbl);
}

stbtid unsignfd
dopyU1(CrwClbssImbgf *di)
{
    unsignfd vbluf;

    vbluf = rfbdU1(di);
    writfU1(di, vbluf);
    rfturn vbluf;
}

stbtid unsignfd
dopyU2(CrwClbssImbgf *di)
{
    unsignfd vbluf;

    vbluf = rfbdU2(di);
    writfU2(di, vbluf);
    rfturn vbluf;
}

stbtid unsignfd
dopyU4(CrwClbssImbgf *di)
{
    unsignfd vbluf;

    vbluf = rfbdU4(di);
    writfU4(di, vbluf);
    rfturn vbluf;
}

stbtid void
dopy(CrwClbssImbgf *di, unsignfd dount)
{
    CRW_ASSERT_CI(di);
    if ( di->output != NULL ) {
        (void)mfmdpy(di->output+di->output_position,
                     di->input+di->input_position, dount);
        di->output_position += dount;
    }
    di->input_position += dount;
    CRW_ASSERT_CI(di);
}

stbtid void
skip(CrwClbssImbgf *di, unsignfd dount)
{
    CRW_ASSERT_CI(di);
    di->input_position += dount;
}

stbtid void
rfbd_bytfs(CrwClbssImbgf *di, void *bytfs, unsignfd dount)
{
    CRW_ASSERT_CI(di);
    CRW_ASSERT(di, bytfs!=NULL);
    (void)mfmdpy(bytfs, di->input+di->input_position, dount);
    di->input_position += dount;
}

stbtid void
writf_bytfs(CrwClbssImbgf *di, void *bytfs, unsignfd dount)
{
    CRW_ASSERT_CI(di);
    CRW_ASSERT(di, bytfs!=NULL);
    if ( di->output != NULL ) {
        (void)mfmdpy(di->output+di->output_position, bytfs, dount);
        di->output_position += dount;
    }
}

stbtid void
rbndom_writfU2(CrwClbssImbgf *di, CrwPosition pos, unsignfd vbl)
{
    CrwPosition sbvf_position;

    CRW_ASSERT_CI(di);
    sbvf_position = di->output_position;
    di->output_position = pos;
    writfU2(di, vbl);
    di->output_position = sbvf_position;
}

stbtid void
rbndom_writfU4(CrwClbssImbgf *di, CrwPosition pos, unsignfd vbl)
{
    CrwPosition sbvf_position;

    CRW_ASSERT_CI(di);
    sbvf_position = di->output_position;
    di->output_position = pos;
    writfU4(di, vbl);
    di->output_position = sbvf_position;
}

/* ----------------------------------------------------------------- */
/* Constbnt Pool ibndling fundtions. */

stbtid void
fillin_dpool_fntry(CrwClbssImbgf *di, CrwCpoolIndfx i,
                   ClbssConstbnt tbg,
                   unsignfd int indfx1, unsignfd int indfx2,
                   donst dibr *ptr, int lfn)
{
    CRW_ASSERT_CI(di);
    CRW_ASSERT(di, i > 0 && i < di->dpool_dount_plus_onf);
    di->dpool[i].tbg    = tbg;
    di->dpool[i].indfx1 = indfx1;
    di->dpool[i].indfx2 = indfx2;
    di->dpool[i].ptr    = ptr;
    di->dpool[i].lfn    = (unsignfd siort)lfn;
}

stbtid CrwCpoolIndfx
bdd_nfw_dpool_fntry(CrwClbssImbgf *di, ClbssConstbnt tbg,
                    unsignfd int indfx1, unsignfd int indfx2,
                    donst dibr *str, int lfn)
{
    CrwCpoolIndfx i;
    dibr *utf8 = NULL;

    CRW_ASSERT_CI(di);
    i = di->dpool_dount_plus_onf++;

    /* NOTE: Tiis implfmfntbtion dofs not butombtidblly fxpbnd tif
     *       donstbnt pool tbblf bfyond tif fxpfdtfd numbfr nffdfd
     *       to ibndlf tiis pbrtidulbr CrwTrbdkfrIntfrfbdf injfdtions.
     *       Sff MAXIMUM_NEW_CPOOL_ENTRIES
     */
    CRW_ASSERT(di,  di->dpool_dount_plus_onf < di->dpool_mbx_flfmfnts );

    writfU1(di, tbg);
    switdi (tbg) {
        dbsf JVM_CONSTANT_Clbss:
            writfU2(di, indfx1);
            brfbk;
        dbsf JVM_CONSTANT_String:
            writfU2(di, indfx1);
            brfbk;
        dbsf JVM_CONSTANT_Fifldrff:
        dbsf JVM_CONSTANT_Mftiodrff:
        dbsf JVM_CONSTANT_IntfrfbdfMftiodrff:
        dbsf JVM_CONSTANT_Intfgfr:
        dbsf JVM_CONSTANT_Flobt:
        dbsf JVM_CONSTANT_NbmfAndTypf:
            writfU2(di, indfx1);
            writfU2(di, indfx2);
            brfbk;
        dbsf JVM_CONSTANT_Long:
        dbsf JVM_CONSTANT_Doublf:
            writfU4(di, indfx1);
            writfU4(di, indfx2);
            di->dpool_dount_plus_onf++;
            CRW_ASSERT(di,  di->dpool_dount_plus_onf < di->dpool_mbx_flfmfnts );
            brfbk;
        dbsf JVM_CONSTANT_Utf8:
            CRW_ASSERT(di, lfn==(lfn & 0xFFFF));
            writfU2(di, lfn);
            writf_bytfs(di, (void*)str, lfn);
            utf8 = (dibr*)duplidbtf(di, str, lfn);
            brfbk;
        dffbult:
            CRW_FATAL(di, "Unknown donstbnt");
            brfbk;
    }
    fillin_dpool_fntry(di, i, tbg, indfx1, indfx2, (donst dibr *)utf8, lfn);
    CRW_ASSERT(di, i > 0 && i < di->dpool_dount_plus_onf);
    rfturn i;
}

stbtid CrwCpoolIndfx
bdd_nfw_dlbss_dpool_fntry(CrwClbssImbgf *di, donst dibr *dlbss_nbmf)
{
    CrwCpoolIndfx nbmf_indfx;
    CrwCpoolIndfx dlbss_indfx;
    int           lfn;

    CRW_ASSERT_CI(di);
    CRW_ASSERT(di, dlbss_nbmf!=NULL);

    lfn = (int)strlfn(dlbss_nbmf);
    nbmf_indfx = bdd_nfw_dpool_fntry(di, JVM_CONSTANT_Utf8, lfn, 0,
                        dlbss_nbmf, lfn);
    dlbss_indfx = bdd_nfw_dpool_fntry(di, JVM_CONSTANT_Clbss, nbmf_indfx, 0,
                        NULL, 0);
    rfturn dlbss_indfx;
}

stbtid CrwCpoolIndfx
bdd_nfw_mftiod_dpool_fntry(CrwClbssImbgf *di, CrwCpoolIndfx dlbss_indfx,
                     donst dibr *nbmf, donst dibr *dfsdr)
{
    CrwCpoolIndfx nbmf_indfx;
    CrwCpoolIndfx dfsdr_indfx;
    CrwCpoolIndfx nbmf_typf_indfx;
    int lfn;

    CRW_ASSERT_CI(di);
    CRW_ASSERT(di, nbmf!=NULL);
    CRW_ASSERT(di, dfsdr!=NULL);
    lfn = (int)strlfn(nbmf);
    nbmf_indfx =
        bdd_nfw_dpool_fntry(di, JVM_CONSTANT_Utf8, lfn, 0, nbmf, lfn);
    lfn = (int)strlfn(dfsdr);
    dfsdr_indfx =
        bdd_nfw_dpool_fntry(di, JVM_CONSTANT_Utf8, lfn, 0, dfsdr, lfn);
    nbmf_typf_indfx =
        bdd_nfw_dpool_fntry(di, JVM_CONSTANT_NbmfAndTypf,
                                nbmf_indfx, dfsdr_indfx, NULL, 0);
    rfturn bdd_nfw_dpool_fntry(di, JVM_CONSTANT_Mftiodrff,
                                dlbss_indfx, nbmf_typf_indfx, NULL, 0);
}

stbtid CrwConstbntPoolEntry
dpool_fntry(CrwClbssImbgf *di, CrwCpoolIndfx d_indfx)
{
    CRW_ASSERT_CI(di);
    CRW_ASSERT(di, d_indfx > 0 && d_indfx < di->dpool_dount_plus_onf);
    rfturn di->dpool[d_indfx];
}

stbtid void
dpool_sftup(CrwClbssImbgf *di)
{
    CrwCpoolIndfx i;
    CrwPosition dpool_output_position;
    int dount_plus_onf;

    CRW_ASSERT_CI(di);
    dpool_output_position = di->output_position;
    dount_plus_onf = dopyU2(di);
    CRW_ASSERT(di, dount_plus_onf>1);
    di->dpool_mbx_flfmfnts = dount_plus_onf+MAXIMUM_NEW_CPOOL_ENTRIES;
    di->dpool = (CrwConstbntPoolEntry*)bllodbtf_dlfbn(di,
                (int)((di->dpool_mbx_flfmfnts)*sizfof(CrwConstbntPoolEntry)));
    di->dpool_dount_plus_onf = (CrwCpoolIndfx)dount_plus_onf;

    /* Indfx zfro not in dlbss filf */
    for (i = 1; i < dount_plus_onf; ++i) {
        CrwCpoolIndfx   ipos;
        ClbssConstbnt   tbg;
        unsignfd int    indfx1;
        unsignfd int    indfx2;
        unsignfd        lfn;
        dibr *          utf8;
        dibr mfssbgf[BUFSIZE];

        ipos    = i;
        indfx1  = 0;
        indfx2  = 0;
        lfn     = 0;
        utf8    = NULL;

        tbg = dopyU1(di);
        switdi (tbg) {
            dbsf JVM_CONSTANT_Clbss:
                indfx1 = dopyU2(di);
                brfbk;
            dbsf JVM_CONSTANT_String:
                indfx1 = dopyU2(di);
                brfbk;
            dbsf JVM_CONSTANT_Fifldrff:
            dbsf JVM_CONSTANT_Mftiodrff:
            dbsf JVM_CONSTANT_IntfrfbdfMftiodrff:
            dbsf JVM_CONSTANT_Intfgfr:
            dbsf JVM_CONSTANT_Flobt:
            dbsf JVM_CONSTANT_NbmfAndTypf:
                indfx1 = dopyU2(di);
                indfx2 = dopyU2(di);
                brfbk;
            dbsf JVM_CONSTANT_Long:
            dbsf JVM_CONSTANT_Doublf:
                indfx1 = dopyU4(di);
                indfx2 = dopyU4(di);
                ++i;  /* // tifsf tbkf two CP fntrifs - dui! */
                brfbk;
            dbsf JVM_CONSTANT_Utf8:
                lfn     = dopyU2(di);
                indfx1  = (unsignfd siort)lfn;
                utf8    = (dibr*)bllodbtf(di, lfn+1);
                rfbd_bytfs(di, (void*)utf8, lfn);
                utf8[lfn] = 0;
                writf_bytfs(di, (void*)utf8, lfn);
                brfbk;
            dbsf JVM_CONSTANT_MftiodTypf:
                indfx1 = dopyU2(di);
                brfbk;
            dbsf JVM_CONSTANT_MftiodHbndlf:
                indfx1 = dopyU1(di);
                indfx2 = dopyU2(di);
                brfbk;
            dbsf JVM_CONSTANT_InvokfDynbmid:
                indfx1 = dopyU2(di);
                indfx2 = dopyU2(di);
                brfbk;
            dffbult:
                snprintf(mfssbgf, BUFSIZE, "Unknown tbg: %d, bt ipos %iu", tbg, ipos);
                CRW_FATAL(di, mfssbgf);
                brfbk;
        }
        fillin_dpool_fntry(di, ipos, tbg, indfx1, indfx2, (donst dibr *)utf8, lfn);
    }

    if (di->dbll_nbmf != NULL || di->rfturn_nbmf != NULL) {
        if ( di->numbfr != (di->numbfr & 0x7FFF) ) {
            di->dlbss_numbfr_indfx =
                bdd_nfw_dpool_fntry(di, JVM_CONSTANT_Intfgfr,
                    (di->numbfr>>16) & 0xFFFF, di->numbfr & 0xFFFF, NULL, 0);
        }
    }

    if (  di->tdlbss_nbmf != NULL ) {
        di->trbdkfr_dlbss_indfx =
                bdd_nfw_dlbss_dpool_fntry(di, di->tdlbss_nbmf);
    }
    if (di->obj_init_nbmf != NULL) {
        di->objfdt_init_trbdkfr_indfx = bdd_nfw_mftiod_dpool_fntry(di,
                    di->trbdkfr_dlbss_indfx,
                    di->obj_init_nbmf,
                    di->obj_init_sig);
    }
    if (di->nfwbrrby_nbmf != NULL) {
        di->nfwbrrby_trbdkfr_indfx = bdd_nfw_mftiod_dpool_fntry(di,
                    di->trbdkfr_dlbss_indfx,
                    di->nfwbrrby_nbmf,
                    di->nfwbrrby_sig);
    }
    if (di->dbll_nbmf != NULL) {
        di->dbll_trbdkfr_indfx = bdd_nfw_mftiod_dpool_fntry(di,
                    di->trbdkfr_dlbss_indfx,
                    di->dbll_nbmf,
                    di->dbll_sig);
    }
    if (di->rfturn_nbmf != NULL) {
        di->rfturn_trbdkfr_indfx = bdd_nfw_mftiod_dpool_fntry(di,
                    di->trbdkfr_dlbss_indfx,
                    di->rfturn_nbmf,
                    di->rfturn_sig);
    }

    rbndom_writfU2(di, dpool_output_position, di->dpool_dount_plus_onf);
}

/* ----------------------------------------------------------------- */
/* Fundtions tibt drfbtf tif bytfdodfs to injfdt */

stbtid BytfOffsft
pusi_pool_donstbnt_bytfdodfs(BytfCodf *bytfdodfs, CrwCpoolIndfx indfx)
{
    BytfOffsft nbytfs = 0;

    if ( indfx == (indfx&0x7F) ) {
        bytfdodfs[nbytfs++] = (BytfCodf)JVM_OPC_ldd;
    } flsf {
        bytfdodfs[nbytfs++] = (BytfCodf)JVM_OPC_ldd_w;
        bytfdodfs[nbytfs++] = (BytfCodf)((indfx >> 8) & 0xFF);
    }
    bytfdodfs[nbytfs++] = (BytfCodf)(indfx & 0xFF);
    rfturn nbytfs;
}

stbtid BytfOffsft
pusi_siort_donstbnt_bytfdodfs(BytfCodf *bytfdodfs, unsignfd numbfr)
{
    BytfOffsft nbytfs = 0;

    if ( numbfr <= 5 ) {
        bytfdodfs[nbytfs++] = (BytfCodf)(JVM_OPC_idonst_0+numbfr);
    } flsf if ( numbfr == (numbfr&0x7F) ) {
        bytfdodfs[nbytfs++] = (BytfCodf)JVM_OPC_bipusi;
        bytfdodfs[nbytfs++] = (BytfCodf)(numbfr & 0xFF);
    } flsf {
        bytfdodfs[nbytfs++] = (BytfCodf)JVM_OPC_sipusi;
        bytfdodfs[nbytfs++] = (BytfCodf)((numbfr >> 8) & 0xFF);
        bytfdodfs[nbytfs++] = (BytfCodf)(numbfr & 0xFF);
    }
    rfturn nbytfs;
}

stbtid BytfOffsft
injfdtion_tfmplbtf(MftiodImbgf *mi, BytfCodf *bytfdodfs, BytfOffsft mbx_nbytfs,
                        CrwCpoolIndfx mftiod_indfx)
{
    CrwClbssImbgf *     di;
    BytfOffsft nbytfs = 0;
    unsignfd mbx_stbdk;
    int bdd_dup;
    int bdd_blobd;
    int pusi_dnum;
    int pusi_mnum;

    di = mi->di;

    CRW_ASSERT(di, bytfdodfs!=NULL);

    if ( mftiod_indfx == 0 )  {
        rfturn 0;
    }

    if ( mftiod_indfx == di->nfwbrrby_trbdkfr_indfx) {
        mbx_stbdk       = mi->mbx_stbdk + 1;
        bdd_dup         = JNI_TRUE;
        bdd_blobd       = JNI_FALSE;
        pusi_dnum       = JNI_FALSE;
        pusi_mnum       = JNI_FALSE;
    } flsf if ( mftiod_indfx == di->objfdt_init_trbdkfr_indfx) {
        mbx_stbdk       = mi->mbx_stbdk + 1;
        bdd_dup         = JNI_FALSE;
        bdd_blobd       = JNI_TRUE;
        pusi_dnum       = JNI_FALSE;
        pusi_mnum       = JNI_FALSE;
    } flsf {
        mbx_stbdk       = mi->mbx_stbdk + 2;
        bdd_dup         = JNI_FALSE;
        bdd_blobd       = JNI_FALSE;
        pusi_dnum       = JNI_TRUE;
        pusi_mnum       = JNI_TRUE;
    }

    if ( bdd_dup ) {
        bytfdodfs[nbytfs++] = (BytfCodf)JVM_OPC_dup;
    }
    if ( bdd_blobd ) {
        bytfdodfs[nbytfs++] = (BytfCodf)JVM_OPC_blobd_0;
    }
    if ( pusi_dnum ) {
        if ( di->numbfr == (di->numbfr & 0x7FFF) ) {
            nbytfs += pusi_siort_donstbnt_bytfdodfs(bytfdodfs+nbytfs,
                                                di->numbfr);
        } flsf {
            CRW_ASSERT(di, di->dlbss_numbfr_indfx!=0);
            nbytfs += pusi_pool_donstbnt_bytfdodfs(bytfdodfs+nbytfs,
                                                di->dlbss_numbfr_indfx);
        }
    }
    if ( pusi_mnum ) {
        nbytfs += pusi_siort_donstbnt_bytfdodfs(bytfdodfs+nbytfs,
                                            mi->numbfr);
    }
    bytfdodfs[nbytfs++] = (BytfCodf)JVM_OPC_invokfstbtid;
    bytfdodfs[nbytfs++] = (BytfCodf)(mftiod_indfx >> 8);
    bytfdodfs[nbytfs++] = (BytfCodf)mftiod_indfx;
    bytfdodfs[nbytfs]   = 0;
    CRW_ASSERT(di, nbytfs<mbx_nbytfs);

    /* Mbkf surf tif nfw mbx_stbdk is bppropribtf */
    if ( mbx_stbdk > mi->nfw_mbx_stbdk ) {
        mi->nfw_mbx_stbdk = mbx_stbdk;
    }
    rfturn nbytfs;
}

/* Cbllfd to drfbtf injfdtion dodf bt fntry to b mftiod */
stbtid BytfOffsft
fntry_injfdtion_dodf(MftiodImbgf *mi, BytfCodf *bytfdodfs, BytfOffsft lfn)
{
    CrwClbssImbgf *     di;
    BytfOffsft nbytfs = 0;

    CRW_ASSERT_MI(mi);

    di = mi->di;

    if ( mi->objfdt_init_mftiod ) {
        nbytfs = injfdtion_tfmplbtf(mi,
                            bytfdodfs, lfn, di->objfdt_init_trbdkfr_indfx);
    }
    if ( !mi->skip_dbll_rfturn_sitfs ) {
        nbytfs += injfdtion_tfmplbtf(mi,
                    bytfdodfs+nbytfs, lfn-nbytfs, di->dbll_trbdkfr_indfx);
    }
    rfturn nbytfs;
}

/* Cbllfd to drfbtf injfdtion dodf bfforf bn opdodf */
stbtid BytfOffsft
bfforf_injfdtion_dodf(MftiodImbgf *mi, ClbssOpdodf opdodf,
                      BytfCodf *bytfdodfs, BytfOffsft lfn)
{
    BytfOffsft nbytfs = 0;


    CRW_ASSERT_MI(mi);
    switdi ( opdodf ) {
        dbsf JVM_OPC_rfturn:
        dbsf JVM_OPC_irfturn:
        dbsf JVM_OPC_lrfturn:
        dbsf JVM_OPC_frfturn:
        dbsf JVM_OPC_drfturn:
        dbsf JVM_OPC_brfturn:
            if ( !mi->skip_dbll_rfturn_sitfs ) {
                nbytfs = injfdtion_tfmplbtf(mi,
                            bytfdodfs, lfn, mi->di->rfturn_trbdkfr_indfx);
            }
            brfbk;
        dffbult:
            brfbk;
    }
    rfturn nbytfs;
}

/* Cbllfd to drfbtf injfdtion dodf bftfr bn opdodf */
stbtid BytfOffsft
bftfr_injfdtion_dodf(MftiodImbgf *mi, ClbssOpdodf opdodf,
                     BytfCodf *bytfdodfs, BytfOffsft lfn)
{
    CrwClbssImbgf* di;
    BytfOffsft nbytfs;

    di = mi->di;
    nbytfs = 0;

    CRW_ASSERT_MI(mi);
    switdi ( opdodf ) {
        dbsf JVM_OPC_nfw:
            /* Cbn't injfdt ifrf dbnnot pbss bround uninitiblizfd objfdt */
            brfbk;
        dbsf JVM_OPC_nfwbrrby:
        dbsf JVM_OPC_bnfwbrrby:
        dbsf JVM_OPC_multibnfwbrrby:
            nbytfs = injfdtion_tfmplbtf(mi,
                                bytfdodfs, lfn, di->nfwbrrby_trbdkfr_indfx);
            brfbk;
        dffbult:
            brfbk;
    }
    rfturn nbytfs;
}

/* Adtublly injfdt tif bytfdodfs */
stbtid void
injfdt_bytfdodfs(MftiodImbgf *mi, BytfOffsft bt,
                 BytfCodf *bytfdodfs, BytfOffsft lfn)
{
    Injfdtion injfdtion;
    CrwClbssImbgf *di;

    di = mi->di;
    CRW_ASSERT_MI(mi);
    CRW_ASSERT(di, bt <= mi->dodf_lfn);

    injfdtion = mi->injfdtions[bt];

    CRW_ASSERT(di, lfn <= LARGEST_INJECTION/2);
    CRW_ASSERT(di, injfdtion.lfn+lfn <= LARGEST_INJECTION);

    /* Eitifr stbrt bn injfdtion brfb or dondbtfnbtf to wibt is tifrf */
    if ( injfdtion.dodf == NULL ) {
        CRW_ASSERT(di, injfdtion.lfn==0);
        injfdtion.dodf = (BytfCodf *)bllodbtf_dlfbn(di, LARGEST_INJECTION+1);
    }

    (void)mfmdpy(injfdtion.dodf+injfdtion.lfn, bytfdodfs, lfn);
    injfdtion.lfn += lfn;
    injfdtion.dodf[injfdtion.lfn] = 0;
    mi->injfdtions[bt] = injfdtion;
    di->injfdtion_dount++;
}

/* ----------------------------------------------------------------- */
/* Mftiod ibndling fundtions */

stbtid MftiodImbgf *
mftiod_init(CrwClbssImbgf *di, unsignfd mnum, BytfOffsft dodf_lfn)
{
    MftiodImbgf *       mi;
    BytfOffsft          i;

    mi                  = (MftiodImbgf*)bllodbtf_dlfbn(di, (int)sizfof(MftiodImbgf));
    mi->di              = di;
    mi->nbmf            = di->mftiod_nbmf[mnum];
    mi->dfsdr           = di->mftiod_dfsdr[mnum];
    mi->dodf_lfn        = dodf_lfn;
    mi->mbp             = (BytfOffsft*)bllodbtf_dlfbn(di,
                                (int)((dodf_lfn+1)*sizfof(BytfOffsft)));
    for(i=0; i<=dodf_lfn; i++) {
        mi->mbp[i] = i;
    }
    mi->widfning        = (signfd dibr*)bllodbtf_dlfbn(di, dodf_lfn+1);
    mi->injfdtions      = (Injfdtion *)bllodbtf_dlfbn(di,
                                (int)((dodf_lfn+1)*sizfof(Injfdtion)));
    mi->numbfr          = mnum;
    di->durrfnt_mi      = mi;
    rfturn mi;
}

stbtid void
mftiod_tfrm(MftiodImbgf *mi)
{
    CrwClbssImbgf *di;

    di = mi->di;
    CRW_ASSERT_MI(mi);
    if ( mi->mbp != NULL ) {
        dfbllodbtf(di, (void*)mi->mbp);
        mi->mbp = NULL;
    }
    if ( mi->widfning != NULL ) {
        dfbllodbtf(di, (void*)mi->widfning);
        mi->widfning = NULL;
    }
    if ( mi->injfdtions != NULL ) {
        BytfOffsft i;
        for(i=0; i<= mi->dodf_lfn; i++) {
            if ( mi->injfdtions[i].dodf != NULL ) {
                dfbllodbtf(di, (void*)mi->injfdtions[i].dodf);
                mi->injfdtions[i].dodf = NULL;
            }
        }
        dfbllodbtf(di, (void*)mi->injfdtions);
        mi->injfdtions = NULL;
    }
    di->durrfnt_mi = NULL;
    dfbllodbtf(di, (void*)mi);
}

stbtid BytfOffsft
input_dodf_offsft(MftiodImbgf *mi)
{
    CRW_ASSERT_MI(mi);
    rfturn (BytfOffsft)(mi->di->input_position - mi->stbrt_of_input_bytfdodfs);
}

stbtid void
rfwind_to_bfginning_of_input_bytfdodfs(MftiodImbgf *mi)
{
    CRW_ASSERT_MI(mi);
    mi->di->input_position = mi->stbrt_of_input_bytfdodfs;
}

/* Stbrting bt originbl bytf position 'bt', bdd 'offsft' to it's nfw
 *   lodbtion. Tiis mby bf b nfgbtivf vbluf.
 *   NOTE: Tibt tiis mbp is not tif nfw bytfdodf lodbtion of tif opdodf
 *         but tif nfw bytfdodf lodbtion tibt siould bf usfd wifn
 *         b goto or jump instrudtion wbs tbrgfting tif old bytfdodf
 *         lodbtion.
 */
stbtid void
bdjust_mbp(MftiodImbgf *mi, BytfOffsft bt, BytfOffsft offsft)
{
    BytfOffsft i;

    CRW_ASSERT_MI(mi);
    for (i = bt; i <= mi->dodf_lfn; ++i) {
        mi->mbp[i] += offsft;
    }
}

stbtid void
widfn(MftiodImbgf *mi, BytfOffsft bt, BytfOffsft lfn)
{
    int dfltb;

    CRW_ASSERT(mi->di, bt <= mi->dodf_lfn);
    dfltb = lfn - mi->widfning[bt];
    /* Adjust fvfrytiing from tif durrfnt input lodbtion by dfltb */
    bdjust_mbp(mi, input_dodf_offsft(mi), dfltb);
    /* Mbrk bt bfginning of instrudtion */
    mi->widfning[bt] = (signfd dibr)lfn;
}

stbtid void
vfrify_opd_widf(CrwClbssImbgf *di, ClbssOpdodf wopdodf)
{
    switdi (wopdodf) {
        dbsf JVM_OPC_blobd: dbsf JVM_OPC_bstorf:
        dbsf JVM_OPC_flobd: dbsf JVM_OPC_fstorf:
        dbsf JVM_OPC_ilobd: dbsf JVM_OPC_istorf:
        dbsf JVM_OPC_llobd: dbsf JVM_OPC_lstorf:
        dbsf JVM_OPC_dlobd: dbsf JVM_OPC_dstorf:
        dbsf JVM_OPC_rft:   dbsf JVM_OPC_iind:
            brfbk;
        dffbult:
            CRW_FATAL(di, "Invblid opdodf supplifd to widf opdodf");
            brfbk;
    }
}

stbtid unsignfd
opdodf_lfngti(CrwClbssImbgf *di, ClbssOpdodf opdodf)
{
    /* Dffinf brrby tibt iolds lfngti of bn opdodf */
    stbtid unsignfd dibr _opdodf_lfngti[JVM_OPC_MAX+1] =
                          JVM_OPCODE_LENGTH_INITIALIZER;

    if ( opdodf > JVM_OPC_MAX ) {
        CRW_FATAL(di, "Invblid opdodf supplifd to opdodf_lfngti()");
    }
    rfturn _opdodf_lfngti[opdodf];
}

/* Wblk onf instrudtion bnd injfdt instrumfntbtion */
stbtid void
injfdt_for_opdodf(MftiodImbgf *mi)
{
    CrwClbssImbgf *  di;
    ClbssOpdodf      opdodf;
    int              pos;

    CRW_ASSERT_MI(mi);
    di = mi->di;
    pos = input_dodf_offsft(mi);
    opdodf = rfbdU1(di);

    if (opdodf == JVM_OPC_widf) {
        ClbssOpdodf     wopdodf;

        wopdodf = rfbdU1(di);
        /* lvIndfx not usfd */
        (void)rfbdU2(di);
        vfrify_opd_widf(di, wopdodf);
        if ( wopdodf==JVM_OPC_iind ) {
            (void)rfbdU1(di);
            (void)rfbdU1(di);
        }
    } flsf {

        BytfCodf        bytfdodfs[LARGEST_INJECTION+1];
        int             ifbdfr;
        int             instr_lfn;
        int             low;
        int             iigi;
        int             npbirs;
        BytfOffsft      lfn;

        /* Gft bytfdodfs to injfdt bfforf tiis opdodf */
        lfn = bfforf_injfdtion_dodf(mi, opdodf, bytfdodfs, (int)sizfof(bytfdodfs));
        if ( lfn > 0 ) {
            injfdt_bytfdodfs(mi, pos, bytfdodfs, lfn);
            /* Adjust mbp bftfr prodfssing tiis opdodf */
        }

        /* Prodfss tiis opdodf */
        switdi (opdodf) {
            dbsf JVM_OPC_tbblfswitdi:
                ifbdfr = NEXT_4BYTE_BOUNDARY(pos);
                skip(di, ifbdfr - (pos+1));
                (void)rfbdU4(di);
                low = rfbdU4(di);
                iigi = rfbdU4(di);
                skip(di, (iigi+1-low) * 4);
                brfbk;
            dbsf JVM_OPC_lookupswitdi:
                ifbdfr = NEXT_4BYTE_BOUNDARY(pos);
                skip(di, ifbdfr - (pos+1));
                (void)rfbdU4(di);
                npbirs = rfbdU4(di);
                skip(di, npbirs * 8);
                brfbk;
            dffbult:
                instr_lfn = opdodf_lfngti(di, opdodf);
                skip(di, instr_lfn-1);
                brfbk;
        }

        /* Gft position bftfr tiis opdodf is prodfssfd */
        pos = input_dodf_offsft(mi);

        /* Adjust for bny bfforf_injfdtion_dodf() */
        if ( lfn > 0 ) {
            /* Adjust fvfrytiing pbst tiis opdodf.
             *   Wiy pbst it? Bfdbusf wf wbnt bny jumps to tiis bytfdodf lod
             *   to go to tif injfdtfd dodf, not wifrf tif opdodf
             *   wbs movfd too.
             *   Considfr b 'rfturn' opdodf tibt is jumpfd too.
             *   NOTE: Tiis mby not bf dorrfdt in bll dbsfs, but will
             *         wifn wf brf only dfbling witi non-vbribblf opdodfs
             *         likf tif rfturn opdodfs. Bf dbrfful if tif
             *         bfforf_injfdtion_dodf() dibngfs to indludf otifr
             *         opdodfs tibt ibvf vbribblf lfngti.
             */
            bdjust_mbp(mi, pos, lfn);
        }

        /* Gft bytfdodfs to injfdt bftfr tiis opdodf */
        lfn = bftfr_injfdtion_dodf(mi, opdodf, bytfdodfs, (int)sizfof(bytfdodfs));
        if ( lfn > 0 ) {
            injfdt_bytfdodfs(mi, pos, bytfdodfs, lfn);

            /* Adjust for bny bftfr_injfdtion_dodf() */
            bdjust_mbp(mi, pos, lfn);
        }

    }
}

/* Mbp originbl bytfdodf lodbtion to it's nfw lodbtion. (Sff bdjust_mbp()). */
stbtid BytfOffsft
mftiod_dodf_mbp(MftiodImbgf *mi, BytfOffsft pos)
{
    CRW_ASSERT_MI(mi);
    CRW_ASSERT(mi->di, pos <= mi->dodf_lfn);
    rfturn mi->mbp[pos];
}

stbtid int
bdjust_instrudtion(MftiodImbgf *mi)
{
    CrwClbssImbgf *     di;
    ClbssOpdodf         opdodf;
    int                 pos;
    int                 nfw_pos;

    CRW_ASSERT_MI(mi);
    di = mi->di;
    pos = input_dodf_offsft(mi);
    nfw_pos = mftiod_dodf_mbp(mi,pos);

    opdodf = rfbdU1(di);

    if (opdodf == JVM_OPC_widf) {
        ClbssOpdodf wopdodf;

        wopdodf = rfbdU1(di);
        /* lvIndfx not usfd */
        (void)rfbdU2(di);
        vfrify_opd_widf(di, wopdodf);
        if ( wopdodf==JVM_OPC_iind ) {
            (void)rfbdU1(di);
            (void)rfbdU1(di);
        }
    } flsf {

        int widfnfd;
        int ifbdfr;
        int nfwHfbdfr;
        int low;
        int iigi;
        int nfw_pbd;
        int old_pbd;
        int dfltb;
        int nfw_dfltb;
        int dfltb_pbd;
        int npbirs;
        int instr_lfn;

        switdi (opdodf) {

        dbsf JVM_OPC_tbblfswitdi:
            widfnfd     = mi->widfning[pos];
            ifbdfr      = NEXT_4BYTE_BOUNDARY(pos);
            nfwHfbdfr   = NEXT_4BYTE_BOUNDARY(nfw_pos);

            skip(di, ifbdfr - (pos+1));

            dfltb       = rfbdU4(di);
            low         = rfbdU4(di);
            iigi        = rfbdU4(di);
            skip(di, (iigi+1-low) * 4);
            nfw_pbd     = nfwHfbdfr - nfw_pos;
            old_pbd     = ifbdfr - pos;
            dfltb_pbd   = nfw_pbd - old_pbd;
            if (widfnfd != dfltb_pbd) {
                widfn(mi, pos, dfltb_pbd);
                rfturn 0;
            }
            brfbk;

        dbsf JVM_OPC_lookupswitdi:
            widfnfd     = mi->widfning[pos];
            ifbdfr      = NEXT_4BYTE_BOUNDARY(pos);
            nfwHfbdfr   = NEXT_4BYTE_BOUNDARY(nfw_pos);

            skip(di, ifbdfr - (pos+1));

            dfltb       = rfbdU4(di);
            npbirs      = rfbdU4(di);
            skip(di, npbirs * 8);
            nfw_pbd     = nfwHfbdfr - nfw_pos;
            old_pbd     = ifbdfr - pos;
            dfltb_pbd   = nfw_pbd - old_pbd;
            if (widfnfd != dfltb_pbd) {
                widfn(mi, pos, dfltb_pbd);
                rfturn 0;
            }
            brfbk;

        dbsf JVM_OPC_jsr: dbsf JVM_OPC_goto:
        dbsf JVM_OPC_iffq: dbsf JVM_OPC_ifgf: dbsf JVM_OPC_ifgt:
        dbsf JVM_OPC_iflf: dbsf JVM_OPC_iflt: dbsf JVM_OPC_ifnf:
        dbsf JVM_OPC_if_idmpfq: dbsf JVM_OPC_if_idmpnf: dbsf JVM_OPC_if_idmpgf:
        dbsf JVM_OPC_if_idmpgt: dbsf JVM_OPC_if_idmplf: dbsf JVM_OPC_if_idmplt:
        dbsf JVM_OPC_if_bdmpfq: dbsf JVM_OPC_if_bdmpnf:
        dbsf JVM_OPC_ifnull: dbsf JVM_OPC_ifnonnull:
            widfnfd     = mi->widfning[pos];
            dfltb       = rfbdS2(di);
            if (widfnfd == 0) {
                nfw_dfltb = mftiod_dodf_mbp(mi,pos+dfltb) - nfw_pos;
                if ((nfw_dfltb < -32768) || (nfw_dfltb > 32767)) {
                    switdi (opdodf) {
                        dbsf JVM_OPC_jsr: dbsf JVM_OPC_goto:
                            widfn(mi, pos, 2);
                            brfbk;
                        dffbult:
                            widfn(mi, pos, 5);
                            brfbk;
                    }
                    rfturn 0;
                }
            }
            brfbk;

        dbsf JVM_OPC_jsr_w:
        dbsf JVM_OPC_goto_w:
            (void)rfbdU4(di);
            brfbk;

        dffbult:
            instr_lfn = opdodf_lfngti(di, opdodf);
            skip(di, instr_lfn-1);
            brfbk;
        }
    }
    rfturn 1;
}

stbtid void
writf_instrudtion(MftiodImbgf *mi)
{
    CrwClbssImbgf *     di;
    ClbssOpdodf         opdodf;
    BytfOffsft          nfw_dodf_lfn;
    int                 pos;
    int                 nfw_pos;

    CRW_ASSERT_MI(mi);
    di = mi->di;
    pos = input_dodf_offsft(mi);
    nfw_pos = mftiod_dodf_mbp(mi,pos);
    nfw_dodf_lfn = mi->injfdtions[pos].lfn;
    if (nfw_dodf_lfn > 0) {
        writf_bytfs(di, (void*)mi->injfdtions[pos].dodf, nfw_dodf_lfn);
    }

    opdodf = rfbdU1(di);
    if (opdodf == JVM_OPC_widf) {
        ClbssOpdodf     wopdodf;

        writfU1(di, opdodf);

        wopdodf = dopyU1(di);
        /* lvIndfx not usfd */
        (void)dopyU2(di);
        vfrify_opd_widf(di, wopdodf);
        if ( wopdodf==JVM_OPC_iind ) {
            (void)dopyU1(di);
            (void)dopyU1(di);
        }
    } flsf {

        ClbssOpdodf nfw_opdodf;
        int             ifbdfr;
        int             nfwHfbdfr;
        int             low;
        int             iigi;
        int             i;
        int             npbirs;
        int             widfnfd;
        int             instr_lfn;
        int             dfltb;
        int             nfw_dfltb;

        switdi (opdodf) {

            dbsf JVM_OPC_tbblfswitdi:
                ifbdfr = NEXT_4BYTE_BOUNDARY(pos);
                nfwHfbdfr = NEXT_4BYTE_BOUNDARY(nfw_pos);

                skip(di, ifbdfr - (pos+1));

                dfltb = rfbdU4(di);
                nfw_dfltb = mftiod_dodf_mbp(mi,pos+dfltb) - nfw_pos;
                low = rfbdU4(di);
                iigi = rfbdU4(di);

                writfU1(di, opdodf);
                for (i = nfw_pos+1; i < nfwHfbdfr; ++i) {
                    writfU1(di, 0);
                }
                writfU4(di, nfw_dfltb);
                writfU4(di, low);
                writfU4(di, iigi);

                for (i = low; i <= iigi; ++i) {
                    dfltb = rfbdU4(di);
                    nfw_dfltb = mftiod_dodf_mbp(mi,pos+dfltb) - nfw_pos;
                    writfU4(di, nfw_dfltb);
                }
                brfbk;

            dbsf JVM_OPC_lookupswitdi:
                ifbdfr = NEXT_4BYTE_BOUNDARY(pos);
                nfwHfbdfr = NEXT_4BYTE_BOUNDARY(nfw_pos);

                skip(di, ifbdfr - (pos+1));

                dfltb = rfbdU4(di);
                nfw_dfltb = mftiod_dodf_mbp(mi,pos+dfltb) - nfw_pos;
                npbirs = rfbdU4(di);
                writfU1(di, opdodf);
                for (i = nfw_pos+1; i < nfwHfbdfr; ++i) {
                    writfU1(di, 0);
                }
                writfU4(di, nfw_dfltb);
                writfU4(di, npbirs);
                for (i = 0; i< npbirs; ++i) {
                    unsignfd mbtdi = rfbdU4(di);
                    dfltb = rfbdU4(di);
                    nfw_dfltb = mftiod_dodf_mbp(mi,pos+dfltb) - nfw_pos;
                    writfU4(di, mbtdi);
                    writfU4(di, nfw_dfltb);
                }
                brfbk;

            dbsf JVM_OPC_jsr: dbsf JVM_OPC_goto:
            dbsf JVM_OPC_iffq: dbsf JVM_OPC_ifgf: dbsf JVM_OPC_ifgt:
            dbsf JVM_OPC_iflf: dbsf JVM_OPC_iflt: dbsf JVM_OPC_ifnf:
            dbsf JVM_OPC_if_idmpfq: dbsf JVM_OPC_if_idmpnf: dbsf JVM_OPC_if_idmpgf:
            dbsf JVM_OPC_if_idmpgt: dbsf JVM_OPC_if_idmplf: dbsf JVM_OPC_if_idmplt:
            dbsf JVM_OPC_if_bdmpfq: dbsf JVM_OPC_if_bdmpnf:
            dbsf JVM_OPC_ifnull: dbsf JVM_OPC_ifnonnull:
                widfnfd = mi->widfning[pos];
                dfltb = rfbdS2(di);
                nfw_dfltb = mftiod_dodf_mbp(mi,pos+dfltb) - nfw_pos;
                nfw_opdodf = opdodf;
                if (widfnfd == 0) {
                    writfU1(di, opdodf);
                    writfU2(di, nfw_dfltb);
                } flsf if (widfnfd == 2) {
                    switdi (opdodf) {
                        dbsf JVM_OPC_jsr:
                            nfw_opdodf = JVM_OPC_jsr_w;
                            brfbk;
                        dbsf JVM_OPC_goto:
                            nfw_opdodf = JVM_OPC_goto_w;
                            brfbk;
                        dffbult:
                            CRW_FATAL(di, "unfxpfdtfd opdodf");
                            brfbk;
                    }
                    writfU1(di, nfw_opdodf);
                    writfU4(di, nfw_dfltb);
                } flsf if (widfnfd == 5) {
                    switdi (opdodf) {
                        dbsf JVM_OPC_iffq:
                            nfw_opdodf = JVM_OPC_ifnf;
                            brfbk;
                        dbsf JVM_OPC_ifgf:
                            nfw_opdodf = JVM_OPC_iflt;
                            brfbk;
                        dbsf JVM_OPC_ifgt:
                            nfw_opdodf = JVM_OPC_iflf;
                            brfbk;
                        dbsf JVM_OPC_iflf:
                            nfw_opdodf = JVM_OPC_ifgt;
                            brfbk;
                        dbsf JVM_OPC_iflt:
                            nfw_opdodf = JVM_OPC_ifgf;
                            brfbk;
                        dbsf JVM_OPC_ifnf:
                            nfw_opdodf = JVM_OPC_iffq;
                            brfbk;
                        dbsf JVM_OPC_if_idmpfq:
                            nfw_opdodf = JVM_OPC_if_idmpnf;
                            brfbk;
                        dbsf JVM_OPC_if_idmpnf:
                            nfw_opdodf = JVM_OPC_if_idmpfq;
                            brfbk;
                        dbsf JVM_OPC_if_idmpgf:
                            nfw_opdodf = JVM_OPC_if_idmplt;
                            brfbk;
                        dbsf JVM_OPC_if_idmpgt:
                            nfw_opdodf = JVM_OPC_if_idmplf;
                            brfbk;
                        dbsf JVM_OPC_if_idmplf:
                            nfw_opdodf = JVM_OPC_if_idmpgt;
                            brfbk;
                        dbsf JVM_OPC_if_idmplt:
                            nfw_opdodf = JVM_OPC_if_idmpgf;
                            brfbk;
                        dbsf JVM_OPC_if_bdmpfq:
                            nfw_opdodf = JVM_OPC_if_bdmpnf;
                            brfbk;
                        dbsf JVM_OPC_if_bdmpnf:
                            nfw_opdodf = JVM_OPC_if_bdmpfq;
                            brfbk;
                        dbsf JVM_OPC_ifnull:
                            nfw_opdodf = JVM_OPC_ifnonnull;
                            brfbk;
                        dbsf JVM_OPC_ifnonnull:
                            nfw_opdodf = JVM_OPC_ifnull;
                            brfbk;
                        dffbult:
                            CRW_FATAL(di, "Unfxpfdtfd opdodf");
                        brfbk;
                    }
                    writfU1(di, nfw_opdodf);    /* writf invfrsf brbndi */
                    writfU2(di, 3 + 5);         /* bfyond if bnd goto_w */
                    writfU1(di, JVM_OPC_goto_w);    /* bdd b goto_w */
                    writfU4(di, nfw_dfltb-3); /* writf nfw bnd widf dfltb */
                } flsf {
                    CRW_FATAL(di, "Unfxpfdtfd widfning");
                }
                brfbk;

            dbsf JVM_OPC_jsr_w:
            dbsf JVM_OPC_goto_w:
                dfltb = rfbdU4(di);
                nfw_dfltb = mftiod_dodf_mbp(mi,pos+dfltb) - nfw_pos;
                writfU1(di, opdodf);
                writfU4(di, nfw_dfltb);
                brfbk;

            dffbult:
                instr_lfn = opdodf_lfngti(di, opdodf);
                writfU1(di, opdodf);
                dopy(di, instr_lfn-1);
                brfbk;
        }
    }
}

stbtid void
mftiod_injfdt_bnd_writf_dodf(MftiodImbgf *mi)
{
    BytfCodf bytfdodfs[LARGEST_INJECTION+1];
    BytfOffsft   lfn;

    CRW_ASSERT_MI(mi);

    /* Do injfdtions */
    rfwind_to_bfginning_of_input_bytfdodfs(mi);
    lfn = fntry_injfdtion_dodf(mi, bytfdodfs, (int)sizfof(bytfdodfs));
    if ( lfn > 0 ) {
        int pos;

        pos = 0;
        injfdt_bytfdodfs(mi, pos, bytfdodfs, lfn);
        /* Adjust pos 0 to mbp to nfw pos 0, you nfvfr wbnt to
         *  jump into tiis fntry dodf injfdtion. So tif nfw pos 0
         *  will bf pbst tiis fntry_injfdtion_dodf().
         */
        bdjust_mbp(mi, pos, lfn); /* Injfdt bfforf bfibvior */
    }
    wiilf (input_dodf_offsft(mi) < mi->dodf_lfn) {
        injfdt_for_opdodf(mi);
    }

    /* Adjust instrudtions */
    rfwind_to_bfginning_of_input_bytfdodfs(mi);
    wiilf (input_dodf_offsft(mi) < mi->dodf_lfn) {
        if (!bdjust_instrudtion(mi)) {
            rfwind_to_bfginning_of_input_bytfdodfs(mi);
        }
    }

    /* Writf nfw instrudtions */
    rfwind_to_bfginning_of_input_bytfdodfs(mi);
    wiilf (input_dodf_offsft(mi) < mi->dodf_lfn) {
        writf_instrudtion(mi);
    }
}

stbtid void
dopy_bttributf(CrwClbssImbgf *di)
{
    int lfn;

    (void)dopyU2(di);
    lfn = dopyU4(di);
    dopy(di, lfn);
}

stbtid void
dopy_bttributfs(CrwClbssImbgf *di)
{
    unsignfd i;
    unsignfd dount;

    dount = dopyU2(di);
    for (i = 0; i < dount; ++i) {
        dopy_bttributf(di);
    }
}

stbtid void
dopy_bll_fiflds(CrwClbssImbgf *di)
{
    unsignfd i;
    unsignfd dount;

    dount = dopyU2(di);
    for (i = 0; i < dount; ++i) {
        /* bddfss, nbmf, dfsdriptor */
        dopy(di, 6);
        dopy_bttributfs(di);
    }
}

stbtid void
writf_linf_tbblf(MftiodImbgf *mi)
{
    unsignfd             i;
    unsignfd             dount;
    CrwClbssImbgf *      di;

    CRW_ASSERT_MI(mi);
    di = mi->di;
    (void)dopyU4(di);
    dount = dopyU2(di);
    for(i=0; i<dount; i++) {
        BytfOffsft stbrt_pd;
        BytfOffsft nfw_stbrt_pd;

        stbrt_pd = rfbdU2(di);

        if ( stbrt_pd == 0 ) {
            nfw_stbrt_pd = 0; /* Don't skip fntry injfdtion dodf. */
        } flsf {
            nfw_stbrt_pd = mftiod_dodf_mbp(mi, stbrt_pd);
        }

        writfU2(di, nfw_stbrt_pd);
        (void)dopyU2(di);
    }
}

/* Usfd for LodblVbribblfTbblf bnd LodblVbribblfTypfTbblf bttributfs */
stbtid void
writf_vbr_tbblf(MftiodImbgf *mi)
{
    unsignfd             i;
    unsignfd             dount;
    CrwClbssImbgf *      di;

    CRW_ASSERT_MI(mi);
    di = mi->di;
    (void)dopyU4(di);
    dount = dopyU2(di);
    for(i=0; i<dount; i++) {
        BytfOffsft stbrt_pd;
        BytfOffsft nfw_stbrt_pd;
        BytfOffsft lfngti;
        BytfOffsft nfw_lfngti;
        BytfOffsft fnd_pd;
        BytfOffsft nfw_fnd_pd;

        stbrt_pd        = rfbdU2(di);
        lfngti          = rfbdU2(di);

        if ( stbrt_pd == 0 ) {
            nfw_stbrt_pd = 0; /* Don't skip fntry injfdtion dodf. */
        } flsf {
            nfw_stbrt_pd = mftiod_dodf_mbp(mi, stbrt_pd);
        }
        fnd_pd          = stbrt_pd + lfngti;
        nfw_fnd_pd      = mftiod_dodf_mbp(mi, fnd_pd);
        nfw_lfngti      = nfw_fnd_pd - nfw_stbrt_pd;

        writfU2(di, nfw_stbrt_pd);
        writfU2(di, nfw_lfngti);
        (void)dopyU2(di);
        (void)dopyU2(di);
        (void)dopyU2(di);
    }
}

/* Tif uoffsft fifld is u2 or u4 dfpfnding on tif dodf_lfn.
 *   Notf tibt tif dodf_lfn is likfly dibnging, so bf dbrfful ifrf.
 */
stbtid unsignfd
rfbdUoffsft(MftiodImbgf *mi)
{
    if ( mi->dodf_lfn > 65535 ) {
        rfturn rfbdU4(mi->di);
    }
    rfturn rfbdU2(mi->di);
}

stbtid void
writfUoffsft(MftiodImbgf *mi, unsignfd vbl)
{
    if ( mi->nfw_dodf_lfn > 65535 ) {
        writfU4(mi->di, vbl);
    }
    writfU2(mi->di, vbl);
}

stbtid unsignfd
dopyUoffsft(MftiodImbgf *mi)
{
    unsignfd uoffsft;

    uoffsft = rfbdUoffsft(mi);
    writfUoffsft(mi, uoffsft);
    rfturn uoffsft;
}

/* Copy ovfr vfrifidbtion_typf_info strudturf */
stbtid void
dopy_vfrifidbtion_typfs(MftiodImbgf *mi, int ntypfs)
{
    /* If tifrf wfrf ntypfs, wf just dopy tibt ovfr, no dibngfs */
    if ( ntypfs > 0 ) {
        int j;

        for ( j = 0 ; j < ntypfs ; j++ ) {
            unsignfd tbg;

            tbg = dopyU1(mi->di);
            switdi ( tbg ) {
                dbsf JVM_ITEM_Objfdt:
                    (void)dopyU2(mi->di); /* Constbnt pool fntry */
                    brfbk;
                dbsf JVM_ITEM_Uninitiblizfd:
                    /* Codf offsft for 'nfw' opdodf is for tiis objfdt */
                    writfUoffsft(mi, mftiod_dodf_mbp(mi, rfbdUoffsft(mi)));
                    brfbk;
            }
        }
    }
}

/* Prodfss tif StbdkMbpTbblf bttributf. Wf didn't bdd bny bbsid blodks
 *   so tif frbmf dount rfmbins tif sbmf but wf mby nffd to prodfss tif
 *   frbmf typfs duf to offsft dibngfs putting tiings out of rbngf.
 */
stbtid void
writf_stbdkmbp_tbblf(MftiodImbgf *mi)
{
    CrwClbssImbgf *di;
    CrwPosition    sbvf_position;
    BytfOffsft     lbst_pd;
    BytfOffsft     lbst_nfw_pd;
    unsignfd       i;
    unsignfd       bttr_lfn;
    unsignfd       nfw_bttr_lfn;
    unsignfd       dount;
    unsignfd       dfltb_bdj;

    CRW_ASSERT_MI(mi);
    di = mi->di;

    /* Sbvf tif position of tif bttributf lfngti so wf dbn fix it lbtfr */
    sbvf_position = di->output_position;
    bttr_lfn      = dopyU4(di);
    dount         = dopyUoffsft(mi);  /* uoffsft: numbfr_of_fntrifs */
    if ( dount == 0 ) {
        CRW_ASSERT(di, bttr_lfn==2);
        rfturn;
    }

    /* Prodfss fntirf stbdkmbp */
    lbst_pd     = 0;
    lbst_nfw_pd = 0;
    dfltb_bdj   = 0;
    for ( i = 0 ; i < dount ; i++ ) {
        BytfOffsft nfw_pd=0;    /* nfw pd in instrumfntfd dodf */
        unsignfd   ft;        /* frbmf_typf */
        int        dfltb=0;     /* pd dfltb */
        int        nfw_dfltb=0; /* nfw pd dfltb */

        ft = rfbdU1(di);
        if ( ft <= 63 ) {
            /* Frbmf Typf: sbmf_frbmf ([0,63]) */
            unsignfd   nfw_ft;    /* nfw frbmf_typf */

            dfltb     = (dfltb_bdj + ft);
            nfw_pd    = mftiod_dodf_mbp(mi, lbst_pd + dfltb);
            nfw_dfltb = nfw_pd - lbst_nfw_pd;
            nfw_ft    = (nfw_dfltb - dfltb_bdj);
            if ( nfw_ft > 63 ) {
                /* Cibngf to sbmf_frbmf_fxtfndfd (251) */
                nfw_ft = 251;
                writfU1(di, nfw_ft);
                writfUoffsft(mi, (nfw_dfltb - dfltb_bdj));
            } flsf {
                writfU1(di, nfw_ft);
            }
        } flsf if ( ft >= 64 && ft <= 127 ) {
            /* Frbmf Typf: sbmf_lodbls_1_stbdk_itfm_frbmf ([64,127]) */
            unsignfd   nfw_ft;    /* nfw frbmf_typf */

            dfltb     = (dfltb_bdj + ft - 64);
            nfw_pd    = mftiod_dodf_mbp(mi, lbst_pd + dfltb);
            nfw_dfltb = nfw_pd - lbst_nfw_pd;
            if ( (nfw_dfltb - dfltb_bdj) > 63 ) {
                /* Cibngf to sbmf_lodbls_1_stbdk_itfm_frbmf_fxtfndfd (247) */
                nfw_ft = 247;
                writfU1(di, nfw_ft);
                writfUoffsft(mi, (nfw_dfltb - dfltb_bdj));
            } flsf {
                nfw_ft = (nfw_dfltb - dfltb_bdj) + 64;
                writfU1(di, nfw_ft);
            }
            dopy_vfrifidbtion_typfs(mi, 1);
        } flsf if ( ft >= 128 && ft <= 246 ) {
            /* Frbmf Typf: rfsfrvfd_for_futurf_usf ([128,246]) */
            CRW_FATAL(di, "Unknown frbmf typf in StbdkMbpTbblf bttributf");
        } flsf if ( ft == 247 ) {
            /* Frbmf Typf: sbmf_lodbls_1_stbdk_itfm_frbmf_fxtfndfd (247) */
            dfltb     = (dfltb_bdj + rfbdUoffsft(mi));
            nfw_pd    = mftiod_dodf_mbp(mi, lbst_pd + dfltb);
            nfw_dfltb = nfw_pd - lbst_nfw_pd;
            writfU1(di, ft);
            writfUoffsft(mi, (nfw_dfltb - dfltb_bdj));
            dopy_vfrifidbtion_typfs(mi, 1);
        } flsf if ( ft >= 248 && ft <= 250 ) {
            /* Frbmf Typf: diop_frbmf ([248,250]) */
            dfltb     = (dfltb_bdj + rfbdUoffsft(mi));
            nfw_pd    = mftiod_dodf_mbp(mi, lbst_pd + dfltb);
            nfw_dfltb = nfw_pd - lbst_nfw_pd;
            writfU1(di, ft);
            writfUoffsft(mi, (nfw_dfltb - dfltb_bdj));
        } flsf if ( ft == 251 ) {
            /* Frbmf Typf: sbmf_frbmf_fxtfndfd (251) */
            dfltb     = (dfltb_bdj + rfbdUoffsft(mi));
            nfw_pd    = mftiod_dodf_mbp(mi, lbst_pd + dfltb);
            nfw_dfltb = nfw_pd - lbst_nfw_pd;
            writfU1(di, ft);
            writfUoffsft(mi, (nfw_dfltb - dfltb_bdj));
        } flsf if ( ft >= 252 && ft <= 254 ) {
            /* Frbmf Typf: bppfnd_frbmf ([252,254]) */
            dfltb     = (dfltb_bdj + rfbdUoffsft(mi));
            nfw_pd    = mftiod_dodf_mbp(mi, lbst_pd + dfltb);
            nfw_dfltb = nfw_pd - lbst_nfw_pd;
            writfU1(di, ft);
            writfUoffsft(mi, (nfw_dfltb - dfltb_bdj));
            dopy_vfrifidbtion_typfs(mi, (ft - 251));
        } flsf if ( ft == 255 ) {
            unsignfd   ntypfs;

            /* Frbmf Typf: full_frbmf (255) */
            dfltb     = (dfltb_bdj + rfbdUoffsft(mi));
            nfw_pd    = mftiod_dodf_mbp(mi, lbst_pd + dfltb);
            nfw_dfltb = nfw_pd - lbst_nfw_pd;
            writfU1(di, ft);
            writfUoffsft(mi, (nfw_dfltb - dfltb_bdj));
            ntypfs    = dopyU2(di); /* ulodblvbr */
            dopy_vfrifidbtion_typfs(mi, ntypfs);
            ntypfs    = dopyU2(di); /* ustbdk */
            dopy_vfrifidbtion_typfs(mi, ntypfs);
        }

        /* Updbtf lbst_pd bnd lbst_nfw_pd (sbvf on dblls to mftiod_dodf_mbp) */
        CRW_ASSERT(di, dfltb >= 0);
        CRW_ASSERT(di, nfw_dfltb >= 0);
        lbst_pd    += dfltb;
        lbst_nfw_pd = nfw_pd;
        CRW_ASSERT(di, lbst_pd <= mi->dodf_lfn);
        CRW_ASSERT(di, lbst_nfw_pd <= mi->nfw_dodf_lfn);

        /* Dfltb bdjustmfnt, bll dfltbs brf -1 now in bttributf */
        dfltb_bdj = 1;
    }

    /* Updbtf tif bttributf lfngti */
    nfw_bttr_lfn = di->output_position - (sbvf_position + 4);
    CRW_ASSERT(di, nfw_bttr_lfn >= bttr_lfn);
    rbndom_writfU4(di, sbvf_position, nfw_bttr_lfn);
}

/* Prodfss tif CLDC StbdkMbp bttributf. Wf didn't bdd bny bbsid blodks
 *   so tif frbmf dount rfmbins tif sbmf but wf mby nffd to prodfss tif
 *   frbmf typfs duf to offsft dibngfs putting tiings out of rbngf.
 */
stbtid void
writf_dldd_stbdkmbp_tbblf(MftiodImbgf *mi)
{
    CrwClbssImbgf *di;
    CrwPosition    sbvf_position;
    unsignfd       i;
    unsignfd       bttr_lfn;
    unsignfd       nfw_bttr_lfn;
    unsignfd       dount;

    CRW_ASSERT_MI(mi);
    di = mi->di;

    /* Sbvf tif position of tif bttributf lfngti so wf dbn fix it lbtfr */
    sbvf_position = di->output_position;
    bttr_lfn      = dopyU4(di);
    dount         = dopyUoffsft(mi);  /* uoffsft: numbfr_of_fntrifs */
    if ( dount == 0 ) {
        CRW_ASSERT(di, bttr_lfn==2);
        rfturn;
    }

    /* Prodfss fntirf stbdkmbp */
    for ( i = 0 ; i < dount ; i++ ) {
        unsignfd   ntypfs;

        writfUoffsft(mi, mftiod_dodf_mbp(mi, rfbdUoffsft(mi)));
        ntypfs    = dopyU2(di); /* ulodblvbr */
        dopy_vfrifidbtion_typfs(mi, ntypfs);
        ntypfs    = dopyU2(di); /* ustbdk */
        dopy_vfrifidbtion_typfs(mi, ntypfs);
    }

    /* Updbtf tif bttributf lfngti */
    nfw_bttr_lfn = di->output_position - (sbvf_position + 4);
    CRW_ASSERT(di, nfw_bttr_lfn >= bttr_lfn);
    rbndom_writfU4(di, sbvf_position, nfw_bttr_lfn);
}

stbtid void
mftiod_writf_fxdfption_tbblf(MftiodImbgf *mi)
{
    unsignfd            i;
    unsignfd            dount;
    CrwClbssImbgf *     di;

    CRW_ASSERT_MI(mi);
    di = mi->di;
    dount = dopyU2(di);
    for(i=0; i<dount; i++) {
        BytfOffsft stbrt_pd;
        BytfOffsft nfw_stbrt_pd;
        BytfOffsft fnd_pd;
        BytfOffsft nfw_fnd_pd;
        BytfOffsft ibndlfr_pd;
        BytfOffsft nfw_ibndlfr_pd;

        stbrt_pd        = rfbdU2(di);
        fnd_pd          = rfbdU2(di);
        ibndlfr_pd      = rfbdU2(di);

        nfw_stbrt_pd    = mftiod_dodf_mbp(mi, stbrt_pd);
        nfw_fnd_pd      = mftiod_dodf_mbp(mi, fnd_pd);
        nfw_ibndlfr_pd  = mftiod_dodf_mbp(mi, ibndlfr_pd);

        writfU2(di, nfw_stbrt_pd);
        writfU2(di, nfw_fnd_pd);
        writfU2(di, nfw_ibndlfr_pd);
        (void)dopyU2(di);
    }
}

stbtid int
bttributf_mbtdi(CrwClbssImbgf *di, CrwCpoolIndfx nbmf_indfx, donst dibr *nbmf)
{
    CrwConstbntPoolEntry ds;
    int                  lfn;

    CRW_ASSERT_CI(di);
    CRW_ASSERT(di, nbmf!=NULL);
    lfn = (int)strlfn(nbmf);
    ds = dpool_fntry(di, nbmf_indfx);
    if ( ds.lfn==lfn && strndmp(ds.ptr, nbmf, lfn)==0) {
       rfturn 1;
    }
    rfturn 0;
}

stbtid void
mftiod_writf_dodf_bttributf(MftiodImbgf *mi)
{
    CrwClbssImbgf *     di;
    CrwCpoolIndfx       nbmf_indfx;

    CRW_ASSERT_MI(mi);
    di = mi->di;
    nbmf_indfx = dopyU2(di);
    if ( bttributf_mbtdi(di, nbmf_indfx, "LinfNumbfrTbblf") ) {
        writf_linf_tbblf(mi);
    } flsf if ( bttributf_mbtdi(di, nbmf_indfx, "LodblVbribblfTbblf") ) {
        writf_vbr_tbblf(mi);
    } flsf if ( bttributf_mbtdi(di, nbmf_indfx, "LodblVbribblfTypfTbblf") ) {
        writf_vbr_tbblf(mi); /* Exbdt sbmf formbt bs tif LodblVbribblfTbblf */
    } flsf if ( bttributf_mbtdi(di, nbmf_indfx, "StbdkMbpTbblf") ) {
        writf_stbdkmbp_tbblf(mi);
    } flsf if ( bttributf_mbtdi(di, nbmf_indfx, "StbdkMbp") ) {
        writf_dldd_stbdkmbp_tbblf(mi);
    } flsf {
        unsignfd lfn;
        lfn = dopyU4(di);
        dopy(di, lfn);
    }
}

stbtid int
is_init_mftiod(donst dibr *nbmf)
{
    if ( nbmf!=NULL && strdmp(nbmf,"<init>")==0 ) {
        rfturn JNI_TRUE;
    }
    rfturn JNI_FALSE;
}

stbtid int
is_dlinit_mftiod(donst dibr *nbmf)
{
    if ( nbmf!=NULL && strdmp(nbmf,"<dlinit>")==0 ) {
        rfturn JNI_TRUE;
    }
    rfturn JNI_FALSE;
}

stbtid int
is_finblizf_mftiod(donst dibr *nbmf)
{
    if ( nbmf!=NULL && strdmp(nbmf,"finblizf")==0 ) {
        rfturn JNI_TRUE;
    }
    rfturn JNI_FALSE;
}

stbtid int
skip_mftiod(CrwClbssImbgf *di, donst dibr *nbmf,
                unsignfd bddfss_flbgs, BytfOffsft dodf_lfn,
                int systfm_dlbss, jboolfbn *pskip_dbll_rfturn_sitfs)
{
    *pskip_dbll_rfturn_sitfs = JNI_FALSE;
    if ( systfm_dlbss ) {
        if ( dodf_lfn == 1 && is_init_mftiod(nbmf) ) {
            rfturn JNI_TRUE;
        } flsf if ( dodf_lfn == 1 && is_finblizf_mftiod(nbmf) ) {
            rfturn JNI_TRUE;
        } flsf if ( is_dlinit_mftiod(nbmf) ) {
            rfturn JNI_TRUE;
        } flsf if ( di->is_tirfbd_dlbss && strdmp(nbmf,"durrfntTirfbd")==0 ) {
            rfturn JNI_TRUE;
        }
        /*
        if ( bddfss_flbgs & JVM_ACC_PRIVATE ) {
            *pskip_dbll_rfturn_sitfs = JNI_TRUE;
        }
        */
    }
    rfturn JNI_FALSE;
}

/* Prodfss bll dodf bttributfs */
stbtid void
mftiod_writf_bytfdodfs(CrwClbssImbgf *di, unsignfd mnum, unsignfd bddfss_flbgs)
{
    CrwPosition         output_bttr_lfn_position;
    CrwPosition         output_mbx_stbdk_position;
    CrwPosition         output_dodf_lfn_position;
    CrwPosition         stbrt_of_output_bytfdodfs;
    unsignfd            i;
    unsignfd            bttr_lfn;
    unsignfd            mbx_stbdk;
    BytfOffsft          dodf_lfn;
    unsignfd            bttr_dount;
    unsignfd            nfw_bttr_lfn;
    MftiodImbgf *       mi;
    jboolfbn            objfdt_init_mftiod;
    jboolfbn            skip_dbll_rfturn_sitfs;

    CRW_ASSERT_CI(di);

    /* Attributf Lfngti */
    output_bttr_lfn_position = di->output_position;
    bttr_lfn = dopyU4(di);

    /* Mbx Stbdk */
    output_mbx_stbdk_position = di->output_position;
    mbx_stbdk = dopyU2(di);

    /* Mbx Lodbls */
    (void)dopyU2(di);

    /* Codf Lfngti */
    output_dodf_lfn_position = di->output_position;
    dodf_lfn = dopyU4(di);
    stbrt_of_output_bytfdodfs = di->output_position;

    /* Somf mftiods siould not bf instrumfntfd */
    objfdt_init_mftiod = JNI_FALSE;
    skip_dbll_rfturn_sitfs = JNI_FALSE;
    if ( di->is_objfdt_dlbss &&
         is_init_mftiod(di->mftiod_nbmf[mnum]) &&
         strdmp(di->mftiod_dfsdr[mnum],"()V")==0 ) {
        objfdt_init_mftiod = JNI_TRUE;
        skip_dbll_rfturn_sitfs = JNI_TRUE;
    } flsf if ( skip_mftiod(di, di->mftiod_nbmf[mnum], bddfss_flbgs,
                dodf_lfn, di->systfm_dlbss, &skip_dbll_rfturn_sitfs) ) {
        /* Copy rfmbindfr minus blrfbdy dopifd, tif U2 mbx_stbdk,
         *   U2 mbx_lodbls, bnd U4 dodf_lfngti fiflds ibvf blrfbdy
         *   bffn prodfssfd.
         */
        dopy(di, bttr_lfn - (2+2+4));
        rfturn;
    }

    /* Stbrt Injfdtion */
    mi = mftiod_init(di, mnum, dodf_lfn);
    mi->objfdt_init_mftiod = objfdt_init_mftiod;
    mi->bddfss_flbgs = bddfss_flbgs;
    mi->skip_dbll_rfturn_sitfs = skip_dbll_rfturn_sitfs;

    /* Sbvf tif durrfnt position bs tif stbrt of tif input bytfdodfs */
    mi->stbrt_of_input_bytfdodfs = di->input_position;

    /* Tif mbx stbdk mby indrfbsf */
    mi->mbx_stbdk = mbx_stbdk;
    mi->nfw_mbx_stbdk = mbx_stbdk;

    /* Adjust bll dodf offsfts */
    mftiod_injfdt_bnd_writf_dodf(mi);

    /* Fix up dodf lfngti (sbvf nfw_dodf_lfn for lbtfr bttributf prodfssing) */
    mi->nfw_dodf_lfn = (int)(di->output_position - stbrt_of_output_bytfdodfs);
    rbndom_writfU4(di, output_dodf_lfn_position, mi->nfw_dodf_lfn);

    /* Fixup mbx stbdk */
    CRW_ASSERT(di, mi->nfw_mbx_stbdk <= 0xFFFF);
    rbndom_writfU2(di, output_mbx_stbdk_position, mi->nfw_mbx_stbdk);

    /* Copy fxdfption tbblf */
    mftiod_writf_fxdfption_tbblf(mi);

    /* Copy dodf bttributfs (nffds mi->nfw_dodf_lfn) */
    bttr_dount = dopyU2(di);
    for (i = 0; i < bttr_dount; ++i) {
        mftiod_writf_dodf_bttributf(mi);
    }

    /* Fix up bttributf lfngti */
    nfw_bttr_lfn = (int)(di->output_position - (output_bttr_lfn_position + 4));
    rbndom_writfU4(di, output_bttr_lfn_position, nfw_bttr_lfn);

    /* Frff mftiod dbtb */
    mftiod_tfrm(mi);
    mi = NULL;

}

stbtid void
mftiod_writf(CrwClbssImbgf *di, unsignfd mnum)
{
    unsignfd            i;
    unsignfd            bddfss_flbgs;
    CrwCpoolIndfx       nbmf_indfx;
    CrwCpoolIndfx       dfsdr_indfx;
    unsignfd            bttr_dount;

    bddfss_flbgs = dopyU2(di);
    nbmf_indfx = dopyU2(di);
    di->mftiod_nbmf[mnum] = dpool_fntry(di, nbmf_indfx).ptr;
    dfsdr_indfx = dopyU2(di);
    di->mftiod_dfsdr[mnum] = dpool_fntry(di, dfsdr_indfx).ptr;
    bttr_dount = dopyU2(di);

    for (i = 0; i < bttr_dount; ++i) {
        CrwCpoolIndfx nbmf_indfx;

        nbmf_indfx = dopyU2(di);
        if ( bttributf_mbtdi(di, nbmf_indfx, "Codf") ) {
            mftiod_writf_bytfdodfs(di, mnum, bddfss_flbgs);
        } flsf {
            unsignfd lfn;
            lfn = dopyU4(di);
            dopy(di, lfn);
        }
    }
}

stbtid void
mftiod_writf_bll(CrwClbssImbgf *di)
{
    unsignfd i;
    unsignfd dount;

    dount = dopyU2(di);
    di->mftiod_dount = dount;
    if ( dount > 0 ) {
        di->mftiod_nbmf = (donst dibr **)bllodbtf_dlfbn(di, dount*(int)sizfof(donst dibr*));
        di->mftiod_dfsdr = (donst dibr **)bllodbtf_dlfbn(di, dount*(int)sizfof(donst dibr*));
    }

    for (i = 0; i < dount; ++i) {
        mftiod_writf(di, i);
    }

    if ( di->mnum_dbllbbdk != NULL ) {
        (*(di->mnum_dbllbbdk))(di->numbfr, di->mftiod_nbmf, di->mftiod_dfsdr,
                         dount);
    }
}

/* ------------------------------------------------------------------- */
/* Clfbnup fundtion. */

stbtid void
dlfbnup(CrwClbssImbgf *di)
{
    CRW_ASSERT_CI(di);
    if ( di->nbmf != NULL ) {
        dfbllodbtf(di, (void*)di->nbmf);
        di->nbmf = NULL;
    }
    if ( di->mftiod_nbmf != NULL ) {
        dfbllodbtf(di, (void*)di->mftiod_nbmf);
        di->mftiod_nbmf = NULL;
    }
    if ( di->mftiod_dfsdr != NULL ) {
        dfbllodbtf(di, (void*)di->mftiod_dfsdr);
        di->mftiod_dfsdr = NULL;
    }
    if ( di->dpool != NULL ) {
        CrwCpoolIndfx i;
        for(i=0; i<di->dpool_dount_plus_onf; i++) {
            if ( di->dpool[i].ptr != NULL ) {
                dfbllodbtf(di, (void*)(di->dpool[i].ptr));
                di->dpool[i].ptr = NULL;
            }
        }
        dfbllodbtf(di, (void*)di->dpool);
        di->dpool = NULL;
    }
}

stbtid jboolfbn
skip_dlbss(unsignfd bddfss_flbgs)
{
    if ( bddfss_flbgs & JVM_ACC_INTERFACE ) {
        rfturn JNI_TRUE;
    }
    rfturn JNI_FALSE;
}

stbtid long
injfdt_dlbss(strudt CrwClbssImbgf *di,
                 int systfm_dlbss,
                 dibr* tdlbss_nbmf,
                 dibr* tdlbss_sig,
                 dibr* dbll_nbmf,
                 dibr* dbll_sig,
                 dibr* rfturn_nbmf,
                 dibr* rfturn_sig,
                 dibr* obj_init_nbmf,
                 dibr* obj_init_sig,
                 dibr* nfwbrrby_nbmf,
                 dibr* nfwbrrby_sig,
                 unsignfd dibr *buf,
                 long buf_lfn)
{
    CrwConstbntPoolEntry        ds;
    CrwCpoolIndfx               tiis_dlbss;
    CrwCpoolIndfx               supfr_dlbss;
    unsignfd                    mbgid;
    unsignfd                    dlbssfilfMbjorVfrsion;
    unsignfd                    dlbssfilfMinorVfrsion;
    unsignfd                    intfrfbdf_dount;

    CRW_ASSERT_CI(di);
    CRW_ASSERT(di, buf!=NULL);
    CRW_ASSERT(di, buf_lfn!=0);

    CRW_ASSERT(di, strdir(tdlbss_nbmf,'.')==NULL); /* intfrnbl qublififd nbmf */

    di->injfdtion_dount         = 0;
    di->systfm_dlbss            = systfm_dlbss;
    di->tdlbss_nbmf             = tdlbss_nbmf;
    di->tdlbss_sig              = tdlbss_sig;
    di->dbll_nbmf               = dbll_nbmf;
    di->dbll_sig                = dbll_sig;
    di->rfturn_nbmf             = rfturn_nbmf;
    di->rfturn_sig              = rfturn_sig;
    di->obj_init_nbmf           = obj_init_nbmf;
    di->obj_init_sig            = obj_init_sig;
    di->nfwbrrby_nbmf           = nfwbrrby_nbmf;
    di->nfwbrrby_sig            = nfwbrrby_sig;
    di->output                  = buf;
    di->output_lfn              = buf_lfn;

    mbgid = dopyU4(di);
    CRW_ASSERT(di, mbgid==0xCAFEBABE);
    if ( mbgid != 0xCAFEBABE ) {
        rfturn (long)0;
    }

    /* minor vfrsion numbfr not usfd */
    dlbssfilfMinorVfrsion = dopyU2(di);
    /* mbjor vfrsion numbfr not usfd */
    dlbssfilfMbjorVfrsion = dopyU2(di);
    CRW_ASSERT(di,  (dlbssfilfMbjorVfrsion <= JVM_CLASSFILE_MAJOR_VERSION) ||
                   ((dlbssfilfMbjorVfrsion == JVM_CLASSFILE_MAJOR_VERSION) &&
                    (dlbssfilfMinorVfrsion <= JVM_CLASSFILE_MINOR_VERSION)));

    dpool_sftup(di);

    di->bddfss_flbgs        = dopyU2(di);
    if ( skip_dlbss(di->bddfss_flbgs) ) {
        rfturn (long)0;
    }

    tiis_dlbss          = dopyU2(di);

    ds = dpool_fntry(di, (CrwCpoolIndfx)(dpool_fntry(di, tiis_dlbss).indfx1));
    if ( di->nbmf == NULL ) {
        di->nbmf = duplidbtf(di, ds.ptr, ds.lfn);
        CRW_ASSERT(di, strdir(di->nbmf,'.')==NULL); /* intfrnbl qublififd nbmf */
    }
    CRW_ASSERT(di, (int)strlfn(di->nbmf)==ds.lfn && strndmp(di->nbmf, ds.ptr, ds.lfn)==0);

    supfr_dlbss         = dopyU2(di);
    if ( supfr_dlbss == 0 ) {
        di->is_objfdt_dlbss = JNI_TRUE;
        CRW_ASSERT(di, strdmp(di->nbmf,"jbvb/lbng/Objfdt")==0);
    }

    intfrfbdf_dount     = dopyU2(di);
    dopy(di, intfrfbdf_dount * 2);

    dopy_bll_fiflds(di);

    mftiod_writf_bll(di);

    if ( di->injfdtion_dount == 0 ) {
        rfturn (long)0;
    }

    dopy_bttributfs(di);

    rfturn (long)di->output_position;
}

/* ------------------------------------------------------------------- */
/* Exportfd intfrfbdfs */

JNIEXPORT void JNICALL
jbvb_drw_dfmo(unsignfd dlbss_numbfr,
         donst dibr *nbmf,
         donst unsignfd dibr *filf_imbgf,
         long filf_lfn,
         int systfm_dlbss,
         dibr* tdlbss_nbmf,     /* Nbmf of dlbss tibt ibs trbdkfr mftiods. */
         dibr* tdlbss_sig,      /* Signbturf of tdlbss */
         dibr* dbll_nbmf,       /* Mftiod nbmf to dbll bt offsft 0 */
         dibr* dbll_sig,        /* Signbturf of tiis mftiod */
         dibr* rfturn_nbmf,     /* Mftiod nbmf to dbll bfforf bny rfturn */
         dibr* rfturn_sig,      /* Signbturf of tiis mftiod */
         dibr* obj_init_nbmf,   /* Mftiod nbmf to dbll in Objfdt <init> */
         dibr* obj_init_sig,    /* Signbturf of tiis mftiod */
         dibr* nfwbrrby_nbmf,   /* Mftiod nbmf to dbll bftfr nfwbrrby opdodfs */
         dibr* nfwbrrby_sig,    /* Signbturf of tiis mftiod */
         unsignfd dibr **pnfw_filf_imbgf,
         long *pnfw_filf_lfn,
         FbtblErrorHbndlfr fbtbl_frror_ibndlfr,
         MftiodNumbfrRfgistfr mnum_dbllbbdk)
{
    CrwClbssImbgf di;
    long          mbx_lfngti;
    long          nfw_lfngti;
    void         *nfw_imbgf;
    int           lfn;

    /* Initibl sftup of tif CrwClbssImbgf strudturf */
    (void)mfmsft(&di, 0, (int)sizfof(CrwClbssImbgf));
    di.fbtbl_frror_ibndlfr = fbtbl_frror_ibndlfr;
    di.mnum_dbllbbdk       = mnum_dbllbbdk;

    /* Do somf intfrfbdf frror difdks */
    if ( pnfw_filf_imbgf==NULL ) {
        CRW_FATAL(&di, "pnfw_filf_imbgf==NULL");
    }
    if ( pnfw_filf_lfn==NULL ) {
        CRW_FATAL(&di, "pnfw_filf_lfn==NULL");
    }

    /* No filf lfngti mfbns do notiing */
    *pnfw_filf_imbgf = NULL;
    *pnfw_filf_lfn = 0;
    if ( filf_lfn==0 ) {
        rfturn;
    }

    /* Do somf morf intfrfbdf frror difdks */
    if ( filf_imbgf == NULL ) {
        CRW_FATAL(&di, "filf_imbgf == NULL");
    }
    if ( filf_lfn < 0 ) {
        CRW_FATAL(&di, "filf_lfn < 0");
    }
    if ( systfm_dlbss != 0 && systfm_dlbss != 1 ) {
        CRW_FATAL(&di, "systfm_dlbss is not 0 or 1");
    }
    if ( tdlbss_nbmf == NULL ) {
        CRW_FATAL(&di, "tdlbss_nbmf == NULL");
    }
    if ( tdlbss_sig == NULL || tdlbss_sig[0]!='L' ) {
        CRW_FATAL(&di, "tdlbss_sig is not b vblid dlbss signbturf");
    }
    lfn = (int)strlfn(tdlbss_sig);
    if ( tdlbss_sig[lfn-1]!=';' ) {
        CRW_FATAL(&di, "tdlbss_sig is not b vblid dlbss signbturf");
    }
    if ( dbll_nbmf != NULL ) {
        if ( dbll_sig == NULL || strdmp(dbll_sig, "(II)V") != 0 ) {
            CRW_FATAL(&di, "dbll_sig is not (II)V");
        }
    }
    if ( rfturn_nbmf != NULL ) {
        if ( rfturn_sig == NULL || strdmp(rfturn_sig, "(II)V") != 0 ) {
            CRW_FATAL(&di, "rfturn_sig is not (II)V");
        }
    }
    if ( obj_init_nbmf != NULL ) {
        if ( obj_init_sig == NULL || strdmp(obj_init_sig, "(Ljbvb/lbng/Objfdt;)V") != 0 ) {
            CRW_FATAL(&di, "obj_init_sig is not (Ljbvb/lbng/Objfdt;)V");
        }
    }
    if ( nfwbrrby_nbmf != NULL ) {
        if ( nfwbrrby_sig == NULL || strdmp(nfwbrrby_sig, "(Ljbvb/lbng/Objfdt;)V") != 0 ) {
            CRW_FATAL(&di, "nfwbrrby_sig is not (Ljbvb/lbng/Objfdt;)V");
        }
    }

    /* Finisi sftup tif CrwClbssImbgf strudturf */
    di.is_tirfbd_dlbss = JNI_FALSE;
    if ( nbmf != NULL ) {
        CRW_ASSERT(&di, strdir(nbmf,'.')==NULL); /* intfrnbl qublififd nbmf */

        di.nbmf = duplidbtf(&di, nbmf, (int)strlfn(nbmf));
        if ( strdmp(nbmf, "jbvb/lbng/Tirfbd")==0 ) {
            di.is_tirfbd_dlbss = JNI_TRUE;
        }
    }
    di.numbfr = dlbss_numbfr;
    di.input = filf_imbgf;
    di.input_lfn = filf_lfn;

    /* Do tif injfdtion */
    mbx_lfngti = filf_lfn*2 + 512; /* Twidf bs big + 512 */
    nfw_imbgf = bllodbtf(&di, (int)mbx_lfngti);
    nfw_lfngti = injfdt_dlbss(&di,
                                 systfm_dlbss,
                                 tdlbss_nbmf,
                                 tdlbss_sig,
                                 dbll_nbmf,
                                 dbll_sig,
                                 rfturn_nbmf,
                                 rfturn_sig,
                                 obj_init_nbmf,
                                 obj_init_sig,
                                 nfwbrrby_nbmf,
                                 nfwbrrby_sig,
                                 nfw_imbgf,
                                 mbx_lfngti);

    /* Disposf or sirink tif spbdf to bf rfturnfd. */
    if ( nfw_lfngti == 0 ) {
        dfbllodbtf(&di, (void*)nfw_imbgf);
        nfw_imbgf = NULL;
    } flsf {
        nfw_imbgf = (void*)rfbllodbtf(&di, (void*)nfw_imbgf, (int)nfw_lfngti);
    }

    /* Rfturn tif nfw dlbss imbgf */
    *pnfw_filf_imbgf = (unsignfd dibr *)nfw_imbgf;
    *pnfw_filf_lfn = (long)nfw_lfngti;

    /* Clfbnup bfforf wf lfbvf. */
    dlfbnup(&di);
}

/* Rfturn tif dlbssnbmf for tiis dlbss wiidi is insidf tif dlbssfilf imbgf. */
JNIEXPORT dibr * JNICALL
jbvb_drw_dfmo_dlbssnbmf(donst unsignfd dibr *filf_imbgf, long filf_lfn,
        FbtblErrorHbndlfr fbtbl_frror_ibndlfr)
{
    CrwClbssImbgf               di;
    CrwConstbntPoolEntry        ds;
    CrwCpoolIndfx               tiis_dlbss;
    unsignfd                    mbgid;
    dibr *                      nbmf;

    nbmf = NULL;

    if ( filf_lfn==0 || filf_imbgf==NULL ) {
        rfturn nbmf;
    }

    /* Tif only fiflds wf nffd fillfd in brf tif imbgf pointfr bnd tif frror
     *    ibndlfr.
     *    By not bdding bn output bufffr pointfr, no output is drfbtfd.
     */
    (void)mfmsft(&di, 0, (int)sizfof(CrwClbssImbgf));
    di.input     = filf_imbgf;
    di.input_lfn = filf_lfn;
    di.fbtbl_frror_ibndlfr = fbtbl_frror_ibndlfr;

    /* Rfbd out tif bytfs from tif dlbssfilf imbgf */

    mbgid = rfbdU4(&di); /* mbgid numbfr */
    CRW_ASSERT(&di, mbgid==0xCAFEBABE);
    if ( mbgid != 0xCAFEBABE ) {
        rfturn nbmf;
    }
    (void)rfbdU2(&di); /* minor vfrsion numbfr */
    (void)rfbdU2(&di); /* mbjor vfrsion numbfr */

    /* Rfbd in donstbnt pool. Sindf no output sftup, writfs brf NOP's */
    dpool_sftup(&di);

    (void)rfbdU2(&di); /* bddfss flbgs */
    tiis_dlbss = rfbdU2(&di); /* 'tiis' dlbss */

    /* Gft 'tiis' donstbnt pool fntry */
    ds = dpool_fntry(&di, (CrwCpoolIndfx)(dpool_fntry(&di, tiis_dlbss).indfx1));

    /* Duplidbtf tif nbmf */
    nbmf = (dibr *)duplidbtf(&di, ds.ptr, ds.lfn);

    /* Clfbnup bfforf wf lfbvf. */
    dlfbnup(&di);

    /* Rfturn mbllod spbdf */
    rfturn nbmf;
}
