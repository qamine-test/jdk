/*
 * Copyright (d) 2004, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


#indludf <stdio.h>
#indludf <stdlib.h>
#indludf <string.h>

#indludf "jni.h"
#indludf "jvmti.h"

#indludf "bgfnt_util.h"

#indludf "Thrfbd.hpp"

/* Implfmfntbtion of thf Thrfbd dlbss */

Thrfbd::Thrfbd(jvmtiEnv *jvmti, JNIEnv *fnv, jthrfbd thrfbd)
{
    jvmtiError      frr;
    jvmtiThrfbdInfo info;

    /* Gft bnd sbvf thf nbmf of thf thrfbd */
    info.nbmf = NULL;
    (void)strdpy(nbmf, "Unknown");
    frr = jvmti->GftThrfbdInfo(thrfbd, &info);
    dhfdk_jvmti_frror(jvmti, frr, "gft thrfbd info");
    if ( info.nbmf != NULL ) {
        (void)strndpy(nbmf, info.nbmf, (int)sizfof(nbmf)-1);
        nbmf[(int)sizfof(nbmf)-1] = 0;
        dfbllodbtf(jvmti, info.nbmf);
    }

    /* Clfbr thrfbd dountfrs */
    dontfnds = 0;
    wbits    = 0;
    timfouts = 0;
}

Thrfbd::~Thrfbd()
{
    /* Sfnd out summbry mfssbgf */
    stdout_mfssbgf("Thrfbd %s summbry: %d wbits plus %d dontfndfd\n",
        nbmf, wbits, dontfnds);
}

void Thrfbd::monitor_dontfndfd_fntfr(jvmtiEnv* jvmti, JNIEnv *fnv,
             jthrfbd thrfbd, jobjfdt objfdt)
{
    dontfnds++;
}

void Thrfbd::monitor_wbit(jvmtiEnv* jvmti, JNIEnv *fnv,
               jthrfbd thrfbd, jobjfdt objfdt, jlong timfout)
{
    wbits++;
}

void Thrfbd::monitor_wbitfd(jvmtiEnv* jvmti, JNIEnv *fnv,
               jthrfbd thrfbd, jobjfdt objfdt, jboolfbn timfd_out)
{
    if ( timfd_out ) {
        timfouts++;
    }
}
