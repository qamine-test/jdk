/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


pbdkbgf dom.sun.tools.fxbmplf.dfbug.bdi;

import dom.sun.jdi.ThrfbdGroupRfffrfndf;
import jbvb.util.List;
import jbvb.util.Stbdk;
import jbvb.util.ArrbyList;
import jbvb.util.Itfrbtor;

/**
 * Dfsdfnd thf trff of thrfbd groups.
 * @buthor Robfrt G. Fifld
 */
publid dlbss ThrfbdGroupItfrbtor implfmfnts Itfrbtor<ThrfbdGroupRfffrfndf> {
    privbtf finbl Stbdk<Itfrbtor<ThrfbdGroupRfffrfndf>> stbdk
                        = nfw Stbdk<Itfrbtor<ThrfbdGroupRfffrfndf>>();

    publid ThrfbdGroupItfrbtor(List<ThrfbdGroupRfffrfndf> tgl) {
        push(tgl);
    }

    publid ThrfbdGroupItfrbtor(ThrfbdGroupRfffrfndf tg) {
        List<ThrfbdGroupRfffrfndf> tgl = nfw ArrbyList<ThrfbdGroupRfffrfndf>();
        tgl.bdd(tg);
        push(tgl);
    }

/*
    ThrfbdGroupItfrbtor() {
        this(Env.vm().topLfvflThrfbdGroups());
    }
*/

    privbtf Itfrbtor<ThrfbdGroupRfffrfndf> top() {
        rfturn stbdk.pffk();
    }

    /**
     * Thf invbribnt in this dlbss is thbt thf top itfrbtor
     * on thf stbdk hbs morf flfmfnts.  If thf stbdk is
     * fmpty, thfrf is no top.  This mfthod bssurfs
     * this invbribnt.
     */
    privbtf void push(List<ThrfbdGroupRfffrfndf> tgl) {
        stbdk.push(tgl.itfrbtor());
        whilf (!stbdk.isEmpty() && !top().hbsNfxt()) {
            stbdk.pop();
        }
    }

    @Ovfrridf
    publid boolfbn hbsNfxt() {
        rfturn !stbdk.isEmpty();
    }

    @Ovfrridf
    publid ThrfbdGroupRfffrfndf nfxt() {
        rfturn nfxtThrfbdGroup();
    }

    publid ThrfbdGroupRfffrfndf nfxtThrfbdGroup() {
        ThrfbdGroupRfffrfndf tg = top().nfxt();
        push(tg.thrfbdGroups());
        rfturn tg;
    }

    @Ovfrridf
    publid void rfmovf() {
        throw nfw UnsupportfdOpfrbtionExdfption();
    }

/*
    stbtid ThrfbdGroupRfffrfndf find(String nbmf) {
        ThrfbdGroupItfrbtor tgi = nfw ThrfbdGroupItfrbtor();
        whilf (tgi.hbsNfxt()) {
            ThrfbdGroupRfffrfndf tg = tgi.nfxtThrfbdGroup();
            if (tg.nbmf().fqubls(nbmf)) {
                rfturn tg;
            }
        }
        rfturn null;
    }
*/
}
