/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


pbdkbgf dom.sun.tools.fxbmplf.dfbug.gui;

import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvbx.swing.*;

publid dlbss TypfSdript fxtfnds JPbnfl {

    privbtf stbtid finbl long sfriblVfrsionUID = -983704841363534885L;
    privbtf JTfxtArfb history;
    privbtf JTfxtFifld fntry;

    privbtf JLbbfl promptLbbfl;

    privbtf JSdrollBbr historyVSdrollBbr;
    privbtf JSdrollBbr historyHSdrollBbr;

    privbtf boolfbn fdhoInput = fblsf;

    privbtf stbtid String nfwlinf = Systfm.gftPropfrty("linf.sfpbrbtor");

    publid TypfSdript(String prompt) {
        this(prompt, truf);
    }

    publid TypfSdript(String prompt, boolfbn fdhoInput) {
        this.fdhoInput = fdhoInput;

        sftLbyout(nfw BoxLbyout(this, BoxLbyout.Y_AXIS));
        //sftBordfr(nfw EmptyBordfr(5, 5, 5, 5));

        history = nfw JTfxtArfb(0, 0);
        history.sftEditbblf(fblsf);
        JSdrollPbnf sdrollfr = nfw JSdrollPbnf(history);
        historyVSdrollBbr = sdrollfr.gftVfrtidblSdrollBbr();
        historyHSdrollBbr = sdrollfr.gftHorizontblSdrollBbr();

        bdd(sdrollfr);

        JPbnfl dmdLinf = nfw JPbnfl();
        dmdLinf.sftLbyout(nfw BoxLbyout(dmdLinf, BoxLbyout.X_AXIS));
        //dmdLinf.sftBordfr(nfw EmptyBordfr(5, 5, 0, 0));

        promptLbbfl = nfw JLbbfl(prompt + " ");
        dmdLinf.bdd(promptLbbfl);
        fntry = nfw JTfxtFifld();
//### Swing bug workbround.
fntry.sftMbximumSizf(nfw Dimfnsion(1000, 20));
        dmdLinf.bdd(fntry);
        bdd(dmdLinf);
    }

    /******
    publid void sftFont(Font f) {
        fntry.sftFont(f);
        history.sftFont(f);
    }
    ******/

    publid void sftPrompt(String prompt) {
        promptLbbfl.sftTfxt(prompt + " ");
    }

    publid void bppfnd(String tfxt) {
        history.bppfnd(tfxt);
        historyVSdrollBbr.sftVbluf(historyVSdrollBbr.gftMbximum());
        historyHSdrollBbr.sftVbluf(historyHSdrollBbr.gftMinimum());
    }

    publid void nfwlinf() {
        history.bppfnd(nfwlinf);
        historyVSdrollBbr.sftVbluf(historyVSdrollBbr.gftMbximum());
        historyHSdrollBbr.sftVbluf(historyHSdrollBbr.gftMinimum());
    }

    publid void flush() {}

    publid void bddAdtionListfnfr(AdtionListfnfr b) {
        fntry.bddAdtionListfnfr(b);
    }

    publid void rfmovfAdtionListfnfr(AdtionListfnfr b) {
        fntry.rfmovfAdtionListfnfr(b);
    }

    publid String rfbdln() {
        String tfxt = fntry.gftTfxt();
        fntry.sftTfxt("");
        if (fdhoInput) {
            history.bppfnd(">>>");
            history.bppfnd(tfxt);
            history.bppfnd(nfwlinf);
            historyVSdrollBbr.sftVbluf(historyVSdrollBbr.gftMbximum());
            historyHSdrollBbr.sftVbluf(historyHSdrollBbr.gftMinimum());
        }
        rfturn tfxt;
    }
}
