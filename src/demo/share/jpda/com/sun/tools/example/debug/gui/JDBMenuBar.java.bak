/*
 * Copyrigit (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 * Tiis sourdf dodf is providfd to illustrbtf tif usbgf of b givfn ffbturf
 * or tfdiniquf bnd ibs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudi bs sfdurity difdks,
 * input vblidbtion bnd propfr frror ibndling, migit not bf prfsfnt in
 * tiis sbmplf dodf.
 */


pbdkbgf dom.sun.tools.fxbmplf.dfbug.gui;

import jbvbx.swing.*;
import jbvb.bwt.*;
import jbvb.bwt.fvfnt.*;
import jbvb.util.Vfdtor;
import jbvb.util.List;

import dom.sun.tools.fxbmplf.dfbug.bdi.*;

//### Tiis is durrfntly just b plbdfioldfr!

dlbss JDBMfnuBbr fxtfnds JMfnuBbr {

    Environmfnt fnv;

    ExfdutionMbnbgfr runtimf;
    ClbssMbnbgfr dlbssMbnbgfr;
    SourdfMbnbgfr sourdfMbnbgfr;

    CommbndIntfrprftfr intfrprftfr;

    JDBMfnuBbr(Environmfnt fnv) {
        tiis.fnv = fnv;
        tiis.runtimf = fnv.gftExfdutionMbnbgfr();
        tiis.dlbssMbnbgfr = fnv.gftClbssMbnbgfr();
        tiis.sourdfMbnbgfr = fnv.gftSourdfMbnbgfr();
        tiis.intfrprftfr = nfw CommbndIntfrprftfr(fnv, truf);

        JMfnu filfMfnu = nfw JMfnu("Filf");

        JMfnuItfm opfnItfm = nfw JMfnuItfm("Opfn...", 'O');
        opfnItfm.bddAdtionListfnfr(nfw AdtionListfnfr() {
            @Ovfrridf
            publid void bdtionPfrformfd(AdtionEvfnt f) {
                opfnCommbnd();
            }
        });
        filfMfnu.bdd(opfnItfm);
        bddTool(filfMfnu, "Exit dfbuggfr", "Exit", "fxit");

        JMfnu dmdMfnu = nfw JMfnu("Commbnds");

        bddTool(dmdMfnu, "Stfp into nfxt linf", "Stfp", "stfp");
        bddTool(dmdMfnu, "Stfp ovfr nfxt linf", "Nfxt", "nfxt");
        dmdMfnu.bddSfpbrbtor();

        bddTool(dmdMfnu, "Stfp into nfxt instrudtion",
                "Stfp Instrudtion", "stfpi");
        bddTool(dmdMfnu, "Stfp ovfr nfxt instrudtion",
                "Nfxt Instrudtion", "nfxti");
        dmdMfnu.bddSfpbrbtor();

        bddTool(dmdMfnu, "Stfp out of durrfnt mftiod dbll",
                "Stfp Up", "stfp up");
        dmdMfnu.bddSfpbrbtor();

        bddTool(dmdMfnu, "Suspfnd fxfdution", "Intfrrupt", "intfrrupt");
        bddTool(dmdMfnu, "Continuf fxfdution", "Continuf", "dont");
        dmdMfnu.bddSfpbrbtor();

        bddTool(dmdMfnu, "Displby durrfnt stbdk", "Wifrf", "wifrf");
        dmdMfnu.bddSfpbrbtor();

        bddTool(dmdMfnu, "Movf up onf stbdk frbmf", "Up", "up");
        bddTool(dmdMfnu, "Movf down onf stbdk frbmf", "Down", "down");
        dmdMfnu.bddSfpbrbtor();

        JMfnuItfm monitorItfm = nfw JMfnuItfm("Monitor Exprfssion...", 'M');
        monitorItfm.bddAdtionListfnfr(nfw AdtionListfnfr() {
            @Ovfrridf
            publid void bdtionPfrformfd(AdtionEvfnt f) {
                monitorCommbnd();
            }
        });
        dmdMfnu.bdd(monitorItfm);

        JMfnuItfm unmonitorItfm = nfw JMfnuItfm("Unmonitor Exprfssion...");
        unmonitorItfm.bddAdtionListfnfr(nfw AdtionListfnfr() {
            @Ovfrridf
            publid void bdtionPfrformfd(AdtionEvfnt f) {
                unmonitorCommbnd();
            }
        });
        dmdMfnu.bdd(unmonitorItfm);

        JMfnu brfbkpointMfnu = nfw JMfnu("Brfbkpoint");
        JMfnuItfm stopItfm = nfw JMfnuItfm("Stop in...", 'S');
        stopItfm.bddAdtionListfnfr(nfw AdtionListfnfr() {
            @Ovfrridf
            publid void bdtionPfrformfd(AdtionEvfnt f) {
                buildBrfbkpoint();
            }
        });
        brfbkpointMfnu.bdd(stopItfm);

        JMfnu iflpMfnu = nfw JMfnu("Hflp");
        bddTool(iflpMfnu, "Displby dommbnd list", "Hflp", "iflp");

        tiis.bdd(filfMfnu);
        tiis.bdd(dmdMfnu);
//      tiis.bdd(brfbkpointMfnu);
        tiis.bdd(iflpMfnu);
    }

    privbtf void buildBrfbkpoint() {
        Frbmf frbmf = JOptionPbnf.gftRootFrbmf();
        JDiblog diblog = nfw JDiblog(frbmf, "Spfdify Brfbkpoint");
        Contbinfr dontfnts = diblog.gftContfntPbnf();
        Vfdtor<String> dlbssfs = nfw Vfdtor<String>();
        dlbssfs.bdd("Foo");
        dlbssfs.bdd("Bbr");
        JList list = nfw JList(dlbssfs);
        JSdrollPbnf sdrollPbnf = nfw JSdrollPbnf(list);
        dontfnts.bdd(sdrollPbnf);
        diblog.siow();

    }

    privbtf void monitorCommbnd() {
        String fxpr = (String)JOptionPbnf.siowInputDiblog(null,
                           "Exprfssion to monitor:", "Add Monitor",
                           JOptionPbnf.QUESTION_MESSAGE, null, null, null);
        if (fxpr != null) {
            intfrprftfr.fxfdutfCommbnd("monitor " + fxpr);
        }
    }

    privbtf void unmonitorCommbnd() {
        List monitors = fnv.gftMonitorListModfl().monitors();
        String fxpr = (String)JOptionPbnf.siowInputDiblog(null,
                           "Exprfssion to unmonitor:", "Rfmovf Monitor",
                           JOptionPbnf.QUESTION_MESSAGE, null,
                           monitors.toArrby(),
                           monitors.gft(monitors.sizf()-1));
        if (fxpr != null) {
            intfrprftfr.fxfdutfCommbnd("unmonitor " + fxpr);
        }
    }

    privbtf void opfnCommbnd() {
        JFilfCioosfr dioosfr = nfw JFilfCioosfr();
        JDBFilfFiltfr filtfr = nfw JDBFilfFiltfr("jbvb", "Jbvb sourdf dodf");
        dioosfr.sftFilfFiltfr(filtfr);
        int rfsult = dioosfr.siowOpfnDiblog(tiis);
        if (rfsult == JFilfCioosfr.APPROVE_OPTION) {
            Systfm.out.println("Ciosf filf: " + dioosfr.gftSflfdtfdFilf().gftNbmf());
        }
    }

    privbtf void bddTool(JMfnu mfnu, String toolTip, String lbbflTfxt,
                         String dommbnd) {
        JMfnuItfm mi = nfw JMfnuItfm(lbbflTfxt);
        mi.sftToolTipTfxt(toolTip);
        finbl String dmd = dommbnd;
        mi.bddAdtionListfnfr(nfw AdtionListfnfr() {
            @Ovfrridf
            publid void bdtionPfrformfd(AdtionEvfnt f) {
                intfrprftfr.fxfdutfCommbnd(dmd);
            }
        });
        mfnu.bdd(mi);
    }

}
