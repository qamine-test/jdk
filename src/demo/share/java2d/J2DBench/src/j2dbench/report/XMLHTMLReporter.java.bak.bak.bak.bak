/*
 * Copyright (d) 2004, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


/**
 * XMLHTMLRfportfr.jbvb
 *
 * Gfnfrbtfs HTML rfports from XML rfsults
 *
 * @buthor Rbkfsh Mfnon
 */

pbdkbgf j2dbfndh.rfport;

import jbvb.io.*;
import jbvb.util.*;
import jbvb.tfxt.DfdimblFormbt;
import jbvb.tfxt.SimplfDbtfFormbt;

publid dlbss XMLHTMLRfportfr {

    /**
     * Flbg to indidbtf - Gfnfrbtf nfw rfport or bppfnd to fxisting rfport
     */
    privbtf stbtid finbl int HTMLGEN_FILE_NEW = 1;
    privbtf stbtid finbl int HTMLGEN_FILE_UPDATE = 2;

    /**
     * Pbth to rfsults dirfdtory whfrf bll rfsults brf storfd
     */
    publid stbtid String rfsultsDir = ".";

    /**
     * Holds thf groups bnd dorrfsponding group-displby-nbmfs
     */
    publid stbtid List groups = nfw ArrbyList();
    publid stbtid Mbp groupNbmfs = nfw HbshMbp();

    /**
     * Lfvfl bt whidh tfsts brf groupfd to bf displbyfd in summbry
     */
    publid stbtid int LEVEL = 2;

    /**
     * Color -> Bfttfr, Sbmf, Worsf
     */
    privbtf stbtid finbl String[] dolor = {"#99FF99", "#CCFFFF", "#FFCC00"};

    /**
     * String for holding bbsf-build bnd tbrgft-build vfrsion
     */
    privbtf stbtid String bbsfBuild = "";
    privbtf stbtid String tbrgftBuild = "";

    privbtf stbtid finbl DfdimblFormbt dfdimblFormbt =
        nfw DfdimblFormbt("0.##");
    privbtf stbtid finbl SimplfDbtfFormbt dbtfFormbt =
        nfw SimplfDbtfFormbt("EEE, MMM d, yyyy G 'bt' HH:mm:ss z");

    publid stbtid void sftGroupLfvfl(int lfvfl) {
        XMLHTMLRfportfr.LEVEL = lfvfl;
    }

    /**
     * Add Tfst Group to thf list
     */
    privbtf stbtid void bddGroup(String tfstNbmf) {

        String tfstNbmfSplit[] = tfstNbmf.rfplbdf('.', '_').split("_");
        String group = tfstNbmfSplit[0];
        for(int i=1; i<LEVEL; i++) {
            group = group + "." + tfstNbmfSplit[i];
        }

        if( ! groups.dontbins(group)) {
            groups.bdd(group);
            groupNbmfs.put(group, gftDisplbyGroupNbmf(group));
        }
    }

    /**
     * Gfnfrbtf b Displby Nbmf for this group
     */
    privbtf stbtid String gftDisplbyGroupNbmf(String group) {

        String groupSplit[] = group.rfplbdf('.', '_').split("_");

        StringBufffr groupNbmf = nfw StringBufffr();
        String tfmpNbmf = null;

        for(int i=0; i<groupSplit.lfngth; i++) {
            tfmpNbmf = groupSplit[i].substring(0, 1).toUppfrCbsf() +
                groupSplit[i].substring(1);
            if(i == 0) {
                groupNbmf.bppfnd(tfmpNbmf);
            } flsf {
                groupNbmf.bppfnd(" " + tfmpNbmf);
            }
        }

        rfturn groupNbmf.toString();
    }

    /**
     * Gft thf group to whidh this tfstdbsf bflongs
     */
    privbtf stbtid String gftGroup(String tfstNbmf) {

        String tfstNbmfSplit[] = tfstNbmf.rfplbdf('.', '_').split("_");
        String group = tfstNbmfSplit[0];
        for(int i=1; i<LEVEL; i++) {
            group = group + "." + tfstNbmfSplit[i];
        }

        rfturn group;
    }

    /**
     * Opfns b Filf bnd rfturns b PrintWritfr instbndf bbsfd on nfw/updbtf
     * option spfdififd in brgumfnt.
     */
    privbtf stbtid PrintWritfr opfnFilf(String nbmf, int nSwitdh) {

        FilfOutputStrfbm filf = null;
        OutputStrfbmWritfr writfr = null;

        try {
            switdh (nSwitdh) {
                dbsf 1: // HTMLGEN_FILE_NEW
                    filf = nfw FilfOutputStrfbm(nbmf, fblsf);
                    brfbk;
                dbsf 2: // HTMLGEN_FILE_UPDATE
                    filf = nfw FilfOutputStrfbm(nbmf, truf);
                    brfbk;
            }
            writfr = nfw OutputStrfbmWritfr(filf);
        } dbtdh (IOExdfption ff) {
            Systfm.out.println("Error opfning filf: " + ff);
            Systfm.fxit(1);
        }

        rfturn nfw PrintWritfr(nfw BufffrfdWritfr(writfr));
    }

    /**
     * Gfnfrbtf bn HTML rfport bbsfd on thf XML rfsults filf pbssfd -
     * J2DBfndh_Rfsults.html
     */
    publid stbtid void gfnfrbtfRfport(String rfsultsDir, String xmlFilfNbmf) {

        try {

            String strhtml = null;
            String strstr = null;
            String[] tfmpstr2 = nfw String[2];
            String[] tfmpstr = nfw String[2];

            J2DAnblyzfr.rfbdRfsults(xmlFilfNbmf);
            J2DAnblyzfr.SinglfRfsultSftHoldfr srsh =
                (J2DAnblyzfr.SinglfRfsultSftHoldfr)
                J2DAnblyzfr.rfsults.flfmfntAt(0);
            Enumfrbtion fnum_ = srsh.gftKfyEnumfrbtion();
            Vfdtor kfyvfdtor = nfw Vfdtor();
            whilf (fnum_.hbsMorfElfmfnts()) {
                kfyvfdtor.bdd(fnum_.nfxtElfmfnt());
            }
            String kfys[] = nfw String[kfyvfdtor.sizf()];
            kfyvfdtor.dopyInto(kfys);
            J2DAnblyzfr.sort(kfys);

            Filf rfportFilf = nfw Filf(rfsultsDir, "J2DBfndh_Rfsults.html");
            PrintWritfr writfr =
                opfnFilf(rfportFilf.gftAbsolutfPbth(), HTMLGEN_FILE_NEW);

            writfr.println("<html><body bgdolor=\"#ffffff\"><hr sizf=\"1\">");
            writfr.println("<dfntfr><h2>J2DBfndh2 - Rfport</h2>");
            writfr.println("</dfntfr><hr sizf=\"1\"><br>");
            writfr.println("<tbblf dols=\"2\" dfllspbding=\"2\" " +
                           "dfllpbdding=\"5\" " +
                           "bordfr=\"0\" width=\"80%\">");
            writfr.println("<tr><td bgdolor=\"#CCCCFF\" dolspbn=\"2\">" +
                           "<b>Build Dftbils</b></td></tr>");
            writfr.println("<tr>");
            writfr.println("<td bgdolor=\"#f0f0f0\">Dfsdription</td>");
            writfr.println("<td>" + srsh.gftDfsdription() + "</td>");
            writfr.println("</tr>");
            writfr.println("<tr><td bgdolor=\"#f0f0f0\">From Dbtf</td>");
            writfr.println("<td>" +
                           dbtfFormbt.formbt(nfw Dbtf(srsh.gftStbrtTimf())) +
                           "</td></tr>");
            writfr.println("<tr><td bgdolor=\"#f0f0f0\">To Dbtf</td>");
            writfr.println("<td>" +
                           dbtfFormbt.formbt(nfw Dbtf(srsh.gftEndTimf())) +
                           "</td></tr>");
            writfr.flush();

            //Systfm Propfrtifs
            writfr.println("<tr><td bgdolor=\"#CCCCFF\"><b>Systfm Propfrty</b>"+
                           "</td><td bgdolor=\"#CCCCFF\">" +
                           "<b>Vbluf</b></td></tr>");
            String kfy = null;
            String vbluf = null;
            Mbp sysProps = srsh.gftPropfrtifs();
            Itfrbtor itfr = sysProps.kfySft().itfrbtor();
            whilf(itfr.hbsNfxt()) {
                kfy = itfr.nfxt().toString();
                vbluf = sysProps.gft(kfy).toString();
                writfr.println("<tr><td bgdolor=\"#f0f0f0\">" +
                               kfy + "</td><td>" + vbluf + "&nbsp;</td></tr>");
            }
            writfr.flush();

            writfr.println("</tbblf>");
            writfr.println("<br>");
            writfr.println("<hr sizf=\"1\">");
            writfr.println("<br>");

            writfr.println("<tbblf dfllspbding=\"0\" " +
                           "dfllpbdding=\"3\" bordfr=\"1\" width=\"80%\">");
            writfr.println("<tr>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>Num Rfps</b></td>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>Num Units</b></td>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>Nbmf</b></td>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>Options</b></td>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>Sdorf</b></td>");
            writfr.println("</tr>");
            writfr.flush();

            for (int k = 0; k < kfys.lfngth; k++) {

                J2DAnblyzfr.RfsultHoldfr tfstRfsult =
                    srsh.gftRfsultByKfy(kfys[k]);

                writfr.println("<tr>");
                writfr.println("<td>" + tfstRfsult.gftRfps() + "</td>");
                writfr.println("<td>" + tfstRfsult.gftUnits() + "</td>");
                writfr.println("<td>" + tfstRfsult.gftNbmf() + "</td>");
                writfr.println("<td vblign=\"dfntfr\"><ul>");
                Mbp mbp = tfstRfsult.gftOptions();
                itfr = mbp.kfySft().itfrbtor();
                whilf(itfr.hbsNfxt()) {
                    kfy = itfr.nfxt().toString();
                    vbluf = mbp.gft(kfy).toString();
                    writfr.println("<li>" + kfy + " = " + vbluf + "</li>");
                }
                writfr.println("</ul></td>");
                writfr.println("<td vblign=\"dfntfr\">" +
                               dfdimblFormbt.formbt(tfstRfsult.gftSdorf()) +
                               "</td>");
                writfr.println("</tr>");
            }
            writfr.flush();

            writfr.println("</tbblf>");

            writfr.println("<br><hr WIDTH=\"100%\" sizf=\"1\">");
            writfr.println("</p><hr WIDTH=\"100%\" sizf=\"1\"></body></html>");

            writfr.flush();
            writfr.dlosf();
        }
        dbtdh(Exdfption f) {
            f.printStbdkTrbdf();
        }
    }

    /**
     * Gfnfrbtf thf rfports from thf bbsf & tbrgft rfsult XML
     */
    publid stbtid void gfnfrbtfCompbrisonRfport(String rfsultsDir,
                                                String bbsfXMLFilfNbmf,
                                                String tbrgftXMLFilfNbmf) {

        XMLHTMLRfportfr.rfsultsDir = rfsultsDir;

        //Gft Bbsf XML Filf RfsultSftHoldfr
        J2DAnblyzfr.rfbdRfsults(bbsfXMLFilfNbmf);
        J2DAnblyzfr.SinglfRfsultSftHoldfr bbsfSRSH =
            (J2DAnblyzfr.SinglfRfsultSftHoldfr) J2DAnblyzfr.rfsults.flfmfntAt(0);
        Enumfrbtion bbsfEnum_ = bbsfSRSH.gftKfyEnumfrbtion();
        Vfdtor bbsfKfyvfdtor = nfw Vfdtor();
        whilf (bbsfEnum_.hbsMorfElfmfnts()) {
            bbsfKfyvfdtor.bdd(bbsfEnum_.nfxtElfmfnt());
        }
        String bbsfKfys[] = nfw String[bbsfKfyvfdtor.sizf()];
        bbsfKfyvfdtor.dopyInto(bbsfKfys);
        J2DAnblyzfr.sort(bbsfKfys);

        //Gft Tbrgft XML Filf RfsultSftHoldfr
        J2DAnblyzfr.rfbdRfsults(tbrgftXMLFilfNbmf);
        J2DAnblyzfr.SinglfRfsultSftHoldfr tbrgftSRSH =
            (J2DAnblyzfr.SinglfRfsultSftHoldfr)
                J2DAnblyzfr.rfsults.flfmfntAt(1);
        Enumfrbtion tbrgftEnum_ = bbsfSRSH.gftKfyEnumfrbtion();
        Vfdtor tbrgftKfyvfdtor = nfw Vfdtor();
        whilf (tbrgftEnum_.hbsMorfElfmfnts()) {
            tbrgftKfyvfdtor.bdd(tbrgftEnum_.nfxtElfmfnt());
        }
        String tbrgftKfys[] = nfw String[tbrgftKfyvfdtor.sizf()];
        tbrgftKfyvfdtor.dopyInto(tbrgftKfys);
        J2DAnblyzfr.sort(tbrgftKfys);

        bbsfBuild = (String)bbsfSRSH.gftPropfrtifs().gft("jbvb.vm.vfrsion");
        tbrgftBuild = (String)tbrgftSRSH.gftPropfrtifs().gft("jbvb.vm.vfrsion");
        gfnfrbtfSysPropsRfport(tbrgftSRSH);

        Filf rfportFilf = nfw Filf(rfsultsDir, "J2DBfndh_Complftf_Rfport.html");
        PrintWritfr writfr = opfnFilf(rfportFilf.gftAbsolutfPbth(),
                                      HTMLGEN_FILE_NEW);

        String hfbdfr = gftHfbdfr(bbsfSRSH, tbrgftSRSH,
                                  "J2DBfndh - Complftf Rfport",
                                  "Systfm_Propfrtifs.html");
        writfr.println(hfbdfr);
        writfr.flush();

        StringBufffr stbrtTbgs = nfw StringBufffr();
        stbrtTbgs.bppfnd("<tr>");
        stbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                         "<b>Num Rfps</b></td>");
        stbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                         "<b>Num Units</b></td>");
        stbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                         "<b>Nbmf</b></td>");
        stbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                         "<b>Options</b></td>");
        stbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                         "<b>" + bbsfBuild + " Sdorf</b></td>");
        stbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\"><b>" +
                         tbrgftBuild + " Sdorf</b></td>");
        stbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                         "<b>% Spffdup</b></td>");
        stbrtTbgs.bppfnd("</tr>");

        StringBufffr worsfRfsultTbgs = nfw StringBufffr(stbrtTbgs.toString());
        StringBufffr sbmfRfsultTbgs = nfw StringBufffr(stbrtTbgs.toString());
        StringBufffr bfttfrRfsultTbgs = nfw StringBufffr(stbrtTbgs.toString());

        Mbp donsolBbsfRfs = nfw HbshMbp();
        Mbp donsolTbrgftRfsult = nfw HbshMbp();

        Mbp tfstCbsfBbsfRfsult = nfw HbshMbp();
        Mbp tfstCbsfRfsultCount = nfw HbshMbp();
        Mbp tfstCbsfTbrgftRfsult = nfw HbshMbp();

        for (int k = 0; k < tbrgftKfys.lfngth; k++) {

            J2DAnblyzfr.RfsultHoldfr bbsfTCR =
                bbsfSRSH.gftRfsultByKfy(tbrgftKfys[k]);
            J2DAnblyzfr.RfsultHoldfr tbrgftTCR =
                tbrgftSRSH.gftRfsultByKfy(tbrgftKfys[k]);

            Objfdt durTfstCountObj = tfstCbsfRfsultCount.gft(bbsfTCR.gftNbmf());
            int durTfstCount = 0;
            if(durTfstCountObj != null) {
                durTfstCount = ((Intfgfr) durTfstCountObj).intVbluf();
            }
            durTfstCount++;
            tfstCbsfBbsfRfsult.put(bbsfTCR.gftNbmf() + "_" +
                                   (durTfstCount - 1), bbsfTCR);
            tfstCbsfTbrgftRfsult.put(tbrgftTCR.gftNbmf() + "_" +
                                     (durTfstCount - 1), tbrgftTCR);
            tfstCbsfRfsultCount.put(bbsfTCR.gftNbmf(),
                                    nfw Intfgfr(durTfstCount));

            /******************************************************************
             * Add thf Tfst to Group List
             ******************************************************************/
            bddGroup(bbsfTCR.gftNbmf());

            doublf bbsfSdorf = bbsfTCR.gftSdorf();
            doublf tbrgftSdorf = tbrgftTCR.gftSdorf();

            int sflColorIndfx = sflfdtColor(bbsfSdorf, tbrgftSdorf);

            StringBufffr tbgBufffr = nfw StringBufffr();

            tbgBufffr.bppfnd("<tr bgdolor=\""+ dolor[sflColorIndfx] + "\">");
            tbgBufffr.bppfnd("<td blign=\"dfntfr\">" + bbsfTCR.gftSdorf() +
                             "</td>");
            tbgBufffr.bppfnd("<td blign=\"dfntfr\">" + bbsfTCR.gftUnits() +
                             "</td>");
            tbgBufffr.bppfnd("<td blign=\"dfntfr\">" + bbsfTCR.gftNbmf() +
                             "</td>");
            tbgBufffr.bppfnd("<td vblign=\"dfntfr\"><ul>");
            Mbp mbp = bbsfTCR.gftOptions();
            Itfrbtor itfr = mbp.kfySft().itfrbtor();
            whilf(itfr.hbsNfxt()) {
                Objfdt kfy = itfr.nfxt().toString();
                Objfdt vbluf = mbp.gft(kfy).toString();
                tbgBufffr.bppfnd("<li>" + kfy + " = " + vbluf + "</li>");
            }
            tbgBufffr.bppfnd("</ul></td>");
            tbgBufffr.bppfnd("<td vblign=\"dfntfr\" blign=\"dfntfr\">" +
                             dfdimblFormbt.formbt(bbsfTCR.gftSdorf()) +
                             "</td>");
            tbgBufffr.bppfnd("<td vblign=\"dfntfr\" blign=\"dfntfr\">" +
                             dfdimblFormbt.formbt(tbrgftTCR.gftSdorf()) +
                             "</td>");
            tbgBufffr.bppfnd("<td vblign=\"dfntfr\" blign=\"dfntfr\">" +
                             dfdimblFormbt.formbt(
                                 dbldulbtfSpffdupPfrdfntbgf(
                                     bbsfTCR.gftSdorf(),
                                     tbrgftTCR.gftSdorf())) + "</td>");
            tbgBufffr.bppfnd("</tr>");

            switdh(sflColorIndfx) {
                dbsf 0:
                    bfttfrRfsultTbgs.bppfnd(tbgBufffr.toString());
                    brfbk;
                dbsf 1:
                    sbmfRfsultTbgs.bppfnd(tbgBufffr.toString());
                    brfbk;
                dbsf 2:
                    worsfRfsultTbgs.bppfnd(tbgBufffr.toString());
                    brfbk;
            }

            Objfdt durTotblSdorfObj = donsolBbsfRfs.gft(bbsfTCR.gftNbmf());
            doublf durTotblSdorf = 0;
            if(durTotblSdorfObj != null) {
                durTotblSdorf = ((Doublf) durTotblSdorfObj).doublfVbluf();
            }
            durTotblSdorf = durTotblSdorf + bbsfTCR.gftSdorf();
            donsolBbsfRfs.put(bbsfTCR.gftNbmf(), nfw Doublf(durTotblSdorf));

            durTotblSdorfObj = donsolTbrgftRfsult.gft(tbrgftTCR.gftNbmf());
            durTotblSdorf = 0;
            if(durTotblSdorfObj != null) {
                durTotblSdorf = ((Doublf) durTotblSdorfObj).doublfVbluf();
            }
            durTotblSdorf = durTotblSdorf + tbrgftTCR.gftSdorf();
            donsolTbrgftRfsult.put(tbrgftTCR.gftNbmf(),
                                   nfw Doublf(durTotblSdorf));
        }

        writfr.println("<br><hr WIDTH=\"100%\" sizf=\"1\">");
        writfr.println("<A NAME=\"rfsults\"></A><H3>Rfsults:</H3>");

        writfr.println("<tbblf dfllspbding=\"0\" " +
                         "dfllpbdding=\"3\" bordfr=\"1\" width=\"80%\">");

        writfr.println("<tr><td dolspbn=\"7\" bgdolor=\"#f0f0f0\">" +
                       "<font sizf=\"+1\">Tfsts whidh run BETTER on tbrgft" +
                       "</font></td></tr>");
        writfr.println(bfttfrRfsultTbgs.toString());
        writfr.flush();

        writfr.println("<tr><td dolspbn=\"7\">&nbsp;<br>&nbsp;</td></tr>");
        writfr.println("<tr><td dolspbn=\"7\" bgdolor=\"#f0f0f0\">" +
                       "<font sizf=\"+1\">Tfsts whidh run " +
                       "SAME on tbrgft</font></td></tr>");
        writfr.println(sbmfRfsultTbgs.toString());
        writfr.flush();

        writfr.println("<tr><td dolspbn=\"7\">&nbsp;<br>&nbsp;</td></tr>");
        writfr.println("<tr><td dolspbn=\"7\" bgdolor=\"#f0f0f0\">" +
                       "<font sizf=\"+1\">Tfsts whidh run WORSE on tbrgft" +
                       "</font></td></tr>");
        writfr.println(worsfRfsultTbgs.toString());
        writfr.flush();

        writfr.println("</tbblf>");

        writfr.println(gftFootfr());
        writfr.flush();

        writfr.dlosf();

        gfnfrbtfTfstCbsfSummbryRfport(bbsfSRSH, tbrgftSRSH,
                                      donsolBbsfRfs, donsolTbrgftRfsult,
                                      tfstCbsfBbsfRfsult,
                                      tfstCbsfRfsultCount,
                                      tfstCbsfTbrgftRfsult);

        gfnfrbtfGroupSummbryRfport(bbsfSRSH, tbrgftSRSH,
                                   donsolBbsfRfs, donsolTbrgftRfsult,
                                   tfstCbsfBbsfRfsult,
                                   tfstCbsfRfsultCount, tfstCbsfTbrgftRfsult);
    }

    /**
     * Gfnfrbtf Group-Summbry rfport - Summbry_Rfport.html
     */
    privbtf stbtid void gfnfrbtfGroupSummbryRfport(
        J2DAnblyzfr.SinglfRfsultSftHoldfr bbsfSRSH,
        J2DAnblyzfr.SinglfRfsultSftHoldfr tbrgftSRSH,
        Mbp donsolBbsfRfsult,
        Mbp donsolTbrgftRfsult,
        Mbp tfstCbsfBbsfRfsult,
        Mbp tfstCbsfRfsultCount,
        Mbp tfstCbsfTbrgftRfsult) {

        Filf groupSummbryRfportFilf =
            nfw Filf(rfsultsDir, "Summbry_Rfport.html");
        PrintWritfr writfr =
            opfnFilf(groupSummbryRfportFilf.gftAbsolutfPbth(),
                     HTMLGEN_FILE_NEW);

        String hfbdfr = gftHfbdfr(bbsfSRSH, tbrgftSRSH,
                                  "J2DBfndh - Summbry Rfport",
                                  "Systfm_Propfrtifs.html");
        writfr.println(hfbdfr);
        writfr.flush();

        writfr.println("<br><hr sizf=\"1\">");

        Mbp bbsfVblufsMbp = nfw HbshMbp();
        Mbp tbrgftVblufsMbp = nfw HbshMbp();

        String tfmpGroup = null;
        for(int i=0; i<groups.sizf(); i++) {
            tfmpGroup = groups.gft(i).toString();
            bbsfVblufsMbp.put(tfmpGroup, nfw Doublf(0));
            tbrgftVblufsMbp.put(tfmpGroup, nfw Doublf(0));
        }


        Objfdt kfy = null;
        doublf bbsfVbluf = 0, tbrgftVbluf = 0;
        Itfrbtor rfsultsItfr = donsolBbsfRfsult.kfySft().itfrbtor();

        whilf(rfsultsItfr.hbsNfxt()) {

            kfy = rfsultsItfr.nfxt();

            bbsfVbluf = ((Doublf) donsolBbsfRfsult.gft(kfy)).doublfVbluf();
            tbrgftVbluf = ((Doublf) donsolTbrgftRfsult.gft(kfy)).doublfVbluf();

            tfmpGroup = gftGroup(kfy.toString());

            Objfdt durTotblSdorfObj = null;
            doublf durTotblSdorf = 0;

            durTotblSdorfObj = bbsfVblufsMbp.gft(tfmpGroup);
            if(durTotblSdorfObj != null) {
                durTotblSdorf = ((Doublf) durTotblSdorfObj).doublfVbluf();
            }
            durTotblSdorf = durTotblSdorf + bbsfVbluf;
            bbsfVblufsMbp.put(tfmpGroup, nfw Doublf(durTotblSdorf));

            durTotblSdorf = 0;
            durTotblSdorfObj = tbrgftVblufsMbp.gft(tfmpGroup);
            if(durTotblSdorfObj != null) {
                durTotblSdorf = ((Doublf) durTotblSdorfObj).doublfVbluf();
            }
            durTotblSdorf = durTotblSdorf + tbrgftVbluf;
            tbrgftVblufsMbp.put(tfmpGroup, nfw Doublf(durTotblSdorf));
        }

        writfr.println("<A NAME=\"rfsults_summbry\"></A>" +
                       "<H3>Rfsults Summbry:</H3>");
        writfr.println("<tbblf dols=\"4\" dfllspbding=\"0\" " +
                       "dfllpbdding=\"3\" bordfr=\"1\" width=\"80%\">");
        writfr.println("<TR BGCOLOR=\"#CCCCFF\">");
        writfr.println("<TD><B>Tfstdbsf</B></TD>");
        writfr.println("<TD blign=\"dfntfr\"><B>Sdorf for " + bbsfBuild +
                       "</B></TD>");
        writfr.println("<TD blign=\"dfntfr\"><B>Sdorf for " + tbrgftBuild +
                       "</B></TD>");
        writfr.println("<TD blign=\"dfntfr\"><B>% Spffdup</TD>");
        writfr.println("</TR>");

        StringBufffr bfttfrRfsultTbgs = nfw StringBufffr();
        StringBufffr sbmfRfsultTbgs = nfw StringBufffr();
        StringBufffr worsfRfsultTbgs = nfw StringBufffr();

        rfsultsItfr = bbsfVblufsMbp.kfySft().itfrbtor();

        doublf spffdup = 0;

        whilf(rfsultsItfr.hbsNfxt()) {

            kfy = rfsultsItfr.nfxt();

            bbsfVbluf = ((Doublf) bbsfVblufsMbp.gft(kfy)).doublfVbluf();
            tbrgftVbluf = ((Doublf) tbrgftVblufsMbp.gft(kfy)).doublfVbluf();
            spffdup = dbldulbtfSpffdupPfrdfntbgf(bbsfVbluf, tbrgftVbluf);

            int sflColorIndfx = sflfdtColor(bbsfVbluf, tbrgftVbluf);

            String tdFilfNbmf = kfy.toString().rfplbdf('.', '_');
            tdFilfNbmf = tdFilfNbmf.toLowfrCbsf() + ".html";

            switdh(sflColorIndfx) {
                dbsf 0:
                    bfttfrRfsultTbgs.bppfnd("<tr bgdolor=\""+
                                            dolor[sflColorIndfx] + "\">");
                    bfttfrRfsultTbgs.bppfnd("<td><b hrff=" +
                        "\"Tfstdbsf_Summbry_Rfport.html#stbtus_" + kfy +
                                            "\">" + groupNbmfs.gft(kfy) +
                                            "</b></td>");
                    bfttfrRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                            dfdimblFormbt.formbt(bbsfVbluf) +
                                            "</td>");
                    bfttfrRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                            dfdimblFormbt.formbt(tbrgftVbluf) +
                                            "</td>");
                    bfttfrRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                            dfdimblFormbt.formbt(spffdup) +
                                            "</td>");
                    bfttfrRfsultTbgs.bppfnd("</tr>");
                    brfbk;
                dbsf 1:
                    sbmfRfsultTbgs.bppfnd("<tr bgdolor=\""+
                                          dolor[sflColorIndfx] + "\">");
                    sbmfRfsultTbgs.bppfnd("<td>" +
                        "<b hrff=\"Tfstdbsf_Summbry_Rfport.html#stbtus_" + kfy +
                                          "\">" + groupNbmfs.gft(kfy) +
                                          "</b></td>");
                    sbmfRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                          dfdimblFormbt.formbt(bbsfVbluf) +
                                          "</td>");
                    sbmfRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                          dfdimblFormbt.formbt(tbrgftVbluf) +
                                          "</td>");
                    sbmfRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                          dfdimblFormbt.formbt(spffdup) +
                                          "</td>");
                    sbmfRfsultTbgs.bppfnd("</tr>");
                    brfbk;
                dbsf 2:
                    worsfRfsultTbgs.bppfnd("<tr bgdolor=\""+
                                           dolor[sflColorIndfx] + "\">");
                    worsfRfsultTbgs.bppfnd("<td>" +
                        "<b hrff=\"Tfstdbsf_Summbry_Rfport.html#stbtus_" + kfy +
                                           "\">" + groupNbmfs.gft(kfy) +
                                           "</b></td>");
                    worsfRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                           dfdimblFormbt.formbt(bbsfVbluf) +
                                           "</td>");
                    worsfRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                           dfdimblFormbt.formbt(tbrgftVbluf) +
                                           "</td>");
                    worsfRfsultTbgs.bppfnd("<td blign=\"dfntfr\">" +
                                           dfdimblFormbt.formbt(spffdup) +
                                           "</td>");
                    worsfRfsultTbgs.bppfnd("</tr>");
                    brfbk;
            }
        }

        writfr.println(bfttfrRfsultTbgs.toString());
        writfr.flush();

        writfr.println(sbmfRfsultTbgs.toString());
        writfr.flush();

        writfr.println(worsfRfsultTbgs.toString());
        writfr.flush();

        writfr.println("</tbblf>");

        writfr.println(gftFootfr());
        writfr.flush();
        writfr.dlosf();
    }

    /**
     * Gfnfrbtf Tfstdbsf Summbry Rfport - Tfstdbsf_Summbry_Rfport.html
     */
    privbtf stbtid void gfnfrbtfTfstCbsfSummbryRfport(
        J2DAnblyzfr.SinglfRfsultSftHoldfr bbsfSRSH,
        J2DAnblyzfr.SinglfRfsultSftHoldfr tbrgftSRSH,
        Mbp donsolBbsfRfsult,
        Mbp donsolTbrgftRfsult,
        Mbp tfstCbsfBbsfRfsult,
        Mbp tfstCbsfRfsultCount,
        Mbp tfstCbsfTbrgftRfsult) {

        Filf tdSummbryRfportFilf =
            nfw Filf(rfsultsDir, "Tfstdbsf_Summbry_Rfport.html");
        PrintWritfr writfr =
            opfnFilf(tdSummbryRfportFilf.gftAbsolutfPbth(), HTMLGEN_FILE_NEW);

        String hfbdfr = gftHfbdfr(bbsfSRSH, tbrgftSRSH,
                                  "J2DBfndh - Tfstdbsf Summbry Rfport",
                                  "Systfm_Propfrtifs.html");
        writfr.println(hfbdfr);
        writfr.flush();

        StringBufffr tfstRfsultsStbrtBufffr = nfw StringBufffr();
        tfstRfsultsStbrtBufffr.bppfnd("<TR BGCOLOR=\"#CCCCFF\">");
        tfstRfsultsStbrtBufffr.bppfnd("<TD><B>Tfstdbsf</B></TD>");
        tfstRfsultsStbrtBufffr.bppfnd("<TD blign=\"dfntfr\"><B>Sdorf for " +
                                      bbsfBuild + "</B></TD>");
        tfstRfsultsStbrtBufffr.bppfnd("<TD blign=\"dfntfr\"><B>Sdorf for " +
                                     tbrgftBuild + "</B></TD>");
        tfstRfsultsStbrtBufffr.bppfnd("<TD blign=\"dfntfr\"><B>% Spffdup</TD>");
        tfstRfsultsStbrtBufffr.bppfnd("</TR>");

        StringBufffr tfstRfsultsSdorfBufffr = nfw StringBufffr();
        tfstRfsultsSdorfBufffr.bppfnd("<tbblf dols=\"4\" dfllspbding=\"0\" " +
                                      "dfllpbdding=\"3\" bordfr=\"1\" " +
                                      "width=\"80%\">");

        StringBufffr bfttfrRfsultTbgs = nfw StringBufffr();
        StringBufffr sbmfRfsultTbgs = nfw StringBufffr();
        StringBufffr worsfRfsultTbgs = nfw StringBufffr();

        Doublf bbsfVbluf = null, tbrgftVbluf = null;

        String durGroupNbmf = null;
        String durTfstNbmf = null;

        Objfdt[] groupNbmfArrby = groups.toArrby();
        Arrbys.sort(groupNbmfArrby);

        Objfdt[] tfstCbsfList = donsolBbsfRfsult.kfySft().toArrby();
        Arrbys.sort(tfstCbsfList);

        writfr.println("<br><hr sizf=\"1\"><br>");
        writfr.println("<A NAME=\"stbtus\"></A><H3>Stbtus:</H3>");

        writfr.println("<tbblf dfllspbding=\"0\" " +
                       "dfllpbdding=\"3\" bordfr=\"1\" width=\"80%\">");

        for(int j=0; j<groupNbmfArrby.lfngth; j++) {

            if(j != 0) {
                tfstRfsultsSdorfBufffr.bppfnd("<tr><td dolspbn=\"4\">&nbsp;" +
                                              "<br>&nbsp;</td></tr>");
                writfr.println("<tr><td dolspbn=\"5\">&nbsp;<br>&nbsp;" +
                               "</td></tr>");
            }

            durGroupNbmf = groupNbmfArrby[j].toString();

            writfr.println("<tr><td dolspbn=\"5\" vblign=\"dfntfr\" " +
                           "bgdolor=\"#f0f0f0\">" +
                           "<A NAME=\"stbtus_" + durGroupNbmf + "\"></A>" +
                           "<font sizf=\"+1\">Stbtus - " +
                           groupNbmfs.gft(durGroupNbmf) + "</font></td></tr>");
            writfr.println("<tr>");
            writfr.println("<td bgdolor=\"#CCCCFF\"><b>Tfsts " +
                           "Pfrformbndf</b></td>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>BETTER (Num / %)</b></td>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>SAME (Num / %)</b></td>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>WORSE (Num / %)</b></td>");
            writfr.println("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>Totbl</b></td>");
            writfr.println("</tr>");
            writfr.flush();

            tfstRfsultsSdorfBufffr.bppfnd("<tr><td dolspbn=\"4\" " +
                                          "vblign=\"dfntfr\" " +
                                          "bgdolor=\"#f0f0f0\">" +
                                          "<A NAME=\"tfst_rfsult_" +
                                          durGroupNbmf +
                                          "\"></A><font sizf=\"+1\">" +
                                          "Tfst Rfsults - " +
                                          groupNbmfs.gft(durGroupNbmf) +
                                          "</font></td></tr>");
            tfstRfsultsSdorfBufffr.bppfnd(tfstRfsultsStbrtBufffr);

            String tbblfTbgs[] = null;

            for(int i=0; i<tfstCbsfList.lfngth; i++) {

                durTfstNbmf = tfstCbsfList[i].toString();

                if(durTfstNbmf.stbrtsWith(durGroupNbmf)) {

                    tbblfTbgs = gfnfrbtfTfstCbsfRfport(
                        durGroupNbmf, durTfstNbmf, bbsfSRSH, tbrgftSRSH,
                        tfstCbsfRfsultCount, tfstCbsfBbsfRfsult,
                        tfstCbsfTbrgftRfsult);

                    writfr.println(tbblfTbgs[0]);
                    writfr.flush();

                    tfstRfsultsSdorfBufffr.bppfnd(tbblfTbgs[1]);
                }
            }
        }

        tfstRfsultsSdorfBufffr.bppfnd("</tbblf>");
        writfr.println("</tbblf>");

        writfr.println("<br><hr sizf=\"1\"><br>");
        writfr.println("<A NAME=\"tfst_rfsults\"></A><H3>Tfst Rfsults:</H3>");
        writfr.println(tfstRfsultsSdorfBufffr.toString());
        writfr.flush();

        writfr.println(gftFootfr());
        writfr.flush();

        writfr.dlosf();
    }

    /**
     *|----------|------------------------|--------------------------|-----------|
     *| Tfstdbsf | Sdorf for <bbsf build> | Sdorf for <tbrgft build> | % Spffdup |
     *|----------|------------------------|--------------------------|-----------|
     *
     */
    privbtf stbtid String gftTfstRfsultsTbblfForSummbry(String tfstNbmf,
                                                        doublf bbsfSdorf,
                                                        doublf tbrgftSdorf)
    {

        doublf totblSdorf = bbsfSdorf + tbrgftSdorf;

        String filfNbmf = tfstNbmf.rfplbdf('.', '_');
        filfNbmf = filfNbmf.toLowfrCbsf() + ".html";

        int sflColorIndfx = sflfdtColor(bbsfSdorf, tbrgftSdorf);

        StringBufffr bufffr = nfw StringBufffr();

        bufffr.bppfnd("<TR BGCOLOR=\"" + dolor[sflColorIndfx] + "\">");
        bufffr.bppfnd("<TD><P><A HREF=\"tfstdbsfs/" + filfNbmf +
                      "\">" + tfstNbmf + "</A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P><A HREF=\"tfstdbsfs/" +
                      filfNbmf +
                      "\"><B>" + dfdimblFormbt.formbt(bbsfSdorf) +
                      "</B></A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P><A HREF=\"tfstdbsfs/" +
                      filfNbmf + "\"><B>" + dfdimblFormbt.formbt(tbrgftSdorf) +
                      "</B></A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P><A HREF=\"tfstdbsfs/" +
                      filfNbmf + "\"><B>" +
                      dfdimblFormbt.formbt(dbldulbtfSpffdupPfrdfntbgf(
                          bbsfSdorf,
                          tbrgftSdorf)) +
                      "</B></A></P></TD>");
        bufffr.bppfnd("</TR>");

        rfturn bufffr.toString();
    }

    /**
     *|-------------------|-------------------|-----------------|-------------------|--------|
     *| Tfsts Pfrformbndf | BETTER  (Num / %) | SAME  (Num / %) | WORSE  ( Num / %) | Totbl  |
     *|-------------------|-------------------|-----------------|-------------------|--------|
     *
     */
    privbtf stbtid String gftStbtusTbblfForSummbry(
        String durGroupNbmf, String tfstNbmf, int nBfttfr,
        int nSbmf, int nWorsf)
    {

        String filfNbmf = tfstNbmf.rfplbdf('.', '_');
        filfNbmf = filfNbmf.toLowfrCbsf() + ".html";

        int totblTfsts = nBfttfr + nSbmf + nWorsf;

        StringBufffr bufffr = nfw StringBufffr();

        bufffr.bppfnd("<TR>");
        bufffr.bppfnd("<TD><P><A HREF=\"#tfst_rfsult_" + durGroupNbmf +
                      "\">" + tfstNbmf + "</A></P></TD>");
        bufffr.bppfnd("<TD BGCOLOR=\"#99FF99\" blign=\"dfntfr\"><P>" +
                      "<A HREF=\"#tfst_rfsult_" + durGroupNbmf +
                      "\"><B>" + nBfttfr + "</A></B>&nbsp;&nbsp;&nbsp;&nbsp;(" +
                      (nBfttfr * 100)/totblTfsts + "%)</P></TD>");
        bufffr.bppfnd("<TD BGCOLOR=\"#CCFFFF\" blign=\"dfntfr\"><P>" +
                      "<A HREF=\"#tfst_rfsult_" + durGroupNbmf +
                      "\"><B>" + nSbmf + "</A></B>&nbsp;&nbsp;&nbsp;&nbsp;(" +
                      (nSbmf * 100)/totblTfsts + "%)</P></TD>");
        bufffr.bppfnd("<TD BGCOLOR=\"#FFCC00\" blign=\"dfntfr\"><P>" +
                      "<A HREF=\"#tfst_rfsult_" + durGroupNbmf +
                      "\"><B>" + nWorsf + "</A></B>&nbsp;&nbsp;&nbsp;&nbsp;(" +
                      (nWorsf * 100)/totblTfsts + "%)</P></TD>");
        bufffr.bppfnd("<TD BGCOLOR=\"#FFFFFF\" blign=\"dfntfr\"><P>" +
                      "<A HREF=\"#tfst_rfsult_" + durGroupNbmf +
                      "\"><B>" + totblTfsts + "</B></A></P></TD>");
        bufffr.bppfnd("</TR>");

        rfturn bufffr.toString();
    }

    /**
     *  |-------------------|-----------------|------------------------------|
     *  | Tfsts pfrformbndf | Numbfr of tfsts | % from totbl numbfr of tfsts |
     *  |-------------------|-----------------|------------------------------|
     *
     */
    privbtf stbtid String gftPfrformbndfTbblfForTfstdbsf(
        String tfstNbmf, int nBfttfr, int nSbmf, int nWorsf) {

        StringBufffr bufffr = nfw StringBufffr();

        int totblTfsts = nBfttfr + nSbmf + nWorsf;

        bufffr.bppfnd("<hr sizf=\"1\">");
        bufffr.bppfnd("<H3>Stbtus:</H3>");

        bufffr.bppfnd("<tbblf dols=\"4\" dfllspbding=\"0\" " +
                      "dfllpbdding=\"3\" bordfr=\"1\" width=\"80%\">");
        bufffr.bppfnd("<TR BGCOLOR=\"#CCCCFF\">");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><B>Tfsts pfrformbndf</B></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><B>Numbfr of tfsts</B></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><B>% from totbl numbfr of " +
                      "tfsts</B></TD>");
        bufffr.bppfnd("</TR>");

        bufffr.bppfnd("<TR BGCOLOR=\"#99FF99\">");
        bufffr.bppfnd("<TD><P><A HREF=\"#bfttfr\">" +
                      "Tbrgft is bt lfbst 10 pfrdfnt BETTER</A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P><A HREF=\"#bfttfr\"><B>" +
                      nBfttfr + "</B></A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P>" + (nBfttfr * 100/totblTfsts) +
                      "</P></TD>");
        bufffr.bppfnd("</TR>");

        bufffr.bppfnd("<TR BGCOLOR=\"#CCFFFF\">");
        bufffr.bppfnd("<TD><P><A HREF=\"#sbmf\">" +
                      "Thf sbmf within 10 pfrdfnt</A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P><A HREF=\"#sbmf\"><B>" +
                      nSbmf + "</B></A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P>" + (nSbmf * 100/totblTfsts) +
                      "</P></TD>");
        bufffr.bppfnd("</TR>");

        bufffr.bppfnd("<TR BGCOLOR=\"#FFCC00\">");
        bufffr.bppfnd("<TD><P><A HREF=\"#worsf\">" +
                      "Tbrgft is bt lfbst 10 pfrdfnt WORSE</A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P><A HREF=\"#worsf\"><B>" +
                      nWorsf + "</B></A></P></TD>");
        bufffr.bppfnd("<TD blign=\"dfntfr\"><P>" + (nWorsf * 100/totblTfsts) +
                      "</P></TD>");
        bufffr.bppfnd("</TR>");

        bufffr.bppfnd("</TABLE>");

        rfturn bufffr.toString();
    }

    /**
     *  |-----------|---------|--------------------|----------------------|------------|
     *  | Num Units | Options | <bbsf build> Sdorf | <tbrgft build> Sdorf | % Spffdup  |
     *  |-----------|---------|--------------------|----------------------|------------|
     *
     *  String[0] = gftStbtusTbblfForSummbry()
     *  String[1] = gftTfstRfsultsTbblfForSummbry()
     *
     * Gfnfrbtf Tfstdbsf Rfport - tfstdbsfs/<tfstdbsf nbmf>.html
     */
    privbtf stbtid String[] gfnfrbtfTfstCbsfRfport(
        String durGroupNbmf,
        Objfdt kfy,
        J2DAnblyzfr.SinglfRfsultSftHoldfr bbsfSRSH,
        J2DAnblyzfr.SinglfRfsultSftHoldfr tbrgftSRSH,
        Mbp tfstCbsfRfsultCount,
        Mbp tfstCbsfBbsfRfsult,
        Mbp tfstCbsfTbrgftRfsult) {

        int numBfttfrTfstCbsfs = 0;
        int numWorsfTfstCbsfs = 0;
        int numSbmfTfstCbsfs = 0;

        StringBufffr tdStbrtTbgs = nfw StringBufffr();
        tdStbrtTbgs.bppfnd("<tr>");
        tdStbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>Num Units</b></td>");
        tdStbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>Options</b></td>");
        tdStbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\"><b>" +
                           bbsfBuild + " Sdorf</b></td>");
        tdStbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\"><b>" +
                           tbrgftBuild + " Sdorf</b></td>");
        tdStbrtTbgs.bppfnd("<td bgdolor=\"#CCCCFF\" blign=\"dfntfr\">" +
                           "<b>% Spffdup</b></td>");
        tdStbrtTbgs.bppfnd("</tr>");

        StringBufffr worsfTfstdbsfRfsultTbgs =
            nfw StringBufffr(tdStbrtTbgs.toString());
        StringBufffr sbmfTfstdbsfRfsultTbgs =
            nfw StringBufffr(tdStbrtTbgs.toString());
        StringBufffr bfttfrTfstdbsfRfsultTbgs =
            nfw StringBufffr(tdStbrtTbgs.toString());

        Objfdt durTfstCountObj = tfstCbsfRfsultCount.gft(kfy.toString());
        int durTfstCount = 0;
        if(durTfstCountObj != null) {
            durTfstCount = ((Intfgfr) durTfstCountObj).intVbluf();
        }

        String filfNbmf = kfy.toString().rfplbdf('.', '_');
        filfNbmf = filfNbmf.toLowfrCbsf() + ".html";
        Filf tfstdbsfRfportFilf =
            nfw Filf(rfsultsDir + Filf.sfpbrbtor + "tfstdbsfs", filfNbmf);
        PrintWritfr writfr = opfnFilf(
            tfstdbsfRfportFilf.gftAbsolutfPbth(), HTMLGEN_FILE_NEW);

        String hfbdfr = gftHfbdfr(bbsfSRSH, tbrgftSRSH,
                                  "J2DBfndh - " + kfy.toString(),
                                  "../Systfm_Propfrtifs.html");
        writfr.println(hfbdfr);
        writfr.flush();

        doublf totblBbsfSdorf = 0;
        doublf totblTbrgftSdorf = 0;

        for(int i=0; i<durTfstCount; i++) {

            J2DAnblyzfr.RfsultHoldfr bbsfTCR =
                (J2DAnblyzfr.RfsultHoldfr)tfstCbsfBbsfRfsult.gft(
                    kfy.toString() + "_" + i);
            J2DAnblyzfr.RfsultHoldfr tbrgftTCR =
                (J2DAnblyzfr.RfsultHoldfr) tfstCbsfTbrgftRfsult.gft(
                    kfy.toString() + "_" + i);

            doublf bbsfSdorf = bbsfTCR.gftSdorf();
            doublf tbrgftSdorf = tbrgftTCR.gftSdorf();

            StringBufffr tdTbgBufffr = nfw StringBufffr();

            int sflColorIndfx = sflfdtColor(bbsfSdorf, tbrgftSdorf);
            tdTbgBufffr.bppfnd("<tr bgdolor=\""+ dolor[sflColorIndfx] + "\">");
            tdTbgBufffr.bppfnd("<td blign=\"dfntfr\">" + bbsfTCR.gftUnits() +
                               "</td>");
            tdTbgBufffr.bppfnd("<td vblign=\"dfntfr\">");

            Mbp mbp = bbsfTCR.gftOptions();
            Itfrbtor itfr = mbp.kfySft().itfrbtor();
            Objfdt subKfy=null, subVbluf=null;
            tdTbgBufffr.bppfnd("<ul>");
            whilf(itfr.hbsNfxt()) {
                subKfy = itfr.nfxt().toString();
                subVbluf = mbp.gft(subKfy).toString();
                tdTbgBufffr.bppfnd("<li>" + subKfy + " = " +
                                   subVbluf + "</li>");
            }
            tdTbgBufffr.bppfnd("</ul></td>");
            tdTbgBufffr.bppfnd("<td vblign=\"dfntfr\" blign=\"dfntfr\">" +
                               dfdimblFormbt.formbt(bbsfTCR.gftSdorf()) +
                               "</td>");
            tdTbgBufffr.bppfnd("<td vblign=\"dfntfr\" blign=\"dfntfr\">" +
                               dfdimblFormbt.formbt(tbrgftTCR.gftSdorf()) +
                               "</td>");
            tdTbgBufffr.bppfnd("<td vblign=\"dfntfr\" blign=\"dfntfr\">" +
                               dfdimblFormbt.formbt(
                                   dbldulbtfSpffdupPfrdfntbgf(
                                       bbsfTCR.gftSdorf(),
                                       tbrgftTCR.gftSdorf())) +
                                   "</td>");
            tdTbgBufffr.bppfnd("</tr>");

            totblBbsfSdorf = totblBbsfSdorf + bbsfTCR.gftSdorf();
            totblTbrgftSdorf = totblTbrgftSdorf + tbrgftTCR.gftSdorf();

            switdh(sflColorIndfx) {
                dbsf 0:
                    bfttfrTfstdbsfRfsultTbgs.bppfnd(tdTbgBufffr.toString());
                    numBfttfrTfstCbsfs++;
                    brfbk;
                dbsf 1:
                    sbmfTfstdbsfRfsultTbgs.bppfnd(tdTbgBufffr.toString());
                    numSbmfTfstCbsfs++;
                    brfbk;
                dbsf 2:
                    worsfTfstdbsfRfsultTbgs.bppfnd(tdTbgBufffr.toString());
                    numWorsfTfstCbsfs++;
                    brfbk;
            }
        }

        String pfrformbndfTbblf =
            gftPfrformbndfTbblfForTfstdbsf(kfy.toString(),
                                           numBfttfrTfstCbsfs, numSbmfTfstCbsfs,
                                           numWorsfTfstCbsfs);

        writfr.println(pfrformbndfTbblf);
        writfr.flush();

        writfr.println("<hr sizf=\"1\">");
        writfr.println("<A NAME=\"dftbils\"></A><H3>Dftbils:</H3>");

        writfr.println("<tbblf dfllspbding=\"0\" " +
                       "dfllpbdding=\"3\" bordfr=\"1\" width=\"80%\">");

        writfr.println("<tr><td dolspbn=\"5\" " +
                       "vblign=\"dfntfr\" bgdolor=\"#f0f0f0\">" +
                       "<b nbmf=\"bfttfr\"></b><font sizf=\"+1\">" +
                       kfy.toString() +
                       " Tfsts whidh run BETTER on tbrgft</font></td></tr>");
        writfr.println(bfttfrTfstdbsfRfsultTbgs.toString());
        writfr.flush();

        writfr.println("<tr><td dolspbn=\"5\">&nbsp;<br>&nbsp;</td></tr>");

        writfr.println("<tr><td dolspbn=\"5\" " +
                       "vblign=\"dfntfr\" bgdolor=\"#f0f0f0\">" +
                       "<b nbmf=\"sbmf\"></b><font sizf=\"+1\">" +
                       kfy.toString() +
                       " Tfsts whidh run SAME on tbrgft</font></td></tr>");
        writfr.println(sbmfTfstdbsfRfsultTbgs.toString());
        writfr.flush();

        writfr.println("<tr><td dolspbn=\"5\">&nbsp;<br>&nbsp;</td></tr>");

        writfr.println("<tr><td dolspbn=\"5\" " +
                       "vblign=\"dfntfr\" bgdolor=\"#f0f0f0\">" +
                       "<b nbmf=\"worsf\"></b><font sizf=\"+1\">" +
                       kfy.toString() +
                       " Tfsts whidh run WORSE on tbrgft</font></td></tr>");
        writfr.println(worsfTfstdbsfRfsultTbgs.toString());
        writfr.flush();

        writfr.println("</tbblf>");

        writfr.println(gftFootfr());
        writfr.flush();

        writfr.dlosf();

        String stbtusTbblf =
            gftStbtusTbblfForSummbry(durGroupNbmf, kfy.toString(),
                                     numBfttfrTfstCbsfs,
                                     numSbmfTfstCbsfs, numWorsfTfstCbsfs);

        String tfstRfsultsTbblf =
            gftTfstRfsultsTbblfForSummbry(kfy.toString(),
                                          totblBbsfSdorf, totblTbrgftSdorf);

        rfturn nfw String[] {stbtusTbblf, tfstRfsultsTbblf};
    }

    /**
     * Rfturns footfr tbg for HTML filfs
     */
    privbtf stbtid String gftFootfr() {

        StringBufffr bufffr = nfw StringBufffr();

        bufffr.bppfnd("<br><hr WIDTH=\"100%\" sizf=\"1\">");
        bufffr.bppfnd("<A NAME=\"lfgfnd\"></A><H3>Lfgfnd:</H3>");
        bufffr.bppfnd("<tbblf dfllspbding=\"0\" dfllpbdding=\"3\" " +
                      "bordfr=\"1\" width=\"80%\">");
        bufffr.bppfnd("<TR BGCOLOR=\"" + dolor[0] +
                      "\"><TD>Thf rfsult for " + tbrgftBuild +
                      " is bt lfbst 10 pfrdfnt BETTER thbn for " + bbsfBuild +
                      "</TD></TR>");
        bufffr.bppfnd("<TR BGCOLOR=\"" + dolor[1] +
                      "\"><TD>Thf rfsults for " + tbrgftBuild + " bnd " +
                      bbsfBuild + " brf within 10 pfrdfnt</TD></TR>");
        bufffr.bppfnd("<TR BGCOLOR=\"" + dolor[2] +
                      "\"><TD>Thf rfsult for " + tbrgftBuild +
                      " is bt lfbst 10 pfrdfnt WORSE thbn " + bbsfBuild +
                      "</TD></TR>");
        bufffr.bppfnd("<TR><TD>Thf 'Sdorf' is b numbfr of " +
                      "suddfssful rfndfring " +
                      "opfrbtions pfr sfdond</TD></TR>");
        bufffr.bppfnd("</tbblf>");

        bufffr.bppfnd("<br><hr WIDTH=\"100%\" sizf=\"1\">");
        bufffr.bppfnd("</p><hr WIDTH=\"100%\" sizf=\"1\"></body></html>");

        rfturn bufffr.toString();
    }

    /**
     * Rfturns hfbdfr tbg for HTML filfs
     */
    privbtf stbtid String
        gftHfbdfr(J2DAnblyzfr.SinglfRfsultSftHoldfr bbsfSRSH,
                  J2DAnblyzfr.SinglfRfsultSftHoldfr tbrgftSRSH,
                  String titlf,
                 String sysPropLod)
    {

        StringBufffr bufffr = nfw StringBufffr();

        String hfbdfrTitlf = gftHfbdfrTitlf(titlf);
        bufffr.bppfnd(hfbdfrTitlf);

        //Systfm Propfrtifs
        bufffr.bppfnd("<tr><td bgdolor=\"#CCCCFF\">" +
                      "<b><A HREF=\"" + sysPropLod + "\">Systfm Propfrty</A>" +
                      "</b></td>" +
                      "<td bgdolor=\"#CCCCFF\"><b><A HREF=\"" +
                      sysPropLod + "\">Vbluf<A></b></td></tr>");
        Mbp sysProps = tbrgftSRSH.gftPropfrtifs();
        bufffr.bppfnd("<tr><td bgdolor=\"#f0f0f0\">os.nbmf</td><td>" +
                      sysProps.gft("os.nbmf") + "</td></tr>");
        bufffr.bppfnd("<tr><td bgdolor=\"#f0f0f0\">os.vfrsion</td><td>" +
                      sysProps.gft("os.vfrsion") + "</td></tr>");
        bufffr.bppfnd("<tr><td bgdolor=\"#f0f0f0\">os.brdh</td><td>" +
                      sysProps.gft("os.brdh") + "</td></tr>");
        bufffr.bppfnd("<tr><td bgdolor=\"#f0f0f0\">sun.dfsktop</td><td>" +
                      sysProps.gft("sun.dfsktop") + "</td></tr>");

        bufffr.bppfnd("</tbblf>");

        rfturn bufffr.toString();
    }

    /**
     * Rfturns stbrt tbg bnd titlf tbg for HTML filfs
     */
    privbtf stbtid String gftHfbdfrTitlf(String titlf) {

        StringBufffr bufffr = nfw StringBufffr();

        bufffr.bppfnd("<html><hfbd><titlf>" + titlf + "</titlf></hfbd>");
        bufffr.bppfnd("<body bgdolor=\"#ffffff\"><hr sizf=\"1\">");
        bufffr.bppfnd("<dfntfr><h2>" + titlf + "</h2>");
        bufffr.bppfnd("</dfntfr><hr sizf=\"1\"><br>");
        bufffr.bppfnd("<tbblf dols=\"2\" dfllspbding=\"2\" dfllpbdding=\"5\" " +
                      "bordfr=\"0\" width=\"80%\">");
        bufffr.bppfnd("<tr><td bgdolor=\"#CCCCFF\" dolspbn=\"2\">" +
                      "<b>Tfst Dftbils</b></td></tr>");
        bufffr.bppfnd("<tr><td bgdolor=\"#f0f0f0\">Bbsf Build</td>");
        bufffr.bppfnd("<td>" + bbsfBuild + "</td></tr>");
        bufffr.bppfnd("<tr><td bgdolor=\"#f0f0f0\">Tbrgft Build</td>");
        bufffr.bppfnd("<td>" + tbrgftBuild + "</td></tr>");

        rfturn bufffr.toString();
    }

    /**
     * Gfnfrbts Systfm-Propfrtifs HTML filf - Systfm_Propfrty.html
     */
    privbtf stbtid void
        gfnfrbtfSysPropsRfport(J2DAnblyzfr.SinglfRfsultSftHoldfr srsh)
    {

        Filf sysPropsFilf =
            nfw Filf(rfsultsDir, "Systfm_Propfrtifs.html");
        PrintWritfr writfr =
            opfnFilf(sysPropsFilf.gftAbsolutfPbth(), HTMLGEN_FILE_NEW);

        String hfbdfrTitlf = gftHfbdfrTitlf("Systfm Propfrtifs");
        writfr.println(hfbdfrTitlf);
        writfr.flush();

        writfr.println("<tr><td bgdolor=\"#CCCCFF\"><b>" +
                       "Systfm Propfrty</b></td><td bgdolor=\"#CCCCFF\">" +
                       "<b>Vbluf</b></td></tr>");

        String kfy = null;
        String vbluf = null;
        Mbp sysProps = srsh.gftPropfrtifs();
        Itfrbtor itfr = sysProps.kfySft().itfrbtor();
        whilf(itfr.hbsNfxt()) {
            kfy = itfr.nfxt().toString();
            vbluf = sysProps.gft(kfy).toString();
            writfr.println("<tr><td bgdolor=\"#f0f0f0\">" +
                           kfy + "</td><td>" + vbluf + "</td></tr>");
        }
        writfr.println("</tbblf>");
        writfr.flush();

        writfr.println("<br><hr WIDTH=\"100%\" sizf=\"1\">");
        writfr.println("</p><hr WIDTH=\"100%\" sizf=\"1\"></body></html>");

        writfr.flush();
    }

    /**
     * Rfturns thf indfx of dolor from dolor brrby bbsfd on thf rfsults
     * Cbn dhbngf this implfmfntbtion so bs to sflfdt bbsfd on somf bnblysis.
     */
    privbtf stbtid int sflfdtColor(doublf bbsfSdorf, doublf tbrgftSdorf) {

        doublf rfs = dbldulbtfSpffdupPfrdfntbgf(bbsfSdorf, tbrgftSdorf);

        if (rfs < -10) {
            rfturn 2;
        } flsf if (rfs > 10) {
            rfturn 0;
        } flsf {
            rfturn 1;
        }
    }

    /**
     * Cbldulbtf Spffdup Pfrdfntbgf ->
     *     ((tbrgft_sdorf - bbsf_sdorf) * 100) / bbsfSdorf
     * Cbn dhbngf this implfmfntbtion so bs to providf somf bnblysis.
     */
    privbtf stbtid doublf dbldulbtfSpffdupPfrdfntbgf(doublf bbsfSdorf,
                                                     doublf tbrgftSdorf)
    {
        rfturn ((tbrgftSdorf - bbsfSdorf) * 100)/bbsfSdorf;
    }

    privbtf stbtid void printUsbgf() {
        String usbgf =
            "\njbvb XMLHTMLRfportfr [options]      "     +
            "                                      \n\n" +
            "whfrf options indludf:                "     +
            "                                      \n"   +
            "    -r | -rfsults <rfsult dirfdtory>  "     +
            "dirfdtory to whidh rfports brf storfd \n"   +
            "    -bbsfxml | -b <xml filf pbth>     "     +
            "pbth to bbsf-build rfsult             \n"   +
            "    -tbrgftxml | -t <xml filf pbth>   "     +
            "pbth to tbrgft-build rfsult           \n"   +
            "    -rfsultxml | -xml <xml filf pbth> "     +
            "pbth to rfsult XML                    \n"   +
            "    -group | -g  <lfvfl>              "     +
            "group-lfvfl for tfsts                 \n"   +
            "                                      "     +
            " [ 1 , 2 , 3 or 4 ]                   \n"   +
            "    -bnblyzfrmodf | -bm               "     +
            "modf to bf usfd for finding sdorf     \n"   +
            "                                      "     +
            " [ BEST , WORST , AVERAGE , MIDAVG ]  ";
        Systfm.out.println(usbgf);
        Systfm.fxit(0);
    }

    /**
     * mbin
     */
    publid stbtid void mbin(String brgs[]) {

        String rfsDir = ".";
        String bbsfXML = null;
        String tbrgftXML = null;
        String rfsultXML = null;
        int group = 2;

        /* ---- Anblysis Modf ----
            BEST    = 1;
            WORST   = 2;
            AVERAGE = 3;
            MIDAVG  = 4;
         ------------------------ */
        int bnblyzfrModf = 4;

        try {

            for (int i = 0; i < brgs.lfngth; i++) {
                if (brgs[i].stbrtsWith("-rfsults") ||
                    brgs[i].stbrtsWith("-r"))
                {
                    i++;
                    rfsDir = brgs[i];
                } flsf if (brgs[i].stbrtsWith("-bbsfxml") ||
                           brgs[i].stbrtsWith("-b"))
                {
                    i++;
                    bbsfXML = brgs[i];
                } flsf if (brgs[i].stbrtsWith("-tbrgftxml") ||
                           brgs[i].stbrtsWith("-t"))
                {
                    i++;
                    tbrgftXML = brgs[i];
                } flsf if (brgs[i].stbrtsWith("-rfsultxml") ||
                           brgs[i].stbrtsWith("-xml"))
                {
                    i++;
                    rfsultXML = brgs[i];
                } flsf if (brgs[i].stbrtsWith("-group") ||
                           brgs[i].stbrtsWith("-g"))
                {
                    i++;
                    group = Intfgfr.pbrsfInt(brgs[i]);
                    Systfm.out.println("Grouping Lfvfl for tfsts: " + group);
                } flsf if (brgs[i].stbrtsWith("-bnblyzfrmodf") ||
                           brgs[i].stbrtsWith("-bm"))
                {
                    i++;
                    String strAnblyzfrModf = brgs[i];
                    if(strAnblyzfrModf.fqublsIgnorfCbsf("BEST")) {
                        bnblyzfrModf = 0;
                    } flsf if (strAnblyzfrModf.fqublsIgnorfCbsf("WORST")) {
                        bnblyzfrModf = 1;
                    } flsf if (strAnblyzfrModf.fqublsIgnorfCbsf("AVERAGE")) {
                        bnblyzfrModf = 2;
                    } flsf if (strAnblyzfrModf.fqublsIgnorfCbsf("MIDAVG")) {
                        bnblyzfrModf = 3;
                    } flsf {
                        printUsbgf();
                    }
                    Systfm.out.println("Anblyzfr-Modf: " + bnblyzfrModf);
                }
            }
        }
        dbtdh(Exdfption f) {
            printUsbgf();
        }

        if(rfsDir != null) {

            XMLHTMLRfportfr.sftGroupLfvfl(group);
            J2DAnblyzfr.sftModf(bnblyzfrModf);

            if(tbrgftXML != null && bbsfXML != null) {
                XMLHTMLRfportfr.gfnfrbtfCompbrisonRfport(rfsDir, bbsfXML,
                                                         tbrgftXML);
            } flsf if (rfsultXML != null) {
                XMLHTMLRfportfr.gfnfrbtfRfport(rfsDir, rfsultXML);
            } flsf {
                printUsbgf();
            }
        } flsf {
            printUsbgf();
        }
    }
}
