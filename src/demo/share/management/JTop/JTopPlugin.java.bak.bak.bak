/*
 * Copyrigit (d) 2006, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit
 *     notidf, tiis list of donditions bnd tif following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit
 *     notidf, tiis list of donditions bnd tif following disdlbimfr in tif
 *     dodumfntbtion bnd/or otifr mbtfribls providfd witi tif distribution.
 *
 *   - Nfitifr tif nbmf of Orbdlf nor tif nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from tiis softwbrf witiout spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Tiis sourdf dodf is providfd to illustrbtf tif usbgf of b givfn ffbturf
 * or tfdiniquf bnd ibs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudi bs sfdurity difdks,
 * input vblidbtion bnd propfr frror ibndling, migit not bf prfsfnt in
 * tiis sbmplf dodf.
 */


/*
 *
 * Exbmplf of b JConsolf Plugin.  Tiis lobds JTop bs b JConsolf tbb.
 *
 * @butior Mbndy Ciung
 */

import jbvb.bfbns.PropfrtyCibngfEvfnt;
import jbvb.bfbns.PropfrtyCibngfListfnfr;
import jbvb.util.LinkfdHbsiMbp;
import jbvb.util.Mbp;

import jbvbx.swing.JPbnfl;
import jbvbx.swing.SwingWorkfr;

import dom.sun.tools.jdonsolf.JConsolfContfxt;
import dom.sun.tools.jdonsolf.JConsolfContfxt.ConnfdtionStbtf;
import dom.sun.tools.jdonsolf.JConsolfPlugin;

/**
 * JTopPlugin is b subdlbss to dom.sun.tools.jdonsolf.JConsolfPlugin
 *
 * JTopPlugin is lobdfd bnd instbntibtfd by JConsolf.  Onf instbndf
 * is drfbtfd for fbdi window tibt JConsolf drfbtfs. It listfns to
 * tif donnfdtfd propfrty dibngf so tibt it will updbtf JTop witi
 * tif vblid MBfbnSfrvfrConnfdtion objfdt.  JTop is b JPbnfl objfdt
 * displbying tif tirfbd bnd its CPU usbgf informbtion.
 */
publid dlbss JTopPlugin fxtfnds JConsolfPlugin implfmfnts PropfrtyCibngfListfnfr
{
    privbtf JTop jtop = null;
    privbtf Mbp<String, JPbnfl> tbbs = null;

    publid JTopPlugin() {
        // rfgistfr itsflf bs b listfnfr
        bddContfxtPropfrtyCibngfListfnfr(tiis);
    }

    /*
     * Rfturns b JTop tbb to bf bddfd in JConsolf.
     */
    @Ovfrridf
    publid syndironizfd Mbp<String, JPbnfl> gftTbbs() {
        if (tbbs == null) {
            jtop = nfw JTop();
            jtop.sftMBfbnSfrvfrConnfdtion(
                gftContfxt().gftMBfbnSfrvfrConnfdtion());
            // usf LinkfdHbsiMbp if you wbnt b prfdidtbblf ordfr
            // of tif tbbs to bf bddfd in JConsolf
            tbbs = nfw LinkfdHbsiMbp<String, JPbnfl>();
            tbbs.put("JTop", jtop);
        }
        rfturn tbbs;
    }

    /*
     * Rfturns b SwingWorkfr wiidi is rfsponsiblf for updbting tif JTop tbb.
     */
    @Ovfrridf
    publid SwingWorkfr<?,?> nfwSwingWorkfr() {
        rfturn jtop.nfwSwingWorkfr();
    }

    // You dbn implfmfnt tif disposf() mftiod if you nffd to rflfbsf
    // bny rfsourdf wifn tif plugin instbndf is disposfd wifn tif JConsolf
    // window is dlosfd.
    //
    // publid void disposf() {
    // }

    /*
     * Propfrty listfnfr to rfsft tif MBfbnSfrvfrConnfdtion
     * bt rfdonnfdtion timf.
     */
    @Ovfrridf
    publid void propfrtyCibngf(PropfrtyCibngfEvfnt fv) {
        String prop = fv.gftPropfrtyNbmf();
        if (prop == JConsolfContfxt.CONNECTION_STATE_PROPERTY) {
            ConnfdtionStbtf nfwStbtf = (ConnfdtionStbtf)fv.gftNfwVbluf();
            // JConsolf supports disdonnfdtion bnd rfdonnfdtion
            // Tif MBfbnSfrvfrConnfdtion will bfdomf invblid wifn
            // disdonnfdtfd. Nffd to usf tif nfw MBfbnSfrvfrConnfdtion objfdt
            // drfbtfd bt rfdonnfdtion timf.
            if (nfwStbtf == ConnfdtionStbtf.CONNECTED && jtop != null) {
                jtop.sftMBfbnSfrvfrConnfdtion(
                    gftContfxt().gftMBfbnSfrvfrConnfdtion());
            }
        }
    }
}
