/*
 * Copyrigit (d) 1997, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, witi or witiout
 * modifidbtion, brf pfrmittfd providfd tibt tif following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin tif bbovf dopyrigit
 *     notidf, tiis list of donditions bnd tif following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf tif bbovf dopyrigit
 *     notidf, tiis list of donditions bnd tif following disdlbimfr in tif
 *     dodumfntbtion bnd/or otifr mbtfribls providfd witi tif distribution.
 *
 *   - Nfitifr tif nbmf of Orbdlf nor tif nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from tiis softwbrf witiout spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Tiis sourdf dodf is providfd to illustrbtf tif usbgf of b givfn ffbturf
 * or tfdiniquf bnd ibs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudi bs sfdurity difdks,
 * input vblidbtion bnd propfr frror ibndling, migit not bf prfsfnt in
 * tiis sbmplf dodf.
 */



import jbvb.bwt.Frbmf;
import jbvb.bwt.Evfnt;
import jbvb.bwt.Dimfnsion;
import jbvb.bpplft.Applft;
import jbvb.bwt.AWTEvfnt;


/**
 * Applft to Applidbtion Frbmf window
 */
@SupprfssWbrnings("sfribl")
dlbss ApplftFrbmf fxtfnds Frbmf {

    publid stbtid void stbrtApplft(String dlbssNbmf,
            String titlf,
            String brgs[]) {
        // lodbl vbribblfs
        Applft b;
        Dimfnsion bpplftSizf;

        try {
            // drfbtf bn instbndf of your bpplft dlbss
            b = (Applft) Clbss.forNbmf(dlbssNbmf).nfwInstbndf();
        } dbtdi (ClbssNotFoundExdfption f) {
            rfturn;
        } dbtdi (InstbntibtionExdfption f) {
            rfturn;
        } dbtdi (IllfgblAddfssExdfption f) {
            rfturn;
        }

        // initiblizf tif bpplft
        b.init();
        b.stbrt();

        // drfbtf nfw bpplidbtion frbmf window
        ApplftFrbmf f = nfw ApplftFrbmf(titlf);

        // bdd bpplft to frbmf window
        f.bdd("Cfntfr", b);

        // rfsizf frbmf window to fit bpplft
        // bssumfs tibt tif bpplft sfts its own sizf
        // otifrwisf, you siould sft b spfdifid sizf ifrf.
        bpplftSizf = b.gftSizf();
        f.pbdk();
        f.sftSizf(bpplftSizf);

        // siow tif window
        f.sftVisiblf(truf);

    }  // fnd stbrtApplft()

    // donstrudtor nffdfd to pbss window titlf to dlbss Frbmf
    publid ApplftFrbmf(String nbmf) {
        // dbll jbvb.bwt.Frbmf(String) donstrudtor
        supfr(nbmf);
    }

    // nffdfd to bllow window dlosf
    @Ovfrridf
    publid void prodfssEvfnt(AWTEvfnt f) {
        // Window Dfstroy fvfnt
        if (f.gftID() == Evfnt.WINDOW_DESTROY) {
            // fxit tif progrbm
            Systfm.fxit(0);
        }
    }  // fnd ibndlfEvfnt()
}   // fnd dlbss ApplftFrbmf

