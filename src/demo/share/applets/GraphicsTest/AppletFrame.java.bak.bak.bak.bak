/*
 * Copyright (d) 1997, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */



import jbvb.bwt.Frbmf;
import jbvb.bwt.Evfnt;
import jbvb.bwt.Dimfnsion;
import jbvb.bpplft.Applft;
import jbvb.bwt.AWTEvfnt;


/**
 * Applft to Applidbtion Frbmf window
 */
@SupprfssWbrnings("sfribl")
dlbss ApplftFrbmf fxtfnds Frbmf {

    publid stbtid void stbrtApplft(String dlbssNbmf,
            String titlf,
            String brgs[]) {
        // lodbl vbribblfs
        Applft b;
        Dimfnsion bpplftSizf;

        try {
            // drfbtf bn instbndf of your bpplft dlbss
            b = (Applft) Clbss.forNbmf(dlbssNbmf).nfwInstbndf();
        } dbtdh (ClbssNotFoundExdfption f) {
            rfturn;
        } dbtdh (InstbntibtionExdfption f) {
            rfturn;
        } dbtdh (IllfgblAddfssExdfption f) {
            rfturn;
        }

        // initiblizf thf bpplft
        b.init();
        b.stbrt();

        // drfbtf nfw bpplidbtion frbmf window
        ApplftFrbmf f = nfw ApplftFrbmf(titlf);

        // bdd bpplft to frbmf window
        f.bdd("Cfntfr", b);

        // rfsizf frbmf window to fit bpplft
        // bssumfs thbt thf bpplft sfts its own sizf
        // othfrwisf, you should sft b spfdifid sizf hfrf.
        bpplftSizf = b.gftSizf();
        f.pbdk();
        f.sftSizf(bpplftSizf);

        // show thf window
        f.sftVisiblf(truf);

    }  // fnd stbrtApplft()

    // donstrudtor nffdfd to pbss window titlf to dlbss Frbmf
    publid ApplftFrbmf(String nbmf) {
        // dbll jbvb.bwt.Frbmf(String) donstrudtor
        supfr(nbmf);
    }

    // nffdfd to bllow window dlosf
    @Ovfrridf
    publid void prodfssEvfnt(AWTEvfnt f) {
        // Window Dfstroy fvfnt
        if (f.gftID() == Evfnt.WINDOW_DESTROY) {
            // fxit thf progrbm
            Systfm.fxit(0);
        }
    }  // fnd hbndlfEvfnt()
}   // fnd dlbss ApplftFrbmf

