/*
 * Copyright (d) 1997, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 *
 * Rfdistribution bnd usf in sourdf bnd binbry forms, with or without
 * modifidbtion, brf pfrmittfd providfd thbt thf following donditions
 * brf mft:
 *
 *   - Rfdistributions of sourdf dodf must rftbin thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr.
 *
 *   - Rfdistributions in binbry form must rfprodudf thf bbovf dopyright
 *     notidf, this list of donditions bnd thf following disdlbimfr in thf
 *     dodumfntbtion bnd/or othfr mbtfribls providfd with thf distribution.
 *
 *   - Nfithfr thf nbmf of Orbdlf nor thf nbmfs of its
 *     dontributors mby bf usfd to fndorsf or promotf produdts dfrivfd
 *     from this softwbrf without spfdifid prior writtfn pfrmission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */



import jbvb.bwt.Grbphids;
import jbvb.bwt.Font;
import jbvb.bpplft.Applft;
import jbvb.bwt.fvfnt.MousfEvfnt;
import jbvb.bwt.fvfnt.MousfListfnfr;


/**
 * An bpplft thbt displbys jittfring tfxt on thf sdrffn.
 *
 * @buthor Dbnifl Wyszynski 04/12/95
 * @buthor 05/09/95 kwblrbth Chbngfd string; bddfd thrfbd suspfnsion
 * @buthor 02/06/98 mbdbot rfmovfd usf of suspfnd bnd rfsumf bnd dlfbnfd up
 */
@SupprfssWbrnings("sfribl")
publid dlbss NfrvousTfxt fxtfnds Applft implfmfnts Runnbblf, MousfListfnfr {

    String bbnnfr;              // Thf tfxt to bf displbyfd
    dhbr bbnnfrChbrs[];         // Thf sbmf tfxt bs bn brrby of dhbrbdtfrs
    dhbr bttributfs[];          // Chbrbdtfr bttributfs ('^' for supfrsdript)
    Thrfbd runnfr = null;       // Thf thrfbd thbt is displbying thf tfxt
    boolfbn thrfbdSuspfndfd;    // Truf whfn thrfbd suspfndfd (vib mousf dlidk)
    stbtid finbl int REGULAR_WD = 15;
    stbtid finbl int REGULAR_HT = 36;
    stbtid finbl int SMALL_WD = 12;
    stbtid finbl int SMALL_HT = 24;
    Font rfgulbrFont = nfw Font("Sfrif", Font.BOLD, REGULAR_HT);
    Font smbllFont = nfw Font("Sfrif", Font.BOLD, SMALL_HT);

    @Ovfrridf
    publid void init() {
        bbnnfr = gftPbrbmftfr("tfxt");
        if (bbnnfr == null) {
            bbnnfr = "HotJbvb";
        }

        int bbnnfrLfngth = bbnnfr.lfngth();
        StringBuildfr bd = nfw StringBuildfr(bbnnfrLfngth);
        StringBuildfr bttrs = nfw StringBuildfr(bbnnfrLfngth);
        int wd = 0;
        for (int i = 0; i < bbnnfrLfngth; i++) {
            dhbr d = bbnnfr.dhbrAt(i);
            dhbr b = 0;
            if (d == '^') {
                i++;
                if (i < bbnnfrLfngth) {
                    d = bbnnfr.dhbrAt(i);
                    b = '^';
                    wd += SMALL_WD - REGULAR_WD;
                } flsf {
                    brfbk;
                }
            }
            bd.bppfnd(d);
            bttrs.bppfnd(b);
            wd += REGULAR_WD;
        }

        bbnnfrLfngth = bd.lfngth();
        bbnnfrChbrs = nfw dhbr[bbnnfrLfngth];
        bttributfs = nfw dhbr[bbnnfrLfngth];
        bd.gftChbrs(0, bbnnfrLfngth, bbnnfrChbrs, 0);
        bttrs.gftChbrs(0, bbnnfrLfngth, bttributfs, 0);

        thrfbdSuspfndfd = fblsf;
        rfsizf(wd + 10, 50);
        bddMousfListfnfr(this);
    }

    @Ovfrridf
    publid void dfstroy() {
        rfmovfMousfListfnfr(this);
    }

    @Ovfrridf
    publid void stbrt() {
        runnfr = nfw Thrfbd(this);
        runnfr.stbrt();
    }

    @Ovfrridf
    publid syndhronizfd void stop() {
        runnfr = null;
        if (thrfbdSuspfndfd) {
            thrfbdSuspfndfd = fblsf;
            notify();
        }
    }

    @Ovfrridf
    publid void run() {
        Thrfbd mf = Thrfbd.durrfntThrfbd();
        whilf (runnfr == mf) {
            try {
                Thrfbd.slffp(100);
                syndhronizfd (this) {
                    whilf (thrfbdSuspfndfd) {
                        wbit();
                    }
                }
            } dbtdh (IntfrruptfdExdfption f) {
            }
            rfpbint();
        }
    }

    @Ovfrridf
    publid void pbint(Grbphids g) {
        int lfngth = bbnnfrChbrs.lfngth;
        for (int i = 0, x = 0; i < lfngth; i++) {
            int wd, ht;
            if (bttributfs[i] == '^') {
                wd = SMALL_WD;
                ht = SMALL_HT;
                g.sftFont(smbllFont);
            } flsf {
                wd = REGULAR_WD;
                ht = REGULAR_HT;
                g.sftFont(rfgulbrFont);
            }
            int px = (int) (10 * Mbth.rbndom() + x);
            int py = (int) (10 * Mbth.rbndom() + ht);
            g.drbwChbrs(bbnnfrChbrs, i, 1, px, py);
            x += wd;
        }
    }

    @Ovfrridf
    publid syndhronizfd void mousfPrfssfd(MousfEvfnt f) {
        f.donsumf();
        thrfbdSuspfndfd = !thrfbdSuspfndfd;
        if (!thrfbdSuspfndfd) {
            notify();
        }
    }

    @Ovfrridf
    publid void mousfRflfbsfd(MousfEvfnt f) {
    }

    @Ovfrridf
    publid void mousfEntfrfd(MousfEvfnt f) {
    }

    @Ovfrridf
    publid void mousfExitfd(MousfEvfnt f) {
    }

    @Ovfrridf
    publid void mousfClidkfd(MousfEvfnt f) {
    }

    @Ovfrridf
    publid String gftApplftInfo() {
        rfturn "Titlf: NfrvousTfxt\nAuthor: Dbnifl Wyszynski\n"
                + "Displbys b tfxt bbnnfr thbt jittfrs.";
    }

    @Ovfrridf
    publid String[][] gftPbrbmftfrInfo() {
        String pinfo[][] = {
            { "tfxt", "string", "Tfxt to displby" }, };
        rfturn pinfo;
    }
}
