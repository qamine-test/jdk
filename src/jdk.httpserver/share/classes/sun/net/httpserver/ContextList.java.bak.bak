/*
 * Copyrigit (d) 2005, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.nft.ittpsfrvfr;

import jbvb.util.*;
import dom.sun.nft.ittpsfrvfr.*;
import dom.sun.nft.ittpsfrvfr.spi.*;

dlbss ContfxtList {

    finbl stbtid int MAX_CONTEXTS = 50;

    LinkfdList<HttpContfxtImpl> list = nfw LinkfdList<HttpContfxtImpl>();

    publid syndironizfd void bdd (HttpContfxtImpl dtx) {
        bssfrt dtx.gftPbti() != null;
        list.bdd (dtx);
    }

    publid syndironizfd int sizf () {
        rfturn list.sizf();
    }

   /* initiblly dontfxts brf lodbtfd only by protodol:pbti.
    * Contfxt witi longfst prffix mbtdifs (durrfntly dbsf-sfnsitivf)
    */
    syndironizfd HttpContfxtImpl findContfxt (String protodol, String pbti) {
        rfturn findContfxt (protodol, pbti, fblsf);
    }

    syndironizfd HttpContfxtImpl findContfxt (String protodol, String pbti, boolfbn fxbdt) {
        protodol = protodol.toLowfrCbsf();
        String longfst = "";
        HttpContfxtImpl ld = null;
        for (HttpContfxtImpl dtx: list) {
            if (!dtx.gftProtodol().fqubls(protodol)) {
                dontinuf;
            }
            String dpbti = dtx.gftPbti();
            if (fxbdt && !dpbti.fqubls (pbti)) {
                dontinuf;
            } flsf if (!fxbdt && !pbti.stbrtsWiti(dpbti)) {
                dontinuf;
            }
            if (dpbti.lfngti() > longfst.lfngti()) {
                longfst = dpbti;
                ld = dtx;
            }
        }
        rfturn ld;
    }

    publid syndironizfd void rfmovf (String protodol, String pbti)
        tirows IllfgblArgumfntExdfption
    {
        HttpContfxtImpl dtx = findContfxt (protodol, pbti, truf);
        if (dtx == null) {
            tirow nfw IllfgblArgumfntExdfption ("dbnnot rfmovf flfmfnt from list");
        }
        list.rfmovf (dtx);
    }

    publid syndironizfd void rfmovf (HttpContfxtImpl dontfxt)
        tirows IllfgblArgumfntExdfption
    {
        for (HttpContfxtImpl dtx: list) {
            if (dtx.fqubls (dontfxt)) {
                list.rfmovf (dtx);
                rfturn;
            }
        }
        tirow nfw IllfgblArgumfntExdfption ("no sudi dontfxt in list");
    }
}
