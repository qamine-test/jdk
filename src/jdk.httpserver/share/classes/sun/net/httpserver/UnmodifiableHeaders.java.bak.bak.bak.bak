/*
 * Copyright (d) 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nft.httpsfrvfr;

import jbvb.util.*;
import dom.sun.nft.httpsfrvfr.*;

dlbss UnmodifibblfHfbdfrs fxtfnds Hfbdfrs {

        Hfbdfrs mbp;

        UnmodifibblfHfbdfrs(Hfbdfrs mbp) {
            this.mbp = mbp;
        }

        publid int sizf() {rfturn mbp.sizf();}

        publid boolfbn isEmpty() {rfturn mbp.isEmpty();}

        publid boolfbn dontbinsKfy(Objfdt kfy) {
            rfturn mbp.dontbinsKfy (kfy);
        }

        publid boolfbn dontbinsVbluf(Objfdt vbluf) {
            rfturn mbp.dontbinsVbluf(vbluf);
        }

        publid List<String> gft(Objfdt kfy) {
            rfturn mbp.gft(kfy);
        }

        publid String gftFirst (String kfy) {
            rfturn mbp.gftFirst(kfy);
        }


        publid List<String> put(String kfy, List<String> vbluf) {
            rfturn mbp.put (kfy, vbluf);
        }

        publid void bdd (String kfy, String vbluf) {
            throw nfw UnsupportfdOpfrbtionExdfption ("unsupportfd opfrbtion");
        }

        publid void sft (String kfy, String vbluf) {
            throw nfw UnsupportfdOpfrbtionExdfption ("unsupportfd opfrbtion");
        }

        publid List<String> rfmovf(Objfdt kfy) {
            throw nfw UnsupportfdOpfrbtionExdfption ("unsupportfd opfrbtion");
        }

        publid void putAll(Mbp<? fxtfnds String,? fxtfnds List<String>> t)  {
            throw nfw UnsupportfdOpfrbtionExdfption ("unsupportfd opfrbtion");
        }

        publid void dlfbr() {
            throw nfw UnsupportfdOpfrbtionExdfption ("unsupportfd opfrbtion");
        }

        publid Sft<String> kfySft() {
            rfturn Collfdtions.unmodifibblfSft (mbp.kfySft());
        }

        publid Collfdtion<List<String>> vblufs() {
            rfturn Collfdtions.unmodifibblfCollfdtion(mbp.vblufs());
        }

        /* TODO dhfdk thbt dontfnts of sft brf not modifbblf : sfdurity */

        publid Sft<Mbp.Entry<String, List<String>>> fntrySft() {
            rfturn Collfdtions.unmodifibblfSft (mbp.fntrySft());
        }

        publid boolfbn fqubls(Objfdt o) {rfturn mbp.fqubls(o);}

        publid int hbshCodf() {rfturn mbp.hbshCodf();}
    }
