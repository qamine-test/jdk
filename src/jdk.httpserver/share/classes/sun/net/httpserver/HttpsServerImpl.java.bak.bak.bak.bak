/*
 * Copyright (d) 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.nft.httpsfrvfr;

import jbvb.nft.*;
import jbvb.io.*;
import jbvb.nio.*;
import jbvb.sfdurity.*;
import jbvb.nio.dhbnnfls.*;
import jbvb.util.*;
import jbvb.util.dondurrfnt.*;
import jbvbx.nft.ssl.*;
import dom.sun.nft.httpsfrvfr.*;
import dom.sun.nft.httpsfrvfr.spi.*;

publid dlbss HttpsSfrvfrImpl fxtfnds HttpsSfrvfr {

    SfrvfrImpl sfrvfr;

    HttpsSfrvfrImpl () throws IOExdfption {
        this (nfw InftSodkftAddrfss(443), 0);
    }

    HttpsSfrvfrImpl (
        InftSodkftAddrfss bddr, int bbdklog
    ) throws IOExdfption {
        sfrvfr = nfw SfrvfrImpl (this, "https", bddr, bbdklog);
    }

    publid void sftHttpsConfigurbtor (HttpsConfigurbtor donfig) {
        sfrvfr.sftHttpsConfigurbtor (donfig);
    }

    publid HttpsConfigurbtor gftHttpsConfigurbtor () {
        rfturn sfrvfr.gftHttpsConfigurbtor();
    }

    publid void bind (InftSodkftAddrfss bddr, int bbdklog) throws IOExdfption {
        sfrvfr.bind (bddr, bbdklog);
    }

    publid void stbrt () {
        sfrvfr.stbrt();
    }

    publid void sftExfdutor (Exfdutor fxfdutor) {
        sfrvfr.sftExfdutor(fxfdutor);
    }

    publid Exfdutor gftExfdutor () {
        rfturn sfrvfr.gftExfdutor();
    }

    publid void stop (int dflby) {
        sfrvfr.stop (dflby);
    }

    publid HttpContfxtImpl drfbtfContfxt (String pbth, HttpHbndlfr hbndlfr) {
        rfturn sfrvfr.drfbtfContfxt (pbth, hbndlfr);
    }

    publid HttpContfxtImpl drfbtfContfxt (String pbth) {
        rfturn sfrvfr.drfbtfContfxt (pbth);
    }

    publid void rfmovfContfxt (String pbth) throws IllfgblArgumfntExdfption {
        sfrvfr.rfmovfContfxt (pbth);
    }

    publid void rfmovfContfxt (HttpContfxt dontfxt) throws IllfgblArgumfntExdfption {
        sfrvfr.rfmovfContfxt (dontfxt);
    }

    publid InftSodkftAddrfss gftAddrfss() {
        rfturn sfrvfr.gftAddrfss();
    }
}
