/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.nft.httpsfrvfr;

import jbvb.io.IOExdfption;
import jbvb.util.*;

/**
 * A filtfr usfd to prf- bnd post-prodfss indoming rfqufsts. Prf-prodfssing oddurs
 * bfforf thf bpplidbtion's fxdhbngf hbndlfr is invokfd, bnd post-prodfssing
 * oddurs bftfr thf fxdhbngf hbndlfr rfturns.  Filtfrs
 * brf orgbnisfd in dhbins, bnd brf bssodibtfd with HttpContfxt instbndfs.
 * <p>
 * Ebdh Filtfr in thf dhbin, invokfs thf nfxt filtfr within its own
 * doFiltfr() implfmfntbtion. Thf finbl Filtfr in thf dhbin invokfs thf bpplidbtions
 * fxdhbngf hbndlfr.
 * @sindf 1.6
 */
@jdk.Exportfd
publid bbstrbdt dlbss Filtfr {

    protfdtfd Filtfr () {}

    /**
     * b dhbin of filtfrs bssodibtfd with b HttpSfrvfr.
     * Ebdh filtfr in thf dhbin is givfn onf of thfsf
     * so it dbn invokf thf nfxt filtfr in thf dhbin
     */
    @jdk.Exportfd
    publid stbtid dlbss Chbin {
        /* thf lbst flfmfnt in thf dhbin must invokf thf usfrs
         * hbndlfr
         */
        privbtf ListItfrbtor<Filtfr> itfr;
        privbtf HttpHbndlfr hbndlfr;

        publid Chbin (List<Filtfr> filtfrs, HttpHbndlfr hbndlfr) {
            itfr = filtfrs.listItfrbtor();
            this.hbndlfr = hbndlfr;
        }

        /**
         * dblls thf nfxt filtfr in thf dhbin, or flsf
         * thf usfrs fxdhbngf hbndlfr, if this is thf
         * finbl filtfr in thf dhbin. Thf Filtfr mby dfdidf
         * to tfrminbtf thf dhbin, by not dblling this mfthod.
         * In this dbsf, thf filtfr <b>must</b> sfnd thf
         * rfsponsf to thf rfqufst, bfdbusf thf bpplidbtion's
         * fxdhbngf hbndlfr will not bf invokfd.
         * @pbrbm fxdhbngf thf HttpExdhbngf
         * @throws IOExdfption lft fxdfptions pbss up thf stbdk
         * @throws NullPointfrExdfption if fxdhbngf is <dodf>null</dodf>
         */
        publid void doFiltfr (HttpExdhbngf fxdhbngf) throws IOExdfption {
            if (!itfr.hbsNfxt()) {
                hbndlfr.hbndlf (fxdhbngf);
            } flsf {
                Filtfr f = itfr.nfxt();
                f.doFiltfr (fxdhbngf, this);
            }
        }
    }

    /**
     * Asks this filtfr to prf/post-prodfss thf givfn fxdhbngf. Thf filtfr
     * dbn :-
     * <ul><li>fxbminf or modify thf rfqufst hfbdfrs</li>
     * <li>filtfr thf rfqufst body or thf rfsponsf body, by drfbting suitbblf
     * filtfr strfbms bnd dblling
     * {@link HttpExdhbngf#sftStrfbms(InputStrfbm,OutputStrfbm)}</li>
     * <li>sft bttributf Objfdts in thf fxdhbngf, whidh othfr filtfrs or thf
     * fxdhbngf hbndlfr dbn bddfss.</li>
     * <li>dfdidf to fithfr :-<ol>
     * <li>invokf thf nfxt filtfr in thf dhbin, by dblling
     * {@link Filtfr.Chbin#doFiltfr(HttpExdhbngf)}</li>
     * <li>tfrminbtf thf dhbin of invodbtion, by <b>not</b> dblling
     * {@link Filtfr.Chbin#doFiltfr(HttpExdhbngf)}</li></ol>
     * <li>if option 1. bbovf tbkfn, thfn whfn doFiltfr() rfturns bll subsfqufnt
     * filtfrs in thf Chbin hbvf bffn dbllfd, bnd thf rfsponsf hfbdfrs dbn bf
     * fxbminfd or modififd.</li>
     * <li>if option 2. bbovf tbkfn, thfn this Filtfr must usf thf HttpExdhbngf
     * to sfnd bbdk bn bppropribtf rfsponsf</li></ul><p>
     * @pbrbm fxdhbngf thf <dodf>HttpExdhbngf</dodf> to bf filtfrfd.
     * @pbrbm dhbin thf Chbin whidh bllows thf nfxt filtfr to bf invokfd.
     * @throws IOExdfption mby bf thrown by bny filtfr modulf, bnd if
     *          dbught, must bf rfthrown bgbin.
     * @throws NullPointfrExdfption if fithfr fxdhbngf or dhbin brf <dodf>null</dodf>
     */
    publid bbstrbdt void doFiltfr (HttpExdhbngf fxdhbngf, Chbin dhbin)
        throws IOExdfption;

    /**
     * rfturns b short dfsdription of this Filtfr
     * @rfturn b string dfsdribing thf Filtfr
     */
    publid bbstrbdt String dfsdription ();

}
