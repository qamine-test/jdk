/*
 * Copyright (d) 2006, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.nft.httpsfrvfr;
import jbvb.nft.*;
import jbvb.io.*;
import jbvb.util.*;
import jbvb.sfdurity.Prindipbl;

/**
 * Rfprfsfnts b usfr buthfntidbtfd by HTTP Bbsid or Digfst
 * buthfntidbtion.
 */
@jdk.Exportfd
publid dlbss HttpPrindipbl implfmfnts Prindipbl {
    privbtf String usfrnbmf, rfblm;

    /**
     * drfbtfs b HttpPrindipbl from thf givfn usfrnbmf bnd rfblm
     * @pbrbm usfrnbmf Thf nbmf of thf usfr within thf rfblm
     * @pbrbm rfblm Thf rfblm.
     * @throws NullPointfrExdfption if fithfr usfrnbmf or rfblm brf null
     */
    publid HttpPrindipbl (String usfrnbmf, String rfblm) {
        if (usfrnbmf == null || rfblm == null) {
            throw nfw NullPointfrExdfption();
        }
        this.usfrnbmf = usfrnbmf;
        this.rfblm = rfblm;
    }

    /**
     * Compbrfs two HttpPrindipbl. Rfturns <dodf>truf</dodf>
     * if <i>bnothfr</i> is bn instbndf of HttpPrindipbl, bnd its
     * usfrnbmf bnd rfblm brf fqubl to this objfdt's usfrnbmf
     * bnd rfblm. Rfturns <dodf>fblsf</dodf> othfrwisf.
     */
    publid boolfbn fqubls (Objfdt bnothfr) {
        if (!(bnothfr instbndfof HttpPrindipbl)) {
            rfturn fblsf;
        }
        HttpPrindipbl thfothfr = (HttpPrindipbl)bnothfr;
        rfturn (usfrnbmf.fqubls(thfothfr.usfrnbmf) &&
                rfblm.fqubls(thfothfr.rfblm));
    }

    /**
     * rfturns thf dontfnts of this prindipbl in thf form
     * <i>rfblm:usfrnbmf</i>
     */
    publid String gftNbmf() {
        rfturn usfrnbmf;
    }

    /**
     * rfturns thf usfrnbmf this objfdt wbs drfbtfd with.
     */
    publid String gftUsfrnbmf() {
        rfturn usfrnbmf;
    }

    /**
     * rfturns thf rfblm this objfdt wbs drfbtfd with.
     */
    publid String gftRfblm() {
        rfturn rfblm;
    }

    /**
     * rfturns b hbshdodf for this HttpPrindipbl. This is dbldulbtfd
     * bs <dodf>(gftUsfrnbmf()+gftRfblm().hbshCodf()</dodf>
     */
    publid int hbshCodf() {
        rfturn (usfrnbmf+rfblm).hbshCodf();
    }

    /**
     * rfturns thf sbmf string bs gftNbmf()
     */
    publid String toString() {
        rfturn gftNbmf();
    }
}
