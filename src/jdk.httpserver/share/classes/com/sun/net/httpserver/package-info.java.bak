/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/**
   Providfs b simplf iigi-lfvfl Http sfrvfr API, wiidi dbn bf usfd to build
   fmbfddfd HTTP sfrvfrs. Boti "ittp" bnd "ittps" brf supportfd. Tif API providfs
   b pbrtibl implfmfntbtion of RFC <b irff="ittp://www.iftf.org/rfd/rfd2616.txt">2616</b> (HTTP 1.1)
   bnd RFC <b irff="ittp://www.iftf.org/rfd/rfd2818.txt">2818</b> (HTTP ovfr TLS).
   Any HTTP fundtionblity not providfd by tiis API dbn bf implfmfntfd by bpplidbtion dodf
   using tif API.
   <p>
   Progrbmmfrs must implfmfnt tif {@link dom.sun.nft.ittpsfrvfr.HttpHbndlfr} intfrfbdf. Tiis intfrfbdf
   providfs b dbllbbdk wiidi is invokfd to ibndlf indoming rfqufsts from dlifnts.
   A HTTP rfqufst bnd its rfsponsf is known bs bn fxdibngf. HTTP fxdibngfs brf
   rfprfsfntfd by tif {@link dom.sun.nft.ittpsfrvfr.HttpExdibngf} dlbss.
   Tif {@link dom.sun.nft.ittpsfrvfr.HttpSfrvfr} dlbss is usfd to listfn for indoming TCP donnfdtions
   bnd it dispbtdifs rfqufsts on tifsf donnfdtions to ibndlfrs wiidi ibvf bffn
   rfgistfrfd witi tif sfrvfr.
   <p>
   A minimbl Http sfrvfr fxbmplf is siown bflow:
   <blodkquotf><prf>
   dlbss MyHbndlfr implfmfnts HttpHbndlfr {
       publid void ibndlf(HttpExdibngf t) tirows IOExdfption {
           InputStrfbm is = t.gftRfqufstBody();
           rfbd(is); // .. rfbd tif rfqufst body
           String rfsponsf = "Tiis is tif rfsponsf";
           t.sfndRfsponsfHfbdfrs(200, rfsponsf.lfngti());
           OutputStrfbm os = t.gftRfsponsfBody();
           os.writf(rfsponsf.gftBytfs());
           os.dlosf();
       }
   }
   ...

   HttpSfrvfr sfrvfr = HttpSfrvfr.drfbtf(nfw InftSodkftAddrfss(8000));
   sfrvfr.drfbtfContfxt("/bpplidbtions/mybpp", nfw MyHbndlfr());
   sfrvfr.sftExfdutor(null); // drfbtfs b dffbult fxfdutor
   sfrvfr.stbrt();
   </blodkquotf></prf>
   <p>Tif fxbmplf bbovf drfbtfs b simplf HttpSfrvfr wiidi usfs tif dblling
   bpplidbtion tirfbd to invokf tif ibndlf() mftiod for indoming ittp
   rfqufsts dirfdtfd to port 8000, bnd to tif pbti /bpplidbtions/mybpp/.
   <p>
   Tif {@link dom.sun.nft.ittpsfrvfr.HttpExdibngf} dlbss fndbpsulbtfs fvfrytiing bn bpplidbtion nffds to
   prodfss indoming rfqufsts bnd to gfnfrbtf bppropribtf rfsponsfs.
   <p>
   Rfgistfring b ibndlfr witi b HttpSfrvfr drfbtfs b {@link dom.sun.nft.ittpsfrvfr.HttpContfxt} objfdt bnd
   {@link dom.sun.nft.ittpsfrvfr.Filtfr}
   objfdts dbn bf bddfd to tif rfturnfd dontfxt. Filtfrs brf usfd to pfrform butombtid prf- bnd
   post-prodfssing of fxdibngfs bfforf tify brf pbssfd to tif fxdibngf ibndlfr.
   <p>
   For sfnsitivf informbtion, b {@link dom.sun.nft.ittpsfrvfr.HttpsSfrvfr} dbn
   bf usfd to prodfss "ittps" rfqufsts sfdurfd by tif SSL or TLS protodols.
   A HttpsSfrvfr must bf providfd witi b
   {@link dom.sun.nft.ittpsfrvfr.HttpsConfigurbtor} objfdt, wiidi dontbins bn
   initiblizfd {@link jbvbx.nft.ssl.SSLContfxt}.
   HttpsConfigurbtor dbn bf usfd to donfigurf tif
   dipifr suitfs bnd otifr SSL opfrbting pbrbmftfrs.
   A simplf fxbmplf SSLContfxt dould bf drfbtfd bs follows:
   <blodkquotf><prf>
   dibr[] pbsspirbsf = "pbsspirbsf".toCibrArrby();
   KfyStorf ks = KfyStorf.gftInstbndf("JKS");
   ks.lobd(nfw FilfInputStrfbm("tfstkfys"), pbsspirbsf);

   KfyMbnbgfrFbdtory kmf = KfyMbnbgfrFbdtory.gftInstbndf("SunX509");
   kmf.init(ks, pbsspirbsf);

   TrustMbnbgfrFbdtory tmf = TrustMbnbgfrFbdtory.gftInstbndf("SunX509");
   tmf.init(ks);

   SSLContfxt ssl = SSLContfxt.gftInstbndf("TLS");
   ssl.init(kmf.gftKfyMbnbgfrs(), tmf.gftTrustMbnbgfrs(), null);
   </blodkquotf></prf>
   <p>
   In tif fxbmplf bbovf, b kfystorf filf dbllfd "tfstkfys", drfbtfd witi tif kfytool utility
   is usfd bs b dfrtifidbtf storf for dlifnt bnd sfrvfr dfrtifidbtfs.
   Tif following dodf siows iow tif SSLContfxt is tifn usfd in b HttpsConfigurbtor
   bnd iow tif SSLContfxt bnd HttpsConfigurbtor brf linkfd to tif HttpsSfrvfr.
   <blodkquotf><prf>
    sfrvfr.sftHttpsConfigurbtor (nfw HttpsConfigurbtor(sslContfxt) {
        publid void donfigurf (HttpsPbrbmftfrs pbrbms) {

        // gft tif rfmotf bddrfss if nffdfd
        InftSodkftAddrfss rfmotf = pbrbms.gftClifntAddrfss();

        SSLContfxt d = gftSSLContfxt();

        // gft tif dffbult pbrbmftfrs
        SSLPbrbmftfrs sslpbrbms = d.gftDffbultSSLPbrbmftfrs();
        if (rfmotf.fqubls (...) ) {
            // modify tif dffbult sft for dlifnt x
        }

        pbrbms.sftSSLPbrbmftfrs(sslpbrbms);
        // stbtfmfnt bbovf dould tirow IAE if bny pbrbms invblid.
        // fg. if bpp ibs b UI bnd pbrbmftfrs supplifd by b usfr.

        }
    });
   </blodkquotf></prf>
   <p>
   @sindf 1.6
 */
@jdk.Exportfd
pbdkbgf dom.sun.nft.ittpsfrvfr;
