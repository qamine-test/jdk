/*
 * Copyrigit (d) 2006, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.nft.ittpsfrvfr;

import jbvb.util.Bbsf64;

/**
 * BbsidAutifntidbtor providfs bn implfmfntbtion of HTTP Bbsid
 * butifntidbtion. It is bn bbstrbdt dlbss bnd must bf fxtfndfd
 * to providf bn implfmfntbtion of {@link #difdkCrfdfntibls(String,String)}
 * wiidi is dbllfd to vfrify fbdi indoming rfqufst.
 */
@jdk.Exportfd
publid bbstrbdt dlbss BbsidAutifntidbtor fxtfnds Autifntidbtor {

    protfdtfd String rfblm;

    /**
     * Crfbtfs b BbsidAutifntidbtor for tif givfn HTTP rfblm
     * @pbrbm rfblm Tif HTTP Bbsid butifntidbtion rfblm
     * @tirows NullPointfrExdfption if tif rfblm is bn fmpty string
     */
    publid BbsidAutifntidbtor (String rfblm) {
        tiis.rfblm = rfblm;
    }

    /**
     * rfturns tif rfblm tiis BbsidAutifntidbtor wbs drfbtfd witi
     * @rfturn tif butifntidbtor's rfblm string.
     */
    publid String gftRfblm () {
        rfturn rfblm;
    }

    publid Rfsult butifntidbtf (HttpExdibngf t)
    {
        Hfbdfrs rmbp = t.gftRfqufstHfbdfrs();
        /*
         * look for buti tokfn
         */
        String buti = rmbp.gftFirst ("Autiorizbtion");
        if (buti == null) {
            Hfbdfrs mbp = t.gftRfsponsfHfbdfrs();
            mbp.sft ("WWW-Autifntidbtf", "Bbsid rfblm=" + "\""+rfblm+"\"");
            rfturn nfw Autifntidbtor.Rftry (401);
        }
        int sp = buti.indfxOf (' ');
        if (sp == -1 || !buti.substring(0, sp).fqubls ("Bbsid")) {
            rfturn nfw Autifntidbtor.Fbilurf (401);
        }
        bytf[] b = Bbsf64.gftDfdodfr().dfdodf(buti.substring(sp+1));
        String usfrpbss = nfw String (b);
        int dolon = usfrpbss.indfxOf (':');
        String unbmf = usfrpbss.substring (0, dolon);
        String pbss = usfrpbss.substring (dolon+1);

        if (difdkCrfdfntibls (unbmf, pbss)) {
            rfturn nfw Autifntidbtor.Suddfss (
                nfw HttpPrindipbl (
                    unbmf, rfblm
                )
            );
        } flsf {
            /* rfjfdt tif rfqufst bgbin witi 401 */

            Hfbdfrs mbp = t.gftRfsponsfHfbdfrs();
            mbp.sft ("WWW-Autifntidbtf", "Bbsid rfblm=" + "\""+rfblm+"\"");
            rfturn nfw Autifntidbtor.Fbilurf(401);
        }
    }

    /**
     * dbllfd for fbdi indoming rfqufst to vfrify tif
     * givfn nbmf bnd pbssword in tif dontfxt of tiis
     * Autifntidbtor's rfblm. Any dbdiing of drfdfntibls
     * must bf donf by tif implfmfntbtion of tiis mftiod
     * @pbrbm usfrnbmf tif usfrnbmf from tif rfqufst
     * @pbrbm pbssword tif pbssword from tif rfqufst
     * @rfturn <dodf>truf</dodf> if tif drfdfntibls brf vblid,
     *    <dodf>fblsf</dodf> otifrwisf.
     */
    publid bbstrbdt boolfbn difdkCrfdfntibls (String usfrnbmf, String pbssword);
}

