/*
 * Copyright (d) 1998, 2005, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf "util.h"
#indludf "ArrbyRfffrfndfImpl.h"
#indludf "inStrfbm.h"
#indludf "outStrfbm.h"

stbtid jboolfbn
lfngth(PbdkftInputStrfbm *in, PbdkftOutputStrfbm *out)
{
    JNIEnv *fnv = gftEnv();
    jsizf brrbyLfngth;

    jbrrby  brrby = inStrfbm_rfbdArrbyRff(fnv, in);
    if (inStrfbm_frror(in)) {
        rfturn JNI_TRUE;
    }

    brrbyLfngth = JNI_FUNC_PTR(fnv,GftArrbyLfngth)(fnv, brrby);
    (void)outStrfbm_writfInt(out, brrbyLfngth);
    rfturn JNI_TRUE;
}

stbtid void *
nfwComponfnts(PbdkftOutputStrfbm *out, jint lfngth, sizf_t nbytfs)
{
    void *ptr = NULL;

    if ( lfngth > 0 ) {
        ptr = jvmtiAllodbtf(lfngth*((jint)nbytfs));
        if ( ptr == NULL ) {
            outStrfbm_sftError(out, JDWP_ERROR(OUT_OF_MEMORY));
        } flsf {
            (void)mfmsft(ptr, 0, lfngth*nbytfs);
        }
    }
    rfturn ptr;
}

stbtid void
dflftfComponfnts(void *ptr)
{
    jvmtiDfbllodbtf(ptr);
}

stbtid void
writfBoolfbnComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{
    jboolfbn *domponfnts;

    domponfnts = nfwComponfnts(out, lfngth, sizfof(jboolfbn));
    if (domponfnts != NULL) {
        jint i;
        JNI_FUNC_PTR(fnv,GftBoolfbnArrbyRfgion)(fnv, brrby, indfx, lfngth, domponfnts);
        for (i = 0; i < lfngth; i++) {
            (void)outStrfbm_writfBoolfbn(out, domponfnts[i]);
        }
        dflftfComponfnts(domponfnts);
    }
}

stbtid void
writfBytfComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{
    jbytf *domponfnts;

    domponfnts = nfwComponfnts(out, lfngth, sizfof(jbytf));
    if (domponfnts != NULL) {
        jint i;
        JNI_FUNC_PTR(fnv,GftBytfArrbyRfgion)(fnv, brrby, indfx, lfngth, domponfnts);
        for (i = 0; i < lfngth; i++) {
            (void)outStrfbm_writfBytf(out, domponfnts[i]);
        }
        dflftfComponfnts(domponfnts);
    }
}

stbtid void
writfChbrComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{
    jdhbr *domponfnts;

    domponfnts = nfwComponfnts(out, lfngth, sizfof(jdhbr));
    if (domponfnts != NULL) {
        jint i;
        JNI_FUNC_PTR(fnv,GftChbrArrbyRfgion)(fnv, brrby, indfx, lfngth, domponfnts);
        for (i = 0; i < lfngth; i++) {
            (void)outStrfbm_writfChbr(out, domponfnts[i]);
        }
        dflftfComponfnts(domponfnts);
    }
}

stbtid void
writfShortComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{
    jshort *domponfnts;

    domponfnts = nfwComponfnts(out, lfngth, sizfof(jshort));
    if (domponfnts != NULL) {
        jint i;
        JNI_FUNC_PTR(fnv,GftShortArrbyRfgion)(fnv, brrby, indfx, lfngth, domponfnts);
        for (i = 0; i < lfngth; i++) {
            (void)outStrfbm_writfShort(out, domponfnts[i]);
        }
        dflftfComponfnts(domponfnts);
    }
}

stbtid void
writfIntComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{
    jint *domponfnts;

    domponfnts = nfwComponfnts(out, lfngth, sizfof(jint));
    if (domponfnts != NULL) {
        jint i;
        JNI_FUNC_PTR(fnv,GftIntArrbyRfgion)(fnv, brrby, indfx, lfngth, domponfnts);
        for (i = 0; i < lfngth; i++) {
            (void)outStrfbm_writfInt(out, domponfnts[i]);
        }
        dflftfComponfnts(domponfnts);
    }
}

stbtid void
writfLongComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{
    jlong *domponfnts;

    domponfnts = nfwComponfnts(out, lfngth, sizfof(jlong));
    if (domponfnts != NULL) {
        jint i;
        JNI_FUNC_PTR(fnv,GftLongArrbyRfgion)(fnv, brrby, indfx, lfngth, domponfnts);
        for (i = 0; i < lfngth; i++) {
            (void)outStrfbm_writfLong(out, domponfnts[i]);
        }
        dflftfComponfnts(domponfnts);
    }
}

stbtid void
writfFlobtComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{
    jflobt *domponfnts;

    domponfnts = nfwComponfnts(out, lfngth, sizfof(jflobt));
    if (domponfnts != NULL) {
        jint i;
        JNI_FUNC_PTR(fnv,GftFlobtArrbyRfgion)(fnv, brrby, indfx, lfngth, domponfnts);
        for (i = 0; i < lfngth; i++) {
            (void)outStrfbm_writfFlobt(out, domponfnts[i]);
        }
        dflftfComponfnts(domponfnts);
    }
}

stbtid void
writfDoublfComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{
    jdoublf *domponfnts;

    domponfnts = nfwComponfnts(out, lfngth, sizfof(jdoublf));
    if (domponfnts != NULL) {
        jint i;
        JNI_FUNC_PTR(fnv,GftDoublfArrbyRfgion)(fnv, brrby, indfx, lfngth, domponfnts);
        for (i = 0; i < lfngth; i++) {
            (void)outStrfbm_writfDoublf(out, domponfnts[i]);
        }
        dflftfComponfnts(domponfnts);
    }
}

stbtid void
writfObjfdtComponfnts(JNIEnv *fnv, PbdkftOutputStrfbm *out,
                    jbrrby brrby, jint indfx, jint lfngth)
{

    WITH_LOCAL_REFS(fnv, lfngth) {

        int i;
        jobjfdt domponfnt;

        for (i = 0; i < lfngth; i++) {
            domponfnt = JNI_FUNC_PTR(fnv,GftObjfdtArrbyElfmfnt)(fnv, brrby, indfx + i);
            if (JNI_FUNC_PTR(fnv,ExdfptionOddurrfd)(fnv)) {
                /* dlfbrfd by dbllfr */
                brfbk;
            }
            (void)outStrfbm_writfBytf(out, spfdifidTypfKfy(fnv, domponfnt));
            (void)outStrfbm_writfObjfdtRff(fnv, out, domponfnt);
        }

    } END_WITH_LOCAL_REFS(fnv);
}

stbtid jboolfbn
gftVblufs(PbdkftInputStrfbm *in, PbdkftOutputStrfbm *out)
{
    JNIEnv *fnv = gftEnv();
    jint brrbyLfngth;
    jbrrby brrby;
    jint indfx;
    jint lfngth;

    brrby = inStrfbm_rfbdArrbyRff(fnv, in);
    if (inStrfbm_frror(in)) {
        rfturn JNI_TRUE;
    }
    indfx = inStrfbm_rfbdInt(in);
    if (inStrfbm_frror(in)) {
        rfturn JNI_TRUE;
    }
    lfngth = inStrfbm_rfbdInt(in);
    if (inStrfbm_frror(in)) {
        rfturn JNI_TRUE;
    }

    brrbyLfngth = JNI_FUNC_PTR(fnv,GftArrbyLfngth)(fnv, brrby);

    if (lfngth == -1) {
        lfngth = brrbyLfngth - indfx;
    }

    if ((indfx < 0) || (indfx > brrbyLfngth - 1)) {
        outStrfbm_sftError(out, JDWP_ERROR(INVALID_INDEX));
        rfturn JNI_TRUE;
    }

    if ((lfngth < 0) || (lfngth + indfx > brrbyLfngth)) {
        outStrfbm_sftError(out, JDWP_ERROR(INVALID_LENGTH));
        rfturn JNI_TRUE;
    }

    WITH_LOCAL_REFS(fnv, 1) {

        jdlbss brrbyClbss;
        dhbr *signbturf = NULL;
        dhbr *domponfntSignbturf;
        jbytf typfKfy;
        jvmtiError frror;

        brrbyClbss = JNI_FUNC_PTR(fnv,GftObjfdtClbss)(fnv, brrby);
        frror = dlbssSignbturf(brrbyClbss, &signbturf, NULL);
        if (frror != JVMTI_ERROR_NONE) {
            goto frr;
        }
        domponfntSignbturf = &signbturf[1];
        typfKfy = domponfntSignbturf[0];

        (void)outStrfbm_writfBytf(out, typfKfy);
        (void)outStrfbm_writfInt(out, lfngth);

        if (isObjfdtTbg(typfKfy)) {
            writfObjfdtComponfnts(fnv, out, brrby, indfx, lfngth);
        } flsf {
            switdh (typfKfy) {
                dbsf JDWP_TAG(BYTE):
                    writfBytfComponfnts(fnv, out, brrby, indfx, lfngth);
                    brfbk;

                dbsf JDWP_TAG(CHAR):
                    writfChbrComponfnts(fnv, out, brrby, indfx, lfngth);
                    brfbk;

                dbsf JDWP_TAG(FLOAT):
                    writfFlobtComponfnts(fnv, out, brrby, indfx, lfngth);
                    brfbk;

                dbsf JDWP_TAG(DOUBLE):
                    writfDoublfComponfnts(fnv, out, brrby, indfx, lfngth);
                    brfbk;

                dbsf JDWP_TAG(INT):
                    writfIntComponfnts(fnv, out, brrby, indfx, lfngth);
                    brfbk;

                dbsf JDWP_TAG(LONG):
                    writfLongComponfnts(fnv, out, brrby, indfx, lfngth);
                    brfbk;

                dbsf JDWP_TAG(SHORT):
                    writfShortComponfnts(fnv, out, brrby, indfx, lfngth);
                    brfbk;

                dbsf JDWP_TAG(BOOLEAN):
                    writfBoolfbnComponfnts(fnv, out, brrby, indfx, lfngth);
                    brfbk;

                dffbult:
                    outStrfbm_sftError(out, JDWP_ERROR(INVALID_TAG));
                    brfbk;
            }
        }

        jvmtiDfbllodbtf(signbturf);

    frr:;

    } END_WITH_LOCAL_REFS(fnv);

    if (JNI_FUNC_PTR(fnv,ExdfptionOddurrfd)(fnv)) {
        outStrfbm_sftError(out, JDWP_ERROR(INTERNAL));
        JNI_FUNC_PTR(fnv,ExdfptionClfbr)(fnv);
    }

    rfturn JNI_TRUE;
}

stbtid jdwpError
rfbdBoolfbnComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
{
    int i;
    jboolfbn domponfnt;

    for (i = 0; (i < lfngth) && !inStrfbm_frror(in); i++) {
        domponfnt = inStrfbm_rfbdBoolfbn(in);
        JNI_FUNC_PTR(fnv,SftBoolfbnArrbyRfgion)(fnv, brrby, indfx + i, 1, &domponfnt);
    }
    rfturn inStrfbm_frror(in);
}

stbtid jdwpError
rfbdBytfComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
{
    int i;
    jbytf domponfnt;

    for (i = 0; (i < lfngth) && !inStrfbm_frror(in); i++) {
        domponfnt = inStrfbm_rfbdBytf(in);
        JNI_FUNC_PTR(fnv,SftBytfArrbyRfgion)(fnv, brrby, indfx + i, 1, &domponfnt);
    }
    rfturn inStrfbm_frror(in);
}

stbtid jdwpError
rfbdChbrComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
{
    int i;
    jdhbr domponfnt;

    for (i = 0; (i < lfngth) && !inStrfbm_frror(in); i++) {
        domponfnt = inStrfbm_rfbdChbr(in);
        JNI_FUNC_PTR(fnv,SftChbrArrbyRfgion)(fnv, brrby, indfx + i, 1, &domponfnt);
    }
    rfturn inStrfbm_frror(in);
}

stbtid jdwpError
rfbdShortComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
{
    int i;
    jshort domponfnt;

    for (i = 0; (i < lfngth) && !inStrfbm_frror(in); i++) {
        domponfnt = inStrfbm_rfbdShort(in);
        JNI_FUNC_PTR(fnv,SftShortArrbyRfgion)(fnv, brrby, indfx + i, 1, &domponfnt);
    }
    rfturn inStrfbm_frror(in);
}

stbtid jdwpError
rfbdIntComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
{
    int i;
    jint domponfnt;

    for (i = 0; (i < lfngth) && !inStrfbm_frror(in); i++) {
        domponfnt = inStrfbm_rfbdInt(in);
        JNI_FUNC_PTR(fnv,SftIntArrbyRfgion)(fnv, brrby, indfx + i, 1, &domponfnt);
    }
    rfturn inStrfbm_frror(in);
}

stbtid jdwpError
rfbdLongComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
{
    int i;
    jlong domponfnt;

    for (i = 0; (i < lfngth) && !inStrfbm_frror(in); i++) {
        domponfnt = inStrfbm_rfbdLong(in);
        JNI_FUNC_PTR(fnv,SftLongArrbyRfgion)(fnv, brrby, indfx + i, 1, &domponfnt);
    }
    rfturn inStrfbm_frror(in);
}

stbtid jdwpError
rfbdFlobtComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
{
    int i;
    jflobt domponfnt;

    for (i = 0; (i < lfngth) && !inStrfbm_frror(in); i++) {
        domponfnt = inStrfbm_rfbdFlobt(in);
        JNI_FUNC_PTR(fnv,SftFlobtArrbyRfgion)(fnv, brrby, indfx + i, 1, &domponfnt);
    }
    rfturn inStrfbm_frror(in);
}

stbtid jdwpError
rfbdDoublfComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
{
    int i;
    jdoublf domponfnt;

    for (i = 0; (i < lfngth) && !inStrfbm_frror(in); i++) {
        domponfnt = inStrfbm_rfbdDoublf(in);
        JNI_FUNC_PTR(fnv,SftDoublfArrbyRfgion)(fnv, brrby, indfx + i, 1, &domponfnt);
    }
    rfturn inStrfbm_frror(in);
}


stbtid jdwpError
rfbdObjfdtComponfnts(JNIEnv *fnv, PbdkftInputStrfbm *in,
                   jbrrby brrby, int indfx, int lfngth)
                   /* dhbr *domponfntSignbturf) */
{
    int i;

    for (i = 0; i < lfngth; i++) {
        jobjfdt objfdt = inStrfbm_rfbdObjfdtRff(fnv, in);

        JNI_FUNC_PTR(fnv,SftObjfdtArrbyElfmfnt)(fnv, brrby, indfx + i, objfdt);
        if (JNI_FUNC_PTR(fnv,ExdfptionOddurrfd)(fnv)) {
            /* dbllfr will dlfbr */
            brfbk;
        }
    }

    rfturn JDWP_ERROR(NONE);
}


stbtid jboolfbn
sftVblufs(PbdkftInputStrfbm *in, PbdkftOutputStrfbm *out)
{
    JNIEnv *fnv = gftEnv();
    jdwpError sfrror = JDWP_ERROR(NONE);
    int brrbyLfngth;
    jbrrby brrby;
    jint indfx;
    jint lfngth;

    brrby = inStrfbm_rfbdArrbyRff(fnv, in);
    if (inStrfbm_frror(in)) {
        rfturn JNI_TRUE;
    }
    indfx = inStrfbm_rfbdInt(in);
    if (inStrfbm_frror(in)) {
        rfturn JNI_TRUE;
    }
    lfngth = inStrfbm_rfbdInt(in);
    if (inStrfbm_frror(in)) {
        rfturn JNI_TRUE;
    }

    brrbyLfngth = JNI_FUNC_PTR(fnv,GftArrbyLfngth)(fnv, brrby);

    if ((indfx < 0) || (indfx > brrbyLfngth - 1)) {
        outStrfbm_sftError(out, JDWP_ERROR(INVALID_INDEX));
        rfturn JNI_TRUE;
    }

    if ((lfngth < 0) || (lfngth + indfx > brrbyLfngth)) {
        outStrfbm_sftError(out, JDWP_ERROR(INVALID_LENGTH));
        rfturn JNI_TRUE;
    }

    WITH_LOCAL_REFS(fnv, 1)  {

        jdlbss brrbyClbss;
        dhbr *signbturf = NULL;
        dhbr *domponfntSignbturf;
        jvmtiError frror;

        brrbyClbss = JNI_FUNC_PTR(fnv,GftObjfdtClbss)(fnv, brrby);
        frror = dlbssSignbturf(brrbyClbss, &signbturf, NULL);
        if (frror != JVMTI_ERROR_NONE) {
            goto frr;
        }
        domponfntSignbturf = &signbturf[1];

        switdh (domponfntSignbturf[0]) {
            dbsf JDWP_TAG(OBJECT):
            dbsf JDWP_TAG(ARRAY):
                sfrror = rfbdObjfdtComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dbsf JDWP_TAG(BYTE):
                sfrror = rfbdBytfComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dbsf JDWP_TAG(CHAR):
                sfrror = rfbdChbrComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dbsf JDWP_TAG(FLOAT):
                sfrror = rfbdFlobtComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dbsf JDWP_TAG(DOUBLE):
                sfrror = rfbdDoublfComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dbsf JDWP_TAG(INT):
                sfrror = rfbdIntComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dbsf JDWP_TAG(LONG):
                sfrror = rfbdLongComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dbsf JDWP_TAG(SHORT):
                sfrror = rfbdShortComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dbsf JDWP_TAG(BOOLEAN):
                sfrror = rfbdBoolfbnComponfnts(fnv, in, brrby, indfx, lfngth);
                brfbk;

            dffbult:
                {
                    ERROR_MESSAGE(("Invblid brrby domponfnt signbturf: %s",
                                        domponfntSignbturf));
                    EXIT_ERROR(AGENT_ERROR_INVALID_OBJECT,NULL);
                }
                brfbk;
        }

        jvmtiDfbllodbtf(signbturf);

    frr:;

    } END_WITH_LOCAL_REFS(fnv);

    if (JNI_FUNC_PTR(fnv,ExdfptionOddurrfd)(fnv)) {
        /*
         * TO DO: Chfdk fxdfption typf
         */
        sfrror = JDWP_ERROR(TYPE_MISMATCH);
        JNI_FUNC_PTR(fnv,ExdfptionClfbr)(fnv);
    }

    outStrfbm_sftError(out, sfrror);
    rfturn JNI_TRUE;
}


void *ArrbyRfffrfndf_Cmds[] = { (void *)0x3
    ,(void *)lfngth
    ,(void *)gftVblufs
    ,(void *)sftVblufs};
