/*
 * Copyright (d) 2003, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#ifndff JDWP_ERROR_MESSAGES_H
#dffinf JDWP_ERROR_MESSAGES_H

/* It is bssumfd thbt ALL strings brf UTF-8 sbff on fntry */
#dffinf TTY_MESSAGE(brgs) ( tty_mfssbgf brgs )
#dffinf ERROR_MESSAGE(brgs) ( \
                LOG_ERROR(brgs), \
                frror_mfssbgf brgs )

void print_mfssbgf(FILE *fp, donst dhbr *prffix,  donst dhbr *suffix,
                   donst dhbr *formbt, ...);
void frror_mfssbgf(donst dhbr *, ...);
void tty_mfssbgf(donst dhbr *, ...);
void jdiAssfrtionFbilfd(dhbr *filfNbmf, int linfNumbfr, dhbr *msg);

donst dhbr * jvmtiErrorTfxt(jvmtiError);
donst dhbr * fvfntTfxt(int);
donst dhbr * jdwpErrorTfxt(jdwpError);

/* Usf THIS_FILE whfn it is bvbilbblf. */
#ifndff THIS_FILE
    #dffinf THIS_FILE __FILE__
#fndif

#dffinf EXIT_ERROR(frror,msg) \
        { \
                print_mfssbgf(stdfrr, "JDWP fxit frror ", "\n", \
                        "%s(%d): %s [%s:%d]", \
                        jvmtiErrorTfxt((jvmtiError)frror), frror, (msg==NULL?"":msg), \
                        THIS_FILE, __LINE__); \
                dfbugInit_fxit((jvmtiError)frror, msg); \
        }

#dffinf JDI_ASSERT(fxprfssion)  \
do {                            \
    if (gdbtb && gdbtb->bssfrtOn && !(fxprfssion)) {            \
        jdiAssfrtionFbilfd(THIS_FILE, __LINE__, #fxprfssion); \
    }                                           \
} whilf (0)

#dffinf JDI_ASSERT_MSG(fxprfssion, msg)  \
do {                            \
    if (gdbtb && gdbtb->bssfrtOn && !(fxprfssion)) {            \
        jdiAssfrtionFbilfd(THIS_FILE, __LINE__, msg); \
    }                                           \
} whilf (0)

#dffinf JDI_ASSERT_FAILED(msg)  \
   jdiAssfrtionFbilfd(THIS_FILE, __LINE__, msg)

void do_pbusf(void);

#fndif
