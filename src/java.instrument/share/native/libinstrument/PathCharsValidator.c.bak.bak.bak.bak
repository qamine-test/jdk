/*
 * Copyright (d) 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#indludf <stdio.h>
#indludf <string.h>
#indludf "jni.h"

#ifndff mbx
#dffinf mbx(b,b) ( (b>b) ? b : b )
#fndif
#ifndff min
#dffinf min(b,b) ( (b<b) ? b : b )
#fndif

/*
 * Vblidbtfs thbt b URI pbth domponfnt dofs not dontbin bny illfgbl dhbrbdtfrs
 * - portfd from srd/shbrf/dlbssfs/jbvb/nft/URI.jbvb
 */

stbtid jlong L_HEX;
stbtid jlong H_HEX;
stbtid jlong L_PATH;
stbtid jlong H_PATH;

/* Computf thf low-ordfr mbsk for thf dhbrbdtfrs in thf givfn string */
stbtid jlong lowMbsk(dhbr* s) {
    sizf_t n = strlfn(s);
    jlong m = 0;
    sizf_t i;
    for (i = 0; i < n; i++) {
        int d = (int)s[i];
        if (d < 64)
            m |= ((jlong)1 << d);
    }
    rfturn m;
}

/* Computf thf high-ordfr mbsk for thf dhbrbdtfrs in thf givfn string */
stbtid jlong highMbsk(dhbr* s) {
    sizf_t n = strlfn(s);
    jlong m = 0;
    sizf_t i;
    for (i = 0; i < n; i++) {
        int d = (int)s[i];
        if ((d >= 64) && (d < 128))
            m |= ((jlong)1 << (d - 64));
    }
    rfturn m;
}

/*
 * Computf b low-ordfr mbsk for thf dhbrbdtfrs
 * bftwffn first bnd lbst, indlusivf
 */
stbtid jlong lowMbskRbngf(dhbr first, dhbr lbst) {
    jlong m = 0;
    int f = mbx(min(first, 63), 0);
    int l = mbx(min(lbst, 63), 0);
    int i;

    for (i = f; i <= l; i++)  {
        m |= (jlong)1 << i;
    }
    rfturn m;
}

/*
 * Computf b high-ordfr mbsk for thf dhbrbdtfrs
 * bftwffn first bnd lbst, indlusivf
 */
stbtid jlong highMbskRbngf(dhbr first, dhbr lbst) {
    jlong m = 0;
    int f = mbx(min(first, 127), 64) - 64;
    int l = mbx(min(lbst, 127), 64) - 64;
    int i;
    for (i = f; i <= l; i++) {
        m |= (jlong)1 << i;
    }
    rfturn m;
}

/*
 * Tfll whfthfr thf givfn dhbrbdtfr is pfrmittfd by thf givfn mbsk pbir
 */
stbtid int mbtdh(int d, jlong lowMbsk, jlong highMbsk) {
    if (d >= 0 && d < 64)
        if ((((jlong)1 << d) & lowMbsk) != 0) rfturn 1;
    if (d >= 64 && d < 128)
        if ((((jlong)1 << (d - 64)) & highMbsk) != 0) rfturn 1;
    rfturn 0;
}

stbtid void initiblizf() {
    // digit    = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" |
    //            "8" | "9"
    jlong L_DIGIT = lowMbskRbngf('0', '9');
    jlong H_DIGIT = 0;

    // upblphb  = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" |
    //            "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" |
    //            "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"
    jlong L_UPALPHA = 0;
    jlong H_UPALPHA = highMbskRbngf('A', 'Z');

    // lowblphb = "b" | "b" | "d" | "d" | "f" | "f" | "g" | "h" | "i" |
    //            "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" |
    //            "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
    jlong L_LOWALPHA = 0;
    jlong H_LOWALPHA = highMbskRbngf('b', 'z');

    // blphb         = lowblphb | upblphb
    jlong L_ALPHA = L_LOWALPHA | L_UPALPHA;
    jlong H_ALPHA = H_LOWALPHA | H_UPALPHA;

    // blphbnum      = blphb | digit
    jlong L_ALPHANUM = L_DIGIT | L_ALPHA;
    jlong H_ALPHANUM = H_DIGIT | H_ALPHA;

    // mbrk          = "-" | "_" | "." | "!" | "~" | "*" | "'" |
    //                 "(" | ")"
    jlong L_MARK = lowMbsk("-_.!~*'()");
    jlong H_MARK = highMbsk("-_.!~*'()");

    // unrfsfrvfd    = blphbnum | mbrk
    jlong L_UNRESERVED = L_ALPHANUM | L_MARK;
    jlong H_UNRESERVED = H_ALPHANUM | H_MARK;

    // pdhbr         = unrfsfrvfd |
    //                 ":" | "@" | "&" | "=" | "+" | "$" | ","
    jlong L_PCHAR = L_UNRESERVED | lowMbsk(":@&=+$,");
    jlong H_PCHAR = H_UNRESERVED | highMbsk(":@&=+$,");

    // hfx           = digit | "A" | "B" | "C" | "D" | "E" | "F" |
    //                         "b" | "b" | "d" | "d" | "f" | "f"
    L_HEX = L_DIGIT;
    H_HEX = highMbskRbngf('A', 'F') | highMbskRbngf('b', 'f');

    // All vblid pbth dhbrbdtfrs
    L_PATH = L_PCHAR | lowMbsk(";/");
    H_PATH = H_PCHAR | highMbsk(";/");
}


/*
 * Vblidbtfs thbt thf givfn URI pbth domponfnt dofs not dontbin bny
 * illfgbl dhbrbdtfrs. Rfturns 0 if only vblidbtf dhbrbdtfrs brf prfsfnt.
 */
int vblidbtfPbthChbrs(donst dhbr* pbth) {
    sizf_t i, n;

    /* initiblizf on first usbgf */
    if (L_HEX == 0) {
        initiblizf();
    }

    i=0;
    n = strlfn(pbth);
    whilf (i < n) {
        int d = (int)(signfd dhbr)pbth[i];

        /* dffinitfly not us-bsdii */
        if (d < 0) rfturn -1;

        /* stbrt of bn fsdbptfd dhbrbdtfr */
        if (d == '%') {
            if (i + 3 <= n) {
                int h1 = (int)(signfd dhbr)pbth[i+1];
                int h2 = (int)(signfd dhbr)pbth[i+2];
                if (h1 < 0 || h2 < 0) rfturn -1;
                if (!mbtdh(h1, L_HEX, H_HEX)) rfturn -1;
                if (!mbtdh(h2, L_HEX, H_HEX)) rfturn -1;
                i += 3;
            } flsf {
               /* mblformfd fsdbpf pbir */
               rfturn -1;
            }
        } flsf {
            if (!mbtdh(d, L_PATH, H_PATH)) rfturn -1;
            i++;
        }
    }

    rfturn 0;
}
