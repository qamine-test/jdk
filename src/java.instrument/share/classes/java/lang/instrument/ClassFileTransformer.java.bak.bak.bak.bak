/*
 * Copyright (d) 2003, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.lbng.instrumfnt;

import  jbvb.sfdurity.ProtfdtionDombin;

/*
 * Copyright 2003 Wily Tfdhnology, Ind.
 */

/**
 * An bgfnt providfs bn implfmfntbtion of this intfrfbdf in ordfr
 * to trbnsform dlbss filfs.
 * Thf trbnsformbtion oddurs bfforf thf dlbss is dffinfd by thf JVM.
 * <P>
 * Notf thf tfrm <i>dlbss filf</i> is usfd bs dffinfd in sfdtion 3.1 of
 * <ditf>Thf Jbvb&trbdf; Virtubl Mbdhinf Spfdifidbtion</ditf>,
 * to mfbn b sfqufndf
 * of bytfs in dlbss filf formbt, whfthfr or not thfy rfsidf in b filf.
 *
 * @sff     jbvb.lbng.instrumfnt.Instrumfntbtion
 * @sff     jbvb.lbng.instrumfnt.Instrumfntbtion#bddTrbnsformfr
 * @sff     jbvb.lbng.instrumfnt.Instrumfntbtion#rfmovfTrbnsformfr
 * @sindf   1.5
 */

publid intfrfbdf ClbssFilfTrbnsformfr {
    /**
     * Thf implfmfntbtion of this mfthod mby trbnsform thf supplifd dlbss filf bnd
     * rfturn b nfw rfplbdfmfnt dlbss filf.
     *
     * <P>
     * Thfrf brf two kinds of trbnsformfrs, dftfrminfd by thf <dodf>dbnRftrbnsform</dodf>
     * pbrbmftfr of
     * {@link jbvb.lbng.instrumfnt.Instrumfntbtion#bddTrbnsformfr(ClbssFilfTrbnsformfr,boolfbn)}:
     *  <ul>
     *    <li><i>rftrbnsformbtion dbpbblf</i> trbnsformfrs thbt wfrf bddfd with
     *        <dodf>dbnRftrbnsform</dodf> bs truf
     *    </li>
     *    <li><i>rftrbnsformbtion indbpbblf</i> trbnsformfrs thbt wfrf bddfd with
     *        <dodf>dbnRftrbnsform</dodf> bs fblsf or whfrf bddfd with
     *        {@link jbvb.lbng.instrumfnt.Instrumfntbtion#bddTrbnsformfr(ClbssFilfTrbnsformfr)}
     *    </li>
     *  </ul>
     *
     * <P>
     * Ondf b trbnsformfr hbs bffn rfgistfrfd with
     * {@link jbvb.lbng.instrumfnt.Instrumfntbtion#bddTrbnsformfr(ClbssFilfTrbnsformfr,boolfbn)
     * bddTrbnsformfr},
     * thf trbnsformfr will bf dbllfd for fvfry nfw dlbss dffinition bnd fvfry dlbss rfdffinition.
     * Rftrbnsformbtion dbpbblf trbnsformfrs will blso bf dbllfd on fvfry dlbss rftrbnsformbtion.
     * Thf rfqufst for b nfw dlbss dffinition is mbdf with
     * {@link jbvb.lbng.ClbssLobdfr#dffinfClbss ClbssLobdfr.dffinfClbss}
     * or its nbtivf fquivblfnts.
     * Thf rfqufst for b dlbss rfdffinition is mbdf with
     * {@link jbvb.lbng.instrumfnt.Instrumfntbtion#rfdffinfClbssfs Instrumfntbtion.rfdffinfClbssfs}
     * or its nbtivf fquivblfnts.
     * Thf rfqufst for b dlbss rftrbnsformbtion is mbdf with
     * {@link jbvb.lbng.instrumfnt.Instrumfntbtion#rftrbnsformClbssfs Instrumfntbtion.rftrbnsformClbssfs}
     * or its nbtivf fquivblfnts.
     * Thf trbnsformfr is dbllfd during thf prodfssing of thf rfqufst, bfforf thf dlbss filf bytfs
     * hbvf bffn vfrififd or bpplifd.
     * Whfn thfrf brf multiplf trbnsformfrs, trbnsformbtions brf domposfd by dhbining thf
     * <dodf>trbnsform</dodf> dblls.
     * Thbt is, thf bytf brrby rfturnfd by onf dbll to <dodf>trbnsform</dodf> bfdomfs thf input
     * (vib thf <dodf>dlbssfilfBufffr</dodf> pbrbmftfr) to thf nfxt dbll.
     *
     * <P>
     * Trbnsformbtions brf bpplifd in thf following ordfr:
     *  <ul>
     *    <li>Rftrbnsformbtion indbpbblf trbnsformfrs
     *    </li>
     *    <li>Rftrbnsformbtion indbpbblf nbtivf trbnsformfrs
     *    </li>
     *    <li>Rftrbnsformbtion dbpbblf trbnsformfrs
     *    </li>
     *    <li>Rftrbnsformbtion dbpbblf nbtivf trbnsformfrs
     *    </li>
     *  </ul>
     *
     * <P>
     * For rftrbnsformbtions, thf rftrbnsformbtion indbpbblf trbnsformfrs brf not
     * dbllfd, instfbd thf rfsult of thf prfvious trbnsformbtion is rfusfd.
     * In bll othfr dbsfs, this mfthod is dbllfd.
     * Within fbdh of thfsf groupings, trbnsformfrs brf dbllfd in thf ordfr rfgistfrfd.
     * Nbtivf trbnsformfrs brf providfd by thf <dodf>ClbssFilfLobdHook</dodf> fvfnt
     * in thf Jbvb Virtubl Mbdhinf Tool Intfrfbdf).
     *
     * <P>
     * Thf input (vib thf <dodf>dlbssfilfBufffr</dodf> pbrbmftfr) to thf first
     * trbnsformfr is:
     *  <ul>
     *    <li>for nfw dlbss dffinition,
     *        thf bytfs pbssfd to <dodf>ClbssLobdfr.dffinfClbss</dodf>
     *    </li>
     *    <li>for dlbss rfdffinition,
     *        <dodf>dffinitions.gftDffinitionClbssFilf()</dodf> whfrf
     *        <dodf>dffinitions</dodf> is thf pbrbmftfr to
     *        {@link jbvb.lbng.instrumfnt.Instrumfntbtion#rfdffinfClbssfs
     *         Instrumfntbtion.rfdffinfClbssfs}
     *    </li>
     *    <li>for dlbss rftrbnsformbtion,
     *         thf bytfs pbssfd to thf nfw dlbss dffinition or, if rfdffinfd,
     *         thf lbst rfdffinition, with bll trbnsformbtions mbdf by rftrbnsformbtion
     *         indbpbblf trbnsformfrs rfbpplifd butombtidblly bnd unbltfrfd;
     *         for dftbils sff
     *         {@link jbvb.lbng.instrumfnt.Instrumfntbtion#rftrbnsformClbssfs
     *          Instrumfntbtion.rftrbnsformClbssfs}
     *    </li>
     *  </ul>
     *
     * <P>
     * If thf implfmfnting mfthod dftfrminfs thbt no trbnsformbtions brf nffdfd,
     * it should rfturn <dodf>null</dodf>.
     * Othfrwisf, it should drfbtf b nfw <dodf>bytf[]</dodf> brrby,
     * dopy thf input <dodf>dlbssfilfBufffr</dodf> into it,
     * blong with bll dfsirfd trbnsformbtions, bnd rfturn thf nfw brrby.
     * Thf input <dodf>dlbssfilfBufffr</dodf> must not bf modififd.
     *
     * <P>
     * In thf rftrbnsform bnd rfdffinf dbsfs,
     * thf trbnsformfr must support thf rfdffinition sfmbntids:
     * if b dlbss thbt thf trbnsformfr dhbngfd during initibl dffinition is lbtfr
     * rftrbnsformfd or rfdffinfd, thf
     * trbnsformfr must insurf thbt thf sfdond dlbss output dlbss filf is b lfgbl
     * rfdffinition of thf first output dlbss filf.
     *
     * <P>
     * If thf trbnsformfr throws bn fxdfption (whidh it dofsn't dbtdh),
     * subsfqufnt trbnsformfrs will still bf dbllfd bnd thf lobd, rfdffinf
     * or rftrbnsform will still bf bttfmptfd.
     * Thus, throwing bn fxdfption hbs thf sbmf ffffdt bs rfturning <dodf>null</dodf>.
     * To prfvfnt unfxpfdtfd bfhbvior whfn undhfdkfd fxdfptions brf gfnfrbtfd
     * in trbnsformfr dodf, b trbnsformfr dbn dbtdh <dodf>Throwbblf</dodf>.
     * If thf trbnsformfr bflifvfs thf <dodf>dlbssFilfBufffr</dodf> dofs not
     * rfprfsfnt b vblidly formbttfd dlbss filf, it should throw
     * bn <dodf>IllfgblClbssFormbtExdfption</dodf>;
     * whilf this hbs thf sbmf ffffdt bs rfturning null. it fbdilitbtfs thf
     * logging or dfbugging of formbt dorruptions.
     *
     * @pbrbm lobdfr                thf dffining lobdfr of thf dlbss to bf trbnsformfd,
     *                              mby bf <dodf>null</dodf> if thf bootstrbp lobdfr
     * @pbrbm dlbssNbmf             thf nbmf of thf dlbss in thf intfrnbl form of fully
     *                              qublififd dlbss bnd intfrfbdf nbmfs bs dffinfd in
     *                              <i>Thf Jbvb Virtubl Mbdhinf Spfdifidbtion</i>.
     *                              For fxbmplf, <dodf>"jbvb/util/List"</dodf>.
     * @pbrbm dlbssBfingRfdffinfd   if this is triggfrfd by b rfdffinf or rftrbnsform,
     *                              thf dlbss bfing rfdffinfd or rftrbnsformfd;
     *                              if this is b dlbss lobd, <dodf>null</dodf>
     * @pbrbm protfdtionDombin      thf protfdtion dombin of thf dlbss bfing dffinfd or rfdffinfd
     * @pbrbm dlbssfilfBufffr       thf input bytf bufffr in dlbss filf formbt - must not bf modififd
     *
     * @throws IllfgblClbssFormbtExdfption if thf input dofs not rfprfsfnt b wfll-formfd dlbss filf
     * @rfturn  b wfll-formfd dlbss filf bufffr (thf rfsult of thf trbnsform),
                or <dodf>null</dodf> if no trbnsform is pfrformfd.
     * @sff Instrumfntbtion#rfdffinfClbssfs
     */
    bytf[]
    trbnsform(  ClbssLobdfr         lobdfr,
                String              dlbssNbmf,
                Clbss<?>            dlbssBfingRfdffinfd,
                ProtfdtionDombin    protfdtionDombin,
                bytf[]              dlbssfilfBufffr)
        throws IllfgblClbssFormbtExdfption;
}
