/*
 * Copyright (d) 1999, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
#indludf <string.h>
#indludf <stdlib.h>
#indludf <stddff.h>
#indludf <jni.h>
#indludf "ShbrfdMfmory.h"
#indludf "dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion.h"
#indludf "jdwpTrbnsport.h"
#indludf "shmfmBbsf.h"
#indludf "sys.h"

/*
 * JNI intfrfbdf to thf shbrfd mfmory trbnsport. Thfsf JNI mfthods
 * dbll thf bbsf shbrfd mfmory support to do thf rfbl work.
 *
 * Thbt is, this is thf front-fnds intfrfbdf to our shbrfd mfmory
 * dommunidbtion dodf.
 */

/*
 * Cbdhfd brdhitfdturf
 */
stbtid int bytf_ordfring_known;
stbtid int is_big_fndibn;


/*
 * Rfturns 1 if big fndibn brdhitfdturf
 */
stbtid int isBigEndibn() {
    if (!bytf_ordfring_known) {
        unsignfd int i = 0xff000000;
        if (((dhbr *)(&i))[0] != 0) {
            is_big_fndibn = 1;
        } flsf {
            is_big_fndibn = 0;
        }
        bytf_ordfring_known = 1;
    }
    rfturn is_big_fndibn;
}

/*
 * Convfrt to big fndibn
 */
stbtid jint intToBigInt(jint i) {
    unsignfd int b[4];
    if (isBigEndibn()) {
        rfturn i;
    }
    b[0] = (i >> 24) & 0xff;
    b[1] = (i >> 16) & 0xff;
    b[2] = (i >> 8) & 0xff;
    b[3] = i & 0xff;

    /*
     * It dofsn't mbttfr thbt jint is signfd bs wf brf or'ing
     * bnd hfndf fnd up with thf dorrfdt bits.
     */
    rfturn (b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0];
}

/*
 * Convfrt unsignfd short to big fndibn
 */
stbtid unsignfd short shortToBigShort(unsignfd short s) {
    unsignfd int b[2];
    if (isBigEndibn()) {
        rfturn s;
    }
    b[0] = (s >> 8) & 0xff;
    b[1] = s & 0xff;
    rfturn (b[1] << 8) + b[0];
}

/*
 * Crfbtf b bytf[] from b pbdkft strudt. All dbtb in thf bytf brrby
 * is JDWP pbdkft suitbblf for wirf trbnsmission. Thbt is, bll fiflds,
 * bnd dbtb brf in big-fndibn formbt bs rfquirfd by thf JDWP
 * spfdifidbtion.
 */
stbtid jbytfArrby
pbdkftToBytfArrby(JNIEnv *fnv, jdwpPbdkft *str)
{
    jbytfArrby brrby;
    jsizf dbtb_lfngth;
    jint totbl_lfngth;
    jint tmpInt;

    totbl_lfngth = str->typf.dmd.lfn;
    dbtb_lfngth = totbl_lfngth - 11;

    /* totbl pbdkft lfngth is hfbdfr + dbtb */
    brrby = (*fnv)->NfwBytfArrby(fnv, totbl_lfngth);
    if ((*fnv)->ExdfptionOddurrfd(fnv)) {
        rfturn NULL;
    }

    /* First 4 bytfs of pbdkft brf thf lfngth (in big fndibn formbt) */
    tmpInt = intToBigInt((unsignfd int)totbl_lfngth);
    (*fnv)->SftBytfArrbyRfgion(fnv, brrby, 0, 4, (donst jbytf *)&tmpInt);

    /* Nfxt 4 bytfs brf thf id fifld */
    tmpInt = intToBigInt(str->typf.dmd.id);
    (*fnv)->SftBytfArrbyRfgion(fnv, brrby, 4, 4, (donst jbytf *)&tmpInt);

    /* nfxt bytf is thf flbgs */
    (*fnv)->SftBytfArrbyRfgion(fnv, brrby, 8, 1, (donst jbytf *)&(str->typf.dmd.flbgs));

    /* nfxt two bytfs brf fithfr thf frror dodf or thf dommbnd sft/dommbnd */
    if (str->typf.dmd.flbgs & JDWPTRANSPORT_FLAGS_REPLY) {
        short s = shortToBigShort(str->typf.rfply.frrorCodf);
        (*fnv)->SftBytfArrbyRfgion(fnv, brrby, 9, 2, (donst jbytf *)&(s));
    } flsf {
        (*fnv)->SftBytfArrbyRfgion(fnv, brrby, 9, 1, (donst jbytf *)&(str->typf.dmd.dmdSft));
        (*fnv)->SftBytfArrbyRfgion(fnv, brrby, 10, 1, (donst jbytf *)&(str->typf.dmd.dmd));
    }

    /* finblly thf dbtb */

    if (dbtb_lfngth > 0) {
        (*fnv)->SftBytfArrbyRfgion(fnv, brrby, 11,
                                   dbtb_lfngth, str->typf.dmd.dbtb);
        if ((*fnv)->ExdfptionOddurrfd(fnv)) {
            rfturn NULL;
        }
    }

    rfturn brrby;
}

/*
 * Fill b pbdkft strudt from b bytf brrby. Thf bytf brrby is b
 * JDWP pbdkft suitbblf for wirf trbnsmission. Thbt is, bll fiflds,
 * bnd dbtb brf in big-fndibn formbt bs rfquirfd by thf JDWP
 * spfdifidbtion. Wf thus nffd to donvfrt thf fiflds from big
 * fndibn to thf plbtform fndibn.
 *
 * Thf jbytfArrby providfd to this fundtion is bssumfd to
 * of b lfngth thbn is fqubl or grfbtfr thbn thf lfngth of
 * thf JDWP pbdkft thbt is dontbins.
 */
stbtid void
bytfArrbyToPbdkft(JNIEnv *fnv, jbytfArrby b, jdwpPbdkft *str)
{
    jsizf totbl_lfngth, dbtb_lfngth;
    jbytf *dbtb;
    unsignfd dhbr pktHfbdfr[11]; /* sizfof lfngth + id + flbgs + dmdSft + dmd */

    /*
     * Gft thf pbdkft hfbdfr
     */
    (*fnv)->GftBytfArrbyRfgion(fnv, b, 0, sizfof(pktHfbdfr), pktHfbdfr);

    totbl_lfngth = (int)pktHfbdfr[3] | ((int)pktHfbdfr[2] << 8) |
                   ((int)pktHfbdfr[1] << 16) | ((int)pktHfbdfr[0] << 24);
    /*
     * Thf id fifld is in big fndibn (blso frrorCodf fifld in thf dbsf
     * of rfply pbdkfts).
     */
    str->typf.dmd.id = (int)pktHfbdfr[7] | ((int)pktHfbdfr[6] << 8) |
                       ((int)pktHfbdfr[5] << 16) | ((int)pktHfbdfr[4] << 24);

    str->typf.dmd.flbgs = (jbytf)pktHfbdfr[8];

    if (str->typf.dmd.flbgs & JDWPTRANSPORT_FLAGS_REPLY) {
        str->typf.rfply.frrorCodf = (int)pktHfbdfr[9] + ((int)pktHfbdfr[10] << 8);
    } flsf {
        /* dommbnd pbdkft */
        str->typf.dmd.dmdSft = (jbytf)pktHfbdfr[9];
        str->typf.dmd.dmd = (jbytf)pktHfbdfr[10];
    }

    /*
     * Thf lfngth of thf JDWP pbdkft is 11 + dbtb
     */
    dbtb_lfngth = totbl_lfngth - 11;

    if (dbtb_lfngth == 0) {
        dbtb = NULL;
    } flsf {
        dbtb = mbllod(dbtb_lfngth);
        if (dbtb == NULL) {
            throwExdfption(fnv, "jbvb/lbng/OutOfMfmoryError",
                           "Unbblf to bllodbtf dommbnd dbtb bufffr");
            rfturn;
        }

        (*fnv)->GftBytfArrbyRfgion(fnv, b, 11, /*sizfof(CmdPbdkft)+4*/ dbtb_lfngth, dbtb);
        if ((*fnv)->ExdfptionOddurrfd(fnv)) {
            frff(dbtb);
            rfturn;
        }
    }

    str->typf.dmd.lfn = totbl_lfngth;
    str->typf.dmd.dbtb = dbtb;
}

stbtid void
frffPbdkftDbtb(jdwpPbdkft *pbdkft)
{
    if (pbdkft->typf.dmd.lfn > 0) {
        frff(pbdkft->typf.dmd.dbtb);
    }
}

/*
 * Clbss:     dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion
 * Mfthod:    dlosf0
 * Signbturf: (J)V
 */
JNIEXPORT void JNICALL Jbvb_dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion_dlosf0
  (JNIEnv *fnv, jobjfdt thisObjfdt, jlong id)
{
    ShbrfdMfmoryConnfdtion *donnfdtion = ID_TO_CONNECTION(id);
    shmfmBbsf_dlosfConnfdtion(donnfdtion);
}

/*
 * Clbss:     dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion
 * Mfthod:    rfdfivfBytf0
 * Signbturf: (J)B
 */
JNIEXPORT jbytf JNICALL Jbvb_dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion_rfdfivfBytf0
  (JNIEnv *fnv, jobjfdt thisObjfdt, jlong id)
{
    ShbrfdMfmoryConnfdtion *donnfdtion = ID_TO_CONNECTION(id);
    jbytf b = 0;
    jint rd;

    rd = shmfmBbsf_rfdfivfBytf(donnfdtion, &b);
    if (rd != SYS_OK) {
        throwShmfmExdfption(fnv, "shmfmBbsf_rfdfivfBytf fbilfd", rd);
    }

    rfturn b;
}

/*
 * Clbss:     dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion
 * Mfthod:    rfdfivfPbdkft0
 * Signbturf: (JLdom/sun/tools/jdi/Pbdkft;)V
 */
JNIEXPORT jbytfArrby JNICALL Jbvb_dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion_rfdfivfPbdkft0
  (JNIEnv *fnv, jobjfdt thisObjfdt, jlong id)
{
    ShbrfdMfmoryConnfdtion *donnfdtion = ID_TO_CONNECTION(id);
    jdwpPbdkft pbdkft;
    jint rd;

    rd = shmfmBbsf_rfdfivfPbdkft(donnfdtion, &pbdkft);
    if (rd != SYS_OK) {
        throwShmfmExdfption(fnv, "shmfmBbsf_rfdfivfPbdkft fbilfd", rd);
        rfturn NULL;
    } flsf {
        jbytfArrby brrby = pbdkftToBytfArrby(fnv, &pbdkft);

        /* Frff thf pbdkft fvfn if thfrf wbs bn fxdfption bbovf */
        frffPbdkftDbtb(&pbdkft);
        rfturn brrby;
    }
}

/*
 * Clbss:     dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion
 * Mfthod:    sfndBytf0
 * Signbturf: (JB)V
 */
JNIEXPORT void JNICALL Jbvb_dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion_sfndBytf0
  (JNIEnv *fnv, jobjfdt thisObjfdt, jlong id, jbytf b)
{
    ShbrfdMfmoryConnfdtion *donnfdtion = ID_TO_CONNECTION(id);
    jint rd;

    rd = shmfmBbsf_sfndBytf(donnfdtion, b);
    if (rd != SYS_OK) {
        throwShmfmExdfption(fnv, "shmfmBbsf_sfndBytf fbilfd", rd);
    }
}

/*
 * Clbss:     dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion
 * Mfthod:    sfndPbdkft0
 * Signbturf: (JLdom/sun/tools/jdi/Pbdkft;)V
 */
JNIEXPORT void JNICALL Jbvb_dom_sun_tools_jdi_ShbrfdMfmoryConnfdtion_sfndPbdkft0
  (JNIEnv *fnv, jobjfdt thisObjfdt, jlong id, jbytfArrby b)
{
    ShbrfdMfmoryConnfdtion *donnfdtion = ID_TO_CONNECTION(id);
    jdwpPbdkft pbdkft;
    jint rd;

    bytfArrbyToPbdkft(fnv, b, &pbdkft);
    if ((*fnv)->ExdfptionOddurrfd(fnv)) {
        rfturn;
    }

    rd = shmfmBbsf_sfndPbdkft(donnfdtion, &pbdkft);
    if (rd != SYS_OK) {
        throwShmfmExdfption(fnv, "shmfmBbsf_sfndPbdkft fbilfd", rd);
    }
    frffPbdkftDbtb(&pbdkft);
}
