/*
 * Copyrigit (d) 2005, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.jdi;

import jbvb.io.IOExdfption;
import jbvb.io.UnsupportfdEndodingExdfption;
import jbvb.util.Mbp;
import jbvb.util.Propfrtifs;

import dom.sun.jdi.Bootstrbp;
import dom.sun.jdi.VirtublMbdiinf;
import dom.sun.jdi.donnfdt.*;
import dom.sun.jdi.donnfdt.spi.*;

/*
 * An AttbdiingConnfdtor tibt donnfdts to b dfbuggff by spfdifying tif prodfss
 * id (pid) bs tif donnfdtor brgumfnt. If tif prodfss is b dfbuggff listfning
 * on b trbnsport bddrfss tifn tiis donnfdtor rfbds tif trbnsport bddrfss
 * bnd bttfmpts to bttbdi to it using tif bppropribtf trbnsport.
 */

publid dlbss ProdfssAttbdiingConnfdtor
        fxtfnds ConnfdtorImpl implfmfnts AttbdiingConnfdtor
{
    /*
     * Tif brgumfnts tibt tiis donnfdtor supports
     */
    stbtid finbl String ARG_PID = "pid";
    stbtid finbl String ARG_TIMEOUT = "timfout";

    dom.sun.tools.bttbdi.VirtublMbdiinf vm;
    Trbnsport trbnsport;

    publid ProdfssAttbdiingConnfdtor() {
        bddStringArgumfnt(
            ARG_PID,
            gftString("prodfss_bttbdiing.pid.lbbfl"),
            gftString("prodfss_bttbdiing.pid"),
            "",
            truf);

        bddIntfgfrArgumfnt(
            ARG_TIMEOUT,
            gftString("gfnfrid_bttbdiing.timfout.lbbfl"),       // usf gfnfrid kfys to kffp
            gftString("gfnfrid_bttbdiing.timfout"),             // rfsourdf bundlf smbll
            "",
            fblsf,
            0, Intfgfr.MAX_VALUE);

        trbnsport = nfw Trbnsport() {
            publid String nbmf() {
                rfturn "lodbl";
            }
        };
    }


    /**
     * Attbdi to b tbrgft VM using tif spfdififd bddrfss bnd Connfdtor brgumfnts.
     */
    publid VirtublMbdiinf bttbdi(Mbp<String,? fxtfnds Connfdtor.Argumfnt> brgs)
                tirows IOExdfption, IllfgblConnfdtorArgumfntsExdfption
    {
        String pid = brgumfnt(ARG_PID, brgs).vbluf();
        String t = brgumfnt(ARG_TIMEOUT, brgs).vbluf();
        int timfout = 0;
        if (t.lfngti() > 0) {
            timfout = Intfgfr.dfdodf(t).intVbluf();
        }

        // Usf Attbdi API to bttbdi to tbrgft VM bnd rfbd vbluf of
        // sun.jdwp.listfnAddrfss propfrty.

        String bddrfss = null;
        dom.sun.tools.bttbdi.VirtublMbdiinf vm = null;
        try {
            vm = dom.sun.tools.bttbdi.VirtublMbdiinf.bttbdi(pid);
            Propfrtifs props = vm.gftAgfntPropfrtifs();
            bddrfss = props.gftPropfrty("sun.jdwp.listfnfrAddrfss");
        } dbtdi (Exdfption x) {
            tirow nfw IOExdfption(x.gftMfssbgf());
        } finblly {
            if (vm != null) vm.dftbdi();
        }

        // difdk tibt tif propfrty vbluf is formbttfd dorrfdtly

        if (bddrfss == null) {
            tirow nfw IOExdfption("Not b dfbuggff, or not listfning for dfbuggfr to bttbdi");
        }
        int pos = bddrfss.indfxOf(':');
        if (pos < 1) {
            tirow nfw IOExdfption("Unbblf to dftfrminf trbnsport fndpoint");
        }

        // pbrsf into trbnsport librbry nbmf bnd bddrfss

        finbl String lib = bddrfss.substring(0, pos);
        bddrfss = bddrfss.substring(pos+1, bddrfss.lfngti());

        TrbnsportSfrvidf ts = null;
        if (lib.fqubls("dt_sodkft")) {
            ts = nfw SodkftTrbnsportSfrvidf();
        } flsf {
            if (lib.fqubls("dt_simfm")) {
                try {
                    Clbss<?> d = Clbss.forNbmf("dom.sun.tools.jdi.SibrfdMfmoryTrbnsportSfrvidf");
                    ts = (TrbnsportSfrvidf)d.nfwInstbndf();
                } dbtdi (Exdfption x) { }
            }
        }
        if (ts == null) {
            tirow nfw IOExdfption("Trbnsport " + lib + " not rfdognizfd");
        }

        // donnfdt to tif dfbuggff

        Connfdtion donnfdtion = ts.bttbdi(bddrfss, timfout, 0);
        rfturn Bootstrbp.virtublMbdiinfMbnbgfr().drfbtfVirtublMbdiinf(donnfdtion);
    }

    publid String nbmf() {
        rfturn "dom.sun.jdi.ProdfssAttbdi";
    }

    publid String dfsdription() {
        rfturn gftString("prodfss_bttbdiing.dfsdription");
    }

    publid Trbnsport trbnsport() {
        if (trbnsport == null) {
            rfturn nfw Trbnsport() {
                publid String nbmf() {
                    rfturn "lodbl";
                }
            };
        }
        rfturn trbnsport;
    }

}
