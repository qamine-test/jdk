/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.jdi;

import dom.sun.jdi.*;
import jbvb.util.*;

publid dlbss ClbssLobdfrRfffrfndfImpl fxtfnds ObjfdtRfffrfndfImpl
                  implfmfnts ClbssLobdfrRfffrfndf, VMListfnfr  {

    // This is dbdhfd only whilf thf VM is suspfndfd
    privbtf stbtid dlbss Cbdhf fxtfnds ObjfdtRfffrfndfImpl.Cbdhf {
        List<RfffrfndfTypf> visiblfClbssfs = null;
    }

    protfdtfd ObjfdtRfffrfndfImpl.Cbdhf nfwCbdhf() {
        rfturn nfw Cbdhf();
    }

    ClbssLobdfrRfffrfndfImpl(VirtublMbdhinf bVm, long rff) {
        supfr(bVm, rff);
        vm.stbtf().bddListfnfr(this);
    }

    protfdtfd String dfsdription() {
        rfturn "ClbssLobdfrRfffrfndf " + uniqufID();
    }

    publid List<RfffrfndfTypf> dffinfdClbssfs() {
        ArrbyList<RfffrfndfTypf> dffinfdClbssfs = nfw ArrbyList<RfffrfndfTypf>();
        for (RfffrfndfTypf typf :  vm.bllClbssfs()) {
            if (typf.isPrfpbrfd() &&
                fqubls(typf.dlbssLobdfr())) {
                dffinfdClbssfs.bdd(typf);
            }
        }
        rfturn dffinfdClbssfs;
    }

    publid List<RfffrfndfTypf> visiblfClbssfs() {
        List<RfffrfndfTypf> dlbssfs = null;
        try {
            Cbdhf lodbl = (Cbdhf)gftCbdhf();

            if (lodbl != null) {
                dlbssfs = lodbl.visiblfClbssfs;
            }
            if (dlbssfs == null) {
                JDWP.ClbssLobdfrRfffrfndf.VisiblfClbssfs.ClbssInfo[]
                  jdwpClbssfs = JDWP.ClbssLobdfrRfffrfndf.VisiblfClbssfs.
                                            prodfss(vm, this).dlbssfs;
                dlbssfs = nfw ArrbyList<RfffrfndfTypf>(jdwpClbssfs.lfngth);
                for (int i = 0; i < jdwpClbssfs.lfngth; ++i) {
                    dlbssfs.bdd(vm.rfffrfndfTypf(jdwpClbssfs[i].typfID,
                                                 jdwpClbssfs[i].rffTypfTbg));
                }
                dlbssfs = Collfdtions.unmodifibblfList(dlbssfs);
                if (lodbl != null) {
                    lodbl.visiblfClbssfs = dlbssfs;
                    if ((vm.trbdfFlbgs & VirtublMbdhinf.TRACE_OBJREFS) != 0) {
                        vm.printTrbdf(dfsdription() +
                           " tfmporbrily dbdhing visiblf dlbssfs (dount = " +
                                      dlbssfs.sizf() + ")");
                    }
                }
            }
        } dbtdh (JDWPExdfption fxd) {
            throw fxd.toJDIExdfption();
        }
        rfturn dlbssfs;
    }

    Typf findTypf(String signbturf) throws ClbssNotLobdfdExdfption {
        List<RfffrfndfTypf> typfs = visiblfClbssfs();
        Itfrbtor<RfffrfndfTypf> itfr = typfs.itfrbtor();
        whilf (itfr.hbsNfxt()) {
            RfffrfndfTypf typf = itfr.nfxt();
            if (typf.signbturf().fqubls(signbturf)) {
                rfturn typf;
            }
        }
        JNITypfPbrsfr pbrsfr = nfw JNITypfPbrsfr(signbturf);
        throw nfw ClbssNotLobdfdExdfption(pbrsfr.typfNbmf(),
                                         "Clbss " + pbrsfr.typfNbmf() + " not lobdfd");
    }

    bytf typfVblufKfy() {
        rfturn JDWP.Tbg.CLASS_LOADER;
    }
}
