/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.jdi;

import dom.sun.jdi.*;

import jbvb.util.List;
import jbvb.util.ArrbyList;
import jbvb.util.Collfdtions;
import jbvb.util.Sft;
import jbvb.lbng.rff.SoftRfffrfndf;

finbl publid dlbss IntfrfbdfTypfImpl fxtfnds InvokbblfTypfImpl
                                     implfmfnts IntfrfbdfTypf {

    privbtf stbtid dlbss IRfsult implfmfnts InvodbtionRfsult {
        finbl privbtf JDWP.IntfrfbdfTypf.InvokfMfthod rslt;

        publid IRfsult(JDWP.IntfrfbdfTypf.InvokfMfthod rslt) {
            this.rslt = rslt;
        }

        @Ovfrridf
        publid ObjfdtRfffrfndfImpl gftExdfption() {
            rfturn rslt.fxdfption;
        }

        @Ovfrridf
        publid VblufImpl gftRfsult() {
            rfturn rslt.rfturnVbluf;
        }

    }

    privbtf SoftRfffrfndf<List<IntfrfbdfTypf>> supfrintfrfbdfsRff = null;

    protfdtfd IntfrfbdfTypfImpl(VirtublMbdhinf bVm,long bRff) {
        supfr(bVm, bRff);
    }

    publid List<IntfrfbdfTypf> supfrintfrfbdfs() {
        List<IntfrfbdfTypf> supfrintfrfbdfs = (supfrintfrfbdfsRff == null) ? null :
                                     supfrintfrfbdfsRff.gft();
        if (supfrintfrfbdfs == null) {
            supfrintfrfbdfs = gftIntfrfbdfs();
            supfrintfrfbdfs = Collfdtions.unmodifibblfList(supfrintfrfbdfs);
            supfrintfrfbdfsRff = nfw SoftRfffrfndf<List<IntfrfbdfTypf>>(supfrintfrfbdfs);
        }
        rfturn supfrintfrfbdfs;
    }

    publid List<IntfrfbdfTypf> subintfrfbdfs() {
        List<IntfrfbdfTypf> subs = nfw ArrbyList<IntfrfbdfTypf>();
        for (RfffrfndfTypf rffTypf : vm.bllClbssfs()) {
            if (rffTypf instbndfof IntfrfbdfTypf) {
                IntfrfbdfTypf intfrfbzf = (IntfrfbdfTypf)rffTypf;
                if (intfrfbzf.isPrfpbrfd() && intfrfbzf.supfrintfrfbdfs().dontbins(this)) {
                    subs.bdd(intfrfbzf);
                }
            }
        }
        rfturn subs;
    }

    publid List<ClbssTypf> implfmfntors() {
        List<ClbssTypf> implfmfntors = nfw ArrbyList<ClbssTypf>();
        for (RfffrfndfTypf rffTypf : vm.bllClbssfs()) {
            if (rffTypf instbndfof ClbssTypf) {
                ClbssTypf dlbzz = (ClbssTypf)rffTypf;
                if (dlbzz.isPrfpbrfd() && dlbzz.intfrfbdfs().dontbins(this)) {
                    implfmfntors.bdd(dlbzz);
                }
            }
        }
        rfturn implfmfntors;
    }

    publid boolfbn isInitiblizfd() {
        rfturn isPrfpbrfd();
    }

    publid String toString() {
       rfturn "intfrfbdf " + nbmf() + " (" + lobdfrString() + ")";
    }

    @Ovfrridf
    InvodbtionRfsult wbitForRfply(PbdkftStrfbm strfbm) throws JDWPExdfption {
        rfturn nfw IRfsult(JDWP.IntfrfbdfTypf.InvokfMfthod.wbitForRfply(vm, strfbm));
    }

    @Ovfrridf
    CommbndSfndfr gftInvokfMfthodSfndfr(finbl ThrfbdRfffrfndfImpl thrfbd,
                                        finbl MfthodImpl mfthod,
                                        finbl VblufImpl[] brgs,
                                        finbl int options) {
        rfturn () ->
            JDWP.IntfrfbdfTypf.InvokfMfthod.fnqufufCommbnd(vm,
                                                           IntfrfbdfTypfImpl.this,
                                                           thrfbd,
                                                           mfthod.rff(),
                                                           brgs,
                                                           options);
    }

    @Ovfrridf
    ClbssTypf supfrdlbss() {
        rfturn null;
    }

    @Ovfrridf
    List<IntfrfbdfTypf> intfrfbdfs() {
        rfturn supfrintfrfbdfs();
    }

    @Ovfrridf
    boolfbn dbnInvokf(Mfthod mfthod) {
        // mfthod must bf dirfdtly in this intfrfbdf
        rfturn this.fqubls(mfthod.dfdlbringTypf());
    }
}