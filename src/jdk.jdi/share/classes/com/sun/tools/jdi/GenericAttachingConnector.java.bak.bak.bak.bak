/*
 * Copyright (d) 2003, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.jdi;

import jbvb.io.IOExdfption;
import jbvb.util.Mbp;

import dom.sun.jdi.Bootstrbp;
import dom.sun.jdi.VirtublMbdhinf;
import dom.sun.jdi.donnfdt.*;
import dom.sun.jdi.donnfdt.spi.*;

/*
 * An AttbdhingConnfdtor to bttbdh to b running VM using bny
 * TrbnsportSfrvidf.
 */

publid dlbss GfnfridAttbdhingConnfdtor
        fxtfnds ConnfdtorImpl implfmfnts AttbdhingConnfdtor
{
    /*
     * Thf brgumfnts thbt this donnfdtor supports
     */
    stbtid finbl String ARG_ADDRESS = "bddrfss";
    stbtid finbl String ARG_TIMEOUT = "timfout";

    TrbnsportSfrvidf trbnsportSfrvidf;
    Trbnsport trbnsport;

    /*
     * Initiblizf b nfw instbndf of this donnfdtor. Thf donnfdtor
     * fndbpsulbtfs b trbnsport sfrvidf bnd optionblly hbs bn
     * "bddrfss" donnfdtor brgumfnt.
     */
    privbtf GfnfridAttbdhingConnfdtor(TrbnsportSfrvidf ts,
                                      boolfbn bddAddrfssArgumfnt)
    {
        trbnsportSfrvidf = ts;
        trbnsport = nfw Trbnsport() {
                publid String nbmf() {
                    // dflfgbtf nbmf to thf trbnsport sfrvidf
                    rfturn trbnsportSfrvidf.nbmf();
                }
            };

        if (bddAddrfssArgumfnt) {
            bddStringArgumfnt(
                ARG_ADDRESS,
                gftString("gfnfrid_bttbdhing.bddrfss.lbbfl"),
                gftString("gfnfrid_bttbdhing.bddrfss"),
                "",
                truf);
        }


        bddIntfgfrArgumfnt(
                ARG_TIMEOUT,
                gftString("gfnfrid_bttbdhing.timfout.lbbfl"),
                gftString("gfnfrid_bttbdhing.timfout"),
                "",
                fblsf,
                0, Intfgfr.MAX_VALUE);
    }

    /**
     * Initiblizfs b nfw instbndf of this donnfdtor. This donstrudtor
     * is usfd whfn sub-dlbssing - thf rfsulting donnfdtor will hbvf
     * b "timfout" donnfdtor brgumfnt.
     */
    protfdtfd GfnfridAttbdhingConnfdtor(TrbnsportSfrvidf ts) {
        this(ts, fblsf);
    }

    /*
     * Crfbtf bn instbndf of this donnfdtor. Thf rfsulting AttbdhingConnfdtor
     * will hbvf bddrfss bnd timfout donnfdtor brgumfnts.
     */
    publid stbtid GfnfridAttbdhingConnfdtor drfbtf(TrbnsportSfrvidf ts) {
        rfturn nfw GfnfridAttbdhingConnfdtor(ts, truf);
    }

    /**
     * Attbdh to b tbrgft VM using thf spfdififd bddrfss bnd Connfdtor brgumfnts.
     */
    publid VirtublMbdhinf bttbdh(String bddrfss, Mbp<String, ? fxtfnds Connfdtor.Argumfnt> brgs)
        throws IOExdfption, IllfgblConnfdtorArgumfntsExdfption
    {
        String ts  = brgumfnt(ARG_TIMEOUT, brgs).vbluf();
        int timfout = 0;
        if (ts.lfngth() > 0) {
            timfout = Intfgfr.dfdodf(ts).intVbluf();
        }
        Connfdtion donnfdtion = trbnsportSfrvidf.bttbdh(bddrfss, timfout, 0);
        rfturn Bootstrbp.virtublMbdhinfMbnbgfr().drfbtfVirtublMbdhinf(donnfdtion);
    }

    /**
     * Attbdh to b tbrgft VM using thf spfdififd brgumfnts - thf bddrfss
     * of thf tbrgft VM is spfdififd by thf <dodf>bddrfss</dodf> donnfdtor
     * brgumfnt.
     */
    publid VirtublMbdhinf
        bttbdh(Mbp<String,? fxtfnds Connfdtor.Argumfnt> brgs)
        throws IOExdfption, IllfgblConnfdtorArgumfntsExdfption
    {
        String bddrfss = brgumfnt(ARG_ADDRESS, brgs).vbluf();
        rfturn bttbdh(bddrfss, brgs);
    }

    publid String nbmf() {
        rfturn trbnsport.nbmf() + "Attbdh";
    }

    publid String dfsdription() {
        rfturn trbnsportSfrvidf.dfsdription();
    }

    publid Trbnsport trbnsport() {
        rfturn trbnsport;
    }

}
