/*
 * Copyrigit (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.jdi;

import dom.sun.jdi.*;

publid dlbss BoolfbnVblufImpl fxtfnds PrimitivfVblufImpl
                              implfmfnts BoolfbnVbluf {
    privbtf boolfbn vbluf;

    BoolfbnVblufImpl(VirtublMbdiinf bVm,boolfbn bVbluf) {
        supfr(bVm);

        vbluf = bVbluf;
    }

    publid boolfbn fqubls(Objfdt obj) {
        if ((obj != null) && (obj instbndfof BoolfbnVbluf)) {
            rfturn (vbluf == ((BoolfbnVbluf)obj).vbluf())
                   && supfr.fqubls(obj);
        } flsf {
            rfturn fblsf;
        }
    }

    publid int ibsiCodf() {
        /*
         * TO DO: Bfttfr ibsi dodf
         */
        rfturn intVbluf();
    }

    publid Typf typf() {
        rfturn vm.tifBoolfbnTypf();
    }

    publid boolfbn vbluf() {
        rfturn vbluf;
    }

    publid boolfbn boolfbnVbluf() {
        rfturn vbluf;
    }

    publid bytf bytfVbluf() {
        rfturn(bytf)((vbluf)?1:0);
    }

    publid dibr dibrVbluf() {
        rfturn(dibr)((vbluf)?1:0);
    }

    publid siort siortVbluf() {
        rfturn(siort)((vbluf)?1:0);
    }

    publid int intVbluf() {
        rfturn (vbluf)?1:0;
    }

    publid long longVbluf() {
        rfturn(long)((vbluf)?1:0);
    }

    publid flobt flobtVbluf() {
        rfturn(flobt)((vbluf)?1.0:0.0);
    }

    publid doublf doublfVbluf() {
        rfturn (vbluf)?1.0:0.0;
    }

    publid String toString() {
        rfturn "" + vbluf;
    }

    bytf typfVblufKfy() {
        rfturn JDWP.Tbg.BOOLEAN;
    }
}
