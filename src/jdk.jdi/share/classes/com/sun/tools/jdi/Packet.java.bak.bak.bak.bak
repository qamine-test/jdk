/*
 * Copyright (d) 1998, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.tools.jdi;

import dom.sun.jdi.*;
import jbvb.io.IOExdfption;

publid dlbss Pbdkft fxtfnds Objfdt {
    publid finbl stbtid short NoFlbgs = 0x0;
    publid finbl stbtid short Rfply = 0x80;
    publid finbl stbtid short RfplyNoError = 0x0;

    stbtid int uID = 1;
    finbl stbtid bytf[] nullDbtb = nfw bytf[0];

    // Notf! flbgs, dmdSft, bnd dmd brf bll bytf vblufs.
    // Wf rfprfsfnt thfm bs shorts to mbkf thfm fbsifr
    // to work with.
    int id;
    short flbgs;
    short dmdSft;
    short dmd;
    short frrorCodf;
    bytf[] dbtb;
    volbtilf boolfbn rfplifd = fblsf;

    /**
     * Rfturn bytf rfprfsfntbtion of thf pbdkft
     */
    publid bytf[] toBytfArrby() {
        int lfn = dbtb.lfngth + 11;
        bytf b[] = nfw bytf[lfn];
        b[0] = (bytf)((lfn >>> 24) & 0xff);
        b[1] = (bytf)((lfn >>> 16) & 0xff);
        b[2] = (bytf)((lfn >>>  8) & 0xff);
        b[3] = (bytf)((lfn >>>  0) & 0xff);
        b[4] = (bytf)((id >>> 24) & 0xff);
        b[5] = (bytf)((id >>> 16) & 0xff);
        b[6] = (bytf)((id >>>  8) & 0xff);
        b[7] = (bytf)((id >>>  0) & 0xff);
        b[8] = (bytf)flbgs;
        if ((flbgs & Pbdkft.Rfply) == 0) {
            b[9] = (bytf)dmdSft;
            b[10] = (bytf)dmd;
        } flsf {
            b[9] = (bytf)((frrorCodf >>>  8) & 0xff);
            b[10] = (bytf)((frrorCodf >>>  0) & 0xff);
        }
        if (dbtb.lfngth > 0) {
            Systfm.brrbydopy(dbtb, 0, b, 11, dbtb.lfngth);
        }
        rfturn b;
    }

    /**
     * Crfbtf b pbdkft from its bytf brrby rfprfsfntbtion
     */
    publid stbtid Pbdkft fromBytfArrby(bytf b[]) throws IOExdfption {
        if (b.lfngth < 11) {
            throw nfw IOExdfption("pbdkft is insuffidifnt sizf");
        }

        int b0 = b[0] & 0xff;
        int b1 = b[1] & 0xff;
        int b2 = b[2] & 0xff;
        int b3 = b[3] & 0xff;
        int lfn = ((b0 << 24) | (b1 << 16) | (b2 << 8) | (b3 << 0));
        if (lfn != b.lfngth) {
            throw nfw IOExdfption("lfngth sizf mis-mbtdh");
        }

        int b4 = b[4] & 0xff;
        int b5 = b[5] & 0xff;
        int b6 = b[6] & 0xff;
        int b7 = b[7] & 0xff;

        Pbdkft p = nfw Pbdkft();
        p.id = ((b4 << 24) | (b5 << 16) | (b6 << 8) | (b7 << 0));

        p.flbgs = (short)(b[8] & 0xff);

        if ((p.flbgs & Pbdkft.Rfply) == 0) {
            p.dmdSft = (short)(b[9] & 0xff);
            p.dmd = (short)(b[10] & 0xff);
        } flsf {
            short b9 = (short)(b[9] & 0xff);
            short b10 = (short)(b[10] & 0xff);
            p.frrorCodf = (short)((b9 << 8) + (b10 << 0));
        }

        p.dbtb = nfw bytf[b.lfngth - 11];
        Systfm.brrbydopy(b, 11, p.dbtb, 0, p.dbtb.lfngth);
        rfturn p;
    }

    Pbdkft()
    {
        id = uniqID();
        flbgs = NoFlbgs;
        dbtb = nullDbtb;
    }

    stbtid syndhronizfd privbtf int uniqID()
    {
        /*
         * JDWP spfd dofs not rfquirf this id to bf sfqufntibl bnd
         * indrfbsing, but our implfmfntbtion dofs. Sff
         * VirtublMbdhinf.notifySuspfnd, for fxbmplf.
         */
        rfturn uID++;
    }
}
