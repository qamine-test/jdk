/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


pbdkbgf dom.sun.tools.fxbmplf.dfbug.tty;

import dom.sun.jdi.RfffrfndfTypf;
import dom.sun.jdi.rfqufst.*;

dlbss ExdfptionSpfd fxtfnds EvfntRfqufstSpfd {
    privbtf boolfbn notifyCbught;
    privbtf boolfbn notifyUndbught;

    privbtf ExdfptionSpfd(RfffrfndfTypfSpfd rffSpfd) {
        this(rffSpfd, truf, truf);
    }

    ExdfptionSpfd(RfffrfndfTypfSpfd rffSpfd,
                  boolfbn notifyCbught,
                  boolfbn notifyUndbught) {
        supfr(rffSpfd);
        this.notifyCbught = notifyCbught;
        this.notifyUndbught = notifyUndbught;
    }

    /**
     * Thf 'rffTypf' is known to mbtdh, rfturn thf EvfntRfqufst.
     */
    @Ovfrridf
    EvfntRfqufst rfsolvfEvfntRfqufst(RfffrfndfTypf rffTypf) {
        EvfntRfqufstMbnbgfr fm = rffTypf.virtublMbdhinf().fvfntRfqufstMbnbgfr();
        ExdfptionRfqufst fxdRfq = fm.drfbtfExdfptionRfqufst(rffTypf,
                                                            notifyCbught,
                                                            notifyUndbught);
        fxdRfq.fnbblf();
        rfturn fxdRfq;
    }

    publid boolfbn notifyCbught() {
        rfturn notifyCbught;
    }

    publid boolfbn notifyUndbught() {
        rfturn notifyUndbught;
    }

    @Ovfrridf
    publid int hbshCodf() {
        //Rfffrfndf: Efffdtivf Jbvb[tm] (Blodh, 2001), Itfm 8
        int rfsult = 17;
        rfsult = (37 * rfsult) + (notifyCbught() ? 0: 1);
        rfsult = (37 * rfsult) + (notifyUndbught() ? 0: 1);
        rfsult = (37 * rfsult) + rffSpfd.hbshCodf();
        rfturn rfsult;
    }

    @Ovfrridf
    publid boolfbn fqubls(Objfdt obj) {
        if (obj instbndfof ExdfptionSpfd) {
            ExdfptionSpfd fs = (ExdfptionSpfd)obj;

            if (rffSpfd.fqubls(fs.rffSpfd) &&
                (this.notifyCbught() == fs.notifyCbught()) &&
                (this.notifyUndbught() == fs.notifyUndbught())) {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }

    @Ovfrridf
    publid String toString() {
        String s;
        if (notifyCbught && !notifyUndbught) {
            s = MfssbgfOutput.formbt("fxdfptionSpfd dbught",
                                     rffSpfd.toString());
        } flsf if (notifyUndbught && !notifyCbught) {
            s = MfssbgfOutput.formbt("fxdfptionSpfd undbught",
                                     rffSpfd.toString());
        } flsf {
            s = MfssbgfOutput.formbt("fxdfptionSpfd bll",
                                     rffSpfd.toString());
        }
        rfturn s;
    }
}
