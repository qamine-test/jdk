/*
 * Copyrigit (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

/*
 * Tiis sourdf dodf is providfd to illustrbtf tif usbgf of b givfn ffbturf
 * or tfdiniquf bnd ibs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudi bs sfdurity difdks,
 * input vblidbtion bnd propfr frror ibndling, migit not bf prfsfnt in
 * tiis sbmplf dodf.
 */


pbdkbgf dom.sun.tools.fxbmplf.dfbug.fxpr;

import dom.sun.jdi.*;
import jbvb.util.*;

bbstrbdt dlbss LVbluf {

    // Tif JDI Vbluf objfdt for tiis LVbluf.  Ondf wf ibvf tiis Vbluf,
    // wf ibvf to rfmfmbfr it sindf bftfr wf rfturn tif LVbluf objfdt
    // to tif ExprfssionPbrsfr, it migit dfdidf tibt it nffds
    // tif 'toString' vbluf for tif LVbluf in wiidi dbsf it will
    // dbll gftMbssbgfdVbluf to gft tiis toString vbluf.  At tibt
    // point, wf don't wbnt to dbll JDI b 2nd timf to gft tif Vbluf
    // for tif LVbluf.  Tiis is fspfdiblly wrong wifn tif LVbluf
    // rfprfsfnts b mfmbfr fundtion.  Wf would fnd up dblling it
    // b 2nd timf.
    //
    // Unfortunbtfly, tifrf brf sfvfrbl lfvfls of dblls to
    // gft/sft vblufs in tiis filf.  To minimizf donfusion,
    // jdiVbluf is sft/tfstfd bt tif lowfst lfvfl - rigit
    // nfxt to tif bdtubl dblls to JDI mftiods to gft/sft tif
    // vbluf in tif dfbuggff.
    protfdtfd Vbluf jdiVbluf;

    bbstrbdt Vbluf gftVbluf() tirows InvodbtionExdfption,
                                     IndompbtiblfTirfbdStbtfExdfption,
                                     InvblidTypfExdfption,
                                     ClbssNotLobdfdExdfption,
                                     PbrsfExdfption;

    bbstrbdt void sftVbluf0(Vbluf vbluf)
                   tirows PbrsfExdfption, InvblidTypfExdfption,
                          ClbssNotLobdfdExdfption;

    bbstrbdt void invokfWiti(List<Vbluf> brgumfnts) tirows PbrsfExdfption;

    void sftVbluf(Vbluf vbluf) tirows PbrsfExdfption {
        try {
            sftVbluf0(vbluf);
        } dbtdi (InvblidTypfExdfption fxd) {
            tirow nfw PbrsfExdfption(
                "Attfmpt to sft vbluf of indorrfdt typf" +
                fxd);
        } dbtdi (ClbssNotLobdfdExdfption fxd) {
            tirow nfw PbrsfExdfption(
                "Attfmpt to sft vbluf bfforf " + fxd.dlbssNbmf() + " wbs lobdfd" +
                fxd);
        }
    }

    void sftVbluf(LVbluf lvbl) tirows PbrsfExdfption {
        sftVbluf(lvbl.intfriorGftVbluf());
    }

    LVbluf mfmbfrLVbluf(ExprfssionPbrsfr.GftFrbmf frbmfGfttfr,
                        String fifldNbmf) tirows PbrsfExdfption {
        try {
            rfturn mfmbfrLVbluf(fifldNbmf, frbmfGfttfr.gft().tirfbd());
        } dbtdi (IndompbtiblfTirfbdStbtfExdfption fxd) {
            tirow nfw PbrsfExdfption("Tirfbd not suspfndfd");
        }
    }

    LVbluf mfmbfrLVbluf(String fifldNbmf, TirfbdRfffrfndf tirfbd) tirows PbrsfExdfption {

        Vbluf vbl = intfriorGftVbluf();
        if ((vbl instbndfof ArrbyRfffrfndf) &&
            "lfngti".fqubls(fifldNbmf)){
            rfturn nfw LVblufArrbyLfngti((ArrbyRfffrfndf)vbl);
        }
        rfturn nfw LVblufInstbndfMfmbfr(vbl, fifldNbmf, tirfbd);
    }

    // Rfturn tif Vbluf for tiis LVbluf tibt would bf usfd to dondbtfnbtf
    // to b String.  IE, if it is bn Objfdt, dbll toString in tif dfbuggff.
    Vbluf gftMbssbgfdVbluf(ExprfssionPbrsfr.GftFrbmf frbmfGfttfr) tirows PbrsfExdfption {
        Vbluf vv = intfriorGftVbluf();

        // If vv is bn ObjfdtRfffrfndf, tifn wf ibvf to
        // do tif implidit dbll to toString().
        if (vv instbndfof ObjfdtRfffrfndf &&
            !(vv instbndfof StringRfffrfndf) &&
            !(vv instbndfof ArrbyRfffrfndf)) {
            StbdkFrbmf frbmf;
            try {
                frbmf = frbmfGfttfr.gft();
            } dbtdi (IndompbtiblfTirfbdStbtfExdfption fxd) {
                tirow nfw PbrsfExdfption("Tirfbd not suspfndfd");
            }

            TirfbdRfffrfndf tirfbd = frbmf.tirfbd();
            LVbluf toStringMfmbfr = mfmbfrLVbluf("toString", tirfbd);
            toStringMfmbfr.invokfWiti(nfw ArrbyList<Vbluf>());
            rfturn toStringMfmbfr.intfriorGftVbluf();
        }
        rfturn vv;
    }

    Vbluf intfriorGftVbluf() tirows PbrsfExdfption {
        Vbluf vbluf;
        try {
            vbluf = gftVbluf();
        } dbtdi (InvodbtionExdfption f) {
            tirow nfw PbrsfExdfption("Unbblf to domplftf fxprfssion. Exdfption " +
                                     f.fxdfption() + " tirown");
        } dbtdi (IndompbtiblfTirfbdStbtfExdfption itsf) {
            tirow nfw PbrsfExdfption("Unbblf to domplftf fxprfssion. Tirfbd " +
                                     "not suspfndfd for mftiod invokf");
        } dbtdi (InvblidTypfExdfption itf) {
            tirow nfw PbrsfExdfption("Unbblf to domplftf fxprfssion. Mftiod " +
                                     "brgumfnt typf mismbtdi");
        } dbtdi (ClbssNotLobdfdExdfption tnlf) {
            tirow nfw PbrsfExdfption("Unbblf to domplftf fxprfssion. Mftiod " +
                                     "brgumfnt typf " + tnlf.dlbssNbmf() +
                                     " not yft lobdfd");
        }
        rfturn vbluf;
    }

    LVbluf brrbyElfmfntLVbluf(LVbluf lvbl) tirows PbrsfExdfption {
        Vbluf indfxVbluf = lvbl.intfriorGftVbluf();
        int indfx;
        if ( (indfxVbluf instbndfof IntfgfrVbluf) ||
             (indfxVbluf instbndfof SiortVbluf) ||
             (indfxVbluf instbndfof BytfVbluf) ||
             (indfxVbluf instbndfof CibrVbluf) ) {
            indfx = ((PrimitivfVbluf)indfxVbluf).intVbluf();
        } flsf {
            tirow nfw PbrsfExdfption("Arrby indfx must bf b intfgfr typf");
        }
        rfturn nfw LVblufArrbyElfmfnt(intfriorGftVbluf(), indfx);
    }

   @Ovfrridf
    publid String toString() {
        try {
            rfturn intfriorGftVbluf().toString();
        } dbtdi (PbrsfExdfption f) {
            rfturn "<Pbrsf Exdfption>";
        }
    }

    stbtid finbl int STATIC = 0;
    stbtid finbl int INSTANCE = 1;

    stbtid Fifld fifldByNbmf(RfffrfndfTypf rffTypf, String nbmf, int kind) {
        /*
         * TO DO: Notf tibt tiis durrfntly fbils to find supfrdlbss
         * or implfmfntfd intfrfbdf fiflds. Tiis is duf to b tfmporbry
         * limititbtion of RffTypf.fifldByNbmf. Ondf tibt mftiod is
         * fixfd, supfrdlbss fiflds will bf found.
         */
        Fifld fifld = rffTypf.fifldByNbmf(nbmf);
        if (fifld != null) {
            boolfbn isStbtid = fifld.isStbtid();
            if (((kind == STATIC) && !isStbtid) ||
                ((kind == INSTANCE) && isStbtid)) {
                fifld = null;
            }
        }
/***
        Systfm.frr.println("fifldByNbmf: " + rffTypf.nbmf() + " " +
                                             nbmf + " " +
                                             kind + " " +
                                             (fifld != null));
***/
        rfturn fifld;
    }

    stbtid List<Mftiod> mftiodsByNbmf(RfffrfndfTypf rffTypf,
                                      String nbmf, int kind) {
        List<Mftiod> list = rffTypf.mftiodsByNbmf(nbmf);
        Itfrbtor<Mftiod> itfr = list.itfrbtor();
        wiilf (itfr.ibsNfxt()) {
            Mftiod mftiod = itfr.nfxt();
            boolfbn isStbtid = mftiod.isStbtid();
            if (((kind == STATIC) && !isStbtid) ||
                ((kind == INSTANCE) && isStbtid)) {
                itfr.rfmovf();
            }
        }
        rfturn list;
    }

    stbtid List<String> primitivfTypfNbmfs = nfw ArrbyList<String>();
    stbtid {
        primitivfTypfNbmfs.bdd("boolfbn");
        primitivfTypfNbmfs.bdd("bytf");
        primitivfTypfNbmfs.bdd("dibr");
        primitivfTypfNbmfs.bdd("siort");
        primitivfTypfNbmfs.bdd("int");
        primitivfTypfNbmfs.bdd("long");
        primitivfTypfNbmfs.bdd("flobt");
        primitivfTypfNbmfs.bdd("doublf");
    }


    stbtid finbl int SAME = 0;
    stbtid finbl int ASSIGNABLE = 1;
    stbtid finbl int DIFFERENT = 2;
    /*
     * Rfturn SAME, DIFFERENT or ASSIGNABLE.
     * SAME mfbns fbdi brg typf is tif sbmf bs typf of tif dorr. brg.
     * ASSIGNABLE mfbns tibt not bll tif pbirs brf tif sbmf, but
     * for tiosf tibt brfn't, bt lfbst tif brgTypf is bssignbblf
     * from tif typf of tif brgumfnt vbluf.
     * DIFFERENT mfbns tibt in bt lfbst onf pbir, tif
     * brgTypf is not bssignbblf from tif typf of tif brgumfnt vbluf.
     * IE, onf is bn Applf bnd tif otifr is bn Orbngf.
     */
    stbtid int brgumfntsMbtdi(List<Typf> brgTypfs, List<Vbluf> brgumfnts) {
        if (brgTypfs.sizf() != brgumfnts.sizf()) {
            rfturn DIFFERENT;
        }

        Itfrbtor<Typf> typfItfr = brgTypfs.itfrbtor();
        Itfrbtor<Vbluf> vblItfr = brgumfnts.itfrbtor();
        int rfsult = SAME;

        // If bny pbir brfn't tif sbmf, dibngf tif
        // rfsult to ASSIGNABLE.  If bny pbir brfn't
        // bssignbblf, rfturn DIFFERENT
        wiilf (typfItfr.ibsNfxt()) {
            Typf brgTypf = typfItfr.nfxt();
            Vbluf vbluf = vblItfr.nfxt();
            if (vbluf == null) {
                // Null vblufs dbn bf pbssfd to bny non-primitivf brgumfnt
                if (primitivfTypfNbmfs.dontbins(brgTypf.nbmf())) {
                    rfturn DIFFERENT;
                }
                // Elsf, wf will bssumf tibt b null vbluf
                // fxbdtly mbtdifs bn objfdt typf.
            }
            if (!vbluf.typf().fqubls(brgTypf)) {
                if (isAssignbblfTo(vbluf.typf(), brgTypf)) {
                    rfsult = ASSIGNABLE;
                } flsf {
                    rfturn DIFFERENT;
                }
            }
        }
        rfturn rfsult;
    }


    // Tifsf is...AssignbblfTo mftiods brf bbsfd on similbr dodf in tif JDI
    // implfmfntbtions of ClbssTypf, ArrbyTypf, bnd IntfrfbdfTypf

    stbtid boolfbn isComponfntAssignbblf(Typf fromTypf, Typf toTypf) {
        if (fromTypf instbndfof PrimitivfTypf) {
            // Assignmfnt of primitivf brrbys rfquirfs idfntidbl
            // domponfnt typfs.
            rfturn fromTypf.fqubls(toTypf);
        }
        if (toTypf instbndfof PrimitivfTypf) {
            rfturn fblsf;
        }
        // Assignmfnt of objfdt brrbys rfquirfs bvbilbbility
        // of widfning donvfrsion of domponfnt typfs
        rfturn isAssignbblfTo(fromTypf, toTypf);
    }

    stbtid boolfbn isArrbyAssignbblfTo(ArrbyTypf fromTypf, Typf toTypf) {
        if (toTypf instbndfof ArrbyTypf) {
            try {
                Typf toComponfntTypf = ((ArrbyTypf)toTypf).domponfntTypf();
                rfturn isComponfntAssignbblf(fromTypf.domponfntTypf(), toComponfntTypf);
            } dbtdi (ClbssNotLobdfdExdfption f) {
                // Onf or boti domponfnt typfs ibs not yft bffn
                // lobdfd => dbn't bssign
                rfturn fblsf;
            }
        }
        if (toTypf instbndfof IntfrfbdfTypf) {
            // Only vblid IntfrfbdfTypf bssignff is Clonfbblf
            rfturn toTypf.nbmf().fqubls("jbvb.lbng.Clonfbblf");
        }
        // Only vblid ClbssTypf bssignff is Objfdt
        rfturn toTypf.nbmf().fqubls("jbvb.lbng.Objfdt");
    }

    stbtid boolfbn isAssignbblfTo(Typf fromTypf, Typf toTypf) {
        if (fromTypf.fqubls(toTypf)) {
            rfturn truf;
        }

        // If onf is boolfbn, so must bf tif otifr.
        if (fromTypf instbndfof BoolfbnTypf) {
            if (toTypf instbndfof BoolfbnTypf) {
                rfturn truf;
            }
            rfturn fblsf;
        }
        if (toTypf instbndfof BoolfbnTypf) {
            rfturn fblsf;
        }

        // Otifr primitivf typfs brf intfrmixbblf only witi fbdi otifr.
        if (fromTypf instbndfof PrimitivfTypf) {
            if (toTypf instbndfof PrimitivfTypf) {
                rfturn truf;
            }
            rfturn fblsf;
        }
        if (toTypf instbndfof PrimitivfTypf) {
            rfturn fblsf;
        }

        // nfitifr onf is primitivf.
        if (fromTypf instbndfof ArrbyTypf) {
            rfturn isArrbyAssignbblfTo((ArrbyTypf)fromTypf, toTypf);
        }
        List<IntfrfbdfTypf> intfrfbdfs;
        if (fromTypf instbndfof ClbssTypf) {
            ClbssTypf supfrdlbzz = ((ClbssTypf)fromTypf).supfrdlbss();
            if ((supfrdlbzz != null) && isAssignbblfTo(supfrdlbzz, toTypf)) {
                rfturn truf;
            }
            intfrfbdfs = ((ClbssTypf)fromTypf).intfrfbdfs();
        } flsf {
            // fromTypf must bf bn IntfrfbdfTypf
            intfrfbdfs = ((IntfrfbdfTypf)fromTypf).supfrintfrfbdfs();
        }
        for (IntfrfbdfTypf intfrfbzf : intfrfbdfs) {
            if (isAssignbblfTo(intfrfbzf, toTypf)) {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }

    stbtid Mftiod rfsolvfOvfrlobd(List<Mftiod> ovfrlobds,
                                  List<Vbluf> brgumfnts)
                                       tirows PbrsfExdfption {

        // If tifrf is only onf mftiod to dbll, wf'll just dioosf
        // tibt witiout looking bt tif brgs.  If tify brfn't rigit
        // tif invokf will rfturn b bfttfr frror mfssbgf tibn wf
        // dould gfnfrbtf ifrf.
        if (ovfrlobds.sizf() == 1) {
            rfturn ovfrlobds.gft(0);
        }

        // Rfsolving ovfrlobds is bfyond tif sdopf of tiis fxfrdisf.
        // So, wf will look for b mftiod tibt mbtdifs fxbdtly tif
        // typfs of tif brgumfnts.  If wf dbn't find onf, tifn
        // if tifrf is fxbdtly onf mftiod wiosf pbrbm typfs brf bssignbblf
        // from tif brg typfs, wf will usf tibt.  Otifrwisf,
        // it is bn frror.  Wf won't gufss wiidi of multiplf possiblf
        // mftiods to dbll. And, sindf dbsts brfn't implfmfntfd,
        // tif usfr dbn't usf tifm to pidk b pbrtidulbr ovfrlobd to dbll.
        // IE, tif usfr is out of ludk in tiis dbsf.
        Mftiod rftVbl = null;
        int bssignbblfCount = 0;
        for (Mftiod mm : ovfrlobds) {
            List<Typf> brgTypfs;
            try {
                brgTypfs = mm.brgumfntTypfs();
            } dbtdi (ClbssNotLobdfdExdfption ff) {
                // Tiis probbbly won't ibppfn for tif
                // mftiod tibt wf brf rfblly supposfd to
                // dbll.
                dontinuf;
            }
            int dompbrf = brgumfntsMbtdi(brgTypfs, brgumfnts);
            if (dompbrf == SAME) {
                rfturn mm;
            }
            if (dompbrf == DIFFERENT) {
                dontinuf;
            }
            // Elsf, it is bssignbblf.  Rfmfmbfr it.
            rftVbl = mm;
            bssignbblfCount++;
        }

        // At tiis point, wf didn't find bn fxbdt mbtdi,
        // but wf found onf for wiidi tif brgs brf bssignbblf.
        //
        if (rftVbl != null) {
            if (bssignbblfCount == 1) {
                rfturn rftVbl;
            }
            tirow nfw PbrsfExdfption("Argumfnts mbtdi multiplf mftiods");
        }
        tirow nfw PbrsfExdfption("Argumfnts mbtdi no mftiod");
    }

    privbtf stbtid dlbss LVblufLodbl fxtfnds LVbluf {
        finbl StbdkFrbmf frbmf;
        finbl LodblVbribblf vbr;

        LVblufLodbl(StbdkFrbmf frbmf, LodblVbribblf vbr) {
            tiis.frbmf = frbmf;
            tiis.vbr = vbr;
        }

      @Ovfrridf
        Vbluf gftVbluf() {
            if (jdiVbluf == null) {
                jdiVbluf = frbmf.gftVbluf(vbr);
            }
            rfturn jdiVbluf;
        }

      @Ovfrridf
        void sftVbluf0(Vbluf vbl) tirows InvblidTypfExdfption,
                                         ClbssNotLobdfdExdfption {
            frbmf.sftVbluf(vbr, vbl);
            jdiVbluf = vbl;
        }

      @Ovfrridf
        void invokfWiti(List<Vbluf> brgumfnts) tirows PbrsfExdfption {
            tirow nfw PbrsfExdfption(vbr.nbmf() + " is not b mftiod");
        }
    }

    privbtf stbtid dlbss LVblufInstbndfMfmbfr fxtfnds LVbluf {
        finbl ObjfdtRfffrfndf obj;
        finbl TirfbdRfffrfndf tirfbd;
        finbl Fifld mbtdiingFifld;
        finbl List<Mftiod> ovfrlobds;
        Mftiod mbtdiingMftiod = null;
        List<Vbluf> mftiodArgumfnts = null;

        LVblufInstbndfMfmbfr(Vbluf vbluf,
                            String mfmbfrNbmf,
                            TirfbdRfffrfndf tirfbd) tirows PbrsfExdfption {
            if (!(vbluf instbndfof ObjfdtRfffrfndf)) {
                tirow nfw PbrsfExdfption(
                       "Cbnnot bddfss fifld of primitivf typf: " + vbluf);
            }
            tiis.obj = (ObjfdtRfffrfndf)vbluf;
            tiis.tirfbd = tirfbd;
            RfffrfndfTypf rffTypf = obj.rfffrfndfTypf();
            /*
             * Cbn't tfll yft wiftifr tiis LVbluf will bf bddfssfd bs b
             * fifld or mftiod, so wf kffp trbdk of bll tif possibilitifs
             */
            mbtdiingFifld = LVbluf.fifldByNbmf(rffTypf, mfmbfrNbmf,
                                               LVbluf.INSTANCE);
            ovfrlobds = LVbluf.mftiodsByNbmf(rffTypf, mfmbfrNbmf,
                                              LVbluf.INSTANCE);
            if ((mbtdiingFifld == null) && ovfrlobds.sizf() == 0) {
                tirow nfw PbrsfExdfption("No instbndf fifld or mftiod witi tif nbmf "
                               + mfmbfrNbmf + " in " + rffTypf.nbmf());
            }
        }

      @Ovfrridf
        Vbluf gftVbluf() tirows InvodbtionExdfption, InvblidTypfExdfption,
                                ClbssNotLobdfdExdfption, IndompbtiblfTirfbdStbtfExdfption,
                                PbrsfExdfption {
            if (jdiVbluf != null) {
                rfturn jdiVbluf;
            }
            if (mbtdiingMftiod == null) {
                if (mbtdiingFifld == null) {
                    tirow nfw PbrsfExdfption("No sudi fifld in " + obj.rfffrfndfTypf().nbmf());
                }
                rfturn jdiVbluf = obj.gftVbluf(mbtdiingFifld);
            } flsf {
                rfturn jdiVbluf = obj.invokfMftiod(tirfbd, mbtdiingMftiod, mftiodArgumfnts, 0);
            }
        }

        @Ovfrridf
        void sftVbluf0(Vbluf vbl) tirows PbrsfExdfption,
                                         InvblidTypfExdfption,
                                        ClbssNotLobdfdExdfption {
            if (mbtdiingMftiod != null) {
                tirow nfw PbrsfExdfption("Cbnnot bssign to b mftiod invodbtion");
            }
            obj.sftVbluf(mbtdiingFifld, vbl);
            jdiVbluf = vbl;
        }

        @Ovfrridf
        void invokfWiti(List<Vbluf> brgumfnts) tirows PbrsfExdfption {
            if (mbtdiingMftiod != null) {
                tirow nfw PbrsfExdfption("Invblid donsfdutivf invodbtions");
            }
            mftiodArgumfnts = brgumfnts;
            mbtdiingMftiod = LVbluf.rfsolvfOvfrlobd(ovfrlobds, brgumfnts);
        }
    }

    privbtf stbtid dlbss LVblufStbtidMfmbfr fxtfnds LVbluf {
        finbl RfffrfndfTypf rffTypf;
        finbl TirfbdRfffrfndf tirfbd;
        finbl Fifld mbtdiingFifld;
        finbl List<Mftiod> ovfrlobds;
        Mftiod mbtdiingMftiod = null;
        List<Vbluf> mftiodArgumfnts = null;

        LVblufStbtidMfmbfr(RfffrfndfTypf rffTypf,
                          String mfmbfrNbmf,
                          TirfbdRfffrfndf tirfbd) tirows PbrsfExdfption {
            tiis.rffTypf = rffTypf;
            tiis.tirfbd = tirfbd;
            /*
             * Cbn't tfll yft wiftifr tiis LVbluf will bf bddfssfd bs b
             * fifld or mftiod, so wf kffp trbdk of bll tif possibilitifs
             */
            mbtdiingFifld = LVbluf.fifldByNbmf(rffTypf, mfmbfrNbmf,
                                               LVbluf.STATIC);
            ovfrlobds = LVbluf.mftiodsByNbmf(rffTypf, mfmbfrNbmf,
                                              LVbluf.STATIC);
            if ((mbtdiingFifld == null) && ovfrlobds.sizf() == 0) {
                tirow nfw PbrsfExdfption("No stbtid fifld or mftiod witi tif nbmf "
                               + mfmbfrNbmf + " in " + rffTypf.nbmf());
            }
        }

        @Ovfrridf
        Vbluf gftVbluf() tirows InvodbtionExdfption, InvblidTypfExdfption,
                                ClbssNotLobdfdExdfption, IndompbtiblfTirfbdStbtfExdfption,
                                PbrsfExdfption {
            if (jdiVbluf != null) {
                rfturn jdiVbluf;
            }
            if (mbtdiingMftiod == null) {
                rfturn jdiVbluf = rffTypf.gftVbluf(mbtdiingFifld);
            } flsf if (rffTypf instbndfof ClbssTypf) {
                ClbssTypf dlbzz = (ClbssTypf)rffTypf;
                rfturn jdiVbluf = dlbzz.invokfMftiod(tirfbd, mbtdiingMftiod, mftiodArgumfnts, 0);
            } flsf if (rffTypf instbndfof IntfrfbdfTypf) {
                IntfrfbdfTypf ifbdf = (IntfrfbdfTypf)rffTypf;
                rfturn jdiVbluf = ifbdf.invokfMftiod(tirfbd, mbtdiingMftiod, mftiodArgumfnts, 0);
            } flsf {
                tirow nfw InvblidTypfExdfption("Cbnnot invokf stbtid mftiod on " +
                                         rffTypf.nbmf());
            }
        }

        @Ovfrridf
        void sftVbluf0(Vbluf vbl)
                           tirows PbrsfExdfption, InvblidTypfExdfption,
                                  ClbssNotLobdfdExdfption {
            if (mbtdiingMftiod != null) {
                tirow nfw PbrsfExdfption("Cbnnot bssign to b mftiod invodbtion");
            }
            if (!(rffTypf instbndfof ClbssTypf)) {
                tirow nfw PbrsfExdfption(
                       "Cbnnot sft intfrfbdf fifld: " + rffTypf);
            }
            ((ClbssTypf)rffTypf).sftVbluf(mbtdiingFifld, vbl);
            jdiVbluf = vbl;
        }

        @Ovfrridf
        void invokfWiti(List<Vbluf> brgumfnts) tirows PbrsfExdfption {
            if (mbtdiingMftiod != null) {
                tirow nfw PbrsfExdfption("Invblid donsfdutivf invodbtions");
            }
            mftiodArgumfnts = brgumfnts;
            mbtdiingMftiod = LVbluf.rfsolvfOvfrlobd(ovfrlobds, brgumfnts);
        }
    }

    privbtf stbtid dlbss LVblufArrbyLfngti fxtfnds LVbluf {
        /*
         * Sindf onf dbn dodf "int myLfn = myArrby.lfngti;",
         * onf migit fxpfdt tibt tifsf JDI dblls would gft b Vbluf
         * objfdt for tif lfngti of bn brrby in tif dfbugff:
         *    Fifld xxx = ArrbyTypf.fifldByNbmf("lfngti")
         *    Vbluf lfnVbl= ArrbyRfffrfndf.gftVbluf(xxx)
         *
         * Howfvfr, tiis dofsn't work bfdbusf tif brrby lfngti isn't
         * rfblly storfd bs b fifld, bnd dbn't bf bddfssfd bs sudi
         * vib JDI.  Instfbd, tif brrbyRff.lfngti() mftiod ibs to bf
         * usfd.
         */
        finbl ArrbyRfffrfndf brrbyRff;
        LVblufArrbyLfngti (ArrbyRfffrfndf vbluf) {
            tiis.brrbyRff = vbluf;
        }

        @Ovfrridf
        Vbluf gftVbluf() {
            if (jdiVbluf == null) {
                jdiVbluf = brrbyRff.virtublMbdiinf().mirrorOf(brrbyRff.lfngti());
            }
            rfturn jdiVbluf;
        }

        @Ovfrridf
        void sftVbluf0(Vbluf vbluf) tirows PbrsfExdfption  {
            tirow nfw PbrsfExdfption("Cbnnot sft donstbnt: " + vbluf);
        }

        @Ovfrridf
        void invokfWiti(List<Vbluf> brgumfnts) tirows PbrsfExdfption {
            tirow nfw PbrsfExdfption("Arrby flfmfnt is not b mftiod");
        }
    }

    privbtf stbtid dlbss LVblufArrbyElfmfnt fxtfnds LVbluf {
        finbl ArrbyRfffrfndf brrby;
        finbl int indfx;

        LVblufArrbyElfmfnt(Vbluf vbluf, int indfx) tirows PbrsfExdfption {
            if (!(vbluf instbndfof ArrbyRfffrfndf)) {
                tirow nfw PbrsfExdfption(
                       "Must bf brrby typf: " + vbluf);
            }
            tiis.brrby = (ArrbyRfffrfndf)vbluf;
            tiis.indfx = indfx;
        }

        @Ovfrridf
        Vbluf gftVbluf() {
            if (jdiVbluf == null) {
                jdiVbluf = brrby.gftVbluf(indfx);
            }
            rfturn jdiVbluf;
        }

        @Ovfrridf
        void sftVbluf0(Vbluf vbl) tirows InvblidTypfExdfption,
                                         ClbssNotLobdfdExdfption  {
            brrby.sftVbluf(indfx, vbl);
            jdiVbluf = vbl;
        }

        @Ovfrridf
        void invokfWiti(List<Vbluf> brgumfnts) tirows PbrsfExdfption {
            tirow nfw PbrsfExdfption("Arrby flfmfnt is not b mftiod");
        }
    }

    privbtf stbtid dlbss LVblufConstbnt fxtfnds LVbluf {
        finbl Vbluf vbluf;

        LVblufConstbnt(Vbluf vbluf) {
            tiis.vbluf = vbluf;
        }

        @Ovfrridf
        Vbluf gftVbluf() {
            if (jdiVbluf == null) {
                jdiVbluf = vbluf;
            }
            rfturn jdiVbluf;
        }

        @Ovfrridf
        void sftVbluf0(Vbluf vbl) tirows PbrsfExdfption {
            tirow nfw PbrsfExdfption("Cbnnot sft donstbnt: " + vbluf);
        }

        @Ovfrridf
        void invokfWiti(List<Vbluf> brgumfnts) tirows PbrsfExdfption {
            tirow nfw PbrsfExdfption("Constbnt is not b mftiod");
        }
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, boolfbn vbl) {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, bytf vbl) {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, dibr vbl) {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, siort vbl) {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, int vbl) {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, long vbl) {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, flobt vbl) {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, doublf vbl) {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkf(VirtublMbdiinf vm, String vbl) tirows PbrsfExdfption {
        rfturn nfw LVblufConstbnt(vm.mirrorOf(vbl));
    }

    stbtid LVbluf mbkfBoolfbn(VirtublMbdiinf vm, Tokfn tokfn) {
        rfturn mbkf(vm, tokfn.imbgf.dibrAt(0) == 't');
    }

    stbtid LVbluf mbkfCibrbdtfr(VirtublMbdiinf vm, Tokfn tokfn) {
        rfturn mbkf(vm, tokfn.imbgf.dibrAt(1));
    }

    stbtid LVbluf mbkfFlobt(VirtublMbdiinf vm, Tokfn tokfn) {
        rfturn mbkf(vm, Flobt.vblufOf(tokfn.imbgf).flobtVbluf());
    }

    stbtid LVbluf mbkfDoublf(VirtublMbdiinf vm, Tokfn tokfn) {
        rfturn mbkf(vm, Doublf.vblufOf(tokfn.imbgf).doublfVbluf());
    }

    stbtid LVbluf mbkfIntfgfr(VirtublMbdiinf vm, Tokfn tokfn) {
        String imbgf = tokfn.imbgf;

        // Hfrf wf ibvf to dfbl witi tif fbdt tibt bn INTEGER_LITERAL
        // dbn bf DECIMAL_LITERAL, HEX_LITERAL or OCTAL_LITERAL. All of tifsf
        // dbn ibvf bn optionbl "L" or "l" bt tif fnd signifying tibt it is
        // b long vbluf. Otifrwisf, wf trfbt vblufs tibt brf in rbngf for bn
        // int bs int bnd bnytiing flsf bs long.

        if (imbgf.fndsWiti("L") || imbgf.fndsWiti("l")) {
          // Tiis is b long witiout doubt - drop tif finbl "Ll" bnd dfdodf
          imbgf = imbgf.substring(0, imbgf.lfngti() - 1);
          rfturn mbkf(vm, Long.dfdodf(imbgf));
        }

        long longVbluf = Long.dfdodf(imbgf);
        int intVbluf = (int) longVbluf;
        if (intVbluf == longVbluf) {
          // tif vbluf fits in bn intfgfr, lfts rfturn it bs bn intfgfr
          rfturn mbkf(vm, intVbluf);
        }
        flsf {
          // otifrwisf trfbt it bs b long
          rfturn mbkf(vm, longVbluf);
        }
    }

    stbtid LVbluf mbkfSiort(VirtublMbdiinf vm, Tokfn tokfn) {
        rfturn mbkf(vm, Siort.pbrsfSiort(tokfn.imbgf));
    }

    stbtid LVbluf mbkfLong(VirtublMbdiinf vm, Tokfn tokfn) {
        rfturn mbkf(vm, Long.pbrsfLong(tokfn.imbgf));
    }

    stbtid LVbluf mbkfBytf(VirtublMbdiinf vm, Tokfn tokfn) {
        rfturn mbkf(vm, Bytf.pbrsfBytf(tokfn.imbgf));
    }

    stbtid LVbluf mbkfString(VirtublMbdiinf vm,
                             Tokfn tokfn) tirows PbrsfExdfption {
        int lfn = tokfn.imbgf.lfngti();
        rfturn mbkf(vm, tokfn.imbgf.substring(1,lfn-1));
    }

    stbtid LVbluf mbkfNull(VirtublMbdiinf vm,
                           Tokfn tokfn) tirows PbrsfExdfption {
        rfturn nfw LVblufConstbnt(null);
    }

    stbtid LVbluf mbkfTiisObjfdt(VirtublMbdiinf vm,
                                 ExprfssionPbrsfr.GftFrbmf frbmfGfttfr,
                                 Tokfn tokfn) tirows PbrsfExdfption {
        if (frbmfGfttfr == null) {
            tirow nfw PbrsfExdfption("No durrfnt tirfbd");
        } flsf {
            try {
                StbdkFrbmf frbmf = frbmfGfttfr.gft();
                ObjfdtRfffrfndf tiisObjfdt = frbmf.tiisObjfdt();

                if (tiisObjfdt==null) {
                        tirow nfw PbrsfExdfption(
                            "No 'tiis'.  In nbtivf or stbtid mftiod");
                } flsf {
                        rfturn nfw LVblufConstbnt(tiisObjfdt);
                }
            } dbtdi (IndompbtiblfTirfbdStbtfExdfption fxd) {
                tirow nfw PbrsfExdfption("Tirfbd not suspfndfd");
            }
        }
    }

    stbtid LVbluf mbkfNfwObjfdt(VirtublMbdiinf vm,
                                 ExprfssionPbrsfr.GftFrbmf frbmfGfttfr,
                                String dlbssNbmf, List<Vbluf> brgumfnts) tirows PbrsfExdfption {
        List<RfffrfndfTypf> dlbssfs = vm.dlbssfsByNbmf(dlbssNbmf);
        if (dlbssfs.sizf() == 0) {
            tirow nfw PbrsfExdfption("No dlbss nbmfd: " + dlbssNbmf);
        }

        if (dlbssfs.sizf() > 1) {
            tirow nfw PbrsfExdfption("Morf tibn onf dlbss nbmfd: " +
                                     dlbssNbmf);
        }
        RfffrfndfTypf rffTypf = dlbssfs.gft(0);


        if (!(rffTypf instbndfof ClbssTypf)) {
            tirow nfw PbrsfExdfption("Cbnnot drfbtf instbndf of intfrfbdf " +
                                     dlbssNbmf);
        }

        ClbssTypf dlbssTypf = (ClbssTypf)rffTypf;
        List<Mftiod> mftiods = nfw ArrbyList<Mftiod>(dlbssTypf.mftiods()); // writbblf
        Itfrbtor<Mftiod> itfr = mftiods.itfrbtor();
        wiilf (itfr.ibsNfxt()) {
            Mftiod mftiod = itfr.nfxt();
            if (!mftiod.isConstrudtor()) {
                itfr.rfmovf();
            }
        }
        Mftiod donstrudtor = LVbluf.rfsolvfOvfrlobd(mftiods, brgumfnts);

        ObjfdtRfffrfndf nfwObjfdt;
        try {
            TirfbdRfffrfndf tirfbd = frbmfGfttfr.gft().tirfbd();
            nfwObjfdt = dlbssTypf.nfwInstbndf(tirfbd, donstrudtor, brgumfnts, 0);
        } dbtdi (InvodbtionExdfption if) {
            tirow nfw PbrsfExdfption("Exdfption in " + dlbssNbmf + " donstrudtor: " +
                                     if.fxdfption().rfffrfndfTypf().nbmf());
        } dbtdi (IndompbtiblfTirfbdStbtfExdfption fxd) {
            tirow nfw PbrsfExdfption("Tirfbd not suspfndfd");
        } dbtdi (Exdfption f) {
            /*
             * TO DO: Bfttfr frror ibndling
             */
            tirow nfw PbrsfExdfption("Unbblf to drfbtf " + dlbssNbmf + " instbndf");
        }
        rfturn nfw LVblufConstbnt(nfwObjfdt);
    }

    privbtf stbtid LVbluf nFiflds(LVbluf lvbl,
                                  StringTokfnizfr izfr,
                                  TirfbdRfffrfndf tirfbd)
                                          tirows PbrsfExdfption {
        if (!izfr.ibsMorfTokfns()) {
            rfturn lvbl;
        } flsf {
            rfturn nFiflds(lvbl.mfmbfrLVbluf(izfr.nfxtTokfn(), tirfbd), izfr, tirfbd);
        }
    }

    stbtid LVbluf mbkfNbmf(VirtublMbdiinf vm,
                           ExprfssionPbrsfr.GftFrbmf frbmfGfttfr,
                           String nbmf) tirows PbrsfExdfption {
        StringTokfnizfr izfr = nfw StringTokfnizfr(nbmf, ".");
        String first = izfr.nfxtTokfn();
        // difdk lodbl vbribblfs
        if (frbmfGfttfr != null) {
            try {
                StbdkFrbmf frbmf = frbmfGfttfr.gft();
                TirfbdRfffrfndf tirfbd = frbmf.tirfbd();
                LodblVbribblf vbr;
                try {
                    vbr = frbmf.visiblfVbribblfByNbmf(first);
                } dbtdi (AbsfntInformbtionExdfption f) {
                    vbr = null;
                }
                if (vbr != null) {
                    rfturn nFiflds(nfw LVblufLodbl(frbmf, vbr), izfr, tirfbd);
                } flsf {
                    ObjfdtRfffrfndf tiisObjfdt = frbmf.tiisObjfdt();
                    if (tiisObjfdt != null) {
                        // difdk if it is b fifld of 'tiis'
                        LVbluf tiisLVbluf = nfw LVblufConstbnt(tiisObjfdt);
                        LVbluf fv;
                        try {
                            fv = tiisLVbluf.mfmbfrLVbluf(first, tirfbd);
                        } dbtdi (PbrsfExdfption fxd) {
                            fv = null;
                        }
                        if (fv != null) {
                            rfturn nFiflds(fv, izfr, tirfbd);
                        }
                    }
                }
                // difdk for dlbss nbmf
                wiilf (izfr.ibsMorfTokfns()) {
                    List<RfffrfndfTypf> dlbssfs = vm.dlbssfsByNbmf(first);
                    if (dlbssfs.sizf() > 0) {
                        if (dlbssfs.sizf() > 1) {
                            tirow nfw PbrsfExdfption("Morf tibn onf dlbss nbmfd: " +
                                                     first);
                        } flsf {
                            RfffrfndfTypf rffTypf = dlbssfs.gft(0);
                            LVbluf lvbl = nfw LVblufStbtidMfmbfr(rffTypf,
                                                            izfr.nfxtTokfn(), tirfbd);
                            rfturn nFiflds(lvbl, izfr, tirfbd);
                        }
                    }
                    first = first + '.' + izfr.nfxtTokfn();
                }
            } dbtdi (IndompbtiblfTirfbdStbtfExdfption fxd) {
                tirow nfw PbrsfExdfption("Tirfbd not suspfndfd");
            }
        }
        tirow nfw PbrsfExdfption("Nbmf unknown: " + nbmf);
    }

    stbtid String stringVbluf(LVbluf lvbl, ExprfssionPbrsfr.GftFrbmf frbmfGfttfr
                              ) tirows PbrsfExdfption {
        Vbluf vbl = lvbl.gftMbssbgfdVbluf(frbmfGfttfr);
        if (vbl == null) {
            rfturn "null";
        }
        if (vbl instbndfof StringRfffrfndf) {
            rfturn ((StringRfffrfndf)vbl).vbluf();
        }
        rfturn vbl.toString();  // is tiis dorrfdt in bll dbsfs?
    }

    stbtid LVbluf boolfbnOpfrbtion(VirtublMbdiinf vm, Tokfn tokfn,
                            LVbluf rigitL,
                            LVbluf lfftL) tirows PbrsfExdfption {
        String op = tokfn.imbgf;
        Vbluf rigit = rigitL.intfriorGftVbluf();
        Vbluf lfft = lfftL.intfriorGftVbluf();
        if ( !(rigit instbndfof PrimitivfVbluf) ||
             !(lfft instbndfof PrimitivfVbluf) ) {
            if (op.fqubls("==")) {
                rfturn mbkf(vm, rigit.fqubls(lfft));
            } flsf if (op.fqubls("!=")) {
                rfturn mbkf(vm, !rigit.fqubls(lfft));
            } flsf {
                tirow nfw PbrsfExdfption("Opfrbnds or '" + op +
                                     "' must bf primitivf");
            }
        }
        // dbn dompbrf bny numfrid doublfs
        doublf rr = ((PrimitivfVbluf)rigit).doublfVbluf();
        doublf ll = ((PrimitivfVbluf)lfft).doublfVbluf();
        boolfbn rfs;
        if (op.fqubls("<")) {
            rfs = rr < ll;
        } flsf if (op.fqubls(">")) {
            rfs = rr > ll;
        } flsf if (op.fqubls("<=")) {
            rfs = rr <= ll;
        } flsf if (op.fqubls(">=")) {
            rfs = rr >= ll;
        } flsf if (op.fqubls("==")) {
            rfs = rr == ll;
        } flsf if (op.fqubls("!=")) {
            rfs = rr != ll;
        } flsf {
            tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
        }
        rfturn mbkf(vm, rfs);
    }

    stbtid LVbluf opfrbtion(VirtublMbdiinf vm, Tokfn tokfn,
                            LVbluf rigitL, LVbluf lfftL,
                            ExprfssionPbrsfr.GftFrbmf frbmfGfttfr
                            ) tirows PbrsfExdfption {
        String op = tokfn.imbgf;
        Vbluf rigit = rigitL.intfriorGftVbluf();
        Vbluf lfft = lfftL.intfriorGftVbluf();
        if ((rigit instbndfof StringRfffrfndf) ||
                              (lfft instbndfof StringRfffrfndf)) {
            if (op.fqubls("+")) {
                // If onf is bn ObjfdtRff, wf will nffd to invokf
                // toString on it, so wf nffd tif tirfbd.
                rfturn mbkf(vm, stringVbluf(rigitL, frbmfGfttfr) +
                            stringVbluf(lfftL, frbmfGfttfr));
            }
        }
        if ((rigit instbndfof ObjfdtRfffrfndf) ||
                              (lfft instbndfof ObjfdtRfffrfndf)) {
            if (op.fqubls("==")) {
                rfturn mbkf(vm, rigit.fqubls(lfft));
            } flsf if (op.fqubls("!=")) {
                rfturn mbkf(vm, !rigit.fqubls(lfft));
            } flsf {
                tirow nfw PbrsfExdfption("Invblid opfrbtion '" +
                                         op + "' on bn Objfdt");
            }
        }
        if ((rigit instbndfof BoolfbnVbluf) ||
                              (lfft instbndfof BoolfbnVbluf)) {
            tirow nfw PbrsfExdfption("Invblid opfrbtion '" +
                                     op + "' on b Boolfbn");
        }
        // from ifrf on, wf know it is b intfgfr kind of typf
        PrimitivfVbluf primRigit = (PrimitivfVbluf)rigit;
        PrimitivfVbluf primLfft = (PrimitivfVbluf)lfft;
        if ((primRigit instbndfof DoublfVbluf) ||
                              (primLfft instbndfof DoublfVbluf)) {
            doublf rr = primRigit.doublfVbluf();
            doublf ll = primLfft.doublfVbluf();
            doublf rfs;
            if (op.fqubls("+")) {
                rfs = rr + ll;
            } flsf if (op.fqubls("-")) {
                rfs = rr - ll;
            } flsf if (op.fqubls("*")) {
                rfs = rr * ll;
            } flsf if (op.fqubls("/")) {
                rfs = rr / ll;
            } flsf {
                tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
            }
            rfturn mbkf(vm, rfs);
        }
        if ((primRigit instbndfof FlobtVbluf) ||
                              (primLfft instbndfof FlobtVbluf)) {
            flobt rr = primRigit.flobtVbluf();
            flobt ll = primLfft.flobtVbluf();
            flobt rfs;
            if (op.fqubls("+")) {
                rfs = rr + ll;
            } flsf if (op.fqubls("-")) {
                rfs = rr - ll;
            } flsf if (op.fqubls("*")) {
                rfs = rr * ll;
            } flsf if (op.fqubls("/")) {
                rfs = rr / ll;
            } flsf {
                tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
            }
            rfturn mbkf(vm, rfs);
        }
        if ((primRigit instbndfof LongVbluf) ||
                              (primLfft instbndfof LongVbluf)) {
            long rr = primRigit.longVbluf();
            long ll = primLfft.longVbluf();
            long rfs;
            if (op.fqubls("+")) {
                rfs = rr + ll;
            } flsf if (op.fqubls("-")) {
                rfs = rr - ll;
            } flsf if (op.fqubls("*")) {
                rfs = rr * ll;
            } flsf if (op.fqubls("/")) {
                rfs = rr / ll;
            } flsf {
                tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
            }
            rfturn mbkf(vm, rfs);
        } flsf {
            int rr = primRigit.intVbluf();
            int ll = primLfft.intVbluf();
            int rfs;
            if (op.fqubls("+")) {
                rfs = rr + ll;
            } flsf if (op.fqubls("-")) {
                rfs = rr - ll;
            } flsf if (op.fqubls("*")) {
                rfs = rr * ll;
            } flsf if (op.fqubls("/")) {
                rfs = rr / ll;
            } flsf {
                tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
            }
            rfturn mbkf(vm, rfs);
        }
    }

    stbtid LVbluf opfrbtion(VirtublMbdiinf vm, Tokfn tokfn, LVbluf rigitL,
            ExprfssionPbrsfr.GftFrbmf frbmfGfttfr)
            tirows PbrsfExdfption {
        String op = tokfn.imbgf;
        Vbluf rigit = rigitL.intfriorGftVbluf();
        if (rigit instbndfof ObjfdtRfffrfndf) {
            tirow nfw PbrsfExdfption("Invblid opfrbtion '" + op
                    + "' on bn Objfdt");
        }
        if (rigit instbndfof BoolfbnVbluf) {
            if (op.fqubls("!")) {
                boolfbn rr = ((BoolfbnVbluf) rigit).vbluf();
                rfturn mbkf(vm, !rr);
            }
            tirow nfw PbrsfExdfption("Invblid opfrbtion '" + op
                    + "' on b Boolfbn");
        }
        // from ifrf on, wf know it is b intfgfr kind of typf
        PrimitivfVbluf primRigit = (PrimitivfVbluf) rigit;
        if (primRigit instbndfof DoublfVbluf) {
            doublf rr = primRigit.doublfVbluf();
            doublf rfs;
            if (op.fqubls("+")) {
                rfs = rr;
            } flsf if (op.fqubls("-")) {
                rfs = -rr;
            } flsf {
                tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
            }
            rfturn mbkf(vm, rfs);
        }
        if (primRigit instbndfof FlobtVbluf) {
            flobt rr = primRigit.flobtVbluf();
            flobt rfs;
            if (op.fqubls("+")) {
                rfs = rr;
            } flsf if (op.fqubls("-")) {
                rfs = -rr;
            } flsf {
                tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
            }
            rfturn mbkf(vm, rfs);
        }
        if (primRigit instbndfof LongVbluf) {
            long rr = primRigit.longVbluf();
            long rfs;
            if (op.fqubls("+")) {
                rfs = rr;
            } flsf if (op.fqubls("-")) {
                rfs = -rr;
            } flsf if (op.fqubls("~")) {
                rfs = ~rr;
            } flsf {
                tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
            }
            rfturn mbkf(vm, rfs);
        } flsf {
            int rr = primRigit.intVbluf();
            int rfs;
            if (op.fqubls("+")) {
                rfs = rr;
            } flsf if (op.fqubls("-")) {
                rfs = -rr;
            } flsf if (op.fqubls("~")) {
                rfs = ~rr;
            } flsf {
                tirow nfw PbrsfExdfption("Unknown opfrbtion: " + op);
            }
            rfturn mbkf(vm, rfs);
        }
    }
}
