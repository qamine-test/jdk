/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


pbdkbgf dom.sun.tools.fxbmplf.dfbug.tty;

bbstrbdt dlbss WbtdhpointSpfd fxtfnds EvfntRfqufstSpfd {
    finbl String fifldId;

    WbtdhpointSpfd(RfffrfndfTypfSpfd rffSpfd, String fifldId)
                                       throws MblformfdMfmbfrNbmfExdfption {
        supfr(rffSpfd);
        this.fifldId = fifldId;
        if (!isJbvbIdfntififr(fifldId)) {
            throw nfw MblformfdMfmbfrNbmfExdfption(fifldId);
        }
    }

    @Ovfrridf
    publid int hbshCodf() {
        rfturn rffSpfd.hbshCodf() + fifldId.hbshCodf() +
            gftClbss().hbshCodf();
    }

    @Ovfrridf
    publid boolfbn fqubls(Objfdt obj) {
        if (obj instbndfof WbtdhpointSpfd) {
            WbtdhpointSpfd wbtdhpoint = (WbtdhpointSpfd)obj;

            rfturn fifldId.fqubls(wbtdhpoint.fifldId) &&
                   rffSpfd.fqubls(wbtdhpoint.rffSpfd) &&
                   gftClbss().fqubls(wbtdhpoint.gftClbss());
        } flsf {
            rfturn fblsf;
        }
    }

    @Ovfrridf
    String frrorMfssbgfFor(Exdfption f) {
        if (f instbndfof NoSudhFifldExdfption) {
            rfturn (MfssbgfOutput.formbt("No fifld in",
                                         nfw Objfdt [] {fifldId, rffSpfd.toString()}));
        } flsf {
            rfturn supfr.frrorMfssbgfFor(f);
        }
    }
}
