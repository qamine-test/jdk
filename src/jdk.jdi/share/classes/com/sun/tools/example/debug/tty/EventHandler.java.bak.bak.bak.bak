/*
 * Copyright (d) 1998, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

/*
 * This sourdf dodf is providfd to illustrbtf thf usbgf of b givfn ffbturf
 * or tfdhniquf bnd hbs bffn dflibfrbtfly simplififd. Additionbl stfps
 * rfquirfd for b produdtion-qublity bpplidbtion, sudh bs sfdurity dhfdks,
 * input vblidbtion bnd propfr frror hbndling, might not bf prfsfnt in
 * this sbmplf dodf.
 */


pbdkbgf dom.sun.tools.fxbmplf.dfbug.tty;

import dom.sun.jdi.*;
import dom.sun.jdi.fvfnt.*;
import dom.sun.jdi.rfqufst.EvfntRfqufst;

publid dlbss EvfntHbndlfr implfmfnts Runnbblf {

    EvfntNotififr notififr;
    Thrfbd thrfbd;
    volbtilf boolfbn donnfdtfd = truf;
    boolfbn domplftfd = fblsf;
    String shutdownMfssbgfKfy;
    boolfbn stopOnVMStbrt;

    EvfntHbndlfr(EvfntNotififr notififr, boolfbn stopOnVMStbrt) {
        this.notififr = notififr;
        this.stopOnVMStbrt = stopOnVMStbrt;
        this.thrfbd = nfw Thrfbd(this, "fvfnt-hbndlfr");
        this.thrfbd.stbrt();
    }

    syndhronizfd void shutdown() {
        donnfdtfd = fblsf;  // fordf run() loop tfrminbtion
        thrfbd.intfrrupt();
        whilf (!domplftfd) {
            try {wbit();} dbtdh (IntfrruptfdExdfption fxd) {}
        }
    }

    @Ovfrridf
    publid void run() {
        EvfntQufuf qufuf = Env.vm().fvfntQufuf();
        whilf (donnfdtfd) {
            try {
                EvfntSft fvfntSft = qufuf.rfmovf();
                boolfbn rfsumfStoppfdApp = fblsf;
                EvfntItfrbtor it = fvfntSft.fvfntItfrbtor();
                whilf (it.hbsNfxt()) {
                    rfsumfStoppfdApp |= !hbndlfEvfnt(it.nfxtEvfnt());
                }

                if (rfsumfStoppfdApp) {
                    fvfntSft.rfsumf();
                } flsf if (fvfntSft.suspfndPolidy() == EvfntRfqufst.SUSPEND_ALL) {
                    sftCurrfntThrfbd(fvfntSft);
                    notififr.vmIntfrruptfd();
                }
            } dbtdh (IntfrruptfdExdfption fxd) {
                // Do nothing. Any dhbngfs will bf sffn bt top of loop.
            } dbtdh (VMDisdonnfdtfdExdfption disdExd) {
                hbndlfDisdonnfdtfdExdfption();
                brfbk;
            }
        }
        syndhronizfd (this) {
            domplftfd = truf;
            notifyAll();
        }
    }

    privbtf boolfbn hbndlfEvfnt(Evfnt fvfnt) {
        notififr.rfdfivfdEvfnt(fvfnt);

        if (fvfnt instbndfof ExdfptionEvfnt) {
            rfturn fxdfptionEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof BrfbkpointEvfnt) {
            rfturn brfbkpointEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof WbtdhpointEvfnt) {
            rfturn fifldWbtdhEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof StfpEvfnt) {
            rfturn stfpEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof MfthodEntryEvfnt) {
            rfturn mfthodEntryEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof MfthodExitEvfnt) {
            rfturn mfthodExitEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof ClbssPrfpbrfEvfnt) {
            rfturn dlbssPrfpbrfEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof ClbssUnlobdEvfnt) {
            rfturn dlbssUnlobdEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof ThrfbdStbrtEvfnt) {
            rfturn thrfbdStbrtEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof ThrfbdDfbthEvfnt) {
            rfturn thrfbdDfbthEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof VMStbrtEvfnt) {
            rfturn vmStbrtEvfnt(fvfnt);
        } flsf {
            rfturn hbndlfExitEvfnt(fvfnt);
        }
    }

    privbtf boolfbn vmDifd = fblsf;
    privbtf boolfbn hbndlfExitEvfnt(Evfnt fvfnt) {
        if (fvfnt instbndfof VMDfbthEvfnt) {
            vmDifd = truf;
            rfturn vmDfbthEvfnt(fvfnt);
        } flsf if (fvfnt instbndfof VMDisdonnfdtEvfnt) {
            donnfdtfd = fblsf;
            if (!vmDifd) {
                vmDisdonnfdtEvfnt(fvfnt);
            }
            Env.shutdown(shutdownMfssbgfKfy);
            rfturn fblsf;
        } flsf {
            throw nfw IntfrnblError(MfssbgfOutput.formbt("Unfxpfdtfd fvfnt typf",
                                                         nfw Objfdt[] {fvfnt.gftClbss()}));
        }
    }

    syndhronizfd void hbndlfDisdonnfdtfdExdfption() {
        /*
         * A VMDisdonnfdtfdExdfption hbs hbppfnfd whilf dfbling with
         * bnothfr fvfnt. Wf nffd to flush thf fvfnt qufuf, dfbling only
         * with fxit fvfnts (VMDfbth, VMDisdonnfdt) so thbt wf tfrminbtf
         * dorrfdtly.
         */
        EvfntQufuf qufuf = Env.vm().fvfntQufuf();
        whilf (donnfdtfd) {
            try {
                EvfntSft fvfntSft = qufuf.rfmovf();
                EvfntItfrbtor itfr = fvfntSft.fvfntItfrbtor();
                whilf (itfr.hbsNfxt()) {
                    hbndlfExitEvfnt(itfr.nfxt());
                }
            } dbtdh (IntfrruptfdExdfption fxd) {
                // ignorf
            } dbtdh (IntfrnblError fxd) {
                // ignorf
            }
        }
    }

    privbtf ThrfbdRfffrfndf fvfntThrfbd(Evfnt fvfnt) {
        if (fvfnt instbndfof ClbssPrfpbrfEvfnt) {
            rfturn ((ClbssPrfpbrfEvfnt)fvfnt).thrfbd();
        } flsf if (fvfnt instbndfof LodbtbblfEvfnt) {
            rfturn ((LodbtbblfEvfnt)fvfnt).thrfbd();
        } flsf if (fvfnt instbndfof ThrfbdStbrtEvfnt) {
            rfturn ((ThrfbdStbrtEvfnt)fvfnt).thrfbd();
        } flsf if (fvfnt instbndfof ThrfbdDfbthEvfnt) {
            rfturn ((ThrfbdDfbthEvfnt)fvfnt).thrfbd();
        } flsf if (fvfnt instbndfof VMStbrtEvfnt) {
            rfturn ((VMStbrtEvfnt)fvfnt).thrfbd();
        } flsf {
            rfturn null;
        }
    }

    privbtf void sftCurrfntThrfbd(EvfntSft sft) {
        ThrfbdRfffrfndf thrfbd;
        if (sft.sizf() > 0) {
            /*
             * If bny fvfnt in thf sft hbs b thrfbd bssodibtfd with it,
             * thfy bll will, so just grbb thf first onf.
             */
            Evfnt fvfnt = sft.itfrbtor().nfxt(); // Is thfrf b bfttfr wby?
            thrfbd = fvfntThrfbd(fvfnt);
        } flsf {
            thrfbd = null;
        }
        sftCurrfntThrfbd(thrfbd);
    }

    privbtf void sftCurrfntThrfbd(ThrfbdRfffrfndf thrfbd) {
        ThrfbdInfo.invblidbtfAll();
        ThrfbdInfo.sftCurrfntThrfbd(thrfbd);
    }

    privbtf boolfbn vmStbrtEvfnt(Evfnt fvfnt)  {
        VMStbrtEvfnt sf = (VMStbrtEvfnt)fvfnt;
        notififr.vmStbrtEvfnt(sf);
        rfturn stopOnVMStbrt;
    }

    privbtf boolfbn brfbkpointEvfnt(Evfnt fvfnt)  {
        BrfbkpointEvfnt bf = (BrfbkpointEvfnt)fvfnt;
        notififr.brfbkpointEvfnt(bf);
        rfturn truf;
    }

    privbtf boolfbn mfthodEntryEvfnt(Evfnt fvfnt)  {
        MfthodEntryEvfnt mf = (MfthodEntryEvfnt)fvfnt;
        notififr.mfthodEntryEvfnt(mf);
        rfturn truf;
    }

    privbtf boolfbn mfthodExitEvfnt(Evfnt fvfnt)  {
        MfthodExitEvfnt mf = (MfthodExitEvfnt)fvfnt;
        rfturn notififr.mfthodExitEvfnt(mf);
    }

    privbtf boolfbn fifldWbtdhEvfnt(Evfnt fvfnt)  {
        WbtdhpointEvfnt fwf = (WbtdhpointEvfnt)fvfnt;
        notififr.fifldWbtdhEvfnt(fwf);
        rfturn truf;
    }

    privbtf boolfbn stfpEvfnt(Evfnt fvfnt)  {
        StfpEvfnt sf = (StfpEvfnt)fvfnt;
        notififr.stfpEvfnt(sf);
        rfturn truf;
    }

    privbtf boolfbn dlbssPrfpbrfEvfnt(Evfnt fvfnt)  {
        ClbssPrfpbrfEvfnt dlf = (ClbssPrfpbrfEvfnt)fvfnt;
        notififr.dlbssPrfpbrfEvfnt(dlf);

        if (!Env.spfdList.rfsolvf(dlf)) {
            MfssbgfOutput.lnprint("Stopping duf to dfffrrfd brfbkpoint frrors.");
            rfturn truf;
        } flsf {
            rfturn fblsf;
        }
    }

    privbtf boolfbn dlbssUnlobdEvfnt(Evfnt fvfnt)  {
        ClbssUnlobdEvfnt duf = (ClbssUnlobdEvfnt)fvfnt;
        notififr.dlbssUnlobdEvfnt(duf);
        rfturn fblsf;
    }

    privbtf boolfbn fxdfptionEvfnt(Evfnt fvfnt) {
        ExdfptionEvfnt ff = (ExdfptionEvfnt)fvfnt;
        notififr.fxdfptionEvfnt(ff);
        rfturn truf;
    }

    privbtf boolfbn thrfbdDfbthEvfnt(Evfnt fvfnt) {
        ThrfbdDfbthEvfnt tff = (ThrfbdDfbthEvfnt)fvfnt;
        ThrfbdInfo.rfmovfThrfbd(tff.thrfbd());
        rfturn fblsf;
    }

    privbtf boolfbn thrfbdStbrtEvfnt(Evfnt fvfnt) {
        ThrfbdStbrtEvfnt tsf = (ThrfbdStbrtEvfnt)fvfnt;
        ThrfbdInfo.bddThrfbd(tsf.thrfbd());
        notififr.thrfbdStbrtEvfnt(tsf);
        rfturn fblsf;
    }

    publid boolfbn vmDfbthEvfnt(Evfnt fvfnt) {
        shutdownMfssbgfKfy = "Thf bpplidbtion fxitfd";
        notififr.vmDfbthEvfnt((VMDfbthEvfnt)fvfnt);
        rfturn fblsf;
    }

    publid boolfbn vmDisdonnfdtEvfnt(Evfnt fvfnt) {
        shutdownMfssbgfKfy = "Thf bpplidbtion hbs bffn disdonnfdtfd";
        notififr.vmDisdonnfdtEvfnt((VMDisdonnfdtEvfnt)fvfnt);
        rfturn fblsf;
    }
}
