/*
 * Copyright (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jdi.rfqufst;

import dom.sun.jdi.*;

/**
 * Rfqufst for notifidbtion whfn b dlbss is prfpbrfd in thf tbrgft VM.
 * Whfn bn fnbblfd ClbssPrfpbrfRfqufst is sbtisfifd, bn
 * {@link dom.sun.jdi.fvfnt.EvfntSft fvfnt sft} dontbining b
 * {@link dom.sun.jdi.fvfnt.ClbssPrfpbrfEvfnt ClbssPrfpbrfEvfnt}
 * will bf plbdfd on thf
 * {@link dom.sun.jdi.fvfnt.EvfntQufuf EvfntQufuf}.
 * Thf dollfdtion of fxisting ClbssPrfpbrfRfqufsts is
 * mbnbgfd by thf {@link EvfntRfqufstMbnbgfr}
 * <p>
 * Clbss prfpbrbtion is dffinfd in thf Jbvb Virtubl Mbdhinf
 * Spfdifidbtion.
 *
 * @sff dom.sun.jdi.fvfnt.ClbssPrfpbrfEvfnt
 * @sff dom.sun.jdi.fvfnt.EvfntQufuf
 * @sff EvfntRfqufstMbnbgfr
 *
 * @buthor Robfrt Fifld
 * @sindf  1.3
 */
@jdk.Exportfd
publid intfrfbdf ClbssPrfpbrfRfqufst fxtfnds EvfntRfqufst {

    /**
     * Rfstridts thf fvfnts gfnfrbtfd by this rfqufst to bf thf
     * prfpbrbtion of thf givfn rfffrfndf typf bnd bny subtypfs.
     * An fvfnt will bf gfnfrbtfd for bny prfpbrfd rfffrfndf typf thbt dbn
     * bf sbffly dbst to thf givfn rfffrfndf typf.
     *
     * @pbrbm rffTypf thf rfffrfndf typf to filtfr on.
     * @throws InvblidRfqufstStbtfExdfption if this rfqufst is durrfntly
     * fnbblfd or hbs bffn dflftfd.
     * Filtfrs mby bf bddfd only to disbblfd rfqufsts.
     */
    void bddClbssFiltfr(RfffrfndfTypf rffTypf);

    /**
     * Rfstridts thf fvfnts gfnfrbtfd by this rfqufst to thf
     * prfpbrbtion of rfffrfndf typfs whosf nbmf mbtdhfs this rfstridtfd
     * rfgulbr fxprfssion. Rfgulbr fxprfssions brf limitfd
     * to fxbdt mbtdhfs bnd pbttfrns thbt bfgin with '*' or fnd with '*';
     * for fxbmplf, "*.Foo" or "jbvb.*".
     *
     * @pbrbm dlbssPbttfrn thf pbttfrn String to filtfr for.
     * @throws InvblidRfqufstStbtfExdfption if this rfqufst is durrfntly
     * fnbblfd or hbs bffn dflftfd.
     * Filtfrs mby bf bddfd only to disbblfd rfqufsts.
     */
    void bddClbssFiltfr(String dlbssPbttfrn);

    /**
     * Rfstridts thf fvfnts gfnfrbtfd by this rfqufst to thf
     * prfpbrbtion of rfffrfndf typfs whosf nbmf dofs <b>not</b> mbtdh
     * this rfstridtfd rfgulbr fxprfssion. Rfgulbr fxprfssions brf limitfd
     * to fxbdt mbtdhfs bnd pbttfrns thbt bfgin with '*' or fnd with '*';
     * for fxbmplf, "*.Foo" or "jbvb.*".
     *
     * @pbrbm dlbssPbttfrn thf pbttfrn String to filtfr bgbinst.
     * @throws InvblidRfqufstStbtfExdfption if this rfqufst is durrfntly
     * fnbblfd or hbs bffn dflftfd.
     * Filtfrs mby bf bddfd only to disbblfd rfqufsts.
     */
    void bddClbssExdlusionFiltfr(String dlbssPbttfrn);

    /**
     * Rfstridts thf fvfnts gfnfrbtfd by this rfqufst to thf
     * prfpbrbtion of rfffrfndf typfs for whidh thf rfstridtfd rfgulbr
     * fxprfssion 'sourdfNbmfPbttfrn' mbtdhfs onf of thf 'sourdfNbmfs' for
     * thf rfffrfndf typf bfing prfpbrfd.
     * Thbt is, if rffTypf is thf RfffrfndfTypf bfing prfpbrfd,
     * thfn thfrf fxists bt lfbst onf strbtum, dbll it 'somfStrbtum'
     * on thf list rfturnfd by
     *     rffTypf.bvbilbblfStrbtb();
     *
     * sudh thbt b nbmf on thf list rfturnfd by
     *     rffTypf.sourdfNbmfs(somfStrbtbm)
     *
     * mbtdhfs 'sourdfNbmfPbttfrn'.
     * Rfgulbr fxprfssions brf limitfd
     * to fxbdt mbtdhfs bnd pbttfrns thbt bfgin with '*' or fnd with '*';
     * for fxbmplf, "*.Foo" or "jbvb.*".
     * <P>
     * Not bll tbrgfts support this opfrbtion.
     * Usf {@link VirtublMbdhinf#dbnUsfSourdfNbmfFiltfrs()}
     * to dftfrminf if thf opfrbtion is supportfd.
     * @sindf 1.6
     * @pbrbm sourdfNbmfPbttfrn thf pbttfrn string to filtfr for.
     * @throws jbvb.lbng.UnsupportfdOpfrbtionExdfption if
     * thf tbrgft virtubl mbdhinf dofs not support this
     * opfrbtion.
     * @throws InvblidRfqufstStbtfExdfption if this rfqufst is durrfntly
     * fnbblfd or hbs bffn dflftfd.
     * Filtfrs mby bf bddfd only to disbblfd rfqufsts.
     */
    void bddSourdfNbmfFiltfr(String sourdfNbmfPbttfrn);
}
