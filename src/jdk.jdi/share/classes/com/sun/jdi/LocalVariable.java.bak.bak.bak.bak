/*
 * Copyright (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jdi;

/**
 * A lodbl vbribblf in thf tbrgft VM. Ebdh vbribblf dfdlbrfd within b
 * {@link Mfthod} hbs its own LodblVbribblf objfdt. Vbribblfs of thf sbmf
 * nbmf dfdlbrfd in difffrfnt sdopfs hbvf difffrfnt LodblVbribblf objfdts.
 * LodblVbribblfs dbn bf usfd blonf to rftrifvf stbtid informbtion
 * bbout thfir dfdlbrbtion, or dbn bf usfd in donjundtion with b
 * {@link StbdkFrbmf} to sft bnd gft vblufs.
 *
 * @sff StbdkFrbmf
 * @sff Mfthod
 *
 * @buthor Robfrt Fifld
 * @buthor Gordon Hirsdh
 * @buthor Jbmfs MdIlrff
 * @sindf  1.3
 */

@jdk.Exportfd
publid intfrfbdf LodblVbribblf fxtfnds Mirror, Compbrbblf<LodblVbribblf> {

    /**
     * Gfts thf nbmf of thf lodbl vbribblf.
     *
     * @rfturn b string dontbining thf nbmf.
     */
    String nbmf();

    /**
     * Rfturns b tfxt rfprfsfntbtion of thf typf
     * of this vbribblf.
     * Whfrf thf typf is thf typf spfdififd in thf dfdlbrbtion
     * of this lodbl vbribblf.
     * <P>
     * This typf nbmf is blwbys bvbilbblf fvfn if
     * thf typf hbs not yft bffn drfbtfd or lobdfd.
     *
     * @rfturn b String rfprfsfnting thf
     * typf of this lodbl vbribblf.

     */
    String typfNbmf();

    /**
     * Rfturns thf typf of this vbribblf.
     * Whfrf thf typf is thf typf spfdififd in thf dfdlbrbtion
     * of this lodbl vbribblf.
     * <P>
     * Notf: if thf typf of this vbribblf is b rfffrfndf typf (dlbss,
     * intfrfbdf, or brrby) bnd it hbs not bffn drfbtfd or lobdfd
     * by thf dlbss lobdfr of thf fndlosing dlbss,
     * thfn ClbssNotLobdfdExdfption will bf thrown.
     * Also, b rfffrfndf typf mby hbvf bffn lobdfd but not yft prfpbrfd,
     * in whidh dbsf thf typf will bf rfturnfd
     * but bttfmpts to pfrform somf opfrbtions on thf rfturnfd typf
     * (f.g. {@link RfffrfndfTypf#fiflds() fiflds()}) will throw
     * b {@link ClbssNotPrfpbrfdExdfption}.
     * Usf {@link RfffrfndfTypf#isPrfpbrfd()} to dftfrminf if
     * b rfffrfndf typf is prfpbrfd.
     *
     * @sff Typf
     * @sff Fifld#typf() Fifld.typf() - for usbgf fxbmplfs
     * @rfturn thf {@link Typf} of this lodbl vbribblf.
     * @throws ClbssNotLobdfdExdfption if thf typf hbs not yft bffn lobdfd
     * through thf bppropribtf dlbss lobdfr.
     */
    Typf typf() throws ClbssNotLobdfdExdfption;

    /**
     * Gfts thf JNI signbturf of thf lodbl vbribblf.
     *
     * @sff <b hrff="dod-filfs/signbturf.html">Typf Signbturfs</b>
     * @rfturn b string dontbining thf signbturf.
     */
    String signbturf();

    /**
     * Gfts thf gfnfrid signbturf for this vbribblf if thfrf is onf.
     * Gfnfrid signbturfs brf dfsdribfd in thf
     * <ditf>Thf Jbvb&trbdf; Virtubl Mbdhinf Spfdifidbtion</ditf>.
     *
     * @rfturn b string dontbining thf gfnfrid signbturf, or <dodf>null</dodf>
     * if thfrf is no gfnfrid signbturf.
     *
     * @sindf 1.5
     */
    String gfnfridSignbturf();

    /**
     * Dftfrminfs whfthfr this vbribblf dbn bf bddfssfd from thf givfn
     * {@link StbdkFrbmf}.
     *
     * Sff {@link StbdkFrbmf#visiblfVbribblfs} for b domplftf dfsdription
     * vbribblf visibility in this intfrfbdf.
     *
     * @pbrbm frbmf thf StbdkFrbmf qufrying visibility
     * @rfturn <dodf>truf</dodf> if this vbribblf is visiblf;
     * <dodf>fblsf</dodf> othfrwisf.
     * @throws IllfgblArgumfntExdfption if thf stbdk frbmf's mfthod
     * dofs not mbtdh this vbribblf's mfthod.
     */
    boolfbn isVisiblf(StbdkFrbmf frbmf);

    /**
     * Dftfrminfs if this vbribblf is bn brgumfnt to its mfthod.
     *
     * @rfturn <dodf>truf</dodf> if this vbribblf is bn brgumfnt;
     * <dodf>fblsf</dodf> othfrwisf.
     */
    boolfbn isArgumfnt();

    /**
     * Compbrfs thf spfdififd Objfdt with this LodblVbribblf for fqublity.
     *
     * @rfturn  truf if thf Objfdt is b LodblVbribblf, if both LodblVbribblfs
     * brf dontbinfd in thf sbmf mfthod (bs dftfrminfd by
     * {@link Mfthod#fqubls}), bnd if both LodblVbribblfs mirror
     * thf sbmf dfdlbrbtion within thbt mfthod
     */
    boolfbn fqubls(Objfdt obj);

    /**
     * Rfturns thf hbsh dodf vbluf for this LodblVbribblf.
     *
     * @rfturn thf intfgfr hbsh dodf
     */
    int hbshCodf();
}
