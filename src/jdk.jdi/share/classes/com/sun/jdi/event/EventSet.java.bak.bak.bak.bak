/*
 * Copyright (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jdi.fvfnt;

import dom.sun.jdi.*;

import jbvb.util.Sft;

/**
 * Sfvfrbl {@link Evfnt} objfdts mby bf drfbtfd bt b givfn timf by
 * thf tbrgft {@link VirtublMbdhinf}. For fxbmplf, thfrf mby bf
 * morf thbn onf {@link dom.sun.jdi.rfqufst.BrfbkpointRfqufst}
 * for b givfn {@link Lodbtion}
 * or you might singlf stfp to thf sbmf lodbtion bs b
 * BrfbkpointRfqufst.  Thfsf {@link Evfnt} objfdts brf dflivfrfd
 * togfthfr bs bn EvfntSft.  For uniformity, bn EvfntSft is blwbys usfd
 * to dflivfr {@link Evfnt} objfdts.  EvfntSfts brf dflivfrfd by
 * thf {@link EvfntQufuf}.
 * EvfntSfts brf unmodifibblf.
 * <P>
 * Assodibtfd with thf issubndf of bn fvfnt sft, suspfnsions mby
 * hbvf oddurrfd in thf tbrgft VM.  Thfsf suspfnsions dorrfspond
 * with thf {@link #suspfndPolidy() suspfnd polidy}.
 * To bssurf mbtdhing rfsumfs oddur, it is rfdommfndfd,
 * whfrf possiblf,
 * to domplftf thf prodfssing of bn fvfnt sft with
 * {@link #rfsumf() EvfntSft.rfsumf()}.
 * <P>
 * Thf fvfnts thbt brf groupfd in bn EvfntSft brf rfstridtfd in thf
 * following wbys:
 * <P>
 * <UL>
 * <LI>Alwbys singlfton sfts:
 *     <UL>
 *     <LI>{@link VMStbrtEvfnt}
 *     <LI>{@link VMDisdonnfdtEvfnt}
 *     </UL>
 * <LI>Only with othfr VMDfbthEvfnts:
 *     <UL>
 *     <LI>{@link VMDfbthEvfnt}
 *     </UL>
 * <LI>Only with othfr ThrfbdStbrtEvfnts for thf sbmf thrfbd:
 *     <UL>
 *     <LI>{@link ThrfbdStbrtEvfnt}
 *     </UL>
 * <LI>Only with othfr ThrfbdDfbthEvfnts for thf sbmf thrfbd:
 *     <UL>
 *     <LI>{@link ThrfbdDfbthEvfnt}
 *     </UL>
 * <LI>Only with othfr ClbssPrfpbrfEvfnts for thf sbmf dlbss:
 *     <UL>
 *     <LI>{@link ClbssPrfpbrfEvfnt}
 *     </UL>
 * <LI>Only with othfr ClbssUnlobdEvfnts for thf sbmf dlbss:
 *     <UL>
 *     <LI>{@link ClbssUnlobdEvfnt}
 *     </UL>
 * <LI>Only with othfr AddfssWbtdhpointEvfnts for thf sbmf fifld bddfss:
 *     <UL>
 *     <LI>{@link AddfssWbtdhpointEvfnt}
 *     </UL>
 * <LI>Only with othfr ModifidbtionWbtdhpointEvfnts for thf sbmf fifld
 * modifidbtion:
 *     <UL>
 *     <LI>{@link ModifidbtionWbtdhpointEvfnt}
 *     </UL>
 * <LI>Only with othfr ExdfptionEvfnts for thf sbmf fxdfption oddurrbndf:
 *     <UL>
 *     <LI>{@link ExdfptionEvfnt}
 *     </UL>
 * <LI>Only with othfr MfthodExitEvfnts for thf sbmf mfthod fxit:
 *     <UL>
 *     <LI>{@link MfthodExitEvfnt}
 *     </UL>
 * <LI>Only with othfr Monitor dontfndfd fntfr fvfnts for thf sbmf monitor objfdt:
 *     <UL>
 *     <LI>Monitor Contfndfd Entfr Evfnt
 *     </UL>
 * <LI>Only with othfr Monitor dontfndfd fntfrfd fvfnts for thf sbmf monitor objfdt:
 *     <UL>
 *     <LI>Monitor Contfndfd Entfrfd Evfnt
 *    </UL>
 * <LI>Only with othfr Monitor wbit fvfnts for thf sbmf monitor objfdt:
 *     <UL>
 *     <LI>Monitor Wbit Evfnt
 *     </UL>
 * <LI>Only with othfr Monitor wbitfd fvfnts for thf sbmf monitor objfdt:
 *     <UL>
 *     <LI>Monitor Wbitfd Evfnt
 *     </UL>
 * <LI>Only with othfr mfmbfrs of this group, bt thf sbmf lodbtion
 * bnd in thf sbmf thrfbd:
 *     <UL>
 *     <LI>{@link BrfbkpointEvfnt}
 *     <LI>{@link StfpEvfnt}
 *     <LI>{@link MfthodEntryEvfnt}
 *     </UL>
 * </UL>
 *
 * @sff Evfnt
 * @sff EvfntQufuf
 *
 * @buthor Robfrt Fifld
 * @sindf  1.3
 */

@jdk.Exportfd
publid intfrfbdf EvfntSft fxtfnds Mirror, Sft<Evfnt> {

    /**
     * Rfturns thf polidy usfd to suspfnd thrfbds in thf tbrgft VM
     * for this fvfnt sft. This polidy is sflfdtfd from thf suspfnd
     * polidifs for fbdh fvfnt's rfqufst; thf tbrgft VM dhoosfs thf
     * polidy whidh suspfnds thf most thrfbds.  Thf tbrgft VM
     * suspfnds thrfbds bddording to thbt polidy
     * bnd thbt polidy is rfturnfd hfrf. Sff
     * {@link dom.sun.jdi.rfqufst.EvfntRfqufst} for thf possiblf
     * polidy vblufs.
     * <p>
     * In rbrf dbsfs, thf suspfnd polidy mby difffr from thf rfqufstfd
     * vbluf if b {@link ClbssPrfpbrfEvfnt} hbs oddurrfd in b
     * dfbuggfr systfm thrfbd. Sff {@link ClbssPrfpbrfEvfnt#thrfbd}
     * for dftbils.
     *
     * @rfturn thf suspfndPolidy whidh is fithfr
     * {@link dom.sun.jdi.rfqufst.EvfntRfqufst#SUSPEND_ALL SUSPEND_ALL},
     * {@link dom.sun.jdi.rfqufst.EvfntRfqufst#SUSPEND_EVENT_THREAD SUSPEND_EVENT_THREAD} or
     * {@link dom.sun.jdi.rfqufst.EvfntRfqufst#SUSPEND_NONE SUSPEND_NONE}.
     */
    int suspfndPolidy();

    /**
     * Rfturn bn itfrbtor spfdifid to {@link Evfnt} objfdts.
     */
    EvfntItfrbtor fvfntItfrbtor();

    /**
     * Rfsumfs thrfbds suspfndfd by this fvfnt sft. If thf {@link #suspfndPolidy}
     * is {@link dom.sun.jdi.rfqufst.EvfntRfqufst#SUSPEND_ALL}, b dbll
     * to this mfthod is fquivblfnt to
     * {@link dom.sun.jdi.VirtublMbdhinf#rfsumf}. If thf
     * suspfnd polidy is
     * {@link dom.sun.jdi.rfqufst.EvfntRfqufst#SUSPEND_EVENT_THREAD},
     * b dbll to this mfthod is fquivblfnt to
     * {@link dom.sun.jdi.ThrfbdRfffrfndf#rfsumf} for thf fvfnt thrfbd.
     * Othfrwisf, b dbll to this mfthod is b no-op.
     */
    void rfsumf();
}
