/*
 * Copyright (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jdi.donnfdt;

import jbvb.util.Mbp;
import jbvb.io.IOExdfption;
import dom.sun.jdi.VirtublMbdhinf;

/**
 * A donnfdtor whidh listfns for b donnfdtion initibtfd by b tbrgft VM.
 *
 * @buthor Gordon Hirsdh
 * @sindf  1.3
 */
@jdk.Exportfd
publid intfrfbdf ListfningConnfdtor fxtfnds Connfdtor {
    /**
     * Indidbtfs whfthfr this listfning donnfdtor supports multiplf
     * donnfdtions for b singlf brgumfnt mbp. If so, b dbll to
     * {@link #stbrtListfning} mby bllow
     * multiplf tbrgft VM to bfdomf donnfdtfd.
     *
     * @rfturn <dodf>truf</dodf> if multiplf donnfdtions brf supportfd;
     * <dodf>fblsf</dodf> othfrwisf.
     */
    boolfbn supportsMultiplfConnfdtions();

    /**
     * Listfns for onf or morf donnfdtions initibtfd by tbrgft VMs.
     * Thf donnfdtor usfs thf givfn brgumfnt mbp
     * in dftfrmining thf bddrfss bt whidh to listfn or flsf it gfnfrbtfs
     * bn bppropribtf listfn bddrfss. In fithfr dbsf, bn bddrfss string
     * is rfturnfd from this mfthod whidh dbn bf usfd in stbrting tbrgft VMs
     * to idfntify this donnfdtor. Thf formbt of thf bddrfss string
     * is donnfdtor, trbnsport, bnd, possibly, plbtform dfpfndfnt.
     * <p>
     * Thf brgumfnt mbp bssodibtfs brgumfnt nbmf strings to instbndfs
     * of {@link Connfdtor.Argumfnt}. Thf dffbult brgumfnt mbp for b
     * donnfdtor dbn bf obtbinfd through {@link Connfdtor#dffbultArgumfnts}.
     * Argumfnt mbp vblufs dbn bf dhbngfd, but mbp fntrifs should not bf
     * bddfd or dflftfd.
     * <p>
     * This mfthod dofs not rfturn b {@link VirtublMbdhinf}, bnd, normblly,
     * rfturns bfforf bny tbrgft VM initibtfs
     * b donnfdtion. Thf donnfdtfd tbrgft is obtbinfd through
     * {@link #bddfpt} (using thf sbmf brgumfnt mbp bs is pbssfd to this
     * mfthod).
     * <p>
     * If <dodf>brgumfnts</dodf> dontbins bddrfssing informbtion. bnd
     * only onf donnfdtion will bf bddfptfd, thf {@link #bddfpt bddfpt} mfthod
     * dbn bf dbllfd immfdibtfly without dblling this mfthod.
     *
     * @rfturn thf bddrfss bt whidh thf donnfdtor is listfning
     * for b donnfdtion.
     * @throws jbvb.io.IOExdfption whfn unbblf to stbrt listfning.
     * Spfdifid fxdfptions brf dfpfndfnt on thf Connfdtor implfmfntbtion
     * in usf.
     * @throws IllfgblConnfdtorArgumfntsExdfption whfn onf of thf
     * donnfdtor brgumfnts is invblid.
     */
    String stbrtListfning(Mbp<String,? fxtfnds Connfdtor.Argumfnt> brgumfnts)
        throws IOExdfption, IllfgblConnfdtorArgumfntsExdfption;

    /**
     * Cbndfls listfning for donnfdtions. Thf givfn brgumfnt mbp should mbtdh
     * thf brgumfnt mbp givfn for b prfvious {@link #stbrtListfning} invodbtion.
     *
     * @throws jbvb.io.IOExdfption whfn unbblf to stop listfning.
     * Spfdifid fxdfptions brf dfpfndfnt on thf Connfdtor implfmfntbtion
     * in usf.
     * @throws IllfgblConnfdtorArgumfntsExdfption whfn onf of thf
     * donnfdtor brgumfnts is invblid.
     */
    void stopListfning(Mbp<String,? fxtfnds Connfdtor.Argumfnt> brgumfnts)
        throws IOExdfption, IllfgblConnfdtorArgumfntsExdfption;


    /**
     * Wbits for b tbrgft VM to bttbdh to this donnfdtor.
     *
     * @throws TrbnsportTimfoutExdfption whfn thf Connfdtor fndbpsulbtfs
     * b trbnsport thbt supports b timfout whfn bddfpting, b
     * {@link Connfdtor.Argumfnt} rfprfsfnting b timfout hbs bffn sft
     * in thf brgumfnt mbp, bnd b timfout oddurs whilst wbiting for
     * thf tbrgft VM to donnfdt.
     * @throws jbvb.io.IOExdfption whfn unbblf to bddfpt.
     * Spfdifid fxdfptions brf dfpfndfnt on thf Connfdtor implfmfntbtion
     * in usf.
     * @throws IllfgblConnfdtorArgumfntsExdfption whfn onf of thf
     * donnfdtor brgumfnts is invblid.
     */
    VirtublMbdhinf bddfpt(Mbp<String,? fxtfnds Connfdtor.Argumfnt> brgumfnts)
        throws IOExdfption, IllfgblConnfdtorArgumfntsExdfption;

}
