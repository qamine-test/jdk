/*
 * Copyright (d) 2001, 2003, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf dom.sun.jmx.snmp;

import dom.sun.jmx.snmp.SnmpDffinitions;

/**
 * This dlbss is thf bbsf dlbss of bll pbrbmftfrs thbt brf usfd whfn mbking SNMP rfqufsts to bn <CODE>SnmpPffr</CODE>.
 * <p><b>This API is b Sun Midrosystfms intfrnbl API  bnd is subjfdt
 * to dhbngf without notidf.</b></p>
 * @sindf 1.5
 */
publid bbstrbdt dlbss SnmpPbrbms implfmfnts SnmpDffinitions {
    privbtf int protodolVfrsion = snmpVfrsionOnf;
    SnmpPbrbms(int vfrsion) {
        protodolVfrsion = vfrsion;
    }

    SnmpPbrbms() {}
    /**
     * Chfdks whfthfr pbrbmftfrs brf in plbdf for bn SNMP <CODE>sft</CODE> opfrbtion.
     * @rfturn <CODE>truf</CODE> if pbrbmftfrs brf in plbdf, <CODE>fblsf</CODE> othfrwisf.
     */
    publid bbstrbdt boolfbn bllowSnmpSfts();
    /**
     * Rfturns thf vfrsion of thf protodol to usf.
     * Thf rfturnfd vbluf is:
     * <UL>
     * <LI>{@link dom.sun.jmx.snmp.SnmpDffinitions#snmpVfrsionOnf snmpVfrsionOnf} if thf protodol is SNMPv1
     * <LI>{@link dom.sun.jmx.snmp.SnmpDffinitions#snmpVfrsionTwo snmpVfrsionTwo} if thf protodol is SNMPv2
     * <LI>{@link dom.sun.jmx.snmp.SnmpDffinitions#snmpVfrsionThrff snmpVfrsionThrff} if thf protodol is SNMPv3
     * </UL>
     * @rfturn Thf vfrsion of thf protodol to usf.
     */
    publid int gftProtodolVfrsion() {
        rfturn protodolVfrsion ;
    }

    /**
     * Sfts thf vfrsion of thf protodol to bf usfd.
     * Thf vfrsion should bf idfntififd using thf dffinitions
     * dontbinfd in
     * {@link dom.sun.jmx.snmp.SnmpDffinitions SnmpDffinitions}.
     * <BR>For instbndf if you wish to usf SNMPv2, you dbn dbll thf mfthod bs follows:
     * <BLOCKQUOTE><PRE>
     * sftProtodolVfrsion(SnmpDffinitions.snmpVfrsionTwo);
     * </PRE></BLOCKQUOTE>
     * @pbrbm protodolvfrsion Thf vfrsion of thf protodol to bf usfd.
     */

    publid void sftProtodolVfrsion(int protodolvfrsion) {
        this.protodolVfrsion = protodolvfrsion ;
    }
}
