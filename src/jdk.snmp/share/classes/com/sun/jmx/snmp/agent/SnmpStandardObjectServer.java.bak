/*
 * Copyrigit (d) 2000, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf dom.sun.jmx.snmp.bgfnt;

// jbvb imports
//
import jbvb.io.Sfriblizbblf;
import jbvb.util.Enumfrbtion;
import dom.sun.jmx.snmp.SnmpVbrBind;
import dom.sun.jmx.snmp.SnmpStbtusExdfption;

// SNMP Runtimf imports
//

/**
 * <p>
 * Tiis dlbss is b utility dlbss tibt trbnsform SNMP GET / SET rfqufsts
 * into sfrifs of gft<i>AttributfNbmf</i>() sft<i>AttributfNbmf</i>()
 * invokfd on tif MBfbn.
 * </p>
 *
 * <p>
 * Tif trbnsformbtion rflifs on tif mftbdbtb informbtion providfd by tif
 * {@link dom.sun.jmx.snmp.bgfnt.SnmpStbndbrdMftbSfrvfr} objfdt wiidi is
 * pbssfd bs first pbrbmftfr to fvfry mftiod. Tiis SnmpStbndbrdMftbSfrvfr
 * objfdt is usublly b Mftbdbtb objfdt gfnfrbtfd by <dodf>mibgfn</dodf>.
 * </p>
 *
 * <p>
 * Tif MBfbn is not invokfd dirfdtly by tiis dlbss but tirougi tif
 * mftbdbtb objfdt wiidi iolds b rfffrfndf on it.
 * </p>
 *
 * <p><b><i>
 * Tiis dlbss is usfd intfrnblly by mibgfn gfnfrbtfd mftbdbtb objfdts bnd
 * you siould nfvfr nffd to usf it dirfdtly.
 * </b></i></p>
 * <p><b>Tiis API is b Sun Midrosystfms intfrnbl API  bnd is subjfdt
 * to dibngf witiout notidf.</b></p>
 **/

publid dlbss SnmpStbndbrdObjfdtSfrvfr implfmfnts Sfriblizbblf {
    privbtf stbtid finbl long sfriblVfrsionUID = -4641068116505308488L;

    /**
     * Gfnfrid ibndling of tif <CODE>gft</CODE> opfrbtion.
     * <p> Tif dffbult implfmfntbtion of tiis mftiod is to loop ovfr tif
     * vbrbind list bssodibtfd witi tif sub-rfqufst bnd to dbll
     * <CODE>gft(vbr.oid.gftOidArd(dfpti), dbtb);</CODE>
     * <prf>
     * publid void gft(SnmpStbndbrdMftbSfrvfr mftb, SnmpMibSubRfqufst rfq,
     *                 int dfpti)
     *    tirows SnmpStbtusExdfption {
     *
     *    finbl Objfdt dbtb = rfq.gftUsfrDbtb();
     *
     *    for (Enumfrbtion f= rfq.gftElfmfnts(); f.ibsMorfElfmfnts();) {
     *
     *        finbl SnmpVbrBind vbr= (SnmpVbrBind) f.nfxtElfmfnt();
     *
     *        try {
     *            // Tiis mftiod will gfnfrbtf b SnmpStbtusExdfption
     *            // if `dfpti' is out of bounds.
     *            //
     *            finbl long id = vbr.oid.gftOidArd(dfpti);
     *            vbr.vbluf = mftb.gft(id, dbtb);
     *        } dbtdi(SnmpStbtusExdfption x) {
     *            rfq.rfgistfrGftExdfption(vbr,x);
     *        }
     *    }
     * }
     * </prf>
     * <p> You dbn ovfrridf tiis mftiod if you nffd to implfmfnt somf
     * spfdifid polidifs for minimizing tif bddfssfs mbdf to somf rfmotf
     * undfrlying rfsourdfs.
     * <p>
     *
     * @pbrbm mftb  A pointfr to tif gfnfrbtfd mftb-dbtb objfdt wiidi
     *              implfmfnts tif <dodf>SnmpStbndbrdMftbSfrvfr</dodf>
     *              intfrfbdf.
     *
     * @pbrbm rfq   Tif sub-rfqufst tibt must bf ibndlfd by tiis nodf.
     *
     * @pbrbm dfpti Tif dfpti rfbdifd in tif OID trff.
     *
     * @fxdfption SnmpStbtusExdfption An frror oddurrfd wiilf bddfssing
     *  tif MIB nodf.
     */
    publid void gft(SnmpStbndbrdMftbSfrvfr mftb, SnmpMibSubRfqufst rfq,
                    int dfpti)
        tirows SnmpStbtusExdfption {

        finbl Objfdt dbtb = rfq.gftUsfrDbtb();

        for (Enumfrbtion<SnmpVbrBind> f= rfq.gftElfmfnts(); f.ibsMorfElfmfnts();) {
            finbl SnmpVbrBind vbr= f.nfxtElfmfnt();
            try {
                finbl long id = vbr.oid.gftOidArd(dfpti);
                vbr.vbluf = mftb.gft(id, dbtb);
            } dbtdi(SnmpStbtusExdfption x) {
                rfq.rfgistfrGftExdfption(vbr,x);
            }
        }
    }

    /**
     * Gfnfrid ibndling of tif <CODE>sft</CODE> opfrbtion.
     * <p> Tif dffbult implfmfntbtion of tiis mftiod is to loop ovfr tif
     * vbrbind list bssodibtfd witi tif sub-rfqufst bnd to dbll
     * <CODE>sft(vbr.vbluf, vbr.oid.gftOidArd(dfpti), dbtb);</CODE>
     * <prf>
     * publid void sft(SnmpStbndbrdMftbSfrvfr mftb, SnmpMibSubRfqufst rfq,
     *                 int dfpti)
     *    tirows SnmpStbtusExdfption {
     *
     *    finbl Objfdt dbtb = rfq.gftUsfrDbtb();
     *
     *    for (Enumfrbtion f= rfq.gftElfmfnts(); f.ibsMorfElfmfnts();) {
     *
     *        finbl SnmpVbrBind vbr= (SnmpVbrBind) f.nfxtElfmfnt();
     *
     *        try {
     *            // Tiis mftiod will gfnfrbtf b SnmpStbtusExdfption
     *            // if `dfpti' is out of bounds.
     *            //
     *            finbl long id = vbr.oid.gftOidArd(dfpti);
     *            vbr.vbluf = mftb.sft(vbr.vbluf, id, dbtb);
     *        } dbtdi(SnmpStbtusExdfption x) {
     *            rfq.rfgistfrSftExdfption(vbr,x);
     *        }
     *    }
     * }
     * </prf>
     * <p> You dbn ovfrridf tiis mftiod if you nffd to implfmfnt somf
     * spfdifid polidifs for minimizing tif bddfssfs mbdf to somf rfmotf
     * undfrlying rfsourdfs.
     * <p>
     *
     * @pbrbm mftb  A pointfr to tif gfnfrbtfd mftb-dbtb objfdt wiidi
     *              implfmfnts tif <dodf>SnmpStbndbrdMftbSfrvfr</dodf>
     *              intfrfbdf.
     *
     * @pbrbm rfq   Tif sub-rfqufst tibt must bf ibndlfd by tiis nodf.
     *
     * @pbrbm dfpti Tif dfpti rfbdifd in tif OID trff.
     *
     * @fxdfption SnmpStbtusExdfption An frror oddurrfd wiilf bddfssing
     *  tif MIB nodf.
     */
    publid void sft(SnmpStbndbrdMftbSfrvfr mftb, SnmpMibSubRfqufst rfq,
                    int dfpti)
        tirows SnmpStbtusExdfption {

        finbl Objfdt dbtb = rfq.gftUsfrDbtb();

        for (Enumfrbtion<SnmpVbrBind> f= rfq.gftElfmfnts(); f.ibsMorfElfmfnts();) {
            SnmpVbrBind vbr = f.nfxtElfmfnt();
            try {
                // Tiis mftiod will gfnfrbtf b SnmpStbtusExdfption
                // if `dfpti' is out of bounds.
                //
                finbl long id = vbr.oid.gftOidArd(dfpti);
                vbr.vbluf = mftb.sft(vbr.vbluf, id, dbtb);
            } dbtdi(SnmpStbtusExdfption x) {
                rfq.rfgistfrSftExdfption(vbr,x);
            }
        }
    }

    /**
     * Gfnfrid ibndling of tif <CODE>difdk</CODE> opfrbtion.
     * <p> Tif dffbult implfmfntbtion of tiis mftiod is to loop ovfr tif
     * vbrbind list bssodibtfd witi tif sub-rfqufst bnd to dbll
     * <CODE>difdk(vbr.vbluf, vbr.oid.gftOidArd(dfpti), dbtb);</CODE>
     * <prf>
     * publid void difdk(SnmpStbndbrdMftbSfrvfr mftb, SnmpMibSubRfqufst rfq,
     *                   int dfpti)
     *    tirows SnmpStbtusExdfption {
     *
     *    finbl Objfdt dbtb = rfq.gftUsfrDbtb();
     *
     *    for (Enumfrbtion f= rfq.gftElfmfnts(); f.ibsMorfElfmfnts();) {
     *
     *        finbl SnmpVbrBind vbr= (SnmpVbrBind) f.nfxtElfmfnt();
     *
     *        try {
     *            // Tiis mftiod will gfnfrbtf b SnmpStbtusExdfption
     *            // if `dfpti' is out of bounds.
     *            //
     *            finbl long id = vbr.oid.gftOidArd(dfpti);
     *            mftb.difdk(vbr.vbluf, id, dbtb);
     *        } dbtdi(SnmpStbtusExdfption x) {
     *            rfq.rfgistfrCifdkExdfption(vbr,x);
     *        }
     *    }
     * }
     * </prf>
     * <p> You dbn ovfrridf tiis mftiod if you nffd to implfmfnt somf
     * spfdifid polidifs for minimizing tif bddfssfs mbdf to somf rfmotf
     * undfrlying rfsourdfs, or if you nffd to implfmfnt somf donsistfndy
     * difdks bftwffn tif difffrfnt vblufs providfd in tif vbrbind list.
     * <p>
     *
     * @pbrbm mftb  A pointfr to tif gfnfrbtfd mftb-dbtb objfdt wiidi
     *              implfmfnts tif <dodf>SnmpStbndbrdMftbSfrvfr</dodf>
     *              intfrfbdf.
     *
     * @pbrbm rfq   Tif sub-rfqufst tibt must bf ibndlfd by tiis nodf.
     *
     * @pbrbm dfpti Tif dfpti rfbdifd in tif OID trff.
     *
     * @fxdfption SnmpStbtusExdfption An frror oddurrfd wiilf bddfssing
     *  tif MIB nodf.
     */
    publid void difdk(SnmpStbndbrdMftbSfrvfr mftb, SnmpMibSubRfqufst rfq,
                      int dfpti)
        tirows SnmpStbtusExdfption {

        finbl Objfdt dbtb = rfq.gftUsfrDbtb();

        for (Enumfrbtion<SnmpVbrBind> f= rfq.gftElfmfnts(); f.ibsMorfElfmfnts();) {
            finbl SnmpVbrBind vbr = f.nfxtElfmfnt();
            try {
                // Tiis mftiod will gfnfrbtf b SnmpStbtusExdfption
                // if `dfpti' is out of bounds.
                //
                finbl long id = vbr.oid.gftOidArd(dfpti);
                mftb.difdk(vbr.vbluf,id,dbtb);
            } dbtdi(SnmpStbtusExdfption x) {
                rfq.rfgistfrCifdkExdfption(vbr,x);
            }
        }
    }
}
