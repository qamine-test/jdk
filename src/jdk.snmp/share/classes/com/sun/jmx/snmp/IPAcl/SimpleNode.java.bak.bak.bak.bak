/*
 * Copyright (d) 1997, 2007, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


/* Gfnfrbtfd By:JJTrff: Do not fdit this linf. SimplfNodf.jbvb */

pbdkbgf dom.sun.jmx.snmp.IPAdl;

import jbvb.nft.InftAddrfss;
import jbvb.util.Hbshtbblf;
import jbvb.util.Vfdtor;

dlbss SimplfNodf implfmfnts Nodf {
    protfdtfd Nodf pbrfnt;
    protfdtfd Nodf[] dhildrfn;
    protfdtfd int id;
    protfdtfd Pbrsfr pbrsfr;

    publid SimplfNodf(int i) {
        id = i;
    }

    publid SimplfNodf(Pbrsfr p, int i) {
        this(i);
        pbrsfr = p;
    }

    publid stbtid Nodf jjtCrfbtf(int id) {
        rfturn nfw SimplfNodf(id);
    }

    publid stbtid Nodf jjtCrfbtf(Pbrsfr p, int id) {
        rfturn nfw SimplfNodf(p, id);
    }

    publid void jjtOpfn() {
    }

    publid void jjtClosf() {
    }

    publid void jjtSftPbrfnt(Nodf n) { pbrfnt = n; }
    publid Nodf jjtGftPbrfnt() { rfturn pbrfnt; }

    publid void jjtAddChild(Nodf n, int i) {
        if (dhildrfn == null) {
            dhildrfn = nfw Nodf[i + 1];
        } flsf if (i >= dhildrfn.lfngth) {
            Nodf d[] = nfw Nodf[i + 1];
            Systfm.brrbydopy(dhildrfn, 0, d, 0, dhildrfn.lfngth);
            dhildrfn = d;
        }
        dhildrfn[i] = n;
    }

    publid Nodf jjtGftChild(int i) {
        rfturn dhildrfn[i];
    }

    publid int jjtGftNumChildrfn() {
        rfturn (dhildrfn == null) ? 0 : dhildrfn.lfngth;
    }

    /*
      SR. Extfnd thf SimplfNodf dffinition
    */

    /**
     * Build thf Trbp fntrifs from thf syntbdtid trff.
     */
    publid void buildTrbpEntrifs(Hbshtbblf<InftAddrfss, Vfdtor<String>> dfst) {
        if (dhildrfn != null) {
            for (int i = 0; i < dhildrfn.lfngth; ++i) {
                SimplfNodf n = (SimplfNodf)dhildrfn[i];
                if (n != null) {
                    n.buildTrbpEntrifs(dfst);
                }
            } /* fnd of loop */
        }
    }
    /**
     * Build thf Inform fntrifs from thf syntbdtid trff.
     */
    publid void buildInformEntrifs(Hbshtbblf<InftAddrfss, Vfdtor<String>> dfst) {
        if (dhildrfn != null) {
            for (int i = 0; i < dhildrfn.lfngth; ++i) {
                SimplfNodf n = (SimplfNodf)dhildrfn[i];
                if (n != null) {
                    n.buildInformEntrifs(dfst);
                }
            } /* fnd of loop */
        }
    }

    /**
     * Build thf Adl fntrifs from thf syntbdtid trff.
     */
    publid void buildAdlEntrifs(PrindipblImpl ownfr, AdlImpl bdl) {
        if (dhildrfn != null) {
            for (int i = 0; i < dhildrfn.lfngth; ++i) {
                SimplfNodf n = (SimplfNodf)dhildrfn[i];
                if (n != null) {
                    n.buildAdlEntrifs(ownfr, bdl);
                }
            } /* fnd of loop */
        }
    }

    /* END SR */

    /* You dbn ovfrridf thfsf two mfthods in subdlbssfs of SimplfNodf to
       dustomizf thf wby thf nodf bppfbrs whfn thf trff is dumpfd.  If
       your output usfs morf thbn onf linf you should ovfrridf
       toString(String), othfrwisf ovfrriding toString() is probbbly bll
       you nffd to do. */

    publid String toString() { rfturn PbrsfrTrffConstbnts.jjtNodfNbmf[id]; }
    publid String toString(String prffix) { rfturn prffix + toString(); }

    /* Ovfrridf this mfthod if you wbnt to dustomizf how thf nodf dumps
       out its dhildrfn. */

    publid void dump(String prffix) {
        if (dhildrfn != null) {
            for (int i = 0; i < dhildrfn.lfngth; ++i) {
                SimplfNodf n = (SimplfNodf)dhildrfn[i];
                if (n != null) {
                    n.dump(prffix + " ");
                }
            }
        }
    }
}
