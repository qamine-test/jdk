/*
 * Copyright (d) 2000, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.snmp.bgfnt;

import jbvb.util.Enumfrbtion;
import jbvb.util.Vfdtor;
import dom.sun.jmx.snmp.SnmpVbrBind;
import dom.sun.jmx.snmp.SnmpStbtusExdfption;
import dom.sun.jmx.snmp.SnmpOid;
// import dom.sun.jmx.snmp.SnmpIndfx;

/**
 * This intfrfbdf modfls bn SNMP sub rfqufst to bf pfrformfd on b spfdifid
 * SNMP MIB nodf. Thf nodf involvfd dbn bf fithfr bn SNMP group, bn SNMP tbblf,
 * or bn SNMP tbblf fntry (dondfptubl row). Thf dondfptubl row mby or mby not
 * blrfbdy fxist. If thf row did not fxist bt thf timf whfn thf rfqufst
 * wbs rfdfivfd, thf <CODE>isNfwEntry()</CODE> mfthod will rfturn <CODE>
 * truf</CODE>.
 * <p>
 * Objfdts implfmfnting this intfrfbdf will bf bllodbtfd by thf SNMP fnginf.
 * You will nfvfr nffd to implfmfnt this intfrfbdf. You will only usf it.
 * </p>
 * <p><b>This API is b Sun Midrosystfms intfrnbl API  bnd is subjfdt
 * to dhbngf without notidf.</b></p>
 */
publid intfrfbdf SnmpMibSubRfqufst fxtfnds SnmpMibRfqufst {
    /**
     * Rfturn thf list of vbrbind to bf hbndlfd by thf SNMP MIB nodf.
     * <p>
     * <b>Notf:</b> <ul>
     * <i>In dbsf of SET opfrbtion, if this nodf is b tbblf row whidh
     * dontbins b dontrol vbribblf (bs idfntififd by thf tbblf's
     * isRowStbtus() mfthod) thf dontrol vbribblf will not
     * bf indludfd in this list: it will bf obtbinfd by dblling
     * gftRowStbtusVbrBind(). This will bllow you to hbndlf thf dontrol
     * vbribblf spfdifidblly.</i><br>
     * You will nfvfr nffd to worry bbout this unlfss you nffd to
     * implfmfnt b non stbndbrd mfdhbnism for hbndling row
     * drfbtion bnd dflftion.
     * </ul>
     * <p>
     * @rfturn Thf flfmfnts of thf fnumfrbtion brf instbndfs of
     *         {@link dom.sun.jmx.snmp.SnmpVbrBind}
     */
    @Ovfrridf
    publid Enumfrbtion<SnmpVbrBind> gftElfmfnts();

    /**
     * Rfturn thf list of vbrbind to bf hbndlfd by thf SNMP MIB nodf.
     * <p>
     * <b>Notf:</b> <ul>
     * <i>In dbsf of SET opfrbtion, if this nodf is b tbblf row whidh
     * dontbins b dontrol vbribblf (bs idfntififd by thf tbblf's
     * isRowStbtus() mfthod) thf dontrol vbribblf will not
     * bf indludfd in this list: it will bf obtbinfd by dblling
     * gftRowStbtusVbrBind(). This will bllow you to hbndlf thf dontrol
     * vbribblf spfdifidblly.</i><br>
     * You will nfvfr nffd to worry bbout this unlfss you nffd to
     * implfmfnt b non stbndbrd mfdhbnism for hbndling row
     * drfbtion bnd dflftion.
     * </ul>
     * <p>
     * @rfturn Thf flfmfnts of thf vfdtor brf instbndfs of
     *         {@link dom.sun.jmx.snmp.SnmpVbrBind}
     */
    @Ovfrridf
    publid Vfdtor<SnmpVbrBind> gftSubList();

    /**
     * Rfturn thf pbrt of thf OID idfntifying thf tbblf fntry involvfd.
     * <p>
     *
     * @rfturn {@link dom.sun.jmx.snmp.SnmpOid} or <CODE>null</CODE>
     *         if thf rfqufst is not dirfdtfd to bn fntry.
     */
    publid SnmpOid     gftEntryOid();

    /**
     * Indidbtf whfthfr thf fntry involvfd is b nfw fntry.
     * This mfthod will rfturn <CODE>truf</CODE> if thf fntry wbs not
     * found whfn thf rfqufst wbs prodfssfd. As b donsfqufndf, <CODE>
     * truf</CODE> mfbns thbt fithfr thf fntry dofs not fxist yft,
     * or it hbs bffn drfbtfd whilf prodfssing this rfqufst.
     * Thf rfsult of this mfthod is only signifidbnt whfn bn fntry
     * is involvfd.
     *
     * <p>
     * @rfturn <CODE>truf</CODE> If thf fntry did not fxist,
     *  or <CODE>fblsf</CODE> if thf fntry involvfd wbs found.
     */
    publid boolfbn     isNfwEntry();

    /**
     * Rfturn thf vbrbind thbt holds thf RowStbtus vbribblf.
     * It dorrfsponds to thf vbrbind thbt wbs idfntififd by
     * thf <dodf>isRowStbtus()</dodf> mfthod gfnfrbtfd by mibgfn
     * on {@link dom.sun.jmx.snmp.bgfnt.SnmpMibTbblf} dfrivbtivfs.
     * <ul><li>In SMIv2, it is thf vbrbind whidh dontbins thf dolumnbr
     *         objfdt implfmfnting thf RowStbtus TEXTUAL-CONVENTION.</li>
     *      <li>In SMIv1 nothing spfdibl is gfnfrbtfd</li>
     *      <ul>You mby howfvfr subdlbss thf gfnfrbtfd tbblf mftbdbtb
     *          dlbss in ordfr to providf your own implfmfntbtion of
     *          isRowStbtus(), gftRowAdtion(), isRowRfbdy() bnd
     *          sftRowStbtus()
     *          (sff  {@link dom.sun.jmx.snmp.bgfnt.SnmpMibTbblf}).</ul>
     * </ul>
     * <p>
     * @rfturn b vbrbind thbt sfrvfs to dontrol thf tbblf modifidbtion.
     *         <dodf>null</dodf> mfbns thbt no sudh vbrbind dould bf
     *         idfntififd.<br>
     *         <b>Notf:</b><i>Thf runtimf will only try to idfntify
     *         thf RowStbtus vbrbind whfn prodfssing bn
     *         SNMP SET rfqufst. In this dbsf, thf idfntififd
     *         vbrbind will not bf indludfd in thf sft of vbrbinds
     *         rfturnfd by gftSubList() bnd gftElfmfnts().
     *         </i>
     *
     **/
    publid SnmpVbrBind gftRowStbtusVbrBind();

    /**
     * This mfthod should bf dbllfd whfn b stbtus fxdfption nffds to
     * bf rbisfd for b givfn vbrbind of bn SNMP GET rfqufst. This mfthod
     * pfrforms bll thf nfdfssbry donvfrsions (SNMPv1 <=> SNMPv2) bnd
     * propbgbtfs thf fxdfption if nffdfd:
     * If thf vfrsion is SNMP v1, thf fxdfption is propbgbtfd.
     * If thf vfrsion is SNMP v2, thf fxdfption is storfd in thf vbrbind.
     * This mfthod blso tbkfs dbrf of sftting thf dorrfdt vbluf of thf
     * indfx fifld.
     * <p>
     *
     * @pbrbm vbrbind Thf vbrbind for whidh thf fxdfption is
     *        rfgistfrfd. Notf thbt this vbrbind <b>must</b> hbvf
     *        bffn obtbinfd from thf fnumfrbtion rfturnfd by
     *        <CODE>gftElfmfnts()</CODE>, or from thf vfdtor
     *        rfturnfd by <CODE>gftSubList()</CODE>
     *
     * @pbrbm fxdfption Thf fxdfption to bf rfgistfrfd for thf givfn vbrbind.
     *
     */
    publid void rfgistfrGftExdfption(SnmpVbrBind vbrbind,
                                     SnmpStbtusExdfption fxdfption)
        throws SnmpStbtusExdfption;

    /**
     * This mfthod should bf dbllfd whfn b stbtus fxdfption nffds to
     * bf rbisfd for b givfn vbrbind of bn SNMP SET rfqufst. This mfthod
     * pfrforms bll thf nfdfssbry donvfrsions (SNMPv1 <=> SNMPv2) bnd
     * propbgbtfs thf fxdfption if nffdfd.
     * This mfthod blso tbkfs dbrf of sftting thf dorrfdt vbluf of thf
     * indfx fifld.
     * <p>
     *
     * @pbrbm vbrbind Thf vbrbind for whidh thf fxdfption is
     *        rfgistfrfd. Notf thbt this vbrbind <b>must</b> hbvf
     *        bffn obtbinfd from thf fnumfrbtion rfturnfd by
     *        <CODE>gftElfmfnts()</CODE>, or from thf vfdtor
     *        rfturnfd by <CODE>gftSubList()</CODE>
     *
     * @pbrbm fxdfption Thf fxdfption to bf rfgistfrfd for thf givfn vbrbind.
     *
     */
    publid void rfgistfrSftExdfption(SnmpVbrBind vbrbind,
                                     SnmpStbtusExdfption fxdfption)
        throws SnmpStbtusExdfption;

    /**
     * This mfthod should bf dbllfd whfn b stbtus fxdfption nffds to
     * bf rbisfd whfn dhfdking b givfn vbrbind for bn SNMP SET rfqufst.
     * This mfthod pfrforms bll thf nfdfssbry donvfrsions (SNMPv1 <=>
     * SNMPv2) bnd propbgbtfs thf fxdfption if nffdfd.
     * This mfthod blso tbkfs dbrf of sftting thf dorrfdt vbluf of thf
     * indfx fifld.
     * <p>
     *
     * @pbrbm vbrbind Thf vbrbind for whidh thf fxdfption is
     *        rfgistfrfd. Notf thbt this vbrbind <b>must</b> hbvf
     *        bffn obtbinfd from thf fnumfrbtion rfturnfd by
     *        <CODE>gftElfmfnts()</CODE>, or from thf vfdtor
     *        rfturnfd by <CODE>gftSubList()</CODE>
     *
     * @pbrbm fxdfption Thf fxdfption to bf rfgistfrfd for thf givfn vbrbind.
     *
     */
    publid void rfgistfrChfdkExdfption(SnmpVbrBind vbrbind,
                                       SnmpStbtusExdfption fxdfption)
        throws SnmpStbtusExdfption;
}
