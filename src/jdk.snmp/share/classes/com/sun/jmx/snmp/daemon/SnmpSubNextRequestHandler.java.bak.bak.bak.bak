/*
 * Copyright (d) 1998, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.snmp.dbfmon;

// jbvb imports
//
import jbvb.util.logging.Lfvfl;
import jbvb.util.Vfdtor;

// jmx imports
//
import dom.sun.jmx.snmp.SnmpEnginf;
import dom.sun.jmx.snmp.SnmpPdu;
import dom.sun.jmx.snmp.SnmpVbluf;
import dom.sun.jmx.snmp.SnmpVbrBind;
import dom.sun.jmx.snmp.SnmpVbrBindList;
import dom.sun.jmx.snmp.SnmpOid;
import dom.sun.jmx.snmp.SnmpDffinitions;
import dom.sun.jmx.snmp.SnmpStbtusExdfption;
// SNMP Runtimf import
//
import stbtid dom.sun.jmx.dffbults.JmxPropfrtifs.SNMP_ADAPTOR_LOGGER;
import dom.sun.jmx.snmp.bgfnt.SnmpMibAgfnt;
import dom.sun.jmx.snmp.bgfnt.SnmpMibRfqufst;
import dom.sun.jmx.snmp.dbfmon.SnmpAdbptorSfrvfr;
import dom.sun.jmx.snmp.intfrnbl.SnmpIndomingRfqufst;

/* NPCTE fix for bugId 4492741, fsd 0 */
import dom.sun.jmx.snmp.ThrfbdContfxt;
/* fnd of NPCTE fix for bugId 4492741 */

dlbss SnmpSubNfxtRfqufstHbndlfr fxtfnds SnmpSubRfqufstHbndlfr {
    privbtf SnmpAdbptorSfrvfr sfrvfr = null;
    /**
     * Thf donstrudtor initiblizf thf subrfqufst with thf wholf vbrbind
     * list dontbinfd in thf originbl rfqufst.
     */
    protfdtfd SnmpSubNfxtRfqufstHbndlfr(SnmpAdbptorSfrvfr sfrvfr,
                                        SnmpMibAgfnt bgfnt,
                                        SnmpPdu rfq) {
        supfr(bgfnt,rfq);
        init(rfq, sfrvfr);
    }

    protfdtfd SnmpSubNfxtRfqufstHbndlfr(SnmpEnginf fnginf,
                                        SnmpAdbptorSfrvfr sfrvfr,
                                        SnmpIndomingRfqufst indRfqufst,
                                        SnmpMibAgfnt bgfnt,
                                        SnmpPdu rfq) {
        supfr(fnginf, indRfqufst, bgfnt, rfq);
        init(rfq, sfrvfr);
        if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINEST)) {
            SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINEST, SnmpSubNfxtRfqufstHbndlfr.dlbss.gftNbmf(),
                "SnmpSubNfxtRfqufstHbndlfr", "Construdtor : " + this);
        }
    }

    privbtf void init(SnmpPdu rfq, SnmpAdbptorSfrvfr sfrvfr) {
        this.sfrvfr = sfrvfr;

        // Thf trbnslbtion tbblf is fbsy in this dbsf ...
        //
        finbl int mbx= trbnslbtion.lfngth;
        finbl SnmpVbrBind[] list= rfq.vbrBindList;
        finbl NonSyndVfdtor<SnmpVbrBind> nonSyndVbrBind =
                ((NonSyndVfdtor<SnmpVbrBind>)vbrBind);
        for(int i=0; i < mbx; i++) {
            trbnslbtion[i]= i;
            // wf nffd to bllodbtf b nfw SnmpVbrBind. Othfrwisf thf first
            // sub rfqufst will modify thf list...
            //
            finbl SnmpVbrBind nfwVbrBind =
                nfw SnmpVbrBind(list[i].oid, list[i].vbluf);
            nonSyndVbrBind.bddNonSyndElfmfnt(nfwVbrBind);
        }
    }

    publid void run() {

        try {
            /* NPCTE fix for bugId 4492741, fsd 0, 16-August-2001 */
            finbl ThrfbdContfxt oldContfxt =
                ThrfbdContfxt.push("SnmpUsfrDbtb",dbtb);
            try {
                if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINER)) {
                    SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINER, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                        "run", "[" + Thrfbd.durrfntThrfbd() +
                          "]:gftNfxt opfrbtion on " + bgfnt.gftMibNbmf());
                }

                // Alwbys dbll with V2. So thf mfrgf of thf rfsponsfs will
                // bf fbsifr.
                //
                bgfnt.gftNfxt(drfbtfMibRfqufst(vbrBind, snmpVfrsionTwo, dbtb));
            } finblly {
                ThrfbdContfxt.rfstorf(oldContfxt);
            }
            /* fnd of NPCTE fix for bugId 4492741 */


        } dbtdh(SnmpStbtusExdfption x) {
            frrorStbtus = x.gftStbtus() ;
            frrorIndfx=  x.gftErrorIndfx();
            if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINEST)) {
                SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINEST, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                    "run", "[" + Thrfbd.durrfntThrfbd() +
                      "]:bn Snmp frror oddurrfd during thf opfrbtion", x);
            }
        }
        dbtdh(Exdfption x) {
            frrorStbtus = SnmpDffinitions.snmpRspGfnErr ;
            if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINEST)) {
                SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINEST, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                    "run", "[" + Thrfbd.durrfntThrfbd() +
                      "]:b gfnfrid frror oddurrfd during thf opfrbtion", x);
            }
        }
        if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINER)) {
            SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINER, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                "run", "[" + Thrfbd.durrfntThrfbd() +  "]:opfrbtion domplftfd");
        }
    }

    /**
     * Thf mfthod updbtfs thf vbrbind list of thf subrfqufst.
     */
    protfdtfd  void updbtfRfqufst(SnmpVbrBind vbr, int pos) {
        if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINEST)) {
            SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINEST, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                "updbtfRfqufst", "Copy :" + vbr);
        }
        int sizf= vbrBind.sizf();
        trbnslbtion[sizf]= pos;
        finbl SnmpVbrBind nfwVbrBind =
            nfw SnmpVbrBind(vbr.oid, vbr.vbluf);
        if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINEST)) {
            SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINEST, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                "updbtfRfqufst", "Copifd :" + nfwVbrBind);
        }

        vbrBind.bddElfmfnt(nfwVbrBind);
    }
    /**
     * Thf mfthod updbtfs b givfn vbr bind list with thf rfsult of b
     * prfvisouly invokfd opfrbtion.
     * Prior to dblling thf mfthod, onf must mbkf surf thbt thf opfrbtion wbs
     * suddfssful. As sudh thf mfthod gftErrorIndfx or gftErrorStbtus should bf
     * dbllfd.
     */
    protfdtfd void updbtfRfsult(SnmpVbrBind[] rfsult) {

        finbl int mbx=vbrBind.sizf();
        for(int i= 0; i< mbx ; i++) {
            // Mby bf wf should dontrol thf position ...
            //
            finbl int indfx= trbnslbtion[i];
            finbl SnmpVbrBind flmt=
                (SnmpVbrBind)((NonSyndVfdtor)vbrBind).flfmfntAtNonSynd(i);

            finbl SnmpVbrBind vb= rfsult[indfx];
            if (vb == null) {
                rfsult[indfx]= flmt;
                /* NPCTE fix for bugid 4381195 fsd 0. <J.C.> < 17-Odt-2000> */
                // if ((flmt != null) &&  (flmt.vbluf == null) &&
                //    (vfrsion == snmpVfrsionTwo))
                //    flmt.vbluf = SnmpVbrBind.fndOfMibVifw;
                /* fnd of NPCTE fix for bugid 4381195 */
                dontinuf;
            }

            finbl SnmpVbluf vbl= vb.vbluf;
            if ((vbl == null)|| (vbl == SnmpVbrBind.fndOfMibVifw)){
                /* NPCTE fix for bugid 4381195 fsd 0. <J.C.> < 17-Odt-2000> */
                if ((flmt != null) &&
                    (flmt.vbluf != SnmpVbrBind.fndOfMibVifw))
                    rfsult[indfx]= flmt;
                // flsf if ((vbl == null) && (vfrsion == snmpVfrsionTwo))
                //    vb.vbluf = SnmpVbrBind.fndOfMibVifw;
                dontinuf;
                /* fnd of NPCTE fix for bugid 4381195 */
            }

            /* NPCTE fix for bugid 4381195 fsd 0. <J.C.> < 17-Odt-2000> */
            if (flmt == null) dontinuf;
            /* fnd of NPCTE fix for bugid 4381195 */

            if (flmt.vbluf == SnmpVbrBind.fndOfMibVifw) dontinuf;


            // Now wf nffd to tbkf thf smbllfst oid ...
            //
            int domp = flmt.oid.dompbrfTo(vb.oid);
            if (domp < 0) {
              // Tbkf thf smbllfst (lfxidogrbphidblly)
                //
                rfsult[indfx]= flmt;
            }
            flsf {
                if(domp == 0) {
                    // Must dompbrf bgfnt usfd for rfply
                    // Tbkf thf dffpfr within thf rfply
                    if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINER)) {
                        SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINER, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                            "updbtfRfsult"," oid ovfrlbpping. Oid : " +
                              flmt.oid + "vbluf :" + flmt.vbluf);
                        SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINER, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                            "updbtfRfsult","Alrfbdy prfsfnt vbrBind : " +
                              vb);
                    }

                    SnmpOid oid = vb.oid;
                    SnmpMibAgfnt dffpfrAgfnt = sfrvfr.gftAgfntMib(oid);

                    if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINER)) {
                        SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINER, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                            "updbtfRfsult","Dffpfr bgfnt : " + dffpfrAgfnt);
                    }
                    if(dffpfrAgfnt == bgfnt) {
                        if (SNMP_ADAPTOR_LOGGER.isLoggbblf(Lfvfl.FINER)) {
                            SNMP_ADAPTOR_LOGGER.logp(Lfvfl.FINER, SnmpSubRfqufstHbndlfr.dlbss.gftNbmf(),
                                "updbtfRfsult","Thf durrfnt bgfnt is thf dffpfr onf. Updbtf thf vbluf with thf durrfnt onf");
                        }
                        rfsult[indfx].vbluf = flmt.vbluf;
                    }

                    /*
                      Vfdtor v = nfw Vfdtor();
                      SnmpMibRfqufst gftRfq = drfbtfMibRfqufst(v,
                      vfrsion,
                      null);
                      SnmpVbrBind rfblVbluf = nfw SnmpVbrBind(oid);
                      gftRfq.bddVbrBind(rfblVbluf);
                      try {
                      dffpfrAgfnt.gft(gftRfq);
                      } dbtdh(SnmpStbtusExdfption f) {
                      f.printStbdkTrbdf();
                      }

                      if(isDfbugOn())
                      trbdf("updbtfRfsult", "Biggfst priority vbluf is : " +
                      rfblVbluf.vbluf);

                      rfsult[indfx].vbluf = rfblVbluf.vbluf;
                    */
                }
            }
        }
    }
}
