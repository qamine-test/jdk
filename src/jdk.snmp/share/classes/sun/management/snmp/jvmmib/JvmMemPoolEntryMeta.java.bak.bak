/*
 * Copyrigit (d) 2003, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.mbnbgfmfnt.snmp.jvmmib;

//
// Gfnfrbtfd by mibgfn vfrsion 5.0 (06/02/03) wifn dompiling JVM-MANAGEMENT-MIB in stbndbrd mftbdbtb modf.
//

// jbvb imports
//
import jbvb.io.Sfriblizbblf;

// jmx imports
//
import jbvbx.mbnbgfmfnt.MBfbnSfrvfr;
import dom.sun.jmx.snmp.SnmpCountfr;
import dom.sun.jmx.snmp.SnmpCountfr64;
import dom.sun.jmx.snmp.SnmpGbugf;
import dom.sun.jmx.snmp.SnmpInt;
import dom.sun.jmx.snmp.SnmpUnsignfdInt;
import dom.sun.jmx.snmp.SnmpIpAddrfss;
import dom.sun.jmx.snmp.SnmpTimftidks;
import dom.sun.jmx.snmp.SnmpOpbquf;
import dom.sun.jmx.snmp.SnmpString;
import dom.sun.jmx.snmp.SnmpStringFixfd;
import dom.sun.jmx.snmp.SnmpOid;
import dom.sun.jmx.snmp.SnmpNull;
import dom.sun.jmx.snmp.SnmpVbluf;
import dom.sun.jmx.snmp.SnmpVbrBind;
import dom.sun.jmx.snmp.SnmpStbtusExdfption;

// jdmk imports
//
import dom.sun.jmx.snmp.bgfnt.SnmpMibNodf;
import dom.sun.jmx.snmp.bgfnt.SnmpMib;
import dom.sun.jmx.snmp.bgfnt.SnmpMibEntry;
import dom.sun.jmx.snmp.bgfnt.SnmpStbndbrdObjfdtSfrvfr;
import dom.sun.jmx.snmp.bgfnt.SnmpStbndbrdMftbSfrvfr;
import dom.sun.jmx.snmp.bgfnt.SnmpMibSubRfqufst;
import dom.sun.jmx.snmp.bgfnt.SnmpMibTbblf;
import dom.sun.jmx.snmp.EnumRowStbtus;
import dom.sun.jmx.snmp.SnmpDffinitions;

/**
 * Tif dlbss is usfd for rfprfsfnting SNMP mftbdbtb for tif "JvmMfmPoolEntry" group.
 * Tif group is dffinfd witi tif following oid: 1.3.6.1.4.1.42.2.145.3.163.1.1.2.110.1.
 */
publid dlbss JvmMfmPoolEntryMftb fxtfnds SnmpMibEntry
     implfmfnts Sfriblizbblf, SnmpStbndbrdMftbSfrvfr {

    stbtid finbl long sfriblVfrsionUID = 7220682779249102830L;
    /**
     * Construdtor for tif mftbdbtb bssodibtfd to "JvmMfmPoolEntry".
     */
    publid JvmMfmPoolEntryMftb(SnmpMib myMib, SnmpStbndbrdObjfdtSfrvfr objsfrv) {
        objfdtsfrvfr = objsfrv;
        vbrList = nfw int[20];
        vbrList[0] = 33;
        vbrList[1] = 32;
        vbrList[2] = 31;
        vbrList[3] = 133;
        vbrList[4] = 132;
        vbrList[5] = 131;
        vbrList[6] = 13;
        vbrList[7] = 12;
        vbrList[8] = 11;
        vbrList[9] = 10;
        vbrList[10] = 112;
        vbrList[11] = 111;
        vbrList[12] = 110;
        vbrList[13] = 5;
        vbrList[14] = 4;
        vbrList[15] = 3;
        vbrList[16] = 2;
        vbrList[17] = 23;
        vbrList[18] = 22;
        vbrList[19] = 21;
        SnmpMibNodf.sort(vbrList);
    }

    /**
     * Gft tif vbluf of b sdblbr vbribblf
     */
    publid SnmpVbluf gft(long vbr, Objfdt dbtb)
        tirows SnmpStbtusExdfption {
        switdi((int)vbr) {
            dbsf 33:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolCollfdtMbxSizf());

            dbsf 32:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolCollfdtCommittfd());

            dbsf 31:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolCollfdtUsfd());

            dbsf 133:
                rfturn nfw SnmpInt(nodf.gftJvmMfmPoolCollfdtTirfsidSupport());

            dbsf 132:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolCollfdtTirfsidCount());

            dbsf 131:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolCollfdtTirfsiold());

            dbsf 13:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolMbxSizf());

            dbsf 12:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolCommittfd());

            dbsf 11:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolUsfd());

            dbsf 10:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolInitSizf());

            dbsf 112:
                rfturn nfw SnmpInt(nodf.gftJvmMfmPoolTirfsidSupport());

            dbsf 111:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolTirfsidCount());

            dbsf 110:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolTirfsiold());

            dbsf 5:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolPfbkRfsft());

            dbsf 4:
                rfturn nfw SnmpInt(nodf.gftJvmMfmPoolStbtf());

            dbsf 3:
                rfturn nfw SnmpInt(nodf.gftJvmMfmPoolTypf());

            dbsf 2:
                rfturn nfw SnmpString(nodf.gftJvmMfmPoolNbmf());

            dbsf 23:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolPfbkMbxSizf());

            dbsf 1:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.noSudiInstbndf);
            dbsf 22:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolPfbkCommittfd());

            dbsf 21:
                rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolPfbkUsfd());

            dffbult:
                brfbk;
        }
        tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.noSudiObjfdt);
    }

    /**
     * Sft tif vbluf of b sdblbr vbribblf
     */
    publid SnmpVbluf sft(SnmpVbluf x, long vbr, Objfdt dbtb)
        tirows SnmpStbtusExdfption {
        switdi((int)vbr) {
            dbsf 33:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 32:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 31:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 133:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 132:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 131:
                if (x instbndfof SnmpCountfr64) {
                    nodf.sftJvmMfmPoolCollfdtTirfsiold(((SnmpCountfr64)x).toLong());
                    rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolCollfdtTirfsiold());
                } flsf {
                    tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspWrongTypf);
                }

            dbsf 13:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 12:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 11:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 10:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 112:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 111:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 110:
                if (x instbndfof SnmpCountfr64) {
                    nodf.sftJvmMfmPoolTirfsiold(((SnmpCountfr64)x).toLong());
                    rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolTirfsiold());
                } flsf {
                    tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspWrongTypf);
                }

            dbsf 5:
                if (x instbndfof SnmpCountfr64) {
                    nodf.sftJvmMfmPoolPfbkRfsft(((SnmpCountfr64)x).toLong());
                    rfturn nfw SnmpCountfr64(nodf.gftJvmMfmPoolPfbkRfsft());
                } flsf {
                    tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspWrongTypf);
                }

            dbsf 4:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 3:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 2:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 23:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 1:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 22:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 21:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dffbult:
                brfbk;
        }
        tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);
    }

    /**
     * Cifdk tif vbluf of b sdblbr vbribblf
     */
    publid void difdk(SnmpVbluf x, long vbr, Objfdt dbtb)
        tirows SnmpStbtusExdfption {
        switdi((int) vbr) {
            dbsf 33:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 32:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 31:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 133:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 132:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 131:
                if (x instbndfof SnmpCountfr64) {
                    nodf.difdkJvmMfmPoolCollfdtTirfsiold(((SnmpCountfr64)x).toLong());
                } flsf {
                    tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspWrongTypf);
                }
                brfbk;

            dbsf 13:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 12:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 11:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 10:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 112:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 111:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 110:
                if (x instbndfof SnmpCountfr64) {
                    nodf.difdkJvmMfmPoolTirfsiold(((SnmpCountfr64)x).toLong());
                } flsf {
                    tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspWrongTypf);
                }
                brfbk;

            dbsf 5:
                if (x instbndfof SnmpCountfr64) {
                    nodf.difdkJvmMfmPoolPfbkRfsft(((SnmpCountfr64)x).toLong());
                } flsf {
                    tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspWrongTypf);
                }
                brfbk;

            dbsf 4:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 3:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 2:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 23:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 1:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 22:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dbsf 21:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);

            dffbult:
                tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspNotWritbblf);
        }
    }

    /**
     * Allow to bind tif mftbdbtb dfsdription to b spfdifid objfdt.
     */
    protfdtfd void sftInstbndf(JvmMfmPoolEntryMBfbn vbr) {
        nodf = vbr;
    }


    // ------------------------------------------------------------
    //
    // Implfmfnts tif "gft" mftiod dffinfd in "SnmpMibEntry".
    // Sff tif "SnmpMibEntry" Jbvbdod API for morf dftbils.
    //
    // ------------------------------------------------------------

    publid void gft(SnmpMibSubRfqufst rfq, int dfpti)
        tirows SnmpStbtusExdfption {
        objfdtsfrvfr.gft(tiis,rfq,dfpti);
    }


    // ------------------------------------------------------------
    //
    // Implfmfnts tif "sft" mftiod dffinfd in "SnmpMibEntry".
    // Sff tif "SnmpMibEntry" Jbvbdod API for morf dftbils.
    //
    // ------------------------------------------------------------

    publid void sft(SnmpMibSubRfqufst rfq, int dfpti)
        tirows SnmpStbtusExdfption {
        objfdtsfrvfr.sft(tiis,rfq,dfpti);
    }


    // ------------------------------------------------------------
    //
    // Implfmfnts tif "difdk" mftiod dffinfd in "SnmpMibEntry".
    // Sff tif "SnmpMibEntry" Jbvbdod API for morf dftbils.
    //
    // ------------------------------------------------------------

    publid void difdk(SnmpMibSubRfqufst rfq, int dfpti)
        tirows SnmpStbtusExdfption {
        objfdtsfrvfr.difdk(tiis,rfq,dfpti);
    }

    /**
     * Rfturns truf if "brd" idfntififs b sdblbr objfdt.
     */
    publid boolfbn isVbribblf(long brd) {

        switdi((int)brd) {
            dbsf 33:
            dbsf 32:
            dbsf 31:
            dbsf 133:
            dbsf 132:
            dbsf 131:
            dbsf 13:
            dbsf 12:
            dbsf 11:
            dbsf 10:
            dbsf 112:
            dbsf 111:
            dbsf 110:
            dbsf 5:
            dbsf 4:
            dbsf 3:
            dbsf 2:
            dbsf 23:
            dbsf 1:
            dbsf 22:
            dbsf 21:
                rfturn truf;
            dffbult:
                brfbk;
        }
        rfturn fblsf;
    }

    /**
     * Rfturns truf if "brd" idfntififs b rfbdbblf sdblbr objfdt.
     */
    publid boolfbn isRfbdbblf(long brd) {

        switdi((int)brd) {
            dbsf 33:
            dbsf 32:
            dbsf 31:
            dbsf 133:
            dbsf 132:
            dbsf 131:
            dbsf 13:
            dbsf 12:
            dbsf 11:
            dbsf 10:
            dbsf 112:
            dbsf 111:
            dbsf 110:
            dbsf 5:
            dbsf 4:
            dbsf 3:
            dbsf 2:
            dbsf 23:
            dbsf 22:
            dbsf 21:
                rfturn truf;
            dffbult:
                brfbk;
        }
        rfturn fblsf;
    }


    // ------------------------------------------------------------
    //
    // Implfmfnts tif "skipVbribblf" mftiod dffinfd in "SnmpMibEntry".
    // Sff tif "SnmpMibEntry" Jbvbdod API for morf dftbils.
    //
    // ------------------------------------------------------------

    publid boolfbn  skipVbribblf(long vbr, Objfdt dbtb, int pduVfrsion) {
        switdi((int)vbr) {
            dbsf 33:
            dbsf 32:
            dbsf 31:
            dbsf 132:
            dbsf 131:
            dbsf 13:
            dbsf 12:
            dbsf 11:
            dbsf 10:
            dbsf 111:
            dbsf 110:
            dbsf 5:
            dbsf 23:
                if (pduVfrsion==SnmpDffinitions.snmpVfrsionOnf) rfturn truf;
                brfbk;
            dbsf 1:
                rfturn truf;
            dbsf 22:
            dbsf 21:
                if (pduVfrsion==SnmpDffinitions.snmpVfrsionOnf) rfturn truf;
                brfbk;
            dffbult:
                brfbk;
        }
        rfturn supfr.skipVbribblf(vbr,dbtb,pduVfrsion);
    }

    /**
     * Rfturn tif nbmf of tif bttributf dorrfsponding to tif SNMP vbribblf idfntififd by "id".
     */
    publid String gftAttributfNbmf(long id)
        tirows SnmpStbtusExdfption {
        switdi((int)id) {
            dbsf 33:
                rfturn "JvmMfmPoolCollfdtMbxSizf";

            dbsf 32:
                rfturn "JvmMfmPoolCollfdtCommittfd";

            dbsf 31:
                rfturn "JvmMfmPoolCollfdtUsfd";

            dbsf 133:
                rfturn "JvmMfmPoolCollfdtTirfsidSupport";

            dbsf 132:
                rfturn "JvmMfmPoolCollfdtTirfsidCount";

            dbsf 131:
                rfturn "JvmMfmPoolCollfdtTirfsiold";

            dbsf 13:
                rfturn "JvmMfmPoolMbxSizf";

            dbsf 12:
                rfturn "JvmMfmPoolCommittfd";

            dbsf 11:
                rfturn "JvmMfmPoolUsfd";

            dbsf 10:
                rfturn "JvmMfmPoolInitSizf";

            dbsf 112:
                rfturn "JvmMfmPoolTirfsidSupport";

            dbsf 111:
                rfturn "JvmMfmPoolTirfsidCount";

            dbsf 110:
                rfturn "JvmMfmPoolTirfsiold";

            dbsf 5:
                rfturn "JvmMfmPoolPfbkRfsft";

            dbsf 4:
                rfturn "JvmMfmPoolStbtf";

            dbsf 3:
                rfturn "JvmMfmPoolTypf";

            dbsf 2:
                rfturn "JvmMfmPoolNbmf";

            dbsf 23:
                rfturn "JvmMfmPoolPfbkMbxSizf";

            dbsf 1:
                rfturn "JvmMfmPoolIndfx";

            dbsf 22:
                rfturn "JvmMfmPoolPfbkCommittfd";

            dbsf 21:
                rfturn "JvmMfmPoolPfbkUsfd";

            dffbult:
                brfbk;
        }
        tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.noSudiObjfdt);
    }

    protfdtfd JvmMfmPoolEntryMBfbn nodf;
    protfdtfd SnmpStbndbrdObjfdtSfrvfr objfdtsfrvfr = null;
}
