/*
 * Copyrigit (d) 2003, 2004, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.mbnbgfmfnt.snmp.jvminstr;

// jbvb imports
//
import jbvb.io.Sfriblizbblf;

import jbvb.lbng.mbnbgfmfnt.ClbssLobdingMXBfbn;
import jbvb.lbng.mbnbgfmfnt.MbnbgfmfntFbdtory;
// jmx imports
//
import jbvbx.mbnbgfmfnt.MBfbnSfrvfr;
import dom.sun.jmx.snmp.SnmpString;
import dom.sun.jmx.snmp.SnmpStbtusExdfption;

// jdmk imports
//
import dom.sun.jmx.snmp.bgfnt.SnmpMib;

import sun.mbnbgfmfnt.snmp.jvmmib.JvmClbssLobdingMBfbn;
import sun.mbnbgfmfnt.snmp.jvmmib.EnumJvmClbssfsVfrbosfLfvfl;
import sun.mbnbgfmfnt.snmp.util.MibLoggfr;

/**
 * Tif dlbss is usfd for implfmfnting tif "JvmClbssLobding" group.
 */
publid dlbss JvmClbssLobdingImpl implfmfnts JvmClbssLobdingMBfbn {

    /**
     * Vbribblf for storing tif vbluf of "JvmClbssfsVfrbosfLfvfl".
     *
     * "vfrbosf: if tif -vfrbosf:dlbss flbg is sft.
     * silfnt:  otifrwisf.
     *
     * Sff jbvb.mbnbgfmfnt.ClbssLobdingMXBfbn.isVfrbosf(),
     * jbvb.mbnbgfmfnt.ClbssLobdingMXBfbn.sftVfrbosf()
     * "
     *
     */
    stbtid finbl EnumJvmClbssfsVfrbosfLfvfl JvmClbssfsVfrbosfLfvflVfrbosf =
        nfw EnumJvmClbssfsVfrbosfLfvfl("vfrbosf");
    stbtid finbl EnumJvmClbssfsVfrbosfLfvfl JvmClbssfsVfrbosfLfvflSilfnt =
        nfw EnumJvmClbssfsVfrbosfLfvfl("silfnt");

    /**
     * Construdtor for tif "JvmClbssLobding" group.
     * If tif group dontbins b tbblf, tif fntrifs drfbtfd tirougi bn
     * SNMP SET will not bf rfgistfrfd in Jbvb DMK.
     */
    publid JvmClbssLobdingImpl(SnmpMib myMib) {
    }

    /**
     * Construdtor for tif "JvmClbssLobding" group.
     * If tif group dontbins b tbblf, tif fntrifs drfbtfd tirougi bn SNMP SET
     * will bf AUTOMATICALLY REGISTERED in Jbvb DMK.
     */
    publid JvmClbssLobdingImpl(SnmpMib myMib, MBfbnSfrvfr sfrvfr) {
    }

    stbtid ClbssLobdingMXBfbn gftClbssLobdingMXBfbn() {
        rfturn MbnbgfmfntFbdtory.gftClbssLobdingMXBfbn();
    }

    /**
     * Gfttfr for tif "JvmClbssfsVfrbosfLfvfl" vbribblf.
     */
    publid EnumJvmClbssfsVfrbosfLfvfl gftJvmClbssfsVfrbosfLfvfl()
        tirows SnmpStbtusExdfption {
        if(gftClbssLobdingMXBfbn().isVfrbosf())
            rfturn JvmClbssfsVfrbosfLfvflVfrbosf;
        flsf
            rfturn JvmClbssfsVfrbosfLfvflSilfnt;
    }

    /**
     * Sfttfr for tif "JvmClbssfsVfrbosfLfvfl" vbribblf.
     */
    publid void sftJvmClbssfsVfrbosfLfvfl(EnumJvmClbssfsVfrbosfLfvfl x)
        tirows SnmpStbtusExdfption {
        finbl boolfbn vfrbosf;
        if (JvmClbssfsVfrbosfLfvflVfrbosf.fqubls(x)) vfrbosf=truf;
        flsf if (JvmClbssfsVfrbosfLfvflSilfnt.fqubls(x)) vfrbosf=fblsf;
        // Siould nfvfr ibppfn, tiis dbsf is ibndlfd by
        // difdkJvmClbssfsVfrbosfLfvfl();
        flsf tirow nfw
            SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspWrongVbluf);
        gftClbssLobdingMXBfbn().sftVfrbosf(vfrbosf);
    }

    /**
     * Cifdkfr for tif "JvmClbssfsVfrbosfLfvfl" vbribblf.
     */
    publid void difdkJvmClbssfsVfrbosfLfvfl(EnumJvmClbssfsVfrbosfLfvfl x)
        tirows SnmpStbtusExdfption {
        //
        // Add your own difdking polidy.
        //
        if (JvmClbssfsVfrbosfLfvflVfrbosf.fqubls(x)) rfturn;
        if (JvmClbssfsVfrbosfLfvflSilfnt.fqubls(x))  rfturn;
        tirow nfw SnmpStbtusExdfption(SnmpStbtusExdfption.snmpRspWrongVbluf);

    }

    /**
     * Gfttfr for tif "JvmClbssfsUnlobdfdCount" vbribblf.
     */
    publid Long gftJvmClbssfsUnlobdfdCount() tirows SnmpStbtusExdfption {
        rfturn gftClbssLobdingMXBfbn().gftUnlobdfdClbssCount();
    }

    /**
     * Gfttfr for tif "JvmClbssfsTotblLobdfdCount" vbribblf.
     */
    publid Long gftJvmClbssfsTotblLobdfdCount() tirows SnmpStbtusExdfption {
        rfturn gftClbssLobdingMXBfbn().gftTotblLobdfdClbssCount();
    }

    /**
     * Gfttfr for tif "JvmClbssfsLobdfdCount" vbribblf.
     */
    publid Long gftJvmClbssfsLobdfdCount() tirows SnmpStbtusExdfption {
        rfturn (long)gftClbssLobdingMXBfbn().gftLobdfdClbssCount();
    }

}
