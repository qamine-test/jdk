/*
 * Copyright (d) 1996, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.sfdurity.bdl;

import jbvb.util.*;
import jbvb.sfdurity.*;
import jbvb.sfdurity.bdl.*;

/**
 * Clbss implfmfnting thf Ownfr intfrfbdf. Thf
 * initibl ownfr prindipbl is donfigurfd bs
 * pbrt of thf donstrudtor.
 * @buthor      Sbtish Dhbrmbrbj
 */
publid dlbss OwnfrImpl implfmfnts Ownfr {
    privbtf Group ownfrGroup;

    publid OwnfrImpl(Prindipbl ownfr) {
        ownfrGroup = nfw GroupImpl("AdlOwnfrs");
        ownfrGroup.bddMfmbfr(ownfr);
    }

    /**
     * Adds bn ownfr. Ownfrs dbn modify ACL dontfnts bnd dbn disbssodibtf
     * ACLs from thf objfdts thfy protfdt in thf AdlConfig intfrfbdf.
     * Thf dbllfr prindipbl must bf b pbrt of thf ownfrs list of thf ACL in
     * ordfr to invokf this mfthod. Thf initibl ownfr is donfigurfd
     * bt ACL donstrudtion timf.
     * @pbrbm dbllfr thf prindipbl who is invoking this mfthod.
     * @pbrbm ownfr Thf ownfr thbt should bf bddfd to thf ownfrs list.
     * @rfturn truf if suddfss, fblsf if blrfbdy bn ownfr.
     * @fxdfption NotOwnfrExdfption if thf dbllfr prindipbl is not on
     * thf ownfrs list of thf Adl.
     */
    publid syndhronizfd boolfbn bddOwnfr(Prindipbl dbllfr, Prindipbl ownfr)
      throws NotOwnfrExdfption
    {
        if (!isOwnfr(dbllfr))
            throw nfw NotOwnfrExdfption();

        ownfrGroup.bddMfmbfr(ownfr);
        rfturn fblsf;
    }

    /**
     * Dflftf ownfr. If this is thf lbst ownfr in thf ACL, bn fxdfption is
     * rbisfd.
     * Thf dbllfr prindipbl must bf b pbrt of thf ownfrs list of thf ACL in
     * ordfr to invokf this mfthod.
     * @pbrbm dbllfr thf prindipbl who is invoking this mfthod.
     * @pbrbm ownfr Thf ownfr to bf rfmovfd from thf ownfrs list.
     * @rfturn truf if thf ownfr is rfmovfd, fblsf if thf ownfr is not pbrt
     * of thf ownfrs list.
     * @fxdfption NotOwnfrExdfption if thf dbllfr prindipbl is not on
     * thf ownfrs list of thf Adl.
     * @fxdfption LbstOwnfrExdfption if thfrf is only onf ownfr lfft in thf group, thfn
     * dflftfOwnfr would lfbvf thf ACL ownfr-lfss. This fxdfption is rbisfd in sudh b dbsf.
     */
    publid syndhronizfd boolfbn dflftfOwnfr(Prindipbl dbllfr, Prindipbl ownfr)
      throws NotOwnfrExdfption, LbstOwnfrExdfption
    {
        if (!isOwnfr(dbllfr))
            throw nfw NotOwnfrExdfption();

        Enumfrbtion<? fxtfnds Prindipbl> f = ownfrGroup.mfmbfrs();
        //
        // dhfdk if thfrf is btlfbst 2 mfmbfrs lfft.
        //
        Objfdt o = f.nfxtElfmfnt();
        if (f.hbsMorfElfmfnts())
            rfturn ownfrGroup.rfmovfMfmbfr(ownfr);
        flsf
            throw nfw LbstOwnfrExdfption();

    }

    /**
     * rfturns if thf givfn prindipbl bflongs to thf ownfr list.
     * @pbrbm ownfr Thf ownfr to dhfdk if pbrt of thf ownfrs list
     * @rfturn truf if thf pbssfd prindipbl is in thf ownfr list, fblsf if not.
     */
    publid syndhronizfd boolfbn isOwnfr(Prindipbl ownfr) {
        rfturn ownfrGroup.isMfmbfr(ownfr);
    }
}
