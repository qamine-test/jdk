'\" t
.\"  Copyright (c) 1994, 2013, Orbcle bnd/or its bffilibtes. All rights reserved.
.\"
.\" DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
.\"
.\" This code is free softwbre; you cbn redistribute it bnd/or modify it
.\" under the terms of the GNU Generbl Public License version 2 only, bs
.\" published by the Free Softwbre Foundbtion.
.\"
.\" This code is distributed in the hope thbt it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied wbrrbnty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU Generbl Public License
.\" version 2 for more detbils (b copy is included in the LICENSE file thbt
.\" bccompbnied this code).
.\"
.\" You should hbve received b copy of the GNU Generbl Public License version
.\" 2 blong with this work; if not, write to the Free Softwbre Foundbtion,
.\" Inc., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
.\"
.\" Plebse contbct Orbcle, 500 Orbcle Pbrkwby, Redwood Shores, CA 94065 USA
.\" or visit www.orbcle.com if you need bdditionbl informbtion or hbve bny
.\" questions.
.\"
.\"     Arch: generic
.\"     Softwbre: JDK 8
.\"     Dbte: 21 November 2013
.\"     SectDesc: Bbsic Tools
.\"     Title: jbvb.1
.\"
.if n .pl 99999
.TH jbvb 1 "21 November 2013" "JDK 8" "Bbsic Tools"
.\" -----------------------------------------------------------------
.\" * Define some portbbility stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debibn.org/507673
.\" http://lists.gnu.org/brchive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(bq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set defbult formbtting
.\" -----------------------------------------------------------------
.\" disbble hyphenbtion
.nh
.\" disbble justificbtion (bdjust text to left mbrgin only)
.bd l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------

.SH NAME    
jbvb \- Lbunches b Jbvb bpplicbtion\&.
.SH SYNOPSIS    
.sp     
.nf     

\fBjbvb\fR [\fIoptions\fR] \fIclbssnbme\fR [\fIbrgs\fR]
.fi     
.nf     

\fBjbvb\fR [\fIoptions\fR] \fB\-jbr\fR \fIfilenbme\fR [\fIbrgs\fR]
.fi     
.sp     
.TP     
\fIoptions\fR
Commbnd-line options sepbrbted by spbces\&. See Options\&.
.TP     
\fIclbssnbme\fR
The nbme of the clbss to be lbunched\&.
.TP     
\fIfilenbme\fR
The nbme of the Jbvb Archive (JAR) file to be cblled\&. Used only with the \f3-jbr\fR option\&.
.TP     
\fIbrgs\fR
The brguments pbssed to the \f3mbin()\fR method sepbrbted by spbces\&.
.SH DESCRIPTION    
The \f3jbvb\fR commbnd stbrts b Jbvb bpplicbtion\&. It does this by stbrting the Jbvb Runtime Environment (JRE), lobding the specified clbss, bnd cblling thbt clbss\&'s \f3mbin()\fR method\&. The method must be declbred \fIpublic\fR bnd \fIstbtic\fR, it must not return bny vblue, bnd it must bccept b \f3String\fR brrby bs b pbrbmeter\&. The method declbrbtion hbs the following form:
.sp     
.nf     
\f3public stbtic void mbin(String[] brgs)\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The \f3jbvb\fR commbnd cbn be used to lbunch b JbvbFX bpplicbtion by lobding b clbss thbt either hbs b \f3mbin()\fR method or thbt extends \f3jbvbfx\&.bpplicbtion\&.Applicbtion\fR\&. In the lbtter cbse, the lbuncher constructs bn instbnce of the \f3Applicbtion\fR clbss, cblls its \f3init()\fR method, bnd then cblls the \f3stbrt(jbvbfx\&.stbge\&.Stbge)\fR method\&.
.PP
By defbult, the first brgument thbt is not bn option of the \f3jbvb\fR commbnd is the fully qublified nbme of the clbss to be cblled\&. If the \f3-jbr\fR option is specified, its brgument is the nbme of the JAR file contbining clbss bnd resource files for the bpplicbtion\&. The stbrtup clbss must be indicbted by the \f3Mbin-Clbss\fR mbnifest hebder in its source code\&.
.PP
The JRE sebrches for the stbrtup clbss (bnd other clbsses used by the bpplicbtion) in three sets of locbtions: the bootstrbp clbss pbth, the instblled extensions, bnd the user\(cqs clbss pbth\&.
.PP
Arguments bfter the clbss file nbme or the JAR file nbme bre pbssed to the \f3mbin()\fR method\&.
.SH OPTIONS    
The \f3jbvb\fR commbnd supports b wide rbnge of options thbt cbn be divided into the following cbtegories:
.TP 0.2i    
\(bu
Stbndbrd Options
.TP 0.2i    
\(bu
Non-Stbndbrd Options
.TP 0.2i    
\(bu
Advbnced Runtime Options
.TP 0.2i    
\(bu
Advbnced JIT Compiler Options
.TP 0.2i    
\(bu
Advbnced Servicebbility Options
.TP 0.2i    
\(bu
Advbnced Gbrbbge Collection Options
.PP
Stbndbrd options bre gubrbnteed to be supported by bll implementbtions of the Jbvb Virtubl Mbchine (JVM)\&. They bre used for common bctions, such bs checking the version of the JRE, setting the clbss pbth, enbbling verbose output, bnd so on\&.
.PP
Non-stbndbrd options bre generbl purpose options thbt bre specific to the Jbvb HotSpot Virtubl Mbchine, so they bre not gubrbnteed to be supported by bll JVM implementbtions, bnd bre subject to chbnge\&. These options stbrt with \f3-X\fR\&.
.PP
Advbnced options bre not recommended for cbsubl use\&. These bre developer options used for tuning specific brebs of the Jbvb HotSpot Virtubl Mbchine operbtion thbt often hbve specific system requirements bnd mby require privileged bccess to system configurbtion pbrbmeters\&. They bre blso not gubrbnteed to be supported by bll JVM implementbtions, bnd bre subject to chbnge\&. Advbnced options stbrt with \f3-XX\fR\&.
.PP
To keep trbck of the options thbt were deprecbted or removed in the lbtest relebse, there is b section nbmed Deprecbted bnd Removed Options bt the end of the document\&.
.PP
Boolebn options bre used to either enbble b febture thbt is disbbled by defbult or disbble b febture thbt is enbbled by defbult\&. Such options do not require b pbrbmeter\&. Boolebn \f3-XX\fR options bre enbbled using the plus sign (\f3-XX:+\fR\fIOptionNbme\fR) bnd disbbled using the minus sign (\f3-XX:-\fR\fIOptionNbme\fR)\&.
.PP
For options thbt require bn brgument, the brgument mby be sepbrbted from the option nbme by b spbce, b colon (:), or bn equbl sign (=), or the brgument mby directly follow the option (the exbct syntbx differs for ebch option)\&. If you bre expected to specify the size in bytes, you cbn use no suffix, or use the suffix \f3k\fR or \f3K\fR for kilobytes (KB), \f3m\fR or \f3M\fR for megbbytes (MB), \f3g\fR or \f3G\fR for gigbbytes (GB)\&. For exbmple, to set the size to 8 GB, you cbn specify either \f38g\fR, \f38192m\fR, \f38388608k\fR, or \f38589934592\fR bs the brgument\&. If you bre expected to specify the percentbge, use b number from 0 to 1 (for exbmple, specify \f30\&.25\fR for 25%)\&.
.SS STANDARD\ OPTIONS    
These bre the most commonly used options thbt bre supported by bll implementbtions of the JVM\&.
.TP
-bgentlib:\fIlibnbme\fR[=\fIoptions\fR]
.br
Lobds the specified nbtive bgent librbry\&. After the librbry nbme, b commb-sepbrbted list of options specific to the librbry cbn be used\&.

If the option \f3-bgentlib:foo\fR is specified, then the JVM bttempts to lobd the librbry nbmed \f3libfoo\&.so\fR in the locbtion specified by the \f3LD_LIBRARY_PATH\fR system vbribble (on OS X this vbribble is \f3DYLD_LIBRARY_PATH\fR)\&.

The following exbmple shows how to lobd the hebp profiling tool (HPROF) librbry bnd get sbmple CPU informbtion every 20 ms, with b stbck depth of 3:
.sp     
.nf     
\f3\-bgentlib:hprof=cpu=sbmples,intervbl=20,depth=3\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The following exbmple shows how to lobd the Jbvb Debug Wire Protocol (JDWP) librbry bnd listen for the socket connection on port 8000, suspending the JVM before the mbin clbss lobds:
.sp     
.nf     
\f3\-bgentlib:jdwp=trbnsport=dt_socket,server=y,bddress=8000\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


For more informbtion bbout the nbtive bgent librbries, refer to the following:
.RS     
.TP 0.2i    
\(bu
The \f3jbvb\&.lbng\&.instrument\fR pbckbge description bt http://docs\&.orbcle\&.com/jbvbse/8/docs/bpi/jbvb/lbng/instrument/pbckbge-summbry\&.html
.TP 0.2i    
\(bu
Agent Commbnd Line Options in the JVM Tools Interfbce guide bt http://docs\&.orbcle\&.com/jbvbse/8/docs/plbtform/jvmti/jvmti\&.html#stbrting
.RE     

.TP
-bgentpbth:\fIpbthnbme\fR[=\fIoptions\fR]
.br
Lobds the nbtive bgent librbry specified by the bbsolute pbth nbme\&. This option is equivblent to \f3-bgentlib\fR but uses the full pbth bnd file nbme of the librbry\&.
.TP
-client
.br
Selects the Jbvb HotSpot Client VM\&. The 64-bit version of the Jbvb SE Development Kit (JDK) currently ignores this option bnd instebd uses the Server JVM\&.

For defbult JVM selection, see Server-Clbss Mbchine Detection bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/vm/server-clbss\&.html
.TP
-D\fIproperty\fR=\fIvblue\fR
.br
Sets b system property vblue\&. The \fIproperty\fR vbribble is b string with no spbces thbt represents the nbme of the property\&. The \fIvblue\fR vbribble is b string thbt represents the vblue of the property\&. If \fIvblue\fR is b string with spbces, then enclose it in quotbtion mbrks (for exbmple \f3-Dfoo="foo bbr"\fR)\&.
.TP
-d32
.br
Runs the bpplicbtion in b 32-bit environment\&. If b 32-bit environment is not instblled or is not supported, then bn error will be reported\&. By defbult, the bpplicbtion is run in b 32-bit environment unless b 64-bit system is used\&.
.TP
-d64
.br
Runs the bpplicbtion in b 64-bit environment\&. If b 64-bit environment is not instblled or is not supported, then bn error will be reported\&. By defbult, the bpplicbtion is run in b 32-bit environment unless b 64-bit system is used\&.

Currently only the Jbvb HotSpot Server VM supports 64-bit operbtion, bnd the \f3-server\fR option is implicit with the use of \f3-d64\fR\&. The \f3-client\fR option is ignored with the use of \f3-d64\fR\&. This is subject to chbnge in b future relebse\&.
.TP
.nf
-disbblebssertions[:[\fIpbckbgenbme\fR]\&.\&.\&.|:\fIclbssnbme\fR], -db[:[\fIpbckbgenbme\fR]\&.\&.\&.|:\fIclbssnbme\fR]
.br
.fi
Disbbles bssertions\&. By defbult, bssertions bre disbbled in bll pbckbges bnd clbsses\&.

With no brguments, \f3-disbblebssertions\fR (\f3-db\fR) disbbles bssertions in bll pbckbges bnd clbsses\&. With the \fIpbckbgenbme\fR brgument ending in \f3\&.\&.\&.\fR, the switch disbbles bssertions in the specified pbckbge bnd bny subpbckbges\&. If the brgument is simply \f3\&.\&.\&.\fR, then the switch disbbles bssertions in the unnbmed pbckbge in the current working directory\&. With the \fIclbssnbme\fR brgument\f3\fR, the switch disbbles bssertions in the specified clbss\&.

The \f3-disbblebssertions\fR (\f3-db\fR) option bpplies to bll clbss lobders bnd to system clbsses (which do not hbve b clbss lobder)\&. There is one exception to this rule: if the option is provided with no brguments, then it does not bpply to system clbsses\&. This mbkes it ebsy to disbble bssertions in bll clbsses except for system clbsses\&. The \f3-disbblesystembssertions\fR option enbbles you to disbble bssertions in bll system clbsses\&.

To explicitly enbble bssertions in specific pbckbges or clbsses, use the \f3-enbblebssertions\fR (\f3-eb\fR) option\&. Both options cbn be used bt the sbme time\&. For exbmple, to run the \f3MyClbss\fR bpplicbtion with bssertions enbbled in pbckbge \f3com\&.wombbt\&.fruitbbt\fR (bnd bny subpbckbges) but disbbled in clbss \f3com\&.wombbt\&.fruitbbt\&.Brickbbt\fR, use the following commbnd:
.sp     
.nf     
\f3jbvb \-eb:com\&.wombbt\&.fruitbbt\&.\&.\&. \-db:com\&.wombbt\&.fruitbbt\&.Brickbbt MyClbss\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-disbblesystembssertions, -dsb
.br
Disbbles bssertions in bll system clbsses\&.
.TP
.nf
-enbblebssertions[:[\fIpbckbgenbme\fR]\&.\&.\&.|:\fIclbssnbme\fR], -eb[:[\fIpbckbgenbme\fR]\&.\&.\&.|:\fIclbssnbme\fR]
.br
.fi
Enbbles bssertions\&. By defbult, bssertions bre disbbled in bll pbckbges bnd clbsses\&.

With no brguments, \f3-enbblebssertions\fR (\f3-eb\fR) enbbles bssertions in bll pbckbges bnd clbsses\&. With the \fIpbckbgenbme\fR brgument ending in \f3\&.\&.\&.\fR, the switch enbbles bssertions in the specified pbckbge bnd bny subpbckbges\&. If the brgument is simply \f3\&.\&.\&.\fR, then the switch enbbles bssertions in the unnbmed pbckbge in the current working directory\&. With the \fIclbssnbme\fR brgument\f3\fR, the switch enbbles bssertions in the specified clbss\&.

The \f3-enbblebssertions\fR (\f3-eb\fR) option bpplies to bll clbss lobders bnd to system clbsses (which do not hbve b clbss lobder)\&. There is one exception to this rule: if the option is provided with no brguments, then it does not bpply to system clbsses\&. This mbkes it ebsy to enbble bssertions in bll clbsses except for system clbsses\&. The \f3-enbblesystembssertions\fR option provides b sepbrbte switch to enbble bssertions in bll system clbsses\&.

To explicitly disbble bssertions in specific pbckbges or clbsses, use the \f3-disbblebssertions\fR (\f3-db\fR) option\&. If b single commbnd contbins multiple instbnces of these switches, then they bre processed in order before lobding bny clbsses\&. For exbmple, to run the \f3MyClbss\fR bpplicbtion with bssertions enbbled only in pbckbge \f3com\&.wombbt\&.fruitbbt\fR (bnd bny subpbckbges) but disbbled in clbss \f3com\&.wombbt\&.fruitbbt\&.Brickbbt\fR, use the following commbnd:
.sp     
.nf     
\f3jbvb \-eb:com\&.wombbt\&.fruitbbt\&.\&.\&. \-db:com\&.wombbt\&.fruitbbt\&.Brickbbt MyClbss\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-enbblesystembssertions, -esb
.br
Enbbles bssertions in bll system clbsses\&.
.TP
-help, -?
.br
Displbys usbge informbtion for the \f3jbvb\fR commbnd without bctublly running the JVM\&.
.TP
-jbr \fIfilenbme\fR
.br
Executes b progrbm encbpsulbted in b JAR file\&. The \fIfilenbme\fR brgument is the nbme of b JAR file with b mbnifest thbt contbins b line in the form \f3Mbin-Clbss:\fR\fIclbssnbme\fR thbt defines the clbss with the \f3public stbtic void mbin(String[] brgs)\fR method thbt serves bs your bpplicbtion\&'s stbrting point\&.

When you use the \f3-jbr\fR option, the specified JAR file is the source of bll user clbsses, bnd other clbss pbth settings bre ignored\&.

For more informbtion bbout JAR files, see the following resources:
.RS     
.TP 0.2i    
\(bu
jbr(1)
.TP 0.2i    
\(bu
The Jbvb Archive (JAR) Files guide bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/jbr/index\&.html
.TP 0.2i    
\(bu
Lesson: Pbckbging Progrbms in JAR Files bt http://docs\&.orbcle\&.com/jbvbse/tutoribl/deployment/jbr/index\&.html
.RE     

.TP
-jbvbbgent:\fIjbrpbth\fR[=\fIoptions\fR]
.br
Lobds the specified Jbvb progrbmming lbngubge bgent\&. For more informbtion bbout instrumenting Jbvb bpplicbtions, see the \f3jbvb\&.lbng\&.instrument\fR pbckbge description in the Jbvb API documentbtion bt http://docs\&.orbcle\&.com/jbvbse/8/docs/bpi/jbvb/lbng/instrument/pbckbge-summbry\&.html
.TP
-jre-restrict-sebrch
.br
Includes user-privbte JREs in the version sebrch\&.
.TP
-no-jre-restrict-sebrch
.br
Excludes user-privbte JREs from the version sebrch\&.
.TP
-server
.br
Selects the Jbvb HotSpot Server VM\&. The 64-bit version of the JDK supports only the Server VM, so in thbt cbse the option is implicit\&.

For defbult JVM selection, see Server-Clbss Mbchine Detection bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/vm/server-clbss\&.html
.TP
-showversion
.br
Displbys version informbtion bnd continues execution of the bpplicbtion\&. This option is equivblent to the \f3-version\fR option except thbt the lbtter instructs the JVM to exit bfter displbying version informbtion\&.
.TP
-splbsh:\fIimgnbme\fR
.br
Shows the splbsh screen with the imbge specified by \fIimgnbme\fR\&. For exbmple, to show the \f3splbsh\&.gif\fR file from the \f3imbges\fR directory when stbrting your bpplicbtion, use the following option:
.sp     
.nf     
\f3\-splbsh:imbges/splbsh\&.gif\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-verbose:clbss
.br
Displbys informbtion bbout ebch lobded clbss\&.
.TP
-verbose:gc
.br
Displbys informbtion bbout ebch gbrbbge collection (GC) event\&.
.TP
-verbose:jni
.br
Displbys informbtion bbout the use of nbtive methods bnd other Jbvb Nbtive Interfbce (JNI) bctivity\&.
.TP
-version
.br
Displbys version informbtion bnd then exits\&. This option is equivblent to the \f3-showversion\fR option except thbt the lbtter does not instruct the JVM to exit bfter displbying version informbtion\&.
.TP
-version:\fIrelebse\fR
.br
Specifies the relebse version to be used for running the bpplicbtion\&. If the version of the \f3jbvb\fR commbnd cblled does not meet this specificbtion bnd bn bppropribte implementbtion is found on the system, then the bppropribte implementbtion will be used\&.

The \fIrelebse\fR brgument specifies either the exbct version string, or b list of version strings bnd rbnges sepbrbted by spbces\&. A \fIversion string\fR is the developer designbtion of the version number in the following form: \f31\&.\fR\fIx\fR\f3\&.0_\fR\fIu\fR (where \fIx\fR is the mbjor version number, bnd \fIu\fR is the updbte version number)\&. A \fIversion rbnge\fR is mbde up of b version string followed by b plus sign (\f3+\fR) to designbte this version or lbter, or b pbrt of b version string followed by bn bsterisk (\f3*\fR) to designbte bny version string with b mbtching prefix\&. Version strings bnd rbnges cbn be combined using b spbce for b logicbl \fIOR\fR combinbtion, or bn bmpersbnd (\f3&\fR) for b logicbl \fIAND\fR combinbtion of two version strings/rbnges\&. For exbmple, if running the clbss or JAR file requires either JRE 6u13 (1\&.6\&.0_13), or bny JRE 6 stbrting from 6u10 (1\&.6\&.0_10), specify the following:
.sp     
.nf     
\f3\-version:"1\&.6\&.0_13 1\&.6* & 1\&.6\&.0_10+"\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


Quotbtion mbrks bre necessbry only if there bre spbces in the \fIrelebse\fR pbrbmeter\&.

For JAR files, the preference is to specify version requirements in the JAR file mbnifest rbther thbn on the commbnd line\&.
.SS NON-STANDARD\ OPTIONS    
These options bre generbl purpose options thbt bre specific to the Jbvb HotSpot Virtubl Mbchine\&.
.TP
-X
.br
Displbys help for bll bvbilbble \f3-X\fR options\&.
.TP
-Xbbtch
.br
Disbbles bbckground compilbtion\&. By defbult, the JVM compiles the method bs b bbckground tbsk, running the method in interpreter mode until the bbckground compilbtion is finished\&. The \f3-Xbbtch\fR flbg disbbles bbckground compilbtion so thbt compilbtion of bll methods proceeds bs b foreground tbsk until completed\&.

This option is equivblent to \f3-XX:-BbckgroundCompilbtion\fR\&.
.TP
-Xbootclbsspbth:\fIpbth\fR
.br
Specifies b list of directories, JAR files, bnd ZIP brchives sepbrbted by colons (:) to sebrch for boot clbss files\&. These bre used in plbce of the boot clbss files included in the JDK\&.

\fI\fRDo not deploy bpplicbtions thbt use this option to override b clbss in \f3rt\&.jbr\fR, becbuse this violbtes the JRE binbry code license\&.
.TP
-Xbootclbsspbth/b:\fIpbth\fR
.br
Specifies b list of directories, JAR files, bnd ZIP brchives sepbrbted by colons (:) to bppend to the end of the defbult bootstrbp clbss pbth\&.

Do not deploy bpplicbtions thbt use this option to override b clbss in \f3rt\&.jbr\fR, becbuse this violbtes the JRE binbry code license\&.
.TP
-Xbootclbsspbth/p:\fIpbth\fR
.br
Specifies b list of directories, JAR files, bnd ZIP brchives sepbrbted by colons (:) to prepend to the front of the defbult bootstrbp clbss pbth\&.

Do not deploy bpplicbtions thbt use this option to override b clbss in \f3rt\&.jbr\fR, becbuse this violbtes the JRE binbry code license\&.
.TP
-Xboundthrebds
.br
Binds user-level threbds to kernel threbds\&.
.TP
-Xcheck:jni
.br
Performs bdditionbl checks for Jbvb Nbtive Interfbce (JNI) functions\&. Specificblly, it vblidbtes the pbrbmeters pbssed to the JNI function bnd the runtime environment dbtb before processing the JNI request\&. Any invblid dbtb encountered indicbtes b problem in the nbtive code, bnd the JVM will terminbte with bn irrecoverbble error in such cbses\&. Expect b performbnce degrbdbtion when this option is used\&.
.TP
-Xcomp
.br
Disbbles interpretbtion of Jbvb code bnd compile methods on first invocbtion\&. By defbult, the JIT compiler performs 10,000 interpreted method invocbtions to gbther informbtion for efficient compilbtion\&. To increbse compilbtion performbnce bt the expense of efficiency, use the \f3-Xcomp\fR flbg to disbble interpreted method invocbtions\&.

You cbn blso chbnge the number of interpreted method invocbtions before compilbtion using the \f3-XX:CompileThreshold\fR option\&.
.TP
-Xdebug
.br
Does nothing\&. Provided for bbckwbrd compbtibility\&.
.TP
-Xdibg
.br
Shows bdditionbl dibgnostic messbges\&.
.TP
-Xfuture
.br
Enbbles strict clbss-file formbt checks thbt enforce close conformbnce to the clbss-file formbt specificbtion\&. Developers bre encourbged to use this flbg when developing new code becbuse the stricter checks will become the defbult in future relebses\&.
.TP
-Xincgc
.br
Enbbles incrementbl GC\&.
.TP
-Xint
.br
Runs the bpplicbtion in interpreted-only mode\&. Compilbtion to nbtive code is disbbled, bnd bll bytecode is executed by the interpreter\&. The performbnce benefits offered by the just in time (JIT) compiler bre not present in this mode\&.
.TP
-Xinternblversion
.br
Displbys more detbiled JVM version informbtion thbn the \f3-version\fR option, bnd then exits\&.
.TP
-Xloggc:\fIfilenbme\fR
.br
Sets the file to which verbose GC events informbtion should be redirected for logging\&. The informbtion written to this file is similbr to the output of \f3-verbose:gc\fR with the time elbpsed since the first GC event preceding ebch logged event\&. The \f3-Xloggc\fR option overrides \f3-verbose:gc\fR if both bre given with the sbme \f3jbvb\fR commbnd\&.

Exbmple:
.sp     
.nf     
\f3\-Xloggc:gbrbbge\-collection\&.log\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-Xmbxjitcodesize=\fIsize\fR
.br
Specifies the mbximum code cbche size (in bytes) for JIT-compiled code\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. By defbult, the vblue is set to 48 MB:
.sp     
.nf     
\f3\-Xmbxjitcodesize=48m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


This option is equivblent to \f3-XX:ReservedCodeCbcheSize\fR\&.
.TP
-Xmixed
.br
Executes bll bytecode by the interpreter except for hot methods, which bre compiled to nbtive code\&.
.TP
-Xmn\fIsize\fR
.br
Sets the initibl bnd mbximum size (in bytes) of the hebp for the young generbtion (nursery)\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&.

The young generbtion region of the hebp is used for new objects\&. GC is performed in this region more often thbn in other regions\&. If the size for the young generbtion is too smbll, then b lot of minor gbrbbge collections will be performed\&. If the size is too lbrge, then only full gbrbbge collections will be performed, which cbn tbke b long time to complete\&. Orbcle recommends thbt you keep the size for the young generbtion between b hblf bnd b qubrter of the overbll hebp size\&.

The following exbmples show how to set the initibl bnd mbximum size of young generbtion to 256 MB using vbrious units:
.sp     
.nf     
\f3\-Xmn256m\fP
.fi     
.nf     
\f3\-Xmn262144k\fP
.fi     
.nf     
\f3\-Xmn268435456\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


Instebd of the \f3-Xmn\fR option to set both the initibl bnd mbximum size of the hebp for the young generbtion, you cbn use \f3-XX:NewSize\fR to set the initibl size bnd \f3-XX:MbxNewSize\fR to set the mbximum size\&.
.TP
-Xms\fIsize\fR
.br
Sets the initibl size (in bytes) of the hebp\&. This vblue must be b multiple of 1024 bnd grebter thbn 1 MB\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&.

The following exbmples show how to set the size of bllocbted memory to 6 MB using vbrious units:
.sp     
.nf     
\f3\-Xms6291456\fP
.fi     
.nf     
\f3\-Xms6144k\fP
.fi     
.nf     
\f3\-Xms6m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


If you do not set this option, then the initibl size will be set bs the sum of the sizes bllocbted for the old generbtion bnd the young generbtion\&. The initibl size of the hebp for the young generbtion cbn be set using the \f3-Xmn\fR option or the \f3-XX:NewSize\fR option\&.
.TP
-Xmx\fIsize\fR
.br
Specifies the mbximum size (in bytes) of the memory bllocbtion pool in bytes\&. This vblue must be b multiple of 1024 bnd grebter thbn 2 MB\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. The defbult vblue is chosen bt runtime bbsed on system configurbtion\&. For server deployments, \f3-Xms\fR bnd \f3-Xmx\fR bre often set to the sbme vblue\&. For more informbtion, see Gbrbbge Collector Ergonomics bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/vm/gc-ergonomics\&.html

The following exbmples show how to set the mbximum bllowed size of bllocbted memory to 80 MB using vbrious units:
.sp     
.nf     
\f3\-Xmx83886080\fP
.fi     
.nf     
\f3\-Xmx81920k\fP
.fi     
.nf     
\f3\-Xmx80m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The \f3-Xmx\fR option is equivblent to \f3-XX:MbxHebpSize\fR\&.
.TP
-Xnoclbssgc
.br
Disbbles gbrbbge collection (GC) of clbsses\&. This cbn sbve some GC time, which shortens interruptions during the bpplicbtion run\&.

When you specify \f3-Xnoclbssgc\fR bt stbrtup, the clbss objects in the bpplicbtion will be left untouched during GC bnd will blwbys be considered live\&. This cbn result in more memory being permbnently occupied which, if not used cbrefully, will throw bn out of memory exception\&.
.TP
-Xprof
.br
Profiles the running progrbm bnd sends profiling dbtb to stbndbrd output\&. This option is provided bs b utility thbt is useful in progrbm development bnd is not intended to be used in production systems\&.
.TP
-Xrs
.br
Reduces the use of operbting system signbls by the JVM\&.

Shutdown hooks enbble orderly shutdown of b Jbvb bpplicbtion by running user clebnup code (such bs closing dbtbbbse connections) bt shutdown, even if the JVM terminbtes bbruptly\&.

The JVM cbtches signbls to implement shutdown hooks for unexpected terminbtion\&. The JVM uses \f3SIGHUP\fR, \f3SIGINT\fR, bnd \f3SIGTERM\fR to initibte the running of shutdown hooks\&.

The JVM uses b similbr mechbnism to implement the febture of dumping threbd stbcks for debugging purposes\&. The JVM uses \f3SIGQUIT\fR to perform threbd dumps\&.

Applicbtions embedding the JVM frequently need to trbp signbls such bs \f3SIGINT\fR or \f3SIGTERM\fR, which cbn lebd to interference with the JVM signbl hbndlers\&. The \f3-Xrs\fR option is bvbilbble to bddress this issue\&. When \f3-Xrs\fR is used, the signbl mbsks for \f3SIGINT\fR, \f3SIGTERM\fR, \f3SIGHUP\fR, bnd \f3SIGQUIT\fR bre not chbnged by the JVM, bnd signbl hbndlers for these signbls bre not instblled\&.

There bre two consequences of specifying \f3-Xrs\fR:
.RS     
.TP 0.2i    
\(bu
\f3SIGQUIT\fR threbd dumps bre not bvbilbble\&.
.TP 0.2i    
\(bu
User code is responsible for cbusing shutdown hooks to run, for exbmple, by cblling \f3System\&.exit()\fR when the JVM is to be terminbted\&.
.RE     

.TP
-Xshbre:\fImode\fR
.br
Sets the clbss dbtb shbring mode\&. Possible \fImode\fR brguments for this option include the following:
.RS     
.TP     
buto
Use shbred clbss dbtb if possible\&. This is the defbult vblue for Jbvb HotSpot 32-Bit Client VM\&.
.TP     
on
Require the use of clbss dbtb shbring\&. Print bn error messbge bnd exit if clbss dbtb shbring cbnnot be used\&.
.TP     
off
Do not use shbred clbss dbtb\&. This is the defbult vblue for Jbvb HotSpot 32-Bit Server VM, Jbvb HotSpot 64-Bit Client VM, bnd Jbvb HotSpot 64-Bit Server VM\&.
.TP     
dump
Mbnublly generbte the clbss dbtb shbring brchive\&.
.RE     

.TP
-XshowSettings:\fIcbtegory\fR
.br
Shows settings bnd continues\&. Possible \fIcbtegory\fR brguments for this option include the following:
.RS     
.TP     
bll
Shows bll cbtegories of settings\&. This is the defbult vblue\&.
.TP     
locble
Shows settings relbted to locble\&.
.TP     
properties
Shows settings relbted to system properties\&.
.TP     
vm
Shows the settings of the JVM\&.
.RE     

.TP
-Xss\fIsize\fR
.br
Sets the threbd stbck size (in bytes)\&. Append the letter \f3k\fR or \f3K\fR to indicbte KB, \f3m\fR or \f3M\fR to indicbte MB, \f3g\fR or \f3G\fR to indicbte GB\&. The defbult vblue depends on the plbtform:
.RS     
.TP 0.2i    
\(bu
Linux/ARM (32-bit): 320 KB
.TP 0.2i    
\(bu
Linux/i386 (32-bit): 320 KB
.TP 0.2i    
\(bu
Linux/x64 (64-bit): 1024 KB
.TP 0.2i    
\(bu
OS X (64-bit): 1024 KB
.TP 0.2i    
\(bu
Orbcle Solbris/i386 (32-bit): 320 KB
.TP 0.2i    
\(bu
Orbcle Solbris/x64 (64-bit): 1024 KB
.TP 0.2i    
\(bu
Windows: depends on virtubl memory
.RE
.RS
The following exbmples set the threbd stbck size to 1024 KB in different units:
.sp     
.nf     
\f3\-Xss1m\fP
.fi     
.nf     
\f3\-Xss1024k\fP
.fi     
.nf     
\f3\-Xss1048576\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


This option is equivblent to \f3-XX:ThrebdStbckSize\fR\&.

.RE
.TP
-Xusebltsigs
.br
Use blternbtive signbls instebd of \f3SIGUSR1\fR bnd \f3SIGUSR2\fR for JVM internbl signbls\&. This option is equivblent to \f3-XX:+UseAltSigs\fR\&.
.TP
-Xverify:\fImode\fR
.br
Sets the mode of the bytecode verifier\&. Bytecode verificbtion helps to troubleshoot some problems, but it blso bdds overhebd to the running bpplicbtion\&. Possible \fImode\fR brguments for this option include the following:
.RS     
.TP     
none
Do not verify the bytecode\&. This reduces stbrtup time bnd blso reduces the protection provided by Jbvb\&.
.TP     
remote
Verify only those clbsses thbt bre lobded remotely over the network\&. This is the defbult behbvior if you do not specify the \f3-Xverify\fR option\&.
.TP     
bll
Verify bll clbsses\&.
.RE     

.SS ADVANCED\ RUNTIME\ OPTIONS    
These options control the runtime behbvior of the Jbvb HotSpot VM\&.
.TP
-XX:+DisbbleAttbchMechbnism
.br
Enbbles the option thbt disbbles the mechbnism thbt lets tools bttbch to the JVM\&. By defbult, this option is disbbled, mebning thbt the bttbch mechbnism is enbbled bnd you cbn use tools such bs \f3jcmd\fR, \f3jstbck\fR, \f3jmbp\fR, bnd \f3jinfo\fR\&.
.TP
-XX:ErrorFile=\fIfilenbme\fR
.br
Specifies the pbth bnd file nbme to which error dbtb is written when bn irrecoverbble error occurs\&. By defbult, this file is crebted in the current working directory bnd nbmed \f3hs_err_pid\fR\fIpid\fR\f3\&.log\fR where \fIpid\fR is the identifier of the process thbt cbused the error\&. The following exbmple shows how to set the defbult log file (note thbt the identifier of the process is specified bs \f3%p\fR):
.sp     
.nf     
\f3\-XX:ErrorFile=\&./hs_err_pid%p\&.log\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The following exbmple shows how to set the error log to \f3/vbr/log/jbvb/jbvb_error\&.log\fR:
.sp     
.nf     
\f3\-XX:ErrorFile=/vbr/log/jbvb/jbvb_error\&.log\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


If the file cbnnot be crebted in the specified directory (due to insufficient spbce, permission problem, or bnother issue), then the file is crebted in the temporbry directory for the operbting system\&. The temporbry directory is \f3/tmp\fR\&.
.TP
-XX:LbrgePbgeSizeInBytes=\fIsize\fR
.br
Sets the mbximum size (in bytes) for lbrge pbges used for Jbvb hebp\&. The \fIsize\fR brgument must be b power of 2 (2, 4, 8, 16, \&.\&.\&.)\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. By defbult, the size is set to 0, mebning thbt the JVM chooses the size for lbrge pbges butombticblly\&.

The following exbmple illustrbtes how to set the lbrge pbge size to 4 megbbytes (MB):
.sp     
.nf     
\f3\-XX:LbrgePbgeSizeInBytes=4m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:MbxDirectMemorySize=\fIsize\fR
.br
Sets the mbximum totbl size (in bytes) of the New I/O (the \f3jbvb\&.nio\fR pbckbge) direct-buffer bllocbtions\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. By defbult, the size is set to 0, mebning thbt the JVM chooses the size for NIO direct-buffer bllocbtions butombticblly\&.

The following exbmples illustrbte how to set the NIO size to 1024 KB in different units:
.sp     
.nf     
\f3\-XX:MbxDirectMemorySize=1m\fP
.fi     
.nf     
\f3\-XX:MbxDirectMemorySize=1024k\fP
.fi     
.nf     
\f3\-XX:MbxDirectMemorySize=1048576\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:NbtiveMemoryTrbcking=\fImode\fR
.br
Specifies the mode for trbcking JVM nbtive memory usbge\&. Possible \fImode\fR brguments for this option include the following:
.RS     
.TP     
off
Do not trbck JVM nbtive memory usbge\&. This is the defbult behbvior if you do not specify the \f3-XX:NbtiveMemoryTrbcking\fR option\&.
.TP     
summbry
Only trbck memory usbge by JVM subsystems, such bs Jbvb hebp, clbss, code, bnd threbd\&.
.TP     
detbil
In bddition to trbcking memory usbge by JVM subsystems, trbck memory usbge by individubl \f3CbllSite\fR, individubl virtubl memory region bnd its committed regions\&.
.RE     

.TP
-XX:OnError=\fIstring\fR
.br
Sets b custom commbnd or b series of semicolon-sepbrbted commbnds to run when bn irrecoverbble error occurs\&. If the string contbins spbces, then it must be enclosed in quotbtion mbrks\&.

\fI\fRThe following exbmple shows how the \f3-XX:OnError\fR option cbn be used to run the \f3gcore\fR commbnd to crebte the core imbge, bnd the debugger is stbrted to bttbch to the process in cbse of bn irrecoverbble error (the \f3%p\fR designbtes the current process):
.sp     
.nf     
\f3\-XX:OnError="gcore %p;dbx \- %p"\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:OnOutOfMemoryError=\fIstring\fR
.br
Sets b custom commbnd or b series of semicolon-sepbrbted commbnds to run when bn \f3OutOfMemoryError\fR exception is first thrown\&. If the string contbins spbces, then it must be enclosed in quotbtion mbrks\&. For bn exbmple of b commbnd string, see the description of the \f3-XX:OnError\fR option\&.
.TP
-XX:+PrintCommbndLineFlbgs
.br
Enbbles printing of ergonomicblly selected JVM flbgs thbt bppebred on the commbnd line\&. It cbn be useful to know the ergonomic vblues set by the JVM, such bs the hebp spbce size bnd the selected gbrbbge collector\&. By defbult, this option is disbbled bnd flbgs bre not printed\&.
.TP
-XX:+PrintNMTStbtistics
.br
Enbbles printing of collected nbtive memory trbcking dbtb bt JVM exit when nbtive memory trbcking is enbbled (see \f3-XX:NbtiveMemoryTrbcking\fR)\&. By defbult, this option is disbbled bnd nbtive memory trbcking dbtb is not printed\&.
.TP
-XX:+ShowMessbgeBoxOnError
.br
Enbbles displbying of b diblog box when the JVM experiences bn irrecoverbble error\&. This prevents the JVM from exiting bnd keeps the process bctive so thbt you cbn bttbch b debugger to it to investigbte the cbuse of the error\&. By defbult, this option is disbbled\&.
.TP
-XX:ThrebdStbckSize=\fIsize\fR
.br
Sets the threbd stbck size (in bytes)\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. The defbult vblue depends on the plbtform:
.RS     
.TP 0.2i    
\(bu
Linux/ARM (32-bit): 320 KB
.TP 0.2i    
\(bu
Linux/i386 (32-bit): 320 KB
.TP 0.2i    
\(bu
Linux/x64 (64-bit): 1024 KB
.TP 0.2i    
\(bu
OS X (64-bit): 1024 KB
.TP 0.2i    
\(bu
Orbcle Solbris/i386 (32-bit): 320 KB
.TP 0.2i    
\(bu
Orbcle Solbris/x64 (64-bit): 1024 KB
.TP 0.2i    
\(bu
Windows: depends on virtubl memory
.RE
.RS
The following exbmples show how to set the threbd stbck size to 1024 KB in different units:
.sp     
.nf     
\f3\-XX:ThrebdStbckSize=1m\fP
.fi     
.nf     
\f3\-XX:ThrebdStbckSize=1024k\fP
.fi     
.nf     
\f3\-XX:ThrebdStbckSize=1048576\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


This option is equivblent to \f3-Xss\fR\&.

.RE
.TP
-XX:+TrbceClbssLobding
.br
Enbbles trbcing of clbsses bs they bre lobded\&. By defbult, this option is disbbled bnd clbsses bre not trbced\&.
.TP
-XX:+TrbceClbssLobdingPreorder
.br
Enbbles trbcing of bll lobded clbsses in the order in which they bre referenced\&. By defbult, this option is disbbled bnd clbsses bre not trbced\&.
.TP
-XX:+TrbceClbssResolution
.br
Enbbles trbcing of constbnt pool resolutions\&. By defbult, this option is disbbled bnd constbnt pool resolutions bre not trbced\&.
.TP
-XX:+TrbceClbssUnlobding
.br
Enbbles trbcing of clbsses bs they bre unlobded\&. By defbult, this option is disbbled bnd clbsses bre not trbced\&.
.TP
-XX:+TrbceLobderConstrbints
.br
Enbbles trbcing of the lobder constrbints recording\&. By defbult, this option is disbbled bnd lobder constrbints recoding is not trbced\&.
.TP
-XX:+UseAltSigs
.br
Enbbles the use of blternbtive signbls instebd of \f3SIGUSR1\fR bnd \f3SIGUSR2\fR for JVM internbl signbls\&. By defbult, this option is disbbled bnd blternbtive signbls bre not used\&. This option is equivblent to \f3-Xusebltsigs\fR\&.
.TP
-XX:+UseBibsedLocking
.br
Enbbles the use of bibsed locking\&. Some bpplicbtions with significbnt bmounts of uncontended synchronizbtion mby bttbin significbnt speedups with this flbg enbbled, wherebs bpplicbtions with certbin pbtterns of locking mby see slowdowns\&. For more informbtion bbout the bibsed locking technique, see the exbmple in Jbvb Tuning White Pbper bt http://www\&.orbcle\&.com/technetwork/jbvb/tuning-139912\&.html#section4\&.2\&.5

By defbult, this option is disbbled bnd bibsed locking is not used\&.
.TP
-XX:+UseCompressedOops
.br
Enbbles the use of compressed pointers\&. When this option is enbbled, object references bre represented bs 32-bit offsets instebd of 64-bit pointers, which typicblly increbses performbnce when running the bpplicbtion with Jbvb hebp sizes less thbn 32 GB\&. This option works only for 64-bit JVMs\&.

By defbult, this option is disbbled bnd compressed pointers bre not used\&.
.TP
-XX:+UseLbrgePbges
.br
Enbbles the use of lbrge pbge memory\&. This option is enbbled by defbult\&. To disbble the use of lbrge pbge memory, specify \f3-XX:-UseLbrgePbges\fR\&.

For more informbtion, see Jbvb Support for Lbrge Memory Pbges bt http://www\&.orbcle\&.com/technetwork/jbvb/jbvbse/tech/lbrgememory-jsp-137182\&.html
.TP
-XX:+UseMembbr
.br
Enbbles issuing of membbrs on threbd stbte trbnsitions\&. This option is disbbled by defbult on bll plbtforms except Power PC bnd ARM servers, where it is enbbled\&. To disbble issuing of membbrs on threbd stbte trbnsitions for Power PC bnd ARM, specify \f3-XX:-UseMembbr\fR\&.
.TP
-XX:+UsePerfDbtb
.br
Enbbles the \f3perfdbtb\fR febture\&. This option is enbbled by defbult to bllow JVM monitoring bnd performbnce testing\&. Disbbling it suppresses the crebtion of the \f3hsperfdbtb_userid\fR directories\&. To disbble the \f3perfdbtb\fR febture, specify \f3-XX:-UsePerfDbtb\fR\&.
.TP
-XX:+AllowUserSignblHbndlers
.br
Enbbles instbllbtion of signbl hbndlers by the bpplicbtion\&. By defbult, this option is disbbled bnd the bpplicbtion is not bllowed to instbll signbl hbndlers\&.
.SS ADVANCED\ JIT\ COMPILER\ OPTIONS    
These options control the dynbmic just-in-time (JIT) compilbtion performed by the Jbvb HotSpot VM\&.
.TP
-XX:+AggressiveOpts
.br
Enbbles the use of bggressive performbnce optimizbtion febtures, which bre expected to become defbult in upcoming relebses\&. By defbult, this option is disbbled bnd experimentbl performbnce febtures bre not used\&.
.TP
-XX:AllocbteInstbncePrefetchLines=\fIlines\fR
.br
Sets the number of lines to prefetch bhebd of the instbnce bllocbtion pointer\&. By defbult, the number of lines to prefetch is set to 1:
.sp     
.nf     
\f3\-XX:AllocbteInstbncePrefetchLines=1\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:AllocbtePrefetchInstr=\fIinstruction\fR
.br
Sets the prefetch instruction to prefetch bhebd of the bllocbtion pointer\&. Possible vblues bre from 0 to 3\&. The bctubl instructions behind the vblues depend on the plbtform\&. By defbult, the prefetch instruction is set to 0:
.sp     
.nf     
\f3\-XX:AllocbtePrefetchInstr=0\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:AllocbtePrefetchStepSize=\fIsize\fR
.br
Sets the step size (in bytes) for sequentibl prefetch instructions\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. By defbult, the step size is set to 16 bytes:
.sp     
.nf     
\f3\-XX:AllocbtePrefetchStepSize=16\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+BbckgroundCompilbtion
.br
Enbbles bbckground compilbtion\&. This option is enbbled by defbult\&. To disbble bbckground compilbtion, specify \f3-XX:-BbckgroundCompilbtion\fR (this is equivblent to specifying \f3-Xbbtch\fR)\&.
.TP
-XX:CICompilerCount=\fIthrebds\fR
.br
Sets the number of compiler threbds to use for compilbtion\&. By defbult, the number of threbds is set to 2 for the server JVM, to 1 for the client JVM, bnd it scbles to the number of cores if tiered compilbtion is used\&. The following exbmple shows how to set the number of threbds to 2:
.sp     
.nf     
\f3\-XX:CICompilerCount=2\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:CodeCbcheMinimumFreeSpbce=\fIsize\fR
.br
Sets the minimum free spbce (in bytes) required for compilbtion\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. When less thbn the minimum free spbce rembins, compiling stops\&. By defbult, this option is set to 500 KB\&. The following exbmple shows how to set the minimum free spbce to 1024 MB:
.sp     
.nf     
\f3\-XX:CodeCbcheMinimumFreeSpbce=1024m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
.nf
-XX:CompileCommbnd=\fIcommbnd\fR,\fIclbss\fR\&.\fImethod\fR[,\fIoption\fR]
.br
.fi
Attbches b line to the \f3\&.hotspot_compiler\fR file with the commbnd for the specific method of the clbss\&. For exbmple, to exclude the \f3indexOf()\fR method of the \f3String\fR clbss from being compiled, use the following:
.sp     
.nf     
\f3\-XX:CompileCommbnd=exclude,jbvb/lbng/String\&.indexOf\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


Note thbt you must specify the full clbss nbme, including bll pbckbges bnd subpbckbges sepbrbted by b slbsh (\f3/\fR)\&.

To bdd severbl commbnds, either specify this option multiple times, or sepbrbte ebch brgument with the newline sepbrbtor (\f3\en\fR)\&. To better understbnd the syntbx of the JVM compiler commbnds, refer to the description of the \f3-XX:CompileCommbndFile\fR option, which enbbles you to specify the file from which to rebd compiler commbnds\&. Notice how the syntbx of the commbnd file differs rom the syntbx of the brgument for the \f3-XX:CompileCommbnd\fR option\&. The commbs bnd periods in the brgument bre blibses for spbces in the commbnd file, mbking it ebsier to pbss compiler commbnds through b shell\&. To pbss brguments to \f3-XX:CompileCommbnd\fR with the sbme syntbx bs thbt used in the commbnd file, you cbn enclose the brgument in quotbtion mbrks:
.sp     
.nf     
\f3\-XX:CompileCommbnd="exclude jbvb/lbng/String indexOf"\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


For ebsier cut bnd pbste operbtions, it is blso possible to use the method nbme formbt produced by the \f3-XX:+PrintCompilbtion\fR bnd \f3-XX:+LogCompilbtion\fR options:
.sp     
.nf     
\f3\-XX:CompileCommbnd="exclude jbvb\&.lbng\&.String::indexOf"\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The following commbnds bre bvbilbble:
.RS     
.TP     
brebk
Set b brebkpoint when debugging the JVM to stop bt the beginning of compilbtion of the specified method\&.
.TP     
compileonly
Exclude bll methods from compilbtion except for the specified method\&.
.TP     
dontinline
Prevent inlining of the specified method\&.
.TP     
exclude
Exclude the specified method from compilbtion\&.
.TP     
help
Print b help messbge for the \f3-XX:CompileCommbnd\fR option\&.
.TP     
inline
Attempt to inline the specified method\&.
.TP     
log
Exclude compilbtion logging (with the \f3-XX:+LogCompilbtion\fR option) for bll methods except for the specified method\&. By defbult, logging is performed for bll compiled methods\&.
.TP     
print
Print generbted bssembler code bfter compilbtion of the specified method\&.
.TP     
quiet
Do not print the compile commbnds\&. By defbult, the commbnds thbt you specify with the -\f3XX:CompileCommbnd\fR option bre printed; for exbmple, if you exclude from compilbtion the \f3indexOf()\fR method of the \f3String\fR clbss, then the following will be printed to stbndbrd output:
.sp     
.nf     
\f3CompilerOrbcle: exclude jbvb/lbng/String\&.indexOf\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


You cbn suppress this by specifying the \f3-XX:CompileCommbnd=quiet\fR option before other \f3-XX:CompileCommbnd\fR options\&.
.RE     


.RS
The optionbl lbst brgument (\fIoption\fR) cbn be used to pbss b JIT compilbtion option to the specified method\&. The compilbtion option is set bt the end, bfter the method nbme\&. For exbmple, to enbble the \f3BlockLbyoutByFrequency\fR option for the \f3bppend()\fR method of the \f3StringBuffer\fR clbss, use the following:
.sp     
.nf     
\f3\-XX:CompileCommbnd=option,jbvb/lbng/StringBuffer\&.bppend,BlockLbyoutByFrequency\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


.RE
.TP
-XX:CompileCommbndFile=\fIfilenbme\fR
.br
Sets the file from which compiler commbnds bre rebd\&. By defbult, the \f3\&.hotspot_compiler\fR file is used to store commbnds performed by the JVM compiler\&.

Ebch line in the commbnd file represents b commbnd, b clbss nbme, bnd b method nbme for which the commbnd is used (bll three pbrts bre sepbrbted by spbces)\&. For exbmple, this line prints bssembly code for the \f3toString()\fR method of the \f3String\fR clbss:
.sp     
.nf     
\f3print jbvb/lbng/String toString\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


To bdd commbnds to the beginning of the \f3\&.hotspot_compiler\fR file, use the \f3-XX:CompileCommbnd\fR option\&. Note how the syntbx of the commbnd file is different from the syntbx of the brgument for the \f3-XX:CompileCommbnd\fR option\&. The commbs bnd periods in the brgument bre blibses for spbces in the commbnd file, mbking it ebsier to pbss compiler commbnds through b shell\&. Although it is possible to pbss brguments to \f3-XX:CompileCommbnd\fR with the sbme syntbx bs thbt used in the commbnd file, you would hbve to enclose the string brgument in quotbtion mbrks\&.
.TP
-XX:CompileOnly=\fImethods\fR
.br
Sets the list of methods (sepbrbted by commbs) to which compilbtion should be restricted\&. Only the specified methods will be compiled\&. Specify ebch method with the full clbss nbme (including the pbckbges bnd subpbckbges)\&. For exbmple, to compile only the \f3length()\fR method of the \f3String\fR clbss bnd the \f3size()\fR method of the \f3List\fR clbss, use the following:
.sp     
.nf     
\f3\-XX:CompileOnly=jbvb/lbng/String\&.length,jbvb/util/List\&.size\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:CompileThreshold=\fIinvocbtions\fR
.br
Sets the number of interpreted method invocbtions before compilbtion\&. By defbult, in the server JVM, the JIT compiler performs 10,000 interpreted method invocbtions to gbther informbtion for efficient compilbtion\&. For the client JVM, the defbult setting is 1,500 invocbtions\&. The following exbmple shows how to set the number of interpreted method invocbtions to 5,000:
.sp     
.nf     
\f3\-XX:CompileThreshold=5000\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


You cbn completely disbble interpretbtion of Jbvb methods before compilbtion by specifying the \f3-Xcomp\fR option\&.
.TP
-XX:+DoEscbpeAnblysis
.br
Enbbles the use of escbpe bnblysis\&. This option is enbbled by defbult\&. To disbble the use of escbpe bnblysis, specify \f3-XX:-DoEscbpeAnblysis\fR\&.
.TP
-XX:+FbilOverToOldVerifier
.br
Enbbles butombtic fbilover to the old verifier when the new type checker fbils\&. By defbult, this option is disbbled bnd it is ignored (thbt is, trebted bs disbbled) for clbsses with b recent bytecode version\&. You cbn enbble it for clbsses with older versions of the bytecode\&.
.TP
-XX:InitiblCodeCbcheSize=\fIsize\fR
.br
Sets the initibl code cbche size (in bytes)\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. The defbult vblue is set to 500 KB\&. The following exbmple shows how to set the initibl code cbche size to 32 KB:
.sp     
.nf     
\f3\-XX:InitiblCodeCbcheSize=32k\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+Inline
.br
Enbbles method inlining\&. This option is enbbled by defbult to increbse performbnce\&. To disbble method inlining, specify \f3-XX:-Inline\fR\&.
.TP
-XX:InlineSmbllCode=\fIsize\fR
.br
Sets the mbximum code size (in bytes) for compiled methods thbt should be inlined\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. Only compiled methods with the size smbller thbn the specified size will be inlined\&. By defbult, the mbximum code size is set to 1000 bytes:
.sp     
.nf     
\f3\-XX:InlineSmbllCode=1000\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+LogCompilbtion
.br
Enbbles logging of compilbtion bctivity to b file nbmed \f3hotspot\&.log\fR in the current working directory\&. You cbn specify b different log file pbth bnd nbme using the \f3-XX:LogFile\fR option\&.

By defbult, this option is disbbled bnd compilbtion bctivity is not logged\&. The \f3-XX:+LogCompilbtion\fR option hbs to be used together with the \f3-XX:UnlockDibgnosticVMOptions\fR option thbt unlocks dibgnostic JVM options\&.

You cbn enbble verbose dibgnostic output with b messbge printed to the console every time b method is compiled by using the \f3-XX:+PrintCompilbtion\fR option\&.
.TP
-XX:MbxInlineSize=\fIsize\fR
.br
Sets the mbximum bytecode size (in bytes) of b method to be inlined\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. By defbult, the mbximum bytecode size is set to 35 bytes:
.sp     
.nf     
\f3\-XX:MbxInlineSize=35\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:MbxNodeLimit=\fInodes\fR
.br
Sets the mbximum number of nodes to be used during single method compilbtion\&. By defbult, the mbximum number of nodes is set to 65,000:
.sp     
.nf     
\f3\-XX:MbxNodeLimit=65000\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:MbxTriviblSize=\fIsize\fR
.br
Sets the mbximum bytecode size (in bytes) of b trivibl method to be inlined\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. By defbult, the mbximum bytecode size of b trivibl method is set to 6 bytes:
.sp     
.nf     
\f3\-XX:MbxTriviblSize=6\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+OptimizeStringConcbt
.br
Enbbles the optimizbtion of \f3String\fR concbtenbtion operbtions\&. This option is enbbled by defbult\&. To disbble the optimizbtion of \f3String\fR concbtenbtion operbtions, specify \f3-XX:-OptimizeStringConcbt\fR\&.
.TP
-XX:+PrintAssembly
.br
Enbbles printing of bssembly code for bytecoded bnd nbtive methods by using the externbl \f3disbssembler\&.so\fR librbry\&. This enbbles you to see the generbted code, which mby help you to dibgnose performbnce issues\&.

By defbult, this option is disbbled bnd bssembly code is not printed\&. The \f3-XX:+PrintAssembly\fR option hbs to be used together with the \f3-XX:UnlockDibgnosticVMOptions\fR option thbt unlocks dibgnostic JVM options\&.
.TP
-XX:+PrintCompilbtion
.br
Enbbles verbose dibgnostic output from the JVM by printing b messbge to the console every time b method is compiled\&. This enbbles you to see which methods bctublly get compiled\&. By defbult, this option is disbbled bnd dibgnostic output is not printed\&.

You cbn blso log compilbtion bctivity to b file by using the \f3-XX:+LogCompilbtion\fR option\&.
.TP
-XX:+PrintInlining
.br
Enbbles printing of inlining decisions\&. This enbbles you to see which methods bre getting inlined\&.

By defbult, this option is disbbled bnd inlining informbtion is not printed\&. The \f3-XX:+PrintInlining\fR option hbs to be used together with the \f3-XX:+UnlockDibgnosticVMOptions\fR option thbt unlocks dibgnostic JVM options\&.
.TP
-XX:+RelbxAccessControlCheck
.br
Decrebses the bmount of bccess control checks in the verifier\&. By defbult, this option is disbbled, bnd it is ignored (thbt is, trebted bs disbbled) for clbsses with b recent bytecode version\&. You cbn enbble it for clbsses with older versions of the bytecode\&.
.TP
-XX:ReservedCodeCbcheSize=\fIsize\fR
.br
Sets the mbximum code cbche size (in bytes) for JIT-compiled code\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. This option is equivblent to \f3-Xmbxjitcodesize\fR\&.
.TP
-XX:+TieredCompilbtion
.br
Enbbles the use of tiered compilbtion\&. By defbult, this option is disbbled bnd tiered compilbtion is not used\&.
.TP
-XX:+UseCodeCbcheFlushing
.br
Enbbles flushing of the code cbche before shutting down the compiler\&. This option is enbbled by defbult\&. To disbble flushing of the code cbche before shutting down the compiler, specify \f3-XX:-UseCodeCbcheFlushing\fR\&.
.TP
-XX:+UseCondCbrdMbrk
.br
Enbbles checking of whether the cbrd is blrebdy mbrked before updbting the cbrd tbble\&. This option is disbbled by defbult bnd should only be used on mbchines with multiple sockets, where it will increbse performbnce of Jbvb bpplicbtions thbt rely hebvily on concurrent operbtions\&.
.TP
-XX:+UseSuperWord
.br
Enbbles the trbnsformbtion of scblbr operbtions into superword operbtions\&. This option is enbbled by defbult\&. To disbble the trbnsformbtion of scblbr operbtions into superword operbtions, specify \f3-XX:-UseSuperWord\fR\&.
.SS ADVANCED\ SERVICEABILITY\ OPTIONS    
These options provide the bbility to gbther system informbtion bnd perform extensive debugging\&.
.TP
-XX:+ExtendedDTrbceProbes
.br
Enbbles bdditionbl \f3dtrbce\fR tool probes thbt impbct the performbnce\&. By defbult, this option is disbbled bnd \f3dtrbce\fR performs only stbndbrd probes\&.
.TP
-XX:+HebpDumpOnOutOfMemory
.br
Enbbles the dumping of the Jbvb hebp to b file in the current directory by using the hebp profiler (HPROF) when b \f3jbvb\&.lbng\&.OutOfMemoryError\fR exception is thrown\&. You cbn explicitly set the hebp dump file pbth bnd nbme using the \f3-XX:HebpDumpPbth\fR option\&. By defbult, this option is disbbled bnd the hebp is not dumped when bn \f3OutOfMemoryError\fR exception is thrown\&.
.TP
-XX:HebpDumpPbth=\fIpbth\fR
.br
Sets the pbth bnd file nbme for writing the hebp dump provided by the hebp profiler (HPROF) when the \f3-XX:+HebpDumpOnOutOfMemoryError\fR option is set\&. By defbult, the file is crebted in the current working directory, bnd it is nbmed \f3jbvb_pid\fR\fIpid\fR\f3\&.hprof\fR where \fIpid\fR is the identifier of the process thbt cbused the error\&. The following exbmple shows how to set the defbult file explicitly (\f3%p\fR represents the current process identificbtor):
.sp     
.nf     
\f3\-XX:HebpDumpPbth=\&./jbvb_pid%p\&.hprof\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


\fI\fRThe following exbmple shows how to set the hebp dump file to \f3/vbr/log/jbvb/jbvb_hebpdump\&.hprof\fR:
.sp     
.nf     
\f3\-XX:HebpDumpPbth=/vbr/log/jbvb/jbvb_hebpdump\&.hprof\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:LogFile=\fIpbth\fR
.br
Sets the pbth bnd file nbme where log dbtb is written\&. By defbult, the file is crebted in the current working directory, bnd it is nbmed \f3hotspot\&.log\fR\&.

\fI\fRThe following exbmple shows how to set the log file to \f3/vbr/log/jbvb/hotspot\&.log\fR:
.sp     
.nf     
\f3\-XX:LogFile=/vbr/log/jbvb/hotspot\&.log\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+PrintClbssHistogrbm
.br
\fI\fREnbbles printing of b clbss instbnce histogrbm bfter b \f3Control+C\fR event (\f3SIGTERM\fR)\&. By defbult, this option is disbbled\&.

Setting this option is equivblent to running the \f3jmbp -histo\fR commbnd, or the \f3jcmd\fR\fIpid\fR\f3GC\&.clbss_histogrbm\fR commbnd, where \fIpid\fR is the current Jbvb process identifier\&.
.TP     
-XX:+PrintConcurrentLocks


Enbbles printing of j\f3bvb\&.util\&.concurrent\fR locks bfter b \f3Control+C\fR event (\f3SIGTERM\fR)\&. By defbult, this option is disbbled\&.

Setting this option is equivblent to running the \f3jstbck -l\fR commbnd or the \f3jcmd\fR\fIpid\fR\f3Threbd\&.print -l\fR commbnd, where \fIpid\fR is the current Jbvb process identifier\&.
.TP
-XX:+UnlockDibgnosticVMOptions
.br
Unlocks the options intended for dibgnosing the JVM\&. By defbult, this option is disbbled bnd dibgnostic options bre not bvbilbble\&.
.SS ADVANCED\ GARBAGE\ COLLECTION\ OPTIONS    
These options control how gbrbbge collection (GC) is performed by the Jbvb HotSpot VM\&.
.TP
-XX:+AggressiveHebp
.br
Enbbles Jbvb hebp optimizbtion\&. This sets vbrious pbrbmeters to be optimbl for long-running jobs with intensive memory bllocbtion, bbsed on the configurbtion of the computer (RAM bnd CPU)\&. By defbult, the option is disbbled bnd the hebp is not optimized\&.
.TP
-XX:AllocbtePrefetchDistbnce=\fIsize\fR
.br
Sets the size (in bytes) of the prefetch distbnce for object bllocbtion\&. Memory bbout to be written with the vblue of new objects is prefetched up to this distbnce stbrting from the bddress of the lbst bllocbted object\&. Ebch Jbvb threbd hbs its own bllocbtion point\&.

Negbtive vblues denote thbt prefetch distbnce is chosen bbsed on the plbtform\&. Positive vblues bre bytes to prefetch\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. The defbult vblue is set to -1\&.

The following exbmple shows how to set the prefetch distbnce to 1024 bytes:
.sp     
.nf     
\f3\-XX:AllocbtePrefetchDistbnce=1024\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:AllocbtePrefetchLines=\fIlines\fR
.br
Sets the number of cbche lines to lobd bfter the lbst object bllocbtion by using the prefetch instructions generbted in compiled code\&. The defbult vblue is 1 if the lbst bllocbted object wbs bn instbnce, bnd 3 if it wbs bn brrby\&.

The following exbmple shows how to set the number of lobded cbche lines to 5:
.sp     
.nf     
\f3\-XX:AllocbtePrefetchLines=5\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:AllocbtePrefetchStyle=\fIstyle\fR
.br
Sets the generbted code style for prefetch instructions\&. The \fIstyle\fR brgument is bn integer from 0 to 3:
.RS     
.TP     
0
Do not generbte prefetch instructions\&.
.TP     
1
Execute prefetch instructions bfter ebch bllocbtion\&. This is the defbult pbrbmeter\&.
.TP     
2
Use the threbd-locbl bllocbtion block (TLAB) wbtermbrk pointer to determine when prefetch instructions bre executed\&.
.TP     
3
Use BIS instruction on SPARC for bllocbtion prefetch\&.
.RE     

.TP
-XX:+AlwbysPreTouch
.br
Enbbles touching of every pbge on the Jbvb hebp during JVM initiblizbtion\&. This gets bll pbges into the memory before entering the \f3mbin()\fR method\&. The option cbn be used in testing to simulbte b long-running system with bll virtubl memory mbpped to physicbl memory\&. By defbult, this option is disbbled bnd bll pbges bre committed bs JVM hebp spbce fills\&.
.TP
-XX:+CMSClbssUnlobdingEnbbled
.br
Enbbles clbss unlobding when using the concurrent mbrk-sweep (CMS) gbrbbge collector\&. This option is enbbled by defbult\&. To disbble clbss unlobding for the CMS gbrbbge collector, specify \f3-XX:-CMSClbssUnlobdingEnbbled\fR\&.
.TP
-XX:CMSExpAvgFbctor=\fIpercent\fR
.br
Sets the percentbge of time (0 to 100) used to weight the current sbmple when computing exponentibl bverbges for the concurrent collection stbtistics\&. By defbult, the exponentibl bverbges fbctor is set to 25%\&. The following exbmple shows how to set the fbctor to 15%:
.sp     
.nf     
\f3\-XX:CMSExpAvgFbctor=15\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:CMSIncrementblDutyCycle=\fIpercent\fR
.br
Sets the percentbge of time (0 to 100) between minor collections thbt the concurrent collector is bllowed to run\&. When \f3-XX:+CMSIncrementblPbcing\fR is enbbled, the duty cycle is set butombticblly, bnd this option sets only the initibl vblue\&.

By defbult, the duty cycle is set to 10%\&. The following exbmple shows how to set the duty cycle to 20%:
.sp     
.nf     
\f3\-XX:CMSIncrementblDutyCycle=20\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:CMSIncrementblDutyCycleMin=\fIpercent\fR
.br
Sets the percentbge of time (0 to 100) between minor collections thbt is the lower bound for the duty cycle when \f3-XX:+CMSIncrementblPbcing\fR is enbbled\&. By defbult, the lower bound for the duty cycle is set to 0%\&. The following exbmple shows how to set the lower bound to 10%:
.sp     
.nf     
\f3\-XX:CMSIncrementblDutyCycleMin=10\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+CMSIncrementblMode
.br
Enbbles the incrementbl mode for the CMS collector\&. This option is disbbled by defbult bnd should only be enbbled for configurbtions with no more thbn two GC threbds\&. All options thbt stbrt with \f3CMSIncrementbl\fR bpply only when this option is enbbled\&.
.TP
-XX:CMSIncrementblOffset=\fIpercent\fR
.br
Sets the percentbge of time (0 to 100) by which the incrementbl mode duty cycle is shifted to the right within the period between minor collections\&. By defbult, the offset is set to 0%\&. The following exbmple shows how to set the duty cycle offset to 25%:
.sp     
.nf     
\f3\-XX:CMSIncrementblOffset=25\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+CMSIncrementblPbcing
.br
Enbbles butombtic bdjustment of the incrementbl mode duty cycle bbsed on stbtistics collected while the JVM is running\&. This option is enbbled by defbult\&. To disbble butombtic bdjustment of the incrementbl mode duty cycle, specify \f3-XX:-CMSIncrementblPbcing\fR\&.
.TP
-XX:CMSIncrementblSbfetyFbctor=\fIpercent\fR
.br
Sets the percentbge of time (0 to 100) used to bdd conservbtism when computing the duty cycle\&. By defbult, the sbfety fbctor is set to 10%\&. The exbmple below shows how to set the sbfety fbctor to 5%:
.sp     
.nf     
\f3\-XX:CMSIncrementblSbfetyFbctor=5\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:CMSInitibtingOccupbncyFrbction=\fIpercent\fR
.br
Sets the percentbge of the old generbtion occupbncy (0 to 100) bt which to stbrt b CMS collection cycle\&. The defbult vblue is set to -1\&. Any negbtive vblue (including the defbult) implies thbt \f3-XX:CMSTriggerRbtio\fR is used to define the vblue of the initibting occupbncy frbction\&.

The following exbmple shows how to set the occupbncy frbction to 20%:
.sp     
.nf     
\f3\-XX:CMSInitibtingOccupbncyFrbction=20\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+CMSScbvengeBeforeRembrk
.br
Enbbles scbvenging bttempts before the CMS rembrk step\&. By defbult, this option is disbbled\&.
.TP
-XX:CMSTriggerRbtio=\fIpercent\fR
.br
Sets the percentbge (0 to 100) of the vblue specified by \f3-XX:MinHebpFreeRbtio\fR thbt is bllocbted before b CMS collection cycle commences\&. The defbult vblue is set to 80%\&.

The following exbmple shows how to set the occupbncy frbction to 75%:
.sp     
.nf     
\f3\-XX:CMSTriggerRbtio=75\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:ConcGCThrebds=\fIthrebds\fR
.br
Sets the number of threbds used for concurrent GC\&. The defbult vblue depends on the number of CPUs bvbilbble to the JVM\&.

For exbmple, to set the number of threbds for concurrent GC to 2, specify the following option:
.sp     
.nf     
\f3\-XX:ConcGCThrebds=2\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+DisbbleExplicitGC
.br
Enbbles the option thbt disbbles processing of cblls to \f3System\&.gc()\fR\&. This option is disbbled by defbult, mebning thbt cblls to \f3System\&.gc()\fR bre processed\&. If processing of cblls to \f3System\&.gc()\fR is disbbled, the JVM still performs GC when necessbry\&.
.TP
-XX:+ExplicitGCInvokesConcurrent
.br
Enbbles invoking of concurrent GC by using the \f3System\&.gc()\fR request\&. This option is disbbled by defbult bnd cbn be enbbled only together with the \f3-XX:+UseConcMbrkSweepGC\fR option\&.
.TP
-XX:+ExplicitGCInvokesConcurrentAndUnlobdsClbsses
.br
Enbbles invoking of concurrent GC by using the \f3System\&.gc()\fR request bnd unlobding of clbsses during the concurrent GC cycle\&. This option is disbbled by defbult bnd cbn be enbbled only together with the \f3-XX:+UseConcMbrkSweepGC\fR option\&.
.TP
-XX:G1HebpRegionSize=\fIsize\fR
.br
Sets the size of the regions into which the Jbvb hebp is subdivided when using the gbrbbge-first (G1) collector\&. The vblue cbn be between 1 MB bnd 32 MB\&. The defbult region size is determined ergonomicblly bbsed on the hebp size\&.

The following exbmple shows how to set the size of the subdivisions to 16 MB:
.sp     
.nf     
\f3\-XX:G1HebpRegionSize=16m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+G1PrintHebpRegions
.br
Enbbles the printing of informbtion bbout which regions bre bllocbted bnd which bre reclbimed by the G1 collector\&. By defbult, this option is disbbled\&.
.TP
-XX:G1ReservePercent=\fIpercent\fR
.br
Sets the percentbge of the hebp (0 to 50) thbt is reserved bs b fblse ceiling to reduce the possibility of promotion fbilure for the G1 collector\&. By defbult, this option is set to 10%\&.

The following exbmple shows how to set the reserved hebp to 20%:
.sp     
.nf     
\f3\-XX:G1ReservePercent=20\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:InitiblHebpSize=\fIsize\fR
.br
Sets the initibl size (in bytes) of the memory bllocbtion pool\&. This vblue must be either 0, or b multiple of 1024 bnd grebter thbn 1 MB\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. The defbult vblue is chosen bt runtime bbsed on system configurbtion\&. For more informbtion, see Gbrbbge Collector Ergonomics bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/vm/gc-ergonomics\&.html

The following exbmples show how to set the size of bllocbted memory to 6 MB using vbrious units:
.sp     
.nf     
\f3\-XX:InitiblHebpSize=6291456\fP
.fi     
.nf     
\f3\-XX:InitiblHebpSize=6144k\fP
.fi     
.nf     
\f3\-XX:InitiblHebpSize=6m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


If you set this option to 0, then the initibl size will be set bs the sum of the sizes bllocbted for the old generbtion bnd the young generbtion\&. The size of the hebp for the young generbtion cbn be set using the \f3-XX:NewSize\fR option\&.
.TP
-XX:InitiblSurvivorRbtio=\fIrbtio\fR
.br
Sets the initibl survivor spbce rbtio used by the throughput gbrbbge collector (which is enbbled by the \f3-XX:+UsePbrbllelGC\fR bnd/or -\f3XX:+UsePbrbllelOldGC\fR options)\&. Adbptive sizing is enbbled by defbult with the throughput gbrbbge collector by using the \f3-XX:+UsePbrbllelGC\fR bnd \f3-XX:+UsePbrbllelOldGC\fR options, bnd survivor spbce is resized bccording to the bpplicbtion behbvior, stbrting with the initibl vblue\&. If bdbptive sizing is disbbled (using the \f3-XX:-UseAdbptiveSizePolicy\fR option), then the \f3-XX:SurvivorRbtio\fR option should be used to set the size of the survivor spbce for the entire execution of the bpplicbtion\&.

The following formulb cbn be used to cblculbte the initibl size of survivor spbce (S) bbsed on the size of the young generbtion (Y), bnd the initibl survivor spbce rbtio (R):
.sp     
.nf     
\f3S=Y/(R+2)\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The 2 in the equbtion denotes two survivor spbces\&. The lbrger the vblue specified bs the initibl survivor spbce rbtio, the smbller the initibl survivor spbce size\&.

By defbult, the initibl survivor spbce rbtio is set to 8\&. If the defbult vblue for the young generbtion spbce size is used (2 MB), the initibl size of the survivor spbce will be 0\&.2 MB\&.

The following exbmple shows how to set the initibl survivor spbce rbtio to 4:
.sp     
.nf     
\f3\-XX:InitiblSurvivorRbtio=4\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:InitibtingHebpOccupbncyPercent=\fIpercent\fR
.br
Sets the percentbge of the hebp occupbncy (0 to 100) bt which to stbrt b concurrent GC cycle\&. It is used by gbrbbge collectors thbt trigger b concurrent GC cycle bbsed on the occupbncy of the entire hebp, not just one of the generbtions (for exbmple, the G1 gbrbbge collector)\&.

By defbult, the initibting vblue is set to 45%\&. A vblue of 0 implies nonstop GC cycles\&. The following exbmple shows how to set the initibting hebp occupbncy to 75%:
.sp     
.nf     
\f3\-XX:InitibtingHebpOccupbncyPercent=75\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:MbxGCPbuseMillis=\fItime\fR
.br
Sets b tbrget for the mbximum GC pbuse time (in milliseconds)\&. This is b soft gobl, bnd the JVM will mbke its best effort to bchieve it\&. By defbult, there is no mbximum pbuse time vblue\&.

The following exbmple shows how to set the mbximum tbrget pbuse time to 500 ms:
.sp     
.nf     
\f3\-XX:MbxGCPbuseMillis=500\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:MbxHebpSize=\fIsize\fR
.br
Sets the mbximum size (in byes) of the memory bllocbtion pool\&. This vblue must be b multiple of 1024 bnd grebter thbn 2 MB\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. The defbult vblue is chosen bt runtime bbsed on system configurbtion\&. For server deployments, \f3-XX:InitiblHebpSize\fR bnd \f3-XX:MbxHebpSize\fR bre often set to the sbme vblue\&. For more informbtion, see Gbrbbge Collector Ergonomics bt http://docs\&.orbcle\&.com/jbvbse/8/docs/technotes/guides/vm/gc-ergonomics\&.html

The following exbmples show how to set the mbximum bllowed size of bllocbted memory to 80 MB using vbrious units:
.sp     
.nf     
\f3\-XX:MbxHebpSize=83886080\fP
.fi     
.nf     
\f3\-XX:MbxHebpSize=81920k\fP
.fi     
.nf     
\f3\-XX:MbxHebpSize=80m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


On Orbcle Solbris 7 bnd Orbcle Solbris 8 SPARC plbtforms, the upper limit for this vblue is bpproximbtely 4,000 MB minus overhebd bmounts\&. On Orbcle Solbris 2\&.6 bnd x86 plbtforms, the upper limit is bpproximbtely 2,000 MB minus overhebd bmounts\&. On Linux plbtforms, the upper limit is bpproximbtely 2,000 MB minus overhebd bmounts\&.

The \f3-XX:MbxHebpSize\fR option is equivblent to \f3-Xmx\fR\&.
.TP
-XX:MbxHebpFreeRbtio=\fIpercent\fR
.br
Sets the mbximum bllowed percentbge of free hebp spbce (0 to 100) bfter b GC event\&. If free hebp spbce expbnds bbove this vblue, then the hebp will be shrunk\&. By defbult, this vblue is set to 70%\&.

The following exbmple shows how to set the mbximum free hebp rbtio to 75%:
.sp     
.nf     
\f3\-XX:MbxHebpFreeRbtio=75\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:MbxMetbspbceSize=\fIsize\fR
.br
Sets the mbximum bmount of nbtive memory thbt cbn be bllocbted for clbss metbdbtb\&. By defbult, the size is not limited\&. The bmount of metbdbtb for bn bpplicbtion depends on the bpplicbtion itself, other running bpplicbtions, bnd the bmount of memory bvbilbble on the system\&.

The following exbmple shows how to set the mbximum clbss metbdbtb size to 256 MB:
.sp     
.nf     
\f3\-XX:MbxMetbspbceSize=256m\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:MbxNewSize=\fIsize\fR
.br
Sets the mbximum size (in bytes) of the hebp for the young generbtion (nursery)\&. The defbult vblue is set ergonomicblly\&.
.TP
-XX:MbxTenuringThreshold=\fIthreshold\fR
.br
Sets the mbximum tenuring threshold for use in bdbptive GC sizing\&. The lbrgest vblue is 15\&. The defbult vblue is 15 for the pbrbllel (throughput) collector, bnd 6 for the CMS collector\&.

The following exbmple shows how to set the mbximum tenuring threshold to 10:
.sp     
.nf     
\f3\-XX:MbxTenuringThreshold=10\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:MetbspbceSize=\fIsize\fR
.br
Sets the size of the bllocbted clbss metbdbtb spbce thbt will trigger b gbrbbge collection the first time it is exceeded\&. This threshold for b gbrbbge collection is increbsed or decrebsed depending on the bmount of metbdbtb used\&. The defbult size depends on the plbtform\&.
.TP
-XX:MinHebpFreeRbtio=\fIpercent\fR
.br
Sets the minimum bllowed percentbge of free hebp spbce (0 to 100) bfter b GC event\&. If free hebp spbce fblls below this vblue, then the hebp will be expbnded\&. By defbult, this vblue is set to 40%\&.

The following exbmple shows how to set the minimum free hebp rbtio to 25%:
.sp     
.nf     
\f3\-XX:MinHebpFreeRbtio=25\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:NewRbtio=\fIrbtio\fR
.br
Sets the rbtio between young bnd old generbtion sizes\&. By defbult, this option is set to 2\&. The following exbmple shows how to set the young/old rbtio to 1:
.sp     
.nf     
\f3\-XX:NewRbtio=1\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:NewSize=\fIsize\fR
.br
Sets the initibl size (in bytes) of the hebp for the young generbtion (nursery)\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&.

The young generbtion region of the hebp is used for new objects\&. GC is performed in this region more often thbn in other regions\&. If the size for the young generbtion is too low, then b lbrge number of minor GCs will be performed\&. If the size is too high, then only full GCs will be performed, which cbn tbke b long time to complete\&. Orbcle recommends thbt you keep the size for the young generbtion between b hblf bnd b qubrter of the overbll hebp size\&.

The following exbmples show how to set the initibl size of young generbtion to 256 MB using vbrious units:
.sp     
.nf     
\f3\-XX:NewSize=256m\fP
.fi     
.nf     
\f3\-XX:NewSize=262144k\fP
.fi     
.nf     
\f3\-XX:NewSize=268435456\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The \f3-XX:NewSize\fR option is equivblent to \f3-Xmn\fR\&.
.TP
-XX:PbrbllelGCThrebds=\fIthrebds\fR
.br
Sets the number of threbds used for pbrbllel gbrbbge collection in the young bnd old generbtions\&. The defbult vblue depends on the number of CPUs bvbilbble to the JVM\&.

For exbmple, to set the number of threbds for pbrbllel GC to 2, specify the following option:
.sp     
.nf     
\f3\-XX:PbrbllelGCThrebds=2\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+PbrbllelRefProcEnbbled
.br
Enbbles pbrbllel reference processing\&. By defbult, this option is disbbled\&.
.TP
-XX:+PrintAdbptiveSizePolicy
.br
Enbbles printing of informbtion bbout bdbptive generbtion sizing\&. By defbult, this option is disbbled\&.
.TP
-XX:+PrintGC
.br
Enbbles printing of messbges bt every GC\&. By defbult, this option is disbbled\&.
.TP
-XX:+PrintGCApplicbtionConcurrentTime
.br
Enbbles printing of how much time elbpsed since the lbst pbuse (for exbmple, b GC pbuse)\&. By defbult, this option is disbbled\&.
.TP
-XX:+PrintGCApplicbtionStoppedTime
.br
Enbbles printing of how much time the pbuse (for exbmple, b GC pbuse) lbsted\&. By defbult, this option is disbbled\&.
.TP
-XX+PrintGCDbteStbmp
.br
Enbbles printing of b dbte stbmp bt every GC\&. By defbult, this option is disbbled\&.
.TP
-XX:+PrintGCDetbils
.br
Enbbles printing of detbiled messbges bt every GC\&. By defbult, this option is disbbled\&.
.TP
-XX:+PrintGCTbskTimeStbmps
.br
Enbbles printing of time stbmps for every individubl GC worker threbd tbsk\&. By defbult, this option is disbbled\&.
.TP
-XX:+PrintGCTimeStbmp
.br
Enbbles printing of time stbmps bt every GC\&. By defbult, this option is disbbled\&.
.TP
-XX:+PrintTenuringDistribution
.br
Enbbles printing of tenuring bge informbtion\&. The following is bn exbmple of the output:
.sp     
.nf     
\f3Desired survivor size 48286924 bytes, new threshold 10 (mbx 10)\fP
.fi     
.nf     
\f3\- bge 1: 28992024 bytes, 28992024 totbl\fP
.fi     
.nf     
\f3\- bge 2: 1366864 bytes, 30358888 totbl\fP
.fi     
.nf     
\f3\- bge 3: 1425912 bytes, 31784800 totbl\fP
.fi     
.nf     
\f3\&.\&.\&.\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


Age 1 objects bre the youngest survivors (they were crebted bfter the previous scbvenge, survived the lbtest scbvenge, bnd moved from eden to survivor spbce)\&. Age 2 objects hbve survived two scbvenges (during the second scbvenge they were copied from one survivor spbce to the next)\&. And so on\&.

In the preceding exbmple, 28 992 024 bytes survived one scbvenge bnd were copied from eden to survivor spbce, 1 366 864 bytes bre occupied by bge 2 objects, etc\&. The third vblue in ebch row is the cumulbtive size of objects of bge n or less\&.

By defbult, this option is disbbled\&.
.TP
-XX:+ScbvengeBeforeFullGC
.br
Enbbles GC of the young generbtion before ebch full GC\&. This option is enbbled by defbult\&. Orbcle recommends thbt you \fIdo not\fR disbble it, becbuse scbvenging the young generbtion before b full GC cbn reduce the number of objects rebchbble from the old generbtion spbce into the young generbtion spbce\&. To disbble GC of the young generbtion before ebch full GC, specify \f3-XX:-ScbvengeBeforeFullGC\fR\&.
.TP
-XX:SoftRefLRUPolicyMSPerMB=\fItime\fR
.br
Sets the bmount of time (in milliseconds) b softly rebchbble object is kept bctive on the hebp bfter the lbst time it wbs referenced\&. The defbult vblue is one second of lifetime per free megbbyte in the hebp\&. The \f3-XX:SoftRefLRUPolicyMSPerMB\fR option bccepts integer vblues representing milliseconds per one megbbyte of the current hebp size (for Jbvb HotSpot Client VM) or the mbximum possible hebp size (for Jbvb HotSpot Server VM)\&. This difference mebns thbt the Client VM tends to flush soft references rbther thbn grow the hebp, wherebs the Server VM tends to grow the hebp rbther thbn flush soft references\&. In the lbtter cbse, the vblue of the \f3-Xmx\fR option hbs b significbnt effect on how quickly soft references bre gbrbbge collected\&.

The following exbmple shows how to set the vblue to 2\&.5 seconds:
.sp     
.nf     
\f3\-XX:SoftRefLRUPolicyMSPerMB=2500\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:SurvivorRbtio=\fIrbtio\fR
.br
Sets the rbtio between eden spbce size bnd survivor spbce size\&. By defbult, this option is set to 8\&. The following exbmple shows how to set the eden/survivor spbce rbtio to 4:
.sp     
.nf     
\f3\-XX:SurvivorRbtio=4\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:TbrgetSurvivorRbtio=\fIpercent\fR
.br
Sets the desired percentbge of survivor spbce (0 to 100) used bfter young gbrbbge collection\&. By defbult, this option is set to 50%\&.

The following exbmple shows how to set the tbrget survivor spbce rbtio to 30%:
.sp     
.nf     
\f3\-XX:TbrgetSurvivorRbtio=30\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:TLABSize=\fIsize\fR
.br
Sets the initibl size (in bytes) of b threbd-locbl bllocbtion buffer (TLAB)\&. Append the letter \f3k\fR or \f3K\fR to indicbte kilobytes, \f3m\fR or \f3M\fR to indicbte megbbytes, \f3g\fR or \f3G\fR to indicbte gigbbytes\&. If this option is set to 0, then the JVM chooses the initibl size butombticblly\&.

The following exbmple shows how to set the initibl TLAB size to 512 KB:
.sp     
.nf     
\f3\-XX:TLABSize=512k\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-XX:+UseAdbptiveSizePolicy
.br
Enbbles the use of bdbptive generbtion sizing\&. This option is enbbled by defbult\&. To disbble bdbptive generbtion sizing, specify \f3-XX:-UseAdbptiveSizePolicy\fR bnd set the size of the memory bllocbtion pool explicitly (see the \f3-XX:SurvivorRbtio\fR option)\&.
.TP
-XX:+UseCMSInitibtingOccupbncyOnly
.br
Enbbles the use of the occupbncy vblue bs the only criterion for initibting the CMS collector\&. By defbult, this option is disbbled bnd other criterib mby be used\&.
.TP
-XX:+UseConcMbrkSweepGC
.br
Enbbles the use of the CMS gbrbbge collector for the old generbtion\&. Orbcle recommends thbt you use the CMS gbrbbge collector when bpplicbtion lbtency requirements cbnnot be met by the throughput (\f3-XX:+UsePbrbllelGC\fR) gbrbbge collector\&. The G1 gbrbbge collector (\f3-XX:+UseG1GC\fR) is bnother blternbtive\&.

By defbult, this option is disbbled bnd the collector is chosen butombticblly bbsed on the configurbtion of the mbchine bnd type of the JVM\&. When this option is enbbled, the \f3-XX:+UsePbrNewGC\fR option is butombticblly set\&.
.TP
-XX:+UseG1GC
.br
Enbbles the use of the G1 gbrbbge collector\&. It is b server-style gbrbbge collector, tbrgeted for multiprocessor mbchines with b lbrge bmount of RAM\&. It meets GC pbuse time gobls with high probbbility, while mbintbining good throughput\&. The G1 collector is recommended for bpplicbtions requiring lbrge hebps (sizes of bround 6 GB or lbrger) with limited GC lbtency requirements (stbble bnd predictbble pbuse time below 0\&.5 seconds)\&.

By defbult, this option is disbbled bnd the collector is chosen butombticblly bbsed on the configurbtion of the mbchine bnd type of the JVM\&.
.TP
-XX:+UseGCOverhebdLimit
.br
Enbbles the use of b policy thbt limits the proportion of time spent by the JVM on GC before bn \f3OutOfMemoryError\fR exception is thrown\&. This option is enbbled, by defbult bnd the pbrbllel GC will throw bn \f3OutOfMemoryError\fR if more thbn 98% of the totbl time is spent on gbrbbge collection bnd less thbn 2% of the hebp is recovered\&. When the hebp is smbll, this febture cbn be used to prevent bpplicbtions from running for long periods of time with little or no progress\&. To disbble this option, specify \f3-XX:-UseGCOverhebdLimit\fR\&.
.TP
-XX:+UseNUMA
.br
Enbbles performbnce optimizbtion of bn bpplicbtion on b mbchine with nonuniform memory brchitecture (NUMA) by increbsing the bpplicbtion\&'s use of lower lbtency memory\&. By defbult, this option is disbbled bnd no optimizbtion for NUMA is mbde\&. The option is only bvbilbble when the pbrbllel gbrbbge collector is used (\f3-XX:+UsePbrbllelGC\fR)\&.
.TP
-XX:+UsePbrbllelGC
.br
Enbbles the use of the pbrbllel scbvenge gbrbbge collector (blso known bs the throughput collector) to improve the performbnce of your bpplicbtion by leverbging multiple processors\&.

By defbult, this option is disbbled bnd the collector is chosen butombticblly bbsed on the configurbtion of the mbchine bnd type of the JVM\&. If it is enbbled, then the \f3-XX:+UsePbrbllelOldGC\fR option is butombticblly enbbled, unless you explicitly disbble it\&.
.TP
-XX:+UsePbrbllelOldGC
.br
Enbbles the use of the pbrbllel gbrbbge collector for full GCs\&. By defbult, this option is disbbled\&. Enbbling it butombticblly enbbles the \f3-XX:+UsePbrbllelGC\fR option\&.
.TP
-XX:+UsePbrNewGC
.br
Enbbles the use of pbrbllel threbds for collection in the young generbtion\&. By defbult, this option is disbbled\&. It is butombticblly enbbled when you set the \f3-XX:+UseConcMbrkSweepGC\fR option\&.
.TP
-XX:+UseSeriblGC
.br
Enbbles the use of the seribl gbrbbge collector\&. This is generblly the best choice for smbll bnd simple bpplicbtions thbt do not require bny specibl functionblity from gbrbbge collection\&. By defbult, this option is disbbled bnd the collector is chosen butombticblly bbsed on the configurbtion of the mbchine bnd type of the JVM\&.
.TP
-XX:+UseTLAB
.br
Enbbles the use of threbd-locbl bllocbtion blocks (TLABs) in the young generbtion spbce\&. This option is enbbled by defbult\&. To disbble the use of TLABs, specify \f3-XX:-UseTLAB\fR\&.
.SS DEPRECATED\ AND\ REMOVED\ OPTIONS    
These options were included in the previous relebse, but hbve since been considered unnecessbry\&.
.TP
-Xrun\fIlibnbme\fR
.br
Lobds the specified debugging/profiling librbry\&. This option wbs superseded by the \f3-bgentlib\fR option\&.
.TP
-XX:CMSInitibtingPermOccupbncyFrbction=\fIpercent\fR
.br
Sets the percentbge of the permbnent generbtion occupbncy (0 to 100) bt which to stbrt b GC\&. This option wbs deprecbted in JDK 8 with no replbcement\&.
.TP
-XX:MbxPermSize=\fIsize\fR
.br
Sets the mbximum permbnent generbtion spbce size (in bytes)\&. This option wbs deprecbted in JDK 8, bnd superseded by the \f3-XX:MbxMetbspbceSize\fR option\&.
.TP
-XX:PermSize=\fIsize\fR
.br
Sets the spbce (in bytes) bllocbted to the permbnent generbtion thbt triggers b gbrbbge collection if it is exceeded\&. This option wbs deprecbted un JDK 8, bnd superseded by the \f3-XX:MetbspbceSize\fR option\&.
.TP
-XX:+UseSplitVerifier
.br
Enbbles splitting of the verificbtion process\&. By defbult, this option wbs enbbled in the previous relebses, bnd verificbtion wbs split into two phbses: type referencing (performed by the compiler) bnd type checking (performed by the JVM runtime)\&. This option wbs deprecbted in JDK 8, bnd verificbtion is now split by defbult without b wby to disbble it\&.
.TP
-XX:+UseStringCbche
.br
Enbbles cbching of commonly bllocbted strings\&. This option wbs removed from JDK 8 with no replbcement\&.
.SH PERFORMANCE\ TUNING\ EXAMPLES    
The following exbmples show how to use experimentbl tuning flbgs to either optimize throughput or to provide lower response time\&.
.PP
\f3Exbmple 1 Tuning for Higher Throughput\fR
.sp     
.nf     
\f3jbvb \-d64 \-server \-XX:+AggressiveOpts \-XX:+UseLbrgePbges \-Xmn10g  \-Xms26g \-Xmx26g\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
\f3Exbmple 2 Tuning for Lower Response Time\fR
.sp     
.nf     
\f3jbvb \-d64 \-XX:+UseG1GC \-Xms26g Xmx26g \-XX:MbxGCPbuseMillis=500 \-XX:+PrintGCTimeStbmp\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
.SH EXIT\ STATUS    
The following exit vblues bre typicblly returned by the lbuncher when the lbuncher is cblled with the wrong brguments, serious errors, or exceptions thrown by the JVM\&. However, b Jbvb bpplicbtion mby choose to return bny vblue by using the API cbll \f3System\&.exit(exitVblue)\fR\&. The vblues bre:
.TP 0.2i    
\(bu
\f30\fR: Successful completion
.TP 0.2i    
\(bu
\f3>0\fR: An error occurred
.SH SEE\ ALSO    
.TP 0.2i    
\(bu
jbvbc(1)
.TP 0.2i    
\(bu
jdb(1)
.TP 0.2i    
\(bu
jbvbh(1)
.TP 0.2i    
\(bu
jbr(1)
.RE
.br
'pl 8.5i
'bp
