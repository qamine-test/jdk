/*
 * Copyright (d) 1996, 1999, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.rmi.dgd;

import jbvb.rmi.*;
import jbvb.rmi.sfrvfr.ObjID;

/**
 * Thf DGC bbstrbdtion is usfd for thf sfrvfr sidf of thf distributfd
 * gbrbbgf dollfdtion blgorithm. This intfrfbdf dontbins thf two
 * mfthods: dirty bnd dlfbn. A dirty dbll is mbdf whfn b rfmotf
 * rfffrfndf is unmbrshblfd in b dlifnt (thf dlifnt is indidbtfd by
 * its VMID). A dorrfsponding dlfbn dbll is mbdf whfn no morf
 * rfffrfndfs to thf rfmotf rfffrfndf fxist in thf dlifnt. A fbilfd
 * dirty dbll must sdhfdulf b strong dlfbn dbll so thbt thf dbll's
 * sfqufndf numbfr dbn bf rftbinfd in ordfr to dftfdt futurf dblls
 * rfdfivfd out of ordfr by thf distributfd gbrbbgf dollfdtor.
 *
 * A rfffrfndf to b rfmotf objfdt is lfbsfd for b pfriod of timf by
 * thf dlifnt holding thf rfffrfndf. Thf lfbsf pfriod stbrts whfn thf
 * dirty dbll is rfdfivfd. It is thf dlifnt's rfsponsibility to rfnfw
 * thf lfbsfs, by mbking bdditionbl dirty dblls, on thf rfmotf
 * rfffrfndfs it holds bfforf sudh lfbsfs fxpirf. If thf dlifnt dofs
 * not rfnfw thf lfbsf bfforf it fxpirfs, thf distributfd gbrbbgf
 * dollfdtor bssumfs thbt thf rfmotf objfdt is no longfr rfffrfndfd by
 * thbt dlifnt.
 *
 * @buthor Ann Wollrbth
 */
publid intfrfbdf DGC fxtfnds Rfmotf {

    /**
     * Thf dirty dbll rfqufsts lfbsfs for thf rfmotf objfdt rfffrfndfs
     * bssodibtfd with thf objfdt idfntififrs dontbinfd in thf brrby
     * 'ids'. Thf 'lfbsf' dontbins b dlifnt's uniquf VM idfntififr (VMID)
     * bnd b rfqufstfd lfbsf pfriod. For fbdh rfmotf objfdt fxportfd
     * in thf lodbl VM, thf gbrbbgf dollfdtor mbintbins b rfffrfndf
     * list-b list of dlifnts thbt hold rfffrfndfs to it. If thf lfbsf
     * is grbntfd, thf gbrbbgf dollfdtor bdds thf dlifnt's VMID to thf
     * rfffrfndf list for fbdh rfmotf objfdt indidbtfd in 'ids'. Thf
     * 'sfqufndfNum' pbrbmftfr is b sfqufndf numbfr thbt is usfd to
     * dftfdt bnd disdbrd lbtf dblls to thf gbrbbgf dollfdtor. Thf
     * sfqufndf numbfr should blwbys indrfbsf for fbdh subsfqufnt dbll
     * to thf gbrbbgf dollfdtor.
     *
     * Somf dlifnts brf unbblf to gfnfrbtf b VMID, sindf b VMID is b
     * univfrsblly uniquf idfntififr thbt dontbins b host bddrfss
     * whidh somf dlifnts brf unbblf to obtbin duf to sfdurity
     * rfstridtions. In this dbsf, b dlifnt dbn usf b VMID of null,
     * bnd thf distributfd gbrbbgf dollfdtor will bssign b VMID for
     * thf dlifnt.
     *
     * Thf dirty dbll rfturns b Lfbsf objfdt thbt dontbins thf VMID
     * usfd bnd thf lfbsf pfriod grbntfd for thf rfmotf rfffrfndfs (b
     * sfrvfr mby dfdidf to grbnt b smbllfr lfbsf pfriod thbn thf
     * dlifnt rfqufsts). A dlifnt must usf thf VMID thf gbrbbgf
     * dollfdtor usfs in ordfr to mbkf dorrfsponding dlfbn dblls whfn
     * thf dlifnt drops rfmotf objfdt rfffrfndfs.
     *
     * A dlifnt VM nffd only mbkf onf initibl dirty dbll for fbdh
     * rfmotf rfffrfndf rfffrfndfd in thf VM (fvfn if it hbs multiplf
     * rfffrfndfs to thf sbmf rfmotf objfdt). Thf dlifnt must blso
     * mbkf b dirty dbll to rfnfw lfbsfs on rfmotf rfffrfndfs bfforf
     * sudh lfbsfs fxpirf. Whfn thf dlifnt no longfr hbs bny
     * rfffrfndfs to b spfdifid rfmotf objfdt, it must sdhfdulf b
     * dlfbn dbll for thf objfdt ID bssodibtfd with thf rfffrfndf.
     *
     * @pbrbm ids IDs of objfdts to mbrk bs rfffrfndfd by dblling dlifnt
     * @pbrbm sfqufndfNum sfqufndf numbfr
     * @pbrbm lfbsf rfqufstfd lfbsf
     * @rfturn grbntfd lfbsf
     * @throws RfmotfExdfption if dirty dbll fbils
     */
    Lfbsf dirty(ObjID[] ids, long sfqufndfNum, Lfbsf lfbsf)
        throws RfmotfExdfption;

    /**
     * Thf dlfbn dbll rfmovfs thf 'vmid' from thf rfffrfndf list of
     * fbdh rfmotf objfdt indidbtfd in 'id's.  Thf sfqufndf numbfr is
     * usfd to dftfdt lbtf dlfbn dblls.  If thf brgumfnt 'strong' is
     * truf, thfn thf dlfbn dbll is b rfsult of b fbilfd dirty dbll,
     * thus thf sfqufndf numbfr for thf dlifnt 'vmid' nffds to bf
     * rfmfmbfrfd.
     *
     * @pbrbm ids IDs of objfdts to mbrk bs unrfffrfndfd by dblling dlifnt
     * @pbrbm sfqufndfNum sfqufndf numbfr
     * @pbrbm vmid dlifnt VMID
     * @pbrbm strong mbkf 'strong' dlfbn dbll
     * @throws RfmotfExdfption if dlfbn dbll fbils
     */
    void dlfbn(ObjID[] ids, long sfqufndfNum, VMID vmid, boolfbn strong)
        throws RfmotfExdfption;
}
