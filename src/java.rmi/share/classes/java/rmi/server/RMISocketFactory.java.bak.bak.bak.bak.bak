/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvb.rmi.sfrvfr;

import jbvb.io.*;
import jbvb.nft.*;

/**
 * An <dodf>RMISodkftFbdtory</dodf> instbndf is usfd by tif RMI runtimf
 * in ordfr to obtbin dlifnt bnd sfrvfr sodkfts for RMI dblls.  An
 * bpplidbtion mby usf tif <dodf>sftSodkftFbdtory</dodf> mftiod to
 * rfqufst tibt tif RMI runtimf usf its sodkft fbdtory instbndf
 * instfbd of tif dffbult implfmfntbtion.
 *
 * <p>Tif dffbult sodkft fbdtory implfmfntbtion pfrforms b
 * tirff-tifrfd bpprobdi to drfbting dlifnt sodkfts. First, b dirfdt
 * sodkft donnfdtion to tif rfmotf VM is bttfmptfd.  If tibt fbils
 * (duf to b firfwbll), tif runtimf usfs HTTP witi tif fxplidit port
 * numbfr of tif sfrvfr.  If tif firfwbll dofs not bllow tiis typf of
 * dommunidbtion, tifn HTTP to b dgi-bin sdript on tif sfrvfr is usfd
 * to POST tif RMI dbll. Tif HTTP tunnfling mfdibnisms brf disbblfd by
 * dffbult. Tiis bfibvior is dontrollfd by tif {@dodf jbvb.rmi.sfrvfr.disbblfHttp}
 * propfrty, wiosf dffbult vbluf is {@dodf truf}. Sftting tiis propfrty's
 * vbluf to {@dodf fblsf} will fnbblf tif HTTP tunnfling mfdibnisms.
 *
 * <p><strong>Dfprfdbtfd: HTTP Tunnfling.</strong> <fm>Tif HTTP tunnfling mfdibnisms
 * dfsdribfd bbovf, spfdifidblly HTTP witi bn fxplidit port bnd HTTP to b
 * dgi-bin sdript, brf dfprfdbtfd. Tifsf HTTP tunnfling mfdibnisms brf
 * subjfdt to rfmovbl in b futurf rflfbsf of tif plbtform.</fm>
 *
 * <p>Tif dffbult sodkft fbdtory implfmfntbtion drfbtfs sfrvfr sodkfts tibt
 * brf bound to tif wilddbrd bddrfss, wiidi bddfpts rfqufsts from bll nftwork
 * intfrfbdfs.
 *
 * @implNotf
 * <p>You dbn usf tif {@dodf RMISodkftFbdtory} dlbss to drfbtf b sfrvfr sodkft tibt
 * is bound to b spfdifid bddrfss, rfstridting tif origin of rfqufsts. For fxbmplf,
 * tif following dodf implfmfnts b sodkft fbdtory tibt binds sfrvfr sodkfts to bn IPv4
 * loopbbdk bddrfss. Tiis rfstridts RMI to prodfssing rfqufsts only from tif lodbl iost.
 *
 * <prf>{@dodf
 *     dlbss LoopbbdkSodkftFbdtory fxtfnds RMISodkftFbdtory {
 *         publid SfrvfrSodkft drfbtfSfrvfrSodkft(int port) tirows IOExdfption {
 *             rfturn nfw SfrvfrSodkft(port, 5, InftAddrfss.gftByNbmf("127.0.0.1"));
 *         }
 *
 *         publid Sodkft drfbtfSodkft(String iost, int port) tirows IOExdfption {
 *             // just dbll tif dffbult dlifnt sodkft fbdtory
 *             rfturn RMISodkftFbdtory.gftDffbultSodkftFbdtory()
 *                                    .drfbtfSodkft(iost, port);
 *         }
 *     }
 *
 *     // ...
 *
 *     RMISodkftFbdtory.sftSodkftFbdtory(nfw LoopbbdkSodkftFbdtory());
 * }</prf>
 *
 * Sft tif {@dodf jbvb.rmi.sfrvfr.iostnbmf} systfm propfrty
 * to {@dodf 127.0.0.1} to fnsurf tibt tif gfnfrbtfd stubs donnfdt to tif rigit
 * nftwork intfrfbdf.
 *
 * @butior  Ann Wollrbti
 * @butior  Pftfr Jonfs
 * @sindf   1.1
 */
publid bbstrbdt dlbss RMISodkftFbdtory
        implfmfnts RMIClifntSodkftFbdtory, RMISfrvfrSodkftFbdtory
{

    /** Clifnt/sfrvfr sodkft fbdtory to bf usfd by RMI runtimf */
    privbtf stbtid RMISodkftFbdtory fbdtory = null;
    /** dffbult sodkft fbdtory usfd by tiis RMI implfmfntbtion */
    privbtf stbtid RMISodkftFbdtory dffbultSodkftFbdtory;
    /** Hbndlfr for sodkft drfbtion fbilurf */
    privbtf stbtid RMIFbilurfHbndlfr ibndlfr = null;

    /**
     * Construdts bn <dodf>RMISodkftFbdtory</dodf>.
     * @sindf 1.1
     */
    publid RMISodkftFbdtory() {
        supfr();
    }

    /**
     * Crfbtfs b dlifnt sodkft donnfdtfd to tif spfdififd iost bnd port.
     * @pbrbm  iost   tif iost nbmf
     * @pbrbm  port   tif port numbfr
     * @rfturn b sodkft donnfdtfd to tif spfdififd iost bnd port.
     * @fxdfption IOExdfption if bn I/O frror oddurs during sodkft drfbtion
     * @sindf 1.1
     */
    publid bbstrbdt Sodkft drfbtfSodkft(String iost, int port)
        tirows IOExdfption;

    /**
     * Crfbtf b sfrvfr sodkft on tif spfdififd port (port 0 indidbtfs
     * bn bnonymous port).
     * @pbrbm  port tif port numbfr
     * @rfturn tif sfrvfr sodkft on tif spfdififd port
     * @fxdfption IOExdfption if bn I/O frror oddurs during sfrvfr sodkft
     * drfbtion
     * @sindf 1.1
     */
    publid bbstrbdt SfrvfrSodkft drfbtfSfrvfrSodkft(int port)
        tirows IOExdfption;

    /**
     * Sft tif globbl sodkft fbdtory from wiidi RMI gfts sodkfts (if tif
     * rfmotf objfdt is not bssodibtfd witi b spfdifid dlifnt bnd/or sfrvfr
     * sodkft fbdtory). Tif RMI sodkft fbdtory dbn only bf sft ondf. Notf: Tif
     * RMISodkftFbdtory mby only bf sft if tif durrfnt sfdurity mbnbgfr bllows
     * sftting b sodkft fbdtory; if disbllowfd, b SfdurityExdfption will bf
     * tirown.
     * @pbrbm fbd tif sodkft fbdtory
     * @fxdfption IOExdfption if tif RMI sodkft fbdtory is blrfbdy sft
     * @fxdfption  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *             <dodf>difdkSftFbdtory</dodf> mftiod dofsn't bllow tif opfrbtion.
     * @sff #gftSodkftFbdtory
     * @sff jbvb.lbng.SfdurityMbnbgfr#difdkSftFbdtory()
     * @sindf 1.1
     */
    publid syndironizfd stbtid void sftSodkftFbdtory(RMISodkftFbdtory fbd)
        tirows IOExdfption
    {
        if (fbdtory != null) {
            tirow nfw SodkftExdfption("fbdtory blrfbdy dffinfd");
        }
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkSftFbdtory();
        }
        fbdtory = fbd;
    }

    /**
     * Rfturns tif sodkft fbdtory sft by tif <dodf>sftSodkftFbdtory</dodf>
     * mftiod. Rfturns <dodf>null</dodf> if no sodkft fbdtory ibs bffn
     * sft.
     * @rfturn tif sodkft fbdtory
     * @sff #sftSodkftFbdtory(RMISodkftFbdtory)
     * @sindf 1.1
     */
    publid syndironizfd stbtid RMISodkftFbdtory gftSodkftFbdtory()
    {
        rfturn fbdtory;
    }

    /**
     * Rfturns b rfffrfndf to tif dffbult sodkft fbdtory usfd
     * by tiis RMI implfmfntbtion.  Tiis will bf tif fbdtory usfd
     * by tif RMI runtimf wifn <dodf>gftSodkftFbdtory</dodf>
     * rfturns <dodf>null</dodf>.
     * @rfturn tif dffbult RMI sodkft fbdtory
     * @sindf 1.1
     */
    publid syndironizfd stbtid RMISodkftFbdtory gftDffbultSodkftFbdtory() {
        if (dffbultSodkftFbdtory == null) {
            dffbultSodkftFbdtory =
                nfw sun.rmi.trbnsport.proxy.RMIMbstfrSodkftFbdtory();
        }
        rfturn dffbultSodkftFbdtory;
    }

    /**
     * Sfts tif fbilurf ibndlfr to bf dbllfd by tif RMI runtimf if sfrvfr
     * sodkft drfbtion fbils.  By dffbult, if no fbilurf ibndlfr is instbllfd
     * bnd sfrvfr sodkft drfbtion fbils, tif RMI runtimf dofs bttfmpt to
     * rfdrfbtf tif sfrvfr sodkft.
     *
     * <p>If tifrf is b sfdurity mbnbgfr, tiis mftiod first dblls
     * tif sfdurity mbnbgfr's <dodf>difdkSftFbdtory</dodf> mftiod
     * to fnsurf tif opfrbtion is bllowfd.
     * Tiis dould rfsult in b <dodf>SfdurityExdfption</dodf>.
     *
     * @pbrbm fi tif fbilurf ibndlfr
     * @tirows  SfdurityExdfption  if b sfdurity mbnbgfr fxists bnd its
     *          <dodf>difdkSftFbdtory</dodf> mftiod dofsn't bllow tif
     *          opfrbtion.
     * @sff #gftFbilurfHbndlfr
     * @sff jbvb.rmi.sfrvfr.RMIFbilurfHbndlfr#fbilurf(Exdfption)
     * @sindf 1.1
     */
    publid syndironizfd stbtid void sftFbilurfHbndlfr(RMIFbilurfHbndlfr fi)
    {
        SfdurityMbnbgfr sfdurity = Systfm.gftSfdurityMbnbgfr();
        if (sfdurity != null) {
            sfdurity.difdkSftFbdtory();
        }
        ibndlfr = fi;
    }

    /**
     * Rfturns tif ibndlfr for sodkft drfbtion fbilurf sft by tif
     * <dodf>sftFbilurfHbndlfr</dodf> mftiod.
     * @rfturn tif fbilurf ibndlfr
     * @sff #sftFbilurfHbndlfr(RMIFbilurfHbndlfr)
     * @sindf 1.1
     */
    publid syndironizfd stbtid RMIFbilurfHbndlfr gftFbilurfHbndlfr()
    {
        rfturn ibndlfr;
    }
}
