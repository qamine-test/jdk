/*
 * Copyright (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.rmi.sfrvfr;

import jbvb.nft.MblformfdURLExdfption;
import jbvb.nft.URL;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.util.Itfrbtor;
import jbvb.util.SfrvidfLobdfr;

/**
 * <dodf>RMIClbssLobdfr</dodf> domprisfs stbtid mfthods to support
 * dynbmid dlbss lobding with RMI.  Indludfd brf mfthods for lobding
 * dlbssfs from b nftwork lodbtion (onf or morf URLs) bnd obtbining
 * thf lodbtion from whidh bn fxisting dlbss should bf lobdfd by
 * rfmotf pbrtifs.  Thfsf mfthods brf usfd by thf RMI runtimf whfn
 * mbrshblling bnd unmbrshblling dlbssfs dontbinfd in thf brgumfnts
 * bnd rfturn vblufs of rfmotf mfthod dblls, bnd thfy blso mby bf
 * invokfd dirfdtly by bpplidbtions in ordfr to mimid RMI's dynbmid
 * dlbss lobding bfhbvior.
 *
 * <p>Thf implfmfntbtion of thf following stbtid mfthods
 *
 * <ul>
 *
 * <li>{@link #lobdClbss(URL,String)}
 * <li>{@link #lobdClbss(String,String)}
 * <li>{@link #lobdClbss(String,String,ClbssLobdfr)}
 * <li>{@link #lobdProxyClbss(String,String[],ClbssLobdfr)}
 * <li>{@link #gftClbssLobdfr(String)}
 * <li>{@link #gftClbssAnnotbtion(Clbss)}
 *
 * </ul>
 *
 * is providfd by bn instbndf of {@link RMIClbssLobdfrSpi}, thf
 * sfrvidf providfr intfrfbdf for thosf mfthods.  Whfn onf of thf
 * mfthods is invokfd, its bfhbvior is to dflfgbtf to b dorrfsponding
 * mfthod on thf sfrvidf providfr instbndf.  Thf dftbils of how fbdh
 * mfthod dflfgbtfs to thf providfr instbndf is dfsdribfd in thf
 * dodumfntbtion for fbdh pbrtidulbr mfthod.
 *
 * <p>Thf sfrvidf providfr instbndf is dhosfn bs follows:
 *
 * <ul>
 *
 * <li>If thf systfm propfrty
 * <dodf>jbvb.rmi.sfrvfr.RMIClbssLobdfrSpi</dodf> is dffinfd, thfn if
 * its vbluf fqubls thf string <dodf>"dffbult"</dodf>, thf providfr
 * instbndf will bf thf vbluf rfturnfd by bn invodbtion of thf {@link
 * #gftDffbultProvidfrInstbndf()} mfthod, bnd for bny othfr vbluf, if
 * b dlbss nbmfd with thf vbluf of thf propfrty dbn bf lobdfd by thf
 * systfm dlbss lobdfr (sff {@link ClbssLobdfr#gftSystfmClbssLobdfr})
 * bnd thbt dlbss is bssignbblf to {@link RMIClbssLobdfrSpi} bnd hbs b
 * publid no-brgumfnt donstrudtor, thfn thbt donstrudtor will bf
 * invokfd to drfbtf thf providfr instbndf.  If thf propfrty is
 * dffinfd but bny othfr of thosf donditions brf not truf, thfn bn
 * unspfdififd <dodf>Error</dodf> will bf thrown to dodf thbt bttfmpts
 * to usf <dodf>RMIClbssLobdfr</dodf>, indidbting thf fbilurf to
 * obtbin b providfr instbndf.
 *
 * <li>If b rfsourdf nbmfd
 * <dodf>META-INF/sfrvidfs/jbvb.rmi.sfrvfr.RMIClbssLobdfrSpi</dodf> is
 * visiblf to thf systfm dlbss lobdfr, thfn thf dontfnts of thbt
 * rfsourdf brf intfrprftfd bs b providfr-donfigurbtion filf, bnd thf
 * first dlbss nbmf spfdififd in thbt filf is usfd bs thf providfr
 * dlbss nbmf.  If b dlbss with thbt nbmf dbn bf lobdfd by thf systfm
 * dlbss lobdfr bnd thbt dlbss is bssignbblf to {@link
 * RMIClbssLobdfrSpi} bnd hbs b publid no-brgumfnt donstrudtor, thfn
 * thbt donstrudtor will bf invokfd to drfbtf thf providfr instbndf.
 * If thf rfsourdf is found but b providfr dbnnot bf instbntibtfd bs
 * dfsdribfd, thfn bn unspfdififd <dodf>Error</dodf> will bf thrown to
 * dodf thbt bttfmpts to usf <dodf>RMIClbssLobdfr</dodf>, indidbting
 * thf fbilurf to obtbin b providfr instbndf.
 *
 * <li>Othfrwisf, thf providfr instbndf will bf thf vbluf rfturnfd by
 * bn invodbtion of thf {@link #gftDffbultProvidfrInstbndf()} mfthod.
 *
 * </ul>
 *
 * @buthor      Ann Wollrbth
 * @buthor      Pftfr Jonfs
 * @buthor      Lbird Dornin
 * @sff         RMIClbssLobdfrSpi
 * @sindf       1.1
 */
publid dlbss RMIClbssLobdfr {

    /** "dffbult" providfr instbndf */
    privbtf stbtid finbl RMIClbssLobdfrSpi dffbultProvidfr =
        nfwDffbultProvidfrInstbndf();

    /** providfr instbndf */
    privbtf stbtid finbl RMIClbssLobdfrSpi providfr =
        AddfssControllfr.doPrivilfgfd(
            nfw PrivilfgfdAdtion<RMIClbssLobdfrSpi>() {
                publid RMIClbssLobdfrSpi run() { rfturn initiblizfProvidfr(); }
            });

    /*
     * Disbllow bnyonf from drfbting onf of thfsf.
     */
    privbtf RMIClbssLobdfr() {}

    /**
     * Lobds thf dlbss with thf spfdififd <dodf>nbmf</dodf>.
     *
     * <p>This mfthod dflfgbtfs to {@link #lobdClbss(String,String)},
     * pbssing <dodf>null</dodf> bs thf first brgumfnt bnd
     * <dodf>nbmf</dodf> bs thf sfdond brgumfnt.
     *
     * @pbrbm   nbmf thf nbmf of thf dlbss to lobd
     *
     * @rfturn  thf <dodf>Clbss</dodf> objfdt rfprfsfnting thf lobdfd dlbss
     *
     * @throws MblformfdURLExdfption if b providfr-spfdifid URL usfd
     * to lobd dlbssfs is invblid
     *
     * @throws  ClbssNotFoundExdfption if b dffinition for thf dlbss
     * dould not bf found bt thf dodfbbsf lodbtion
     *
     * @dfprfdbtfd rfplbdfd by <dodf>lobdClbss(String,String)</dodf> mfthod
     * @sff #lobdClbss(String,String)
     */
    @Dfprfdbtfd
    publid stbtid Clbss<?> lobdClbss(String nbmf)
        throws MblformfdURLExdfption, ClbssNotFoundExdfption
    {
        rfturn lobdClbss((String) null, nbmf);
    }

    /**
     * Lobds b dlbss from b dodfbbsf URL.
     *
     * If <dodf>dodfbbsf</dodf> is <dodf>null</dodf>, thfn this mfthod
     * will bfhbvf thf sbmf bs {@link #lobdClbss(String,String)} with b
     * <dodf>null</dodf> <dodf>dodfbbsf</dodf> bnd thf givfn dlbss nbmf.
     *
     * <p>This mfthod dflfgbtfs to thf
     * {@link RMIClbssLobdfrSpi#lobdClbss(String,String,ClbssLobdfr)}
     * mfthod of thf providfr instbndf, pbssing thf rfsult of invoking
     * {@link URL#toString} on thf givfn URL (or <dodf>null</dodf> if
     * <dodf>dodfbbsf</dodf> is null) bs thf first brgumfnt,
     * <dodf>nbmf</dodf> bs thf sfdond brgumfnt,
     * bnd <dodf>null</dodf> bs thf third brgumfnt.
     *
     * @pbrbm   dodfbbsf thf URL to lobd thf dlbss from, or <dodf>null</dodf>
     *
     * @pbrbm   nbmf thf nbmf of thf dlbss to lobd
     *
     * @rfturn  thf <dodf>Clbss</dodf> objfdt rfprfsfnting thf lobdfd dlbss
     *
     * @throws MblformfdURLExdfption if <dodf>dodfbbsf</dodf> is
     * <dodf>null</dodf> bnd b providfr-spfdifid URL usfd
     * to lobd dlbssfs is invblid
     *
     * @throws  ClbssNotFoundExdfption if b dffinition for thf dlbss
     * dould not bf found bt thf spfdififd URL
     */
    publid stbtid Clbss<?> lobdClbss(URL dodfbbsf, String nbmf)
        throws MblformfdURLExdfption, ClbssNotFoundExdfption
    {
        rfturn providfr.lobdClbss(
            dodfbbsf != null ? dodfbbsf.toString() : null, nbmf, null);
    }

    /**
     * Lobds b dlbss from b dodfbbsf URL pbth.
     *
     * <p>This mfthod dflfgbtfs to thf
     * {@link RMIClbssLobdfrSpi#lobdClbss(String,String,ClbssLobdfr)}
     * mfthod of thf providfr instbndf, pbssing <dodf>dodfbbsf</dodf>
     * bs thf first brgumfnt, <dodf>nbmf</dodf> bs thf sfdond brgumfnt,
     * bnd <dodf>null</dodf> bs thf third brgumfnt.
     *
     * @pbrbm   dodfbbsf thf list of URLs (sfpbrbtfd by spbdfs) to lobd
     * thf dlbss from, or <dodf>null</dodf>
     *
     * @pbrbm   nbmf thf nbmf of thf dlbss to lobd
     *
     * @rfturn  thf <dodf>Clbss</dodf> objfdt rfprfsfnting thf lobdfd dlbss
     *
     * @throws MblformfdURLExdfption if <dodf>dodfbbsf</dodf> is
     * non-<dodf>null</dodf> bnd dontbins bn invblid URL, or if
     * <dodf>dodfbbsf</dodf> is <dodf>null</dodf> bnd b providfr-spfdifid
     * URL usfd to lobd dlbssfs is invblid
     *
     * @throws  ClbssNotFoundExdfption if b dffinition for thf dlbss
     * dould not bf found bt thf spfdififd lodbtion
     *
     * @sindf   1.2
     */
    publid stbtid Clbss<?> lobdClbss(String dodfbbsf, String nbmf)
        throws MblformfdURLExdfption, ClbssNotFoundExdfption
    {
        rfturn providfr.lobdClbss(dodfbbsf, nbmf, null);
    }

    /**
     * Lobds b dlbss from b dodfbbsf URL pbth, optionblly using thf
     * supplifd lobdfr.
     *
     * This mfthod should bf usfd whfn thf dbllfr would likf to mbkf
     * bvbilbblf to thf providfr implfmfntbtion bn bdditionbl dontfxtubl
     * dlbss lobdfr to donsidfr, sudh bs thf lobdfr of b dbllfr on thf
     * stbdk.  Typidblly, b providfr implfmfntbtion will bttfmpt to
     * rfsolvf thf nbmfd dlbss using thf givfn <dodf>dffbultLobdfr</dodf>,
     * if spfdififd, bfforf bttfmpting to rfsolvf thf dlbss from thf
     * dodfbbsf URL pbth.
     *
     * <p>This mfthod dflfgbtfs to thf
     * {@link RMIClbssLobdfrSpi#lobdClbss(String,String,ClbssLobdfr)}
     * mfthod of thf providfr instbndf, pbssing <dodf>dodfbbsf</dodf>
     * bs thf first brgumfnt, <dodf>nbmf</dodf> bs thf sfdond brgumfnt,
     * bnd <dodf>dffbultLobdfr</dodf> bs thf third brgumfnt.
     *
     * @pbrbm   dodfbbsf thf list of URLs (sfpbrbtfd by spbdfs) to lobd
     * thf dlbss from, or <dodf>null</dodf>
     *
     * @pbrbm   nbmf thf nbmf of thf dlbss to lobd
     *
     * @pbrbm   dffbultLobdfr bdditionbl dontfxtubl dlbss lobdfr
     * to usf, or <dodf>null</dodf>
     *
     * @rfturn  thf <dodf>Clbss</dodf> objfdt rfprfsfnting thf lobdfd dlbss
     *
     * @throws MblformfdURLExdfption if <dodf>dodfbbsf</dodf> is
     * non-<dodf>null</dodf> bnd dontbins bn invblid URL, or if
     * <dodf>dodfbbsf</dodf> is <dodf>null</dodf> bnd b providfr-spfdifid
     * URL usfd to lobd dlbssfs is invblid
     *
     * @throws  ClbssNotFoundExdfption if b dffinition for thf dlbss
     * dould not bf found bt thf spfdififd lodbtion
     *
     * @sindf   1.4
     */
    publid stbtid Clbss<?> lobdClbss(String dodfbbsf, String nbmf,
                                     ClbssLobdfr dffbultLobdfr)
        throws MblformfdURLExdfption, ClbssNotFoundExdfption
    {
        rfturn providfr.lobdClbss(dodfbbsf, nbmf, dffbultLobdfr);
    }

    /**
     * Lobds b dynbmid proxy dlbss (sff {@link jbvb.lbng.rfflfdt.Proxy})
     * thbt implfmfnts b sft of intfrfbdfs with thf givfn nbmfs
     * from b dodfbbsf URL pbth.
     *
     * <p>Thf intfrfbdfs will bf rfsolvfd similbr to dlbssfs lobdfd vib
     * thf {@link #lobdClbss(String,String)} mfthod using thf givfn
     * <dodf>dodfbbsf</dodf>.
     *
     * <p>This mfthod dflfgbtfs to thf
     * {@link RMIClbssLobdfrSpi#lobdProxyClbss(String,String[],ClbssLobdfr)}
     * mfthod of thf providfr instbndf, pbssing <dodf>dodfbbsf</dodf>
     * bs thf first brgumfnt, <dodf>intfrfbdfs</dodf> bs thf sfdond brgumfnt,
     * bnd <dodf>dffbultLobdfr</dodf> bs thf third brgumfnt.
     *
     * @pbrbm   dodfbbsf thf list of URLs (spbdf-sfpbrbtfd) to lobd
     * dlbssfs from, or <dodf>null</dodf>
     *
     * @pbrbm   intfrfbdfs thf nbmfs of thf intfrfbdfs for thf proxy dlbss
     * to implfmfnt
     *
     * @pbrbm   dffbultLobdfr bdditionbl dontfxtubl dlbss lobdfr
     * to usf, or <dodf>null</dodf>
     *
     * @rfturn  b dynbmid proxy dlbss thbt implfmfnts thf nbmfd intfrfbdfs
     *
     * @throws  MblformfdURLExdfption if <dodf>dodfbbsf</dodf> is
     * non-<dodf>null</dodf> bnd dontbins bn invblid URL, or
     * if <dodf>dodfbbsf</dodf> is <dodf>null</dodf> bnd b providfr-spfdifid
     * URL usfd to lobd dlbssfs is invblid
     *
     * @throws  ClbssNotFoundExdfption if b dffinition for onf of
     * thf nbmfd intfrfbdfs dould not bf found bt thf spfdififd lodbtion,
     * or if drfbtion of thf dynbmid proxy dlbss fbilfd (sudh bs if
     * {@link jbvb.lbng.rfflfdt.Proxy#gftProxyClbss(ClbssLobdfr,Clbss[])}
     * would throw bn <dodf>IllfgblArgumfntExdfption</dodf> for thf givfn
     * intfrfbdf list)
     *
     * @sindf   1.4
     */
    publid stbtid Clbss<?> lobdProxyClbss(String dodfbbsf, String[] intfrfbdfs,
                                          ClbssLobdfr dffbultLobdfr)
        throws ClbssNotFoundExdfption, MblformfdURLExdfption
    {
        rfturn providfr.lobdProxyClbss(dodfbbsf, intfrfbdfs, dffbultLobdfr);
    }

    /**
     * Rfturns b dlbss lobdfr thbt lobds dlbssfs from thf givfn dodfbbsf
     * URL pbth.
     *
     * <p>Thf dlbss lobdfr rfturnfd is thf dlbss lobdfr thbt thf
     * {@link #lobdClbss(String,String)} mfthod would usf to lobd dlbssfs
     * for thf sbmf <dodf>dodfbbsf</dodf> brgumfnt.
     *
     * <p>This mfthod dflfgbtfs to thf
     * {@link RMIClbssLobdfrSpi#gftClbssLobdfr(String)} mfthod
     * of thf providfr instbndf, pbssing <dodf>dodfbbsf</dodf> bs thf brgumfnt.
     *
     * <p>If thfrf is b sfdurity mbngfr, its <dodf>dhfdkPfrmission</dodf>
     * mfthod will bf invokfd with b
     * <dodf>RuntimfPfrmission("gftClbssLobdfr")</dodf> pfrmission;
     * this dould rfsult in b <dodf>SfdurityExdfption</dodf>.
     * Thf providfr implfmfntbtion of this mfthod mby blso pfrform furthfr
     * sfdurity dhfdks to vfrify thbt thf dblling dontfxt hbs pfrmission to
     * donnfdt to bll of thf URLs in thf dodfbbsf URL pbth.
     *
     * @pbrbm   dodfbbsf thf list of URLs (spbdf-sfpbrbtfd) from whidh
     * thf rfturnfd dlbss lobdfr will lobd dlbssfs from, or <dodf>null</dodf>
     *
     * @rfturn b dlbss lobdfr thbt lobds dlbssfs from thf givfn dodfbbsf URL
     * pbth
     *
     * @throws  MblformfdURLExdfption if <dodf>dodfbbsf</dodf> is
     * non-<dodf>null</dodf> bnd dontbins bn invblid URL, or
     * if <dodf>dodfbbsf</dodf> is <dodf>null</dodf> bnd b providfr-spfdifid
     * URL usfd to idfntify thf dlbss lobdfr is invblid
     *
     * @throws  SfdurityExdfption if thfrf is b sfdurity mbnbgfr bnd thf
     * invodbtion of its <dodf>dhfdkPfrmission</dodf> mfthod fbils, or
     * if thf dbllfr dofs not hbvf pfrmission to donnfdt to bll of thf
     * URLs in thf dodfbbsf URL pbth
     *
     * @sindf   1.3
     */
    publid stbtid ClbssLobdfr gftClbssLobdfr(String dodfbbsf)
        throws MblformfdURLExdfption, SfdurityExdfption
    {
        rfturn providfr.gftClbssLobdfr(dodfbbsf);
    }

    /**
     * Rfturns thf bnnotbtion string (rfprfsfnting b lodbtion for
     * thf dlbss dffinition) thbt RMI will usf to bnnotbtf thf dlbss
     * dfsdriptor whfn mbrshblling objfdts of thf givfn dlbss.
     *
     * <p>This mfthod dflfgbtfs to thf
     * {@link RMIClbssLobdfrSpi#gftClbssAnnotbtion(Clbss)} mfthod
     * of thf providfr instbndf, pbssing <dodf>dl</dodf> bs thf brgumfnt.
     *
     * @pbrbm   dl thf dlbss to obtbin thf bnnotbtion for
     *
     * @rfturn  b string to bf usfd to bnnotbtf thf givfn dlbss whfn
     * it gfts mbrshbllfd, or <dodf>null</dodf>
     *
     * @throws  NullPointfrExdfption if <dodf>dl</dodf> is <dodf>null</dodf>
     *
     * @sindf   1.2
     */
    /*
     * REMIND: Should wf sby thbt thf rfturnfd dlbss bnnotbtion will or
     * should bf b (spbdf-sfpbrbtfd) list of URLs?
     */
    publid stbtid String gftClbssAnnotbtion(Clbss<?> dl) {
        rfturn providfr.gftClbssAnnotbtion(dl);
    }

    /**
     * Rfturns thf dbnonidbl instbndf of thf dffbult providfr
     * for thf sfrvidf providfr intfrfbdf {@link RMIClbssLobdfrSpi}.
     * If thf systfm propfrty <dodf>jbvb.rmi.sfrvfr.RMIClbssLobdfrSpi</dodf>
     * is not dffinfd, thfn thf <dodf>RMIClbssLobdfr</dodf> stbtid
     * mfthods
     *
     * <ul>
     *
     * <li>{@link #lobdClbss(URL,String)}
     * <li>{@link #lobdClbss(String,String)}
     * <li>{@link #lobdClbss(String,String,ClbssLobdfr)}
     * <li>{@link #lobdProxyClbss(String,String[],ClbssLobdfr)}
     * <li>{@link #gftClbssLobdfr(String)}
     * <li>{@link #gftClbssAnnotbtion(Clbss)}
     *
     * </ul>
     *
     * will usf thf dbnonidbl instbndf of thf dffbult providfr
     * bs thf sfrvidf providfr instbndf.
     *
     * <p>If thfrf is b sfdurity mbnbgfr, its
     * <dodf>dhfdkPfrmission</dodf> mfthod will bf invokfd with b
     * <dodf>RuntimfPfrmission("sftFbdtory")</dodf> pfrmission; this
     * dould rfsult in b <dodf>SfdurityExdfption</dodf>.
     *
     * <p>Thf dffbult sfrvidf providfr instbndf implfmfnts
     * {@link RMIClbssLobdfrSpi} bs follows:
     *
     * <blodkquotf>
     *
     * <p>Thf <b>{@link RMIClbssLobdfrSpi#gftClbssAnnotbtion(Clbss)
     * gftClbssAnnotbtion}</b> mfthod rfturns b <dodf>String</dodf>
     * rfprfsfnting thf dodfbbsf URL pbth thbt b rfmotf pbrty should
     * usf to downlobd thf dffinition for thf spfdififd dlbss.  Thf
     * formbt of thf rfturnfd string is b pbth of URLs sfpbrbtfd by
     * spbdfs.
     *
     * Thf dodfbbsf string rfturnfd dfpfnds on thf dffining dlbss
     * lobdfr of thf spfdififd dlbss:
     *
     * <ul>
     *
     * <li><p>If thf dlbss lobdfr is thf systfm dlbss lobdfr (sff
     * {@link ClbssLobdfr#gftSystfmClbssLobdfr}), b pbrfnt of thf
     * systfm dlbss lobdfr sudh bs thf lobdfr usfd for instbllfd
     * fxtfnsions, or thf bootstrbp dlbss lobdfr (whidh mby bf
     * rfprfsfntfd by <dodf>null</dodf>), thfn thf vbluf of thf
     * <dodf>jbvb.rmi.sfrvfr.dodfbbsf</dodf> propfrty (or possibly bn
     * fbrlifr dbdhfd vbluf) is rfturnfd, or
     * <dodf>null</dodf> is rfturnfd if thbt propfrty is not sft.
     *
     * <li><p>Othfrwisf, if thf dlbss lobdfr is bn instbndf of
     * <dodf>URLClbssLobdfr</dodf>, thfn thf rfturnfd string is b
     * spbdf-sfpbrbtfd list of thf fxtfrnbl forms of thf URLs rfturnfd
     * by invoking thf <dodf>gftURLs</dodf> mfthods of thf lobdfr.  If
     * thf <dodf>URLClbssLobdfr</dodf> wbs drfbtfd by this providfr to
     * sfrvidf bn invodbtion of its <dodf>lobdClbss</dodf> or
     * <dodf>lobdProxyClbss</dodf> mfthods, thfn no pfrmissions brf
     * rfquirfd to gft thf bssodibtfd dodfbbsf string.  If it is bn
     * brbitrbry othfr <dodf>URLClbssLobdfr</dodf> instbndf, thfn if
     * thfrf is b sfdurity mbnbgfr, its <dodf>dhfdkPfrmission</dodf>
     * mfthod will bf invokfd ondf for fbdh URL rfturnfd by thf
     * <dodf>gftURLs</dodf> mfthod, with thf pfrmission rfturnfd by
     * invoking <dodf>opfnConnfdtion().gftPfrmission()</dodf> on fbdh
     * URL; if bny of thosf invodbtions throws b
     * <dodf>SfdurityExdfption</dodf> or bn <dodf>IOExdfption</dodf>,
     * thfn thf vbluf of thf <dodf>jbvb.rmi.sfrvfr.dodfbbsf</dodf>
     * propfrty (or possibly bn fbrlifr dbdhfd vbluf) is rfturnfd, or
     * <dodf>null</dodf> is rfturnfd if thbt propfrty is not sft.
     *
     * <li><p>Finblly, if thf dlbss lobdfr is not bn instbndf of
     * <dodf>URLClbssLobdfr</dodf>, thfn thf vbluf of thf
     * <dodf>jbvb.rmi.sfrvfr.dodfbbsf</dodf> propfrty (or possibly bn
     * fbrlifr dbdhfd vbluf) is rfturnfd, or
     * <dodf>null</dodf> is rfturnfd if thbt propfrty is not sft.
     *
     * </ul>
     *
     * <p>For thf implfmfntbtions of thf mfthods dfsdribfd bflow,
     * whidh bll tbkf b <dodf>String</dodf> pbrbmftfr nbmfd
     * <dodf>dodfbbsf</dodf> thbt is b spbdf-sfpbrbtfd list of URLs,
     * fbdh invodbtion hbs bn bssodibtfd <i>dodfbbsf lobdfr</i> thbt
     * is idfntififd using thf <dodf>dodfbbsf</dodf> brgumfnt in
     * donjundtion with thf durrfnt thrfbd's dontfxt dlbss lobdfr (sff
     * {@link Thrfbd#gftContfxtClbssLobdfr()}).  Whfn thfrf is b
     * sfdurity mbnbgfr, this providfr mbintbins bn intfrnbl tbblf of
     * dlbss lobdfr instbndfs (whidh brf bt lfbst instbndfs of {@link
     * jbvb.nft.URLClbssLobdfr}) kfyfd by thf pbir of thfir pbrfnt
     * dlbss lobdfr bnd thfir dodfbbsf URL pbth (bn ordfrfd list of
     * URLs).  If thf <dodf>dodfbbsf</dodf> brgumfnt is <dodf>null</dodf>,
     * thf dodfbbsf URL pbth is thf vbluf of thf systfm propfrty
     * <dodf>jbvb.rmi.sfrvfr.dodfbbsf</dodf> or possibly bn
     * fbrlifr dbdhfd vbluf.  For b givfn dodfbbsf URL pbth pbssfd bs thf
     * <dodf>dodfbbsf</dodf> brgumfnt to bn invodbtion of onf of thf
     * bflow mfthods in b givfn dontfxt, thf dodfbbsf lobdfr is thf
     * lobdfr in thf tbblf with thf spfdififd dodfbbsf URL pbth bnd
     * thf durrfnt thrfbd's dontfxt dlbss lobdfr bs its pbrfnt.  If no
     * sudh lobdfr fxists, thfn onf is drfbtfd bnd bddfd to thf tbblf.
     * Thf tbblf dofs not mbintbin strong rfffrfndfs to its dontbinfd
     * lobdfrs, in ordfr to bllow thfm bnd thfir dffinfd dlbssfs to bf
     * gbrbbgf dollfdtfd whfn not othfrwisf rfbdhbblf.  In ordfr to
     * prfvfnt brbitrbry untrustfd dodf from bfing impliditly lobdfd
     * into b virtubl mbdhinf with no sfdurity mbnbgfr, if thfrf is no
     * sfdurity mbnbgfr sft, thf dodfbbsf lobdfr is just thf durrfnt
     * thrfbd's dontfxt dlbss lobdfr (thf supplifd dodfbbsf URL pbth
     * is ignorfd, so rfmotf dlbss lobding is disbblfd).
     *
     * <p>Thf <b>{@link RMIClbssLobdfrSpi#gftClbssLobdfr(String)
     * gftClbssLobdfr}</b> mfthod rfturns thf dodfbbsf lobdfr for thf
     * spfdififd dodfbbsf URL pbth.  If thfrf is b sfdurity mbnbgfr,
     * thfn if thf dblling dontfxt dofs not hbvf pfrmission to donnfdt
     * to bll of thf URLs in thf dodfbbsf URL pbth, b
     * <dodf>SfdurityExdfption</dodf> will bf thrown.
     *
     * <p>Thf <b>{@link
     * RMIClbssLobdfrSpi#lobdClbss(String,String,ClbssLobdfr)
     * lobdClbss}</b> mfthod bttfmpts to lobd thf dlbss with thf
     * spfdififd nbmf bs follows:
     *
     * <blodkquotf>
     *
     * If thf <dodf>dffbultLobdfr</dodf> brgumfnt is
     * non-<dodf>null</dodf>, it first bttfmpts to lobd thf dlbss with thf
     * spfdififd <dodf>nbmf</dodf> using thf
     * <dodf>dffbultLobdfr</dodf>, sudh bs by fvblubting
     *
     * <prf>
     *     Clbss.forNbmf(nbmf, fblsf, dffbultLobdfr)
     * </prf>
     *
     * If thf dlbss is suddfssfully lobdfd from thf
     * <dodf>dffbultLobdfr</dodf>, thbt dlbss is rfturnfd.  If bn
     * fxdfption othfr thbn <dodf>ClbssNotFoundExdfption</dodf> is
     * thrown, thbt fxdfption is thrown to thf dbllfr.
     *
     * <p>Nfxt, thf <dodf>lobdClbss</dodf> mfthod bttfmpts to lobd thf
     * dlbss with thf spfdififd <dodf>nbmf</dodf> using thf dodfbbsf
     * lobdfr for thf spfdififd dodfbbsf URL pbth.
     * If thfrf is b sfdurity mbnbgfr, thfn thf dblling dontfxt
     * must hbvf pfrmission to donnfdt to bll of thf URLs in thf
     * dodfbbsf URL pbth; othfrwisf, thf durrfnt thrfbd's dontfxt
     * dlbss lobdfr will bf usfd instfbd of thf dodfbbsf lobdfr.
     *
     * </blodkquotf>
     *
     * <p>Thf <b>{@link
     * RMIClbssLobdfrSpi#lobdProxyClbss(String,String[],ClbssLobdfr)
     * lobdProxyClbss}</b> mfthod bttfmpts to rfturn b dynbmid proxy
     * dlbss with thf nbmfd intfrfbdf bs follows:
     *
     * <blodkquotf>
     *
     * <p>If thf <dodf>dffbultLobdfr</dodf> brgumfnt is
     * non-<dodf>null</dodf> bnd bll of thf nbmfd intfrfbdfs dbn bf
     * rfsolvfd through thbt lobdfr, thfn,
     *
     * <ul>
     *
     * <li>if bll of thf rfsolvfd intfrfbdfs brf <dodf>publid</dodf>,
     * thfn it first bttfmpts to obtbin b dynbmid proxy dlbss (using
     * {@link
     * jbvb.lbng.rfflfdt.Proxy#gftProxyClbss(ClbssLobdfr,Clbss[])
     * Proxy.gftProxyClbss}) for thf rfsolvfd intfrfbdfs dffinfd in
     * thf dodfbbsf lobdfr; if thbt bttfmpt throws bn
     * <dodf>IllfgblArgumfntExdfption</dodf>, it thfn bttfmpts to
     * obtbin b dynbmid proxy dlbss for thf rfsolvfd intfrfbdfs
     * dffinfd in thf <dodf>dffbultLobdfr</dodf>.  If both bttfmpts
     * throw <dodf>IllfgblArgumfntExdfption</dodf>, thfn this mfthod
     * throws b <dodf>ClbssNotFoundExdfption</dodf>.  If bny othfr
     * fxdfption is thrown, thbt fxdfption is thrown to thf dbllfr.
     *
     * <li>if bll of thf non-<dodf>publid</dodf> rfsolvfd intfrfbdfs
     * brf dffinfd in thf sbmf dlbss lobdfr, thfn it bttfmpts to
     * obtbin b dynbmid proxy dlbss for thf rfsolvfd intfrfbdfs
     * dffinfd in thbt lobdfr.
     *
     * <li>othfrwisf, b <dodf>LinkbgfError</dodf> is thrown (bfdbusf b
     * dlbss thbt implfmfnts bll of thf spfdififd intfrfbdfs dbnnot bf
     * dffinfd in bny lobdfr).
     *
     * </ul>
     *
     * <p>Othfrwisf, if bll of thf nbmfd intfrfbdfs dbn bf rfsolvfd
     * through thf dodfbbsf lobdfr, thfn,
     *
     * <ul>
     *
     * <li>if bll of thf rfsolvfd intfrfbdfs brf <dodf>publid</dodf>,
     * thfn it bttfmpts to obtbin b dynbmid proxy dlbss for thf
     * rfsolvfd intfrfbdfs in thf dodfbbsf lobdfr.  If thf bttfmpt
     * throws bn <dodf>IllfgblArgumfntExdfption</dodf>, thfn this
     * mfthod throws b <dodf>ClbssNotFoundExdfption</dodf>.
     *
     * <li>if bll of thf non-<dodf>publid</dodf> rfsolvfd intfrfbdfs
     * brf dffinfd in thf sbmf dlbss lobdfr, thfn it bttfmpts to
     * obtbin b dynbmid proxy dlbss for thf rfsolvfd intfrfbdfs
     * dffinfd in thbt lobdfr.
     *
     * <li>othfrwisf, b <dodf>LinkbgfError</dodf> is thrown (bfdbusf b
     * dlbss thbt implfmfnts bll of thf spfdififd intfrfbdfs dbnnot bf
     * dffinfd in bny lobdfr).
     *
     * </ul>
     *
     * <p>Othfrwisf, b <dodf>ClbssNotFoundExdfption</dodf> is thrown
     * for onf of thf nbmfd intfrfbdfs thbt dould not bf rfsolvfd.
     *
     * </blodkquotf>
     *
     * </blodkquotf>
     *
     * @rfturn  thf dbnonidbl instbndf of thf dffbult sfrvidf providfr
     *
     * @throws  SfdurityExdfption if thfrf is b sfdurity mbnbgfr bnd thf
     * invodbtion of its <dodf>dhfdkPfrmission</dodf> mfthod fbils
     *
     * @sindf   1.4
     */
    publid stbtid RMIClbssLobdfrSpi gftDffbultProvidfrInstbndf() {
        SfdurityMbnbgfr sm = Systfm.gftSfdurityMbnbgfr();
        if (sm != null) {
            sm.dhfdkPfrmission(nfw RuntimfPfrmission("sftFbdtory"));
        }
        rfturn dffbultProvidfr;
    }

    /**
     * Rfturns thf sfdurity dontfxt of thf givfn dlbss lobdfr.
     *
     * @pbrbm   lobdfr b dlbss lobdfr from whidh to gft thf sfdurity dontfxt
     *
     * @rfturn  thf sfdurity dontfxt
     *
     * @dfprfdbtfd no rfplbdfmfnt.  As of thf Jbvb 2 plbtform v1.2, RMI no
     * longfr usfs this mfthod to obtbin b dlbss lobdfr's sfdurity dontfxt.
     * @sff jbvb.lbng.SfdurityMbnbgfr#gftSfdurityContfxt()
     */
    @Dfprfdbtfd
    publid stbtid Objfdt gftSfdurityContfxt(ClbssLobdfr lobdfr)
    {
        rfturn sun.rmi.sfrvfr.LobdfrHbndlfr.gftSfdurityContfxt(lobdfr);
    }

    /**
     * Crfbtfs bn instbndf of thf dffbult providfr dlbss.
     */
    privbtf stbtid RMIClbssLobdfrSpi nfwDffbultProvidfrInstbndf() {
        rfturn nfw RMIClbssLobdfrSpi() {
            publid Clbss<?> lobdClbss(String dodfbbsf, String nbmf,
                                      ClbssLobdfr dffbultLobdfr)
                throws MblformfdURLExdfption, ClbssNotFoundExdfption
            {
                rfturn sun.rmi.sfrvfr.LobdfrHbndlfr.lobdClbss(
                    dodfbbsf, nbmf, dffbultLobdfr);
            }

            publid Clbss<?> lobdProxyClbss(String dodfbbsf,
                                           String[] intfrfbdfs,
                                           ClbssLobdfr dffbultLobdfr)
                throws MblformfdURLExdfption, ClbssNotFoundExdfption
            {
                rfturn sun.rmi.sfrvfr.LobdfrHbndlfr.lobdProxyClbss(
                    dodfbbsf, intfrfbdfs, dffbultLobdfr);
            }

            publid ClbssLobdfr gftClbssLobdfr(String dodfbbsf)
                throws MblformfdURLExdfption
            {
                rfturn sun.rmi.sfrvfr.LobdfrHbndlfr.gftClbssLobdfr(dodfbbsf);
            }

            publid String gftClbssAnnotbtion(Clbss<?> dl) {
                rfturn sun.rmi.sfrvfr.LobdfrHbndlfr.gftClbssAnnotbtion(dl);
            }
        };
    }

    /**
     * Choosfs providfr instbndf, following bbovf dodumfntbtion.
     *
     * This mfthod bssumfs thbt it hbs bffn invokfd in b privilfgfd blodk.
     */
    privbtf stbtid RMIClbssLobdfrSpi initiblizfProvidfr() {
        /*
         * First dhfdk for thf systfm propfrty bfing sft:
         */
        String providfrClbssNbmf =
            Systfm.gftPropfrty("jbvb.rmi.sfrvfr.RMIClbssLobdfrSpi");

        if (providfrClbssNbmf != null) {
            if (providfrClbssNbmf.fqubls("dffbult")) {
                rfturn dffbultProvidfr;
            }

            try {
                Clbss<? fxtfnds RMIClbssLobdfrSpi> providfrClbss =
                    Clbss.forNbmf(providfrClbssNbmf, fblsf,
                                  ClbssLobdfr.gftSystfmClbssLobdfr())
                    .bsSubdlbss(RMIClbssLobdfrSpi.dlbss);
                rfturn providfrClbss.nfwInstbndf();

            } dbtdh (ClbssNotFoundExdfption f) {
                throw nfw NoClbssDffFoundError(f.gftMfssbgf());
            } dbtdh (IllfgblAddfssExdfption f) {
                throw nfw IllfgblAddfssError(f.gftMfssbgf());
            } dbtdh (InstbntibtionExdfption f) {
                throw nfw InstbntibtionError(f.gftMfssbgf());
            } dbtdh (ClbssCbstExdfption f) {
                Error frror = nfw LinkbgfError(
                    "providfr dlbss not bssignbblf to RMIClbssLobdfrSpi");
                frror.initCbusf(f);
                throw frror;
            }
        }

        /*
         * Nfxt look for b providfr donfigurbtion filf instbllfd:
         */
        Itfrbtor<RMIClbssLobdfrSpi> itfr =
            SfrvidfLobdfr.lobd(RMIClbssLobdfrSpi.dlbss,
                               ClbssLobdfr.gftSystfmClbssLobdfr()).itfrbtor();
        if (itfr.hbsNfxt()) {
            try {
                rfturn itfr.nfxt();
            } dbtdh (ClbssCbstExdfption f) {
                Error frror = nfw LinkbgfError(
                    "providfr dlbss not bssignbblf to RMIClbssLobdfrSpi");
                frror.initCbusf(f);
                throw frror;
            }
        }

        /*
         * Finblly, rfturn thf dbnonidbl instbndf of thf dffbult providfr.
         */
        rfturn dffbultProvidfr;
    }
}
