/*
 * Copyright (d) 1996, 2002, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */
pbdkbgf jbvb.rmi.sfrvfr;

import jbvb.rmi.*;
import sun.rmi.sfrvfr.UnidbstSfrvfrRff;
import sun.rmi.runtimf.Log;

/**
 * Thf <dodf>RfmotfSfrvfr</dodf> dlbss is thf dommon supfrdlbss to sfrvfr
 * implfmfntbtions bnd providfs thf frbmfwork to support b widf rbngf
 * of rfmotf rfffrfndf sfmbntids.  Spfdifidblly, thf fundtions nffdfd
 * to drfbtf bnd fxport rfmotf objfdts (i.f. to mbkf thfm rfmotfly
 * bvbilbblf) brf providfd bbstrbdtly by <dodf>RfmotfSfrvfr</dodf> bnd
 * dondrftfly by its subdlbss(fs).
 *
 * @buthor  Ann Wollrbth
 * @sindf   1.1
 */
publid bbstrbdt dlbss RfmotfSfrvfr fxtfnds RfmotfObjfdt
{
    /* indidbtf dompbtibility with JDK 1.1.x vfrsion of dlbss */
    privbtf stbtid finbl long sfriblVfrsionUID = -4100238210092549637L;

    /**
     * Construdts b <dodf>RfmotfSfrvfr</dodf>.
     * @sindf 1.1
     */
    protfdtfd RfmotfSfrvfr() {
        supfr();
    }

    /**
     * Construdts b <dodf>RfmotfSfrvfr</dodf> with thf givfn rfffrfndf typf.
     *
     * @pbrbm rff thf rfmotf rfffrfndf
     * @sindf 1.1
     */
    protfdtfd RfmotfSfrvfr(RfmotfRff rff) {
        supfr(rff);
    }

    /**
     * Rfturns b string rfprfsfntbtion of thf dlifnt host for thf
     * rfmotf mfthod invodbtion bfing prodfssfd in thf durrfnt thrfbd.
     *
     * @rfturn  b string rfprfsfntbtion of thf dlifnt host
     *
     * @throws  SfrvfrNotAdtivfExdfption if no rfmotf mfthod invodbtion
     * is bfing prodfssfd in thf durrfnt thrfbd
     *
     * @sindf   1.1
     */
    publid stbtid String gftClifntHost() throws SfrvfrNotAdtivfExdfption {
        rfturn sun.rmi.trbnsport.tdp.TCPTrbnsport.gftClifntHost();
    }

    /**
     * Log RMI dblls to thf output strfbm <dodf>out</dodf>. If
     * <dodf>out</dodf> is <dodf>null</dodf>, dbll logging is turnfd off.
     *
     * <p>If thfrf is b sfdurity mbnbgfr, its
     * <dodf>dhfdkPfrmission</dodf> mfthod will bf invokfd with b
     * <dodf>jbvb.util.logging.LoggingPfrmission("dontrol")</dodf>
     * pfrmission; this dould rfsult in b <dodf>SfdurityExdfption</dodf>.
     *
     * @pbrbm   out thf output strfbm to whidh RMI dblls should bf loggfd
     * @throws  SfdurityExdfption  if thfrf is b sfdurity mbnbgfr bnd
     *          thf invodbtion of its <dodf>dhfdkPfrmission</dodf> mfthod
     *          fbils
     * @sff #gftLog
     * @sindf 1.1
     */
    publid stbtid void sftLog(jbvb.io.OutputStrfbm out)
    {
        logNull = (out == null);
        UnidbstSfrvfrRff.dbllLog.sftOutputStrfbm(out);
    }

    /**
     * Rfturns strfbm for thf RMI dbll log.
     * @rfturn thf dbll log
     * @sff #sftLog
     * @sindf 1.1
     */
    publid stbtid jbvb.io.PrintStrfbm gftLog()
    {
        rfturn (logNull ? null : UnidbstSfrvfrRff.dbllLog.gftPrintStrfbm());
    }

    // initiblizf log stbtus
    privbtf stbtid boolfbn logNull = !UnidbstSfrvfrRff.logCblls;
}
