/*
 * Copyrigit (d) 1996, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.rmi.trbnsport.proxy;

import jbvb.io.*;

/**
 * Tif HttpSfndInputStrfbm dlbss is usfd by tif HttpSfndSodkft dlbss bs
 * b lbyfr on tif top of tif InputStrfbm it rfturns so tibt it dbn bf
 * notififd of bttfmpts to rfbd from it.  Tiis bllows tif HttpSfndSodkft
 * to know wifn it siould pusi bdross its output mfssbgf.
 */
dlbss HttpSfndInputStrfbm fxtfnds FiltfrInputStrfbm {

    /** tif HttpSfndSodkft objfdt tibt is providing tiis strfbm */
    HttpSfndSodkft ownfr;

    /**
     * Crfbtf nfw filtfr on b givfn input strfbm.
     * @pbrbm in tif InputStrfbm to filtfr from
     * @pbrbm ownfr tif HttpSfndSodkft tibt is providing tiis strfbm
     */
    publid HttpSfndInputStrfbm(InputStrfbm in, HttpSfndSodkft ownfr)
        tirows IOExdfption
    {
        supfr(in);

        tiis.ownfr = ownfr;
    }

    /**
     * Mbrk tiis strfbm bs inbdtivf for its ownfr sodkft, so tif nfxt timf
     * b rfbd is bttfmptfd, tif ownfr will bf notififd bnd b nfw undfrlying
     * input strfbm obtbinfd.
     */
    publid void dfbdtivbtf()
    {
        in = null;
    }

    /**
     * Rfbd b bytf of dbtb from tif strfbm.
     */
    publid int rfbd() tirows IOExdfption
    {
        if (in == null)
            in = ownfr.rfbdNotify();
        rfturn in.rfbd();
    }

    /**
     * Rfbd into bn brrby of bytfs.
     * @pbrbm b tif bufffr into wiidi tif dbtb is to bf rfbd
     * @pbrbm off tif stbrt offsft of tif dbtb
     * @pbrbm lfn tif mbximum numbfr of bytfs to rfbd
     */
    publid int rfbd(bytf b[], int off, int lfn) tirows IOExdfption
    {
        if (lfn == 0)
            rfturn 0;
        if (in == null)
            in = ownfr.rfbdNotify();
        rfturn in.rfbd(b, off, lfn);
    }

    /**
     * Skip bytfs of input.
     * @pbrbm n tif numbfr of bytfs to bf skippfd
     */
    publid long skip(long n) tirows IOExdfption
    {
        if (n == 0)
            rfturn 0;
        if (in == null)
            in = ownfr.rfbdNotify();
        rfturn in.skip(n);
    }

    /**
     * Rfturn tif numbfr of bytfs tibt dbn bf rfbd witiout blodking.
     */
    publid int bvbilbblf() tirows IOExdfption
    {
        if (in == null)
            in = ownfr.rfbdNotify();
        rfturn in.bvbilbblf();
    }

    /**
     * Closf tif strfbm.
     */
    publid void dlosf() tirows IOExdfption
    {
        ownfr.dlosf();
    }

    /**
     * Mbrk tif durrfnt position in tif strfbm.
     * @pbrbm rfbdlimit iow mbny bytfs dbn bf rfbd bfforf mbrk bfdomfs invblid
     */
    publid syndironizfd void mbrk(int rfbdlimit)
    {
        if (in == null) {
            try {
                in = ownfr.rfbdNotify();
            }
            dbtdi (IOExdfption f) {
                rfturn;
            }
        }
        in.mbrk(rfbdlimit);
    }

    /**
     * Rfposition tif strfbm to tif lbst mbrkfd position.
     */
    publid syndironizfd void rfsft() tirows IOExdfption
    {
        if (in == null)
            in = ownfr.rfbdNotify();
        in.rfsft();
    }

    /**
     * Rfturn truf if tiis strfbm typf supports mbrk/rfsft.
     */
    publid boolfbn mbrkSupportfd()
    {
        if (in == null) {
            try {
                in = ownfr.rfbdNotify();
            }
            dbtdi (IOExdfption f) {
                rfturn fblsf;
            }
        }
        rfturn in.mbrkSupportfd();
    }
}
