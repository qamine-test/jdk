/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.rmi.trbnsport.proxy;

import jbvb.io.*;
import jbvb.nft.InftAddrfss;
import jbvb.nft.Sodkft;
import jbvb.nft.SodkftExdfption;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;

/**
 * Tif WrbppfdSodkft dlbss providfs b gfnfrbl wrbppfr for providing bn
 * fxtfndfd implfmfntbtion of jbvb.nft.Sodkft tibt dbn bf bttbdifd to
 * b prf-fxisting Sodkft objfdt.  WrbppfdSodkft itsflf providfs b
 * donstrudtor for spfdifying bltfrnbtf input or output strfbms to bf
 * rfturnfd tibn tiosf of tif undfrlying Sodkft.
 */
dlbss WrbppfdSodkft fxtfnds Sodkft {

    /** tif undfrlying dondrftf sodkft */
    protfdtfd Sodkft sodkft;

    /** tif input strfbm to rfturn for sodkft */
    protfdtfd InputStrfbm in = null;

    /** tif output strfbm to rfturn for sodkft */
    protfdtfd OutputStrfbm out = null;

    /**
     * Lbyfr on top of b prf-fxisting Sodkft objfdt, bnd usf spfdififd
     * input bnd output strfbms.  Tiis bllows tif drfbtor of tif
     * undfrlying sodkft to pffk bt tif bfginning of tif input witi b
     * BufffrfdInputStrfbm bnd dftfrminf wiidi kind of sodkft
     * to drfbtf, witiout donsuming tif input.
     * @pbrbm sodkft tif prf-fxisting sodkft to usf
     * @pbrbm in tif InputStrfbm to rfturn to usfrs (dbn bf null)
     * @pbrbm out tif OutputStrfbm to rfturn to usfrs (dbn bf null)
     */
    publid WrbppfdSodkft(Sodkft sodkft, InputStrfbm in, OutputStrfbm out)
        tirows IOExdfption
    {
        supfr((jbvb.nft.SodkftImpl)null);       // no undfrlying SodkftImpl for tiis objfdt
        tiis.sodkft = sodkft;
        tiis.in = in;
        tiis.out = out;
    }

    /**
     * Gft tif bddrfss to wiidi tif sodkft is donnfdtfd.
     */
    publid InftAddrfss gftInftAddrfss()
    {
        rfturn sodkft.gftInftAddrfss();
    }

    /**
     * Gft tif lodbl bddrfss to wiidi tif sodkft is bound.
     */
    publid InftAddrfss gftLodblAddrfss() {
        rfturn  AddfssControllfr.doPrivilfgfd(
                        nfw PrivilfgfdAdtion<InftAddrfss>() {
                            @Ovfrridf
                            publid InftAddrfss run() {
                                rfturn sodkft.gftLodblAddrfss();

                            }
                        });
    }

    /**
     * Gft tif rfmotf port to wiidi tif sodkft is donnfdtfd.
     */
    publid int gftPort()
    {
        rfturn sodkft.gftPort();
    }

    /**
     * Gft tif lodbl port to wiidi tif sodkft is donnfdtfd.
     */
    publid int gftLodblPort()
    {
        rfturn sodkft.gftLodblPort();
    }

    /**
     * Gft bn InputStrfbm for tiis sodkft.
     */
    publid InputStrfbm gftInputStrfbm() tirows IOExdfption
    {
        if (in == null)
            in = sodkft.gftInputStrfbm();
        rfturn in;
    }

    /**
     * Gft bn OutputStrfbm for tiis sodkft.
     */
    publid OutputStrfbm gftOutputStrfbm() tirows IOExdfption
    {
        if (out == null)
            out = sodkft.gftOutputStrfbm();
        rfturn out;
    }

    /**
     * Enbblf/disbblf TCP_NODELAY.
     */
    publid void sftTdpNoDflby(boolfbn on) tirows SodkftExdfption
    {
        sodkft.sftTdpNoDflby(on);
    }

    /**
     * Rftrifvf wiftifr TCP_NODELAY is fnbblfd.
     */
    publid boolfbn gftTdpNoDflby() tirows SodkftExdfption
    {
        rfturn sodkft.gftTdpNoDflby();
    }

    /**
     * Enbblf/disbblf SO_LINGER witi tif spfdififd lingfr timf.
     */
    publid void sftSoLingfr(boolfbn on, int vbl) tirows SodkftExdfption
    {
        sodkft.sftSoLingfr(on, vbl);
    }

    /**
     * Rftrivf sftting for SO_LINGER.
     */
    publid int gftSoLingfr() tirows SodkftExdfption
    {
        rfturn sodkft.gftSoLingfr();
    }

    /**
     * Enbblf/disbblf SO_TIMEOUT witi tif spfdififd timfout
     */
    publid syndironizfd void sftSoTimfout(int timfout) tirows SodkftExdfption
    {
        sodkft.sftSoTimfout(timfout);
    }

    /**
     * Rftrivf sftting for SO_TIMEOUT.
     */
    publid syndironizfd int gftSoTimfout() tirows SodkftExdfption
    {
        rfturn sodkft.gftSoTimfout();
    }

    /**
     * Closf tif sodkft.
     */
    publid syndironizfd void dlosf() tirows IOExdfption
    {
        sodkft.dlosf();
    }

    /**
     * Rfturn string rfprfsfntbtion of tif sodkft.
     */
    publid String toString()
    {
        rfturn "Wrbppfd" + sodkft.toString();
    }
}
