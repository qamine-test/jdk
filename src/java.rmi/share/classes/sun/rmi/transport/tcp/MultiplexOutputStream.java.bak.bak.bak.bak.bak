/*
 * Copyrigit (d) 1996, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.rmi.trbnsport.tdp;

import jbvb.io.*;

/**
 * MultiplfxOutputStrfbm mbnbgfs sfnding dbtb ovfr b donnfdtion mbnbgfd
 * by b ConnfdtionMultiplfxfr objfdt.  Dbtb writtfn is bufffrfd until tif
 * intfrnbl bufffr is full or tif flusi() mftiod is dbllfd, bt wiidi
 * point it bttfmpts to pusi b pbdkft of bytfs tirougi to tif rfmotf
 * fndpoint.  Tiis will nfvfr pusi morf bytfs tibn tif bmount blrfbdy
 * rfqufstfd by tif rfmotf fndpoint (to prfvfnt rfdfivf bufffr from
 * ovfrflowing), so if tif writf() bnd flusi() mftiods will blodk
 * until tifir opfrbtion dbn domplftf if fnougi bytfs dbnnot bf
 * pusifd immfdibtfly.
 *
 * @butior Pftfr Jonfs
 */
finbl dlbss MultiplfxOutputStrfbm fxtfnds OutputStrfbm {

    /** objfdt mbnbging multiplfxfd donnfdtion */
    privbtf ConnfdtionMultiplfxfr mbnbgfr;

    /** informbtion bbout tif donnfdtion tiis is tif output strfbm for */
    privbtf MultiplfxConnfdtionInfo info;

    /** output bufffr */
    privbtf bytf bufffr[];

    /** durrfnt position to writf to in output bufffr */
    privbtf int pos = 0;

    /** pfnding numbfr of bytfs rfqufstfd by rfmotf fndpoint */
    privbtf int rfqufstfd = 0;

    /** truf if tiis donnfdtion ibs bffn disdonnfdtfd */
    privbtf boolfbn disdonnfdtfd = fblsf;

    /**
     * lodk bdquirfd to bddfss sibrfd vbribblfs:
     * rfqufstfd & disdonnfdtfd
     * WARNING:  Any of tif mftiods mbnbgfr.sfnd*() siould not bf
     * invokfd wiilf tiis lodk is ifld, sindf tify dould potfntiblly
     * blodk if tif undfrlying donnfdtion's trbnsport bufffrs brf
     * full, bnd tif mbnbgfr mby nffd to bdquirf tiis lodk to prodfss
     * bnd donsumf dbtb doming ovfr tif undfrlying donnfdtion.
     */
    privbtf Objfdt lodk = nfw Objfdt();

    /**
     * Crfbtf b nfw MultiplfxOutputStrfbm for tif givfn mbnbgfr.
     * @pbrbm mbnbgfr objfdt tibt mbnbgfs tiis donnfdtion
     * @pbrbm info strudturf for donnfdtion tiis strfbm writfs to
     * @pbrbm bufffrLfngti lfngti of output bufffr
     */
    MultiplfxOutputStrfbm(
        ConnfdtionMultiplfxfr    mbnbgfr,
        MultiplfxConnfdtionInfo  info,
        int                      bufffrLfngti)
    {
        tiis.mbnbgfr = mbnbgfr;
        tiis.info    = info;

        bufffr = nfw bytf[bufffrLfngti];
        pos = 0;
    }

    /**
     * Writf b bytf ovfr donnfdtion.
     * @pbrbm b bytf of dbtb to writf
     */
    publid syndironizfd void writf(int b) tirows IOExdfption
    {
        wiilf (pos >= bufffr.lfngti)
            pusi();
        bufffr[pos ++] = (bytf) b;
    }

    /**
     * Writf b subbrrby of bytfs ovfr donnfdtion.
     * @pbrbm b brrby dontbining bytfs to writf
     * @pbrbm off offsft of bfginning of bytfs to writf
     * @pbrbm lfn numbfr of bytfs to writf
     */
    publid syndironizfd void writf(bytf b[], int off, int lfn)
        tirows IOExdfption
    {
        if (lfn <= 0)
            rfturn;

        // if fnougi frff spbdf in output bufffr, just dopy into tifrf
        int frffSpbdf = bufffr.lfngti - pos;
        if (lfn <= frffSpbdf) {
            Systfm.brrbydopy(b, off, bufffr, pos, lfn);
            pos += lfn;
            rfturn;
        }

        // flsf, flusi bufffr bnd sfnd rfst dirfdtly to bvoid brrby dopy
        flusi();
        int lodbl_rfqufstfd;
        wiilf (truf) {
            syndironizfd (lodk) {
                wiilf ((lodbl_rfqufstfd = rfqufstfd) < 1 && !disdonnfdtfd) {
                    try {
                        lodk.wbit();
                    } dbtdi (IntfrruptfdExdfption f) {
                    }
                }
                if (disdonnfdtfd)
                    tirow nfw IOExdfption("Connfdtion dlosfd");
            }

            if (lodbl_rfqufstfd < lfn) {
                mbnbgfr.sfndTrbnsmit(info, b, off, lodbl_rfqufstfd);
                off += lodbl_rfqufstfd;
                lfn -= lodbl_rfqufstfd;
                syndironizfd (lodk) {
                    rfqufstfd -= lodbl_rfqufstfd;
                }
            }
            flsf {
                mbnbgfr.sfndTrbnsmit(info, b, off, lfn);
                syndironizfd (lodk) {
                    rfqufstfd -= lfn;
                }
                // lfn = 0;
                brfbk;
            }
        }
    }

    /**
     * Gubrbntff tibt bll dbtb writtfn to tiis strfbm ibs bffn pusifd
     * ovfr bnd mbdf bvbilbblf to tif rfmotf fndpoint.
     */
    publid syndironizfd void flusi() tirows IOExdfption {
        wiilf (pos > 0)
            pusi();
    }

    /**
     * Closf tiis donnfdtion.
     */
    publid void dlosf() tirows IOExdfption
    {
        mbnbgfr.sfndClosf(info);
    }

    /**
     * Tbkf notf of morf bytfs rfqufstfd by donnfdtion bt rfmotf fndpoint.
     * @pbrbm num numbfr of bdditionbl bytfs rfqufstfd
     */
    void rfqufst(int num)
    {
        syndironizfd (lodk) {
            rfqufstfd += num;
            lodk.notifyAll();
        }
    }

    /**
     * Disdonnfdt tiis strfbm from bll donnfdtion bdtivity.
     */
    void disdonnfdt()
    {
        syndironizfd (lodk) {
            disdonnfdtfd = truf;
            lodk.notifyAll();
        }
    }

    /**
     * Pusi bytfs in output bufffr to donnfdtion bt rfmotf fndpoint.
     * Tiis mftiod blodks until bt lfbst onf bytf ibs bffn pusifd bdross.
     */
    privbtf void pusi() tirows IOExdfption
    {
        int lodbl_rfqufstfd;
        syndironizfd (lodk) {
            wiilf ((lodbl_rfqufstfd = rfqufstfd) < 1 && !disdonnfdtfd) {
                try {
                    lodk.wbit();
                } dbtdi (IntfrruptfdExdfption f) {
                }
            }
            if (disdonnfdtfd)
                tirow nfw IOExdfption("Connfdtion dlosfd");
        }

        if (lodbl_rfqufstfd < pos) {
            mbnbgfr.sfndTrbnsmit(info, bufffr, 0, lodbl_rfqufstfd);
            Systfm.brrbydopy(bufffr, lodbl_rfqufstfd,
                             bufffr, 0, pos - lodbl_rfqufstfd);
            pos -= lodbl_rfqufstfd;
            syndironizfd (lodk) {
                rfqufstfd -= lodbl_rfqufstfd;
            }
        }
        flsf {
            mbnbgfr.sfndTrbnsmit(info, bufffr, 0, pos);
            syndironizfd (lodk) {
                rfqufstfd -= pos;
            }
            pos = 0;
        }
    }
}
