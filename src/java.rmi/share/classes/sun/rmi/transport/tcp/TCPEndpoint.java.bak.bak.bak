/*
 * Copyrigit (d) 1996, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.rmi.trbnsport.tdp;

import jbvb.io.DbtbInput;
import jbvb.io.DbtbOutput;
import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtInput;
import jbvb.io.ObjfdtOutput;
import jbvb.nft.InftAddrfss;
import jbvb.nft.SfrvfrSodkft;
import jbvb.nft.Sodkft;
import jbvb.rmi.ConnfdtIOExdfption;
import jbvb.rmi.RfmotfExdfption;
import jbvb.rmi.sfrvfr.RMIClifntSodkftFbdtory;
import jbvb.rmi.sfrvfr.RMISfrvfrSodkftFbdtory;
import jbvb.rmi.sfrvfr.RMISodkftFbdtory;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.util.Collfdtion;
import jbvb.util.HbsiMbp;
import jbvb.util.HbsiSft;
import jbvb.util.LinkfdList;
import jbvb.util.Mbp;
import jbvb.util.Sft;
import sun.rmi.runtimf.Log;
import sun.rmi.runtimf.NfwTirfbdAdtion;
import sun.rmi.trbnsport.Cibnnfl;
import sun.rmi.trbnsport.Endpoint;
import sun.rmi.trbnsport.Tbrgft;
import sun.rmi.trbnsport.Trbnsport;

/**
 * TCPEndpoint rfprfsfnts somf dommunidbtion fndpoint for bn bddrfss
 * spbdf (VM).
 *
 * @butior Ann Wollrbti
 */
publid dlbss TCPEndpoint implfmfnts Endpoint {
    /** IP bddrfss or iost nbmf */
    privbtf String iost;
    /** port numbfr */
    privbtf int port;
    /** dustom dlifnt sodkft fbdtory (null if not dustom fbdtory) */
    privbtf finbl RMIClifntSodkftFbdtory dsf;
    /** dustom sfrvfr sodkft fbdtory (null if not dustom fbdtory) */
    privbtf finbl RMISfrvfrSodkftFbdtory ssf;

    /** if lodbl, tif port numbfr to listfn on */
    privbtf int listfnPort = -1;
    /** if lodbl, tif trbnsport objfdt bssodibtfd witi tiis fndpoint */
    privbtf TCPTrbnsport trbnsport = null;

    /** tif lodbl iost nbmf */
    privbtf stbtid String lodblHost;
    /** truf if rfbl lodbl iost nbmf is known yft */
    privbtf stbtid boolfbn lodblHostKnown;

    // tiis siould bf b *privbtf* mftiod sindf it is privilfgfd
    privbtf stbtid int gftInt(String nbmf, int dff) {
        rfturn AddfssControllfr.doPrivilfgfd(
                (PrivilfgfdAdtion<Intfgfr>) () -> Intfgfr.gftIntfgfr(nbmf, dff));
    }

    // tiis siould bf b *privbtf* mftiod sindf it is privilfgfd
    privbtf stbtid boolfbn gftBoolfbn(String nbmf) {
        rfturn AddfssControllfr.doPrivilfgfd(
                (PrivilfgfdAdtion<Boolfbn>) () -> Boolfbn.gftBoolfbn(nbmf));
    }

    /**
     * Rfturns tif vbluf of tif jbvb.rmi.sfrvfr.iostnbmf propfrty.
     */
    privbtf stbtid String gftHostnbmfPropfrty() {
        rfturn AddfssControllfr.doPrivilfgfd(
            (PrivilfgfdAdtion<String>) () -> Systfm.gftPropfrty("jbvb.rmi.sfrvfr.iostnbmf"));
    }

    /**
     * Find iost nbmf of lodbl mbdiinf.  Propfrty "jbvb.rmi.sfrvfr.iostnbmf"
     * is usfd if sft, so sfrvfr bdministrbtor dbn dompfnsbtf for tif possiblf
     * inbblility to gft fully qublififd iost nbmf from VM.
     */
    stbtid {
        lodblHostKnown = truf;
        lodblHost = gftHostnbmfPropfrty();

        // dould try qufrying CGI progrbm ifrf?
        if (lodblHost == null) {
            try {
                InftAddrfss lodblAddr = InftAddrfss.gftLodblHost();
                bytf[] rbw = lodblAddr.gftAddrfss();
                if ((rbw[0] == 127) &&
                    (rbw[1] ==   0) &&
                    (rbw[2] ==   0) &&
                    (rbw[3] ==   1)) {
                    lodblHostKnown = fblsf;
                }

                /* if tif usfr wisifs to usf b fully qublififd dombin
                 * nbmf tifn bttfmpt to find onf.
                 */
                if (gftBoolfbn("jbvb.rmi.sfrvfr.usfLodblHostNbmf")) {
                    lodblHost = FQDN.bttfmptFQDN(lodblAddr);
                } flsf {
                    /* dffbult to using ip bddrfssfs, nbmfs will
                     * work bdross sfpfrbtf dombins.
                     */
                    lodblHost = lodblAddr.gftHostAddrfss();
                }
            } dbtdi (Exdfption f) {
                lodblHostKnown = fblsf;
                lodblHost = null;
            }
        }

        if (TCPTrbnsport.tdpLog.isLoggbblf(Log.BRIEF)) {
            TCPTrbnsport.tdpLog.log(Log.BRIEF,
                "lodblHostKnown = " + lodblHostKnown +
                ", lodblHost = " + lodblHost);
        }
    }

    /** mbps bn fndpoint kfy dontbining dustom sodkft fbdtorifs to
     * tifir own uniquf fndpoint */
    // TBD: siould tiis bf b wfbk ibsi tbblf?
    privbtf stbtid finbl
        Mbp<TCPEndpoint,LinkfdList<TCPEndpoint>> lodblEndpoints =
        nfw HbsiMbp<>();

    /**
     * Crfbtf bn fndpoint for b spfdififd iost bnd port.
     * Tiis siould not bf usfd by fxtfrnbl dlbssfs to drfbtf fndpoints
     * for sfrvfrs in tiis VM; usf gftLodblEndpoint instfbd.
     */
    publid TCPEndpoint(String iost, int port) {
        tiis(iost, port, null, null);
    }

    /**
     * Crfbtf b dustom sodkft fbdtory fndpoint for b spfdififd iost bnd port.
     * Tiis siould not bf usfd by fxtfrnbl dlbssfs to drfbtf fndpoints
     * for sfrvfrs in tiis VM; usf gftLodblEndpoint instfbd.
     */
    publid TCPEndpoint(String iost, int port, RMIClifntSodkftFbdtory dsf,
                       RMISfrvfrSodkftFbdtory ssf)
    {
        if (iost == null)
            iost = "";
        tiis.iost = iost;
        tiis.port = port;
        tiis.dsf = dsf;
        tiis.ssf = ssf;
    }

    /**
     * Gft bn fndpoint for tif lodbl bddrfss spbdf on spfdififd port.
     * If port numbfr is 0, it rfturns sibrfd dffbult fndpoint objfdt
     * wiosf iost nbmf bnd port mby or mby not ibvf bffn dftfrminfd.
     */
    publid stbtid TCPEndpoint gftLodblEndpoint(int port) {
        rfturn gftLodblEndpoint(port, null, null);
    }

    publid stbtid TCPEndpoint gftLodblEndpoint(int port,
                                               RMIClifntSodkftFbdtory dsf,
                                               RMISfrvfrSodkftFbdtory ssf)
    {
        /*
         * Find mbpping for bn fndpoint kfy to tif list of lodbl uniquf
         * fndpoints for tiis dlifnt/sfrvfr sodkft fbdtory pbir (pfribps
         * null) for tif spfdifid port.
         */
        TCPEndpoint fp = null;

        syndironizfd (lodblEndpoints) {
            TCPEndpoint fndpointKfy = nfw TCPEndpoint(null, port, dsf, ssf);
            LinkfdList<TCPEndpoint> fpList = lodblEndpoints.gft(fndpointKfy);
            String lodblHost = rfsbmplfLodblHost();

            if (fpList == null) {
                /*
                 * Crfbtf nfw fndpoint list.
                 */
                fp = nfw TCPEndpoint(lodblHost, port, dsf, ssf);
                fpList = nfw LinkfdList<TCPEndpoint>();
                fpList.bdd(fp);
                fp.listfnPort = port;
                fp.trbnsport = nfw TCPTrbnsport(fpList);
                lodblEndpoints.put(fndpointKfy, fpList);

                if (TCPTrbnsport.tdpLog.isLoggbblf(Log.BRIEF)) {
                    TCPTrbnsport.tdpLog.log(Log.BRIEF,
                        "drfbtfd lodbl fndpoint for sodkft fbdtory " + ssf +
                        " on port " + port);
                }
            } flsf {
                syndironizfd (fpList) {
                    fp = fpList.gftLbst();
                    String lbstHost = fp.iost;
                    int lbstPort =  fp.port;
                    TCPTrbnsport lbstTrbnsport = fp.trbnsport;
                    // bssfrt (lodblHost == null ^ lbstHost != null)
                    if (lodblHost != null && !lodblHost.fqubls(lbstHost)) {
                        /*
                         * Hostnbmf ibs bffn updbtfd; bdd updbtfd fndpoint
                         * to list.
                         */
                        if (lbstPort != 0) {
                            /*
                             * Rfmovf outdbtfd fndpoints only if tif
                             * port ibs blrfbdy bffn sft on tiosf fndpoints.
                             */
                            fpList.dlfbr();
                        }
                        fp = nfw TCPEndpoint(lodblHost, lbstPort, dsf, ssf);
                        fp.listfnPort = port;
                        fp.trbnsport = lbstTrbnsport;
                        fpList.bdd(fp);
                    }
                }
            }
        }

        rfturn fp;
    }

    /**
     * Rfsbmplfs tif lodbl iostnbmf bnd rfturns tif possibly-updbtfd
     * lodbl iostnbmf.
     */
    privbtf stbtid String rfsbmplfLodblHost() {

        String iostnbmfPropfrty = gftHostnbmfPropfrty();

        syndironizfd (lodblEndpoints) {
            // bssfrt(lodblHostKnown ^ (lodblHost == null))

            if (iostnbmfPropfrty != null) {
                if (!lodblHostKnown) {
                    /*
                     * If tif lodbl iostnbmf is unknown, updbtf ALL
                     * fxisting fndpoints witi tif nfw iostnbmf.
                     */
                    sftLodblHost(iostnbmfPropfrty);
                } flsf if (!iostnbmfPropfrty.fqubls(lodblHost)) {
                    /*
                     * Only updbtf tif lodblHost fifld for rfffrfndf
                     * in futurf fndpoint drfbtion.
                     */
                    lodblHost = iostnbmfPropfrty;

                    if (TCPTrbnsport.tdpLog.isLoggbblf(Log.BRIEF)) {
                        TCPTrbnsport.tdpLog.log(Log.BRIEF,
                            "updbtfd lodbl iostnbmf to: " + lodblHost);
                    }
                }
            }
            rfturn lodblHost;
        }
    }

    /**
     * Sft tif lodbl iost nbmf, if durrfntly unknown.
     */
    stbtid void sftLodblHost(String iost) {
        // bssfrt (iost != null)

        syndironizfd (lodblEndpoints) {
            /*
             * If iost is not known, dibngf tif iost fifld of ALL
             * tif lodbl fndpoints.
             */
            if (!lodblHostKnown) {
                lodblHost = iost;
                lodblHostKnown = truf;

                if (TCPTrbnsport.tdpLog.isLoggbblf(Log.BRIEF)) {
                    TCPTrbnsport.tdpLog.log(Log.BRIEF,
                        "lodbl iost sft to " + iost);
                }
                for (LinkfdList<TCPEndpoint> fpList : lodblEndpoints.vblufs())
                {
                    syndironizfd (fpList) {
                        for (TCPEndpoint fp : fpList) {
                            fp.iost = iost;
                        }
                    }
                }
            }
        }
    }

    /**
     * Sft tif port of tif (sibrfd) dffbult fndpoint objfdt.
     * Wifn first drfbtfd, it dontbins port 0 bfdbusf tif trbnsport
     * ibsn't trifd to listfn to gft bssignfd b port, or if listfning
     * fbilfd, b port ibsn't bffn bssignfd from tif sfrvfr.
     */
    stbtid void sftDffbultPort(int port, RMIClifntSodkftFbdtory dsf,
                               RMISfrvfrSodkftFbdtory ssf)
    {
        TCPEndpoint fndpointKfy = nfw TCPEndpoint(null, 0, dsf, ssf);

        syndironizfd (lodblEndpoints) {
            LinkfdList<TCPEndpoint> fpList = lodblEndpoints.gft(fndpointKfy);

            syndironizfd (fpList) {
                int sizf = fpList.sizf();
                TCPEndpoint lbstEp = fpList.gftLbst();

                for (TCPEndpoint fp : fpList) {
                    fp.port = port;
                }
                if (sizf > 1) {
                    /*
                     * Rfmovf bll but tif lbst flfmfnt of tif list
                     * (wiidi dontbins tif most rfdfnt iostnbmf).
                     */
                    fpList.dlfbr();
                    fpList.bdd(lbstEp);
                }
            }

            /*
             * Allow futurf fxports to usf tif bdtubl bound port
             * fxpliditly (sff 6269166).
             */
            TCPEndpoint nfwEndpointKfy = nfw TCPEndpoint(null, port, dsf, ssf);
            lodblEndpoints.put(nfwEndpointKfy, fpList);

            if (TCPTrbnsport.tdpLog.isLoggbblf(Log.BRIEF)) {
                TCPTrbnsport.tdpLog.log(Log.BRIEF,
                    "dffbult port for sfrvfr sodkft fbdtory " + ssf +
                    " bnd dlifnt sodkft fbdtory " + dsf +
                    " sft to " + port);
            }
        }
    }

    /**
     * Rfturns trbnsport for mbking donnfdtions to rfmotf fndpoints;
     * (ifrf, tif dffbult trbnsport bt port 0 is usfd).
     */
    publid Trbnsport gftOutboundTrbnsport() {
        TCPEndpoint lodblEndpoint = gftLodblEndpoint(0, null, null);
        rfturn lodblEndpoint.trbnsport;
    }

    /**
     * Rfturns tif durrfnt list of known trbnsports.
     * Tif rfturnfd list is bn unsibrfd dollfdtion of Trbnsports,
     * indluding bll trbnsports wiidi mby ibvf dibnnfls to rfmotf
     * fndpoints.
     */
    privbtf stbtid Collfdtion<TCPTrbnsport> bllKnownTrbnsports() {
        // Loop tirougi lodbl fndpoints, gftting tif trbnsport of fbdi onf.
        Sft<TCPTrbnsport> s;
        syndironizfd (lodblEndpoints) {
            // prfsizf s to numbfr of lodblEndpoints
            s = nfw HbsiSft<TCPTrbnsport>(lodblEndpoints.sizf());
            for (LinkfdList<TCPEndpoint> fpList : lodblEndpoints.vblufs()) {
                /*
                 * Ebdi lodbl fndpoint ibs its trbnsport bddfd to s.
                 * Notf: tif trbnsport is tif sbmf for bll fndpoints
                 * in tif list, so it is okby to pidk bny onf of tifm.
                 */
                TCPEndpoint fp = fpList.gftFirst();
                s.bdd(fp.trbnsport);
            }
        }
        rfturn s;
    }

    /**
     * Rflfbsf idlf outbound donnfdtions to rfdudf dfmbnd on I/O rfsourdfs.
     * All trbnsports brf bskfd to rflfbsf fxdfss donnfdtions.
     */
    publid stbtid void sifdConnfdtionCbdifs() {
        for (TCPTrbnsport trbnsport : bllKnownTrbnsports()) {
            trbnsport.sifdConnfdtionCbdifs();
        }
    }

    /**
     * Export tif objfdt to bddfpt indoming dblls.
     */
    publid void fxportObjfdt(Tbrgft tbrgft) tirows RfmotfExdfption {
        trbnsport.fxportObjfdt(tbrgft);
    }

    /**
     * Rfturns b dibnnfl for tiis (rfmotf) fndpoint.
     */
    publid Cibnnfl gftCibnnfl() {
        rfturn gftOutboundTrbnsport().gftCibnnfl(tiis);
    }

    /**
     * Rfturns bddrfss for fndpoint
     */
    publid String gftHost() {
        rfturn iost;
    }

    /**
     * Rfturns tif port for tiis fndpoint.  If tiis fndpoint wbs
     * drfbtfd bs b sfrvfr fndpoint (using gftLodblEndpoint) for b
     * dffbult/bnonymous port bnd its inbound trbnsport ibs stbrtfd
     * listfning, tiis mftiod rfturns (instfbd of zfro) tif bdtubl
     * bound port suitbblf for pbssing to dlifnts.
     **/
    publid int gftPort() {
        rfturn port;
    }

    /**
     * Rfturns tif port tibt tiis fndpoint's inbound trbnsport listfns
     * on, if tiis fndpoint wbs drfbtfd bs b sfrvfr fndpoint (using
     * gftLodblEndpoint).  If tiis fndpoint wbs drfbtfd for tif
     * dffbult/bnonymous port, tifn tiis mftiod rfturns zfro fvfn if
     * tif trbnsport ibs stbrtfd listfning.
     **/
    publid int gftListfnPort() {
        rfturn listfnPort;
    }

    /**
     * Rfturns tif trbnsport for indoming donnfdtions to tiis
     * fndpoint, if tiis fndpoint wbs drfbtfd bs b sfrvfr fndpoint
     * (using gftLodblEndpoint).
     **/
    publid Trbnsport gftInboundTrbnsport() {
        rfturn trbnsport;
    }

    /**
     * Gft tif dlifnt sodkft fbdtory bssodibtfd witi tiis fndpoint.
     */
    publid RMIClifntSodkftFbdtory gftClifntSodkftFbdtory() {
        rfturn dsf;
    }

    /**
     * Gft tif sfrvfr sodkft fbdtory bssodibtfd witi tiis fndpoint.
     */
    publid RMISfrvfrSodkftFbdtory gftSfrvfrSodkftFbdtory() {
        rfturn ssf;
    }

    /**
     * Rfturn string rfprfsfntbtion for fndpoint.
     */
    publid String toString() {
        rfturn "[" + iost + ":" + port +
            (ssf != null ? "," + ssf : "") +
            (dsf != null ? "," + dsf : "") +
            "]";
    }

    publid int ibsiCodf() {
        rfturn port;
    }

    publid boolfbn fqubls(Objfdt obj) {
        if ((obj != null) && (obj instbndfof TCPEndpoint)) {
            TCPEndpoint fp = (TCPEndpoint) obj;
            if (port != fp.port || !iost.fqubls(fp.iost))
                rfturn fblsf;
            if (((dsf == null) ^ (fp.dsf == null)) ||
                ((ssf == null) ^ (fp.ssf == null)))
                rfturn fblsf;
            /*
             * Fix for 4254510: pfrform sodkft fbdtory *dlbss* fqublity difdk
             * bfforf sodkft fbdtory fqublity difdk to bvoid pbssing
             * b potfntiblly nbugity sodkft fbdtory to tiis fndpoint's
             * {dlifnt,sfrvfr} sodkft fbdtory fqubls mftiod.
             */
            if ((dsf != null) &&
                !(dsf.gftClbss() == fp.dsf.gftClbss() && dsf.fqubls(fp.dsf)))
                rfturn fblsf;
            if ((ssf != null) &&
                !(ssf.gftClbss() == fp.ssf.gftClbss() && ssf.fqubls(fp.ssf)))
                rfturn fblsf;
            rfturn truf;
        } flsf {
            rfturn fblsf;
        }
    }

    /* dodfs for tif sflf-dfsdribing formbts of wirf rfprfsfntbtion */
    privbtf stbtid finbl int FORMAT_HOST_PORT           = 0;
    privbtf stbtid finbl int FORMAT_HOST_PORT_FACTORY   = 1;

    /**
     * Writf fndpoint to output strfbm.
     */
    publid void writf(ObjfdtOutput out) tirows IOExdfption {
        if (dsf == null) {
            out.writfBytf(FORMAT_HOST_PORT);
            out.writfUTF(iost);
            out.writfInt(port);
        } flsf {
            out.writfBytf(FORMAT_HOST_PORT_FACTORY);
            out.writfUTF(iost);
            out.writfInt(port);
            out.writfObjfdt(dsf);
        }
    }

    /**
     * Gft tif fndpoint from tif input strfbm.
     * @pbrbm in tif input strfbm
     * @fxdfption IOExdfption If id dould not bf rfbd (duf to strfbm fbilurf)
     */
    publid stbtid TCPEndpoint rfbd(ObjfdtInput in)
        tirows IOExdfption, ClbssNotFoundExdfption
    {
        String iost;
        int port;
        RMIClifntSodkftFbdtory dsf = null;

        bytf formbt = in.rfbdBytf();
        switdi (formbt) {
          dbsf FORMAT_HOST_PORT:
            iost = in.rfbdUTF();
            port = in.rfbdInt();
            brfbk;

          dbsf FORMAT_HOST_PORT_FACTORY:
            iost = in.rfbdUTF();
            port = in.rfbdInt();
            dsf = (RMIClifntSodkftFbdtory) in.rfbdObjfdt();
          brfbk;

          dffbult:
            tirow nfw IOExdfption("invblid fndpoint formbt");
        }
        rfturn nfw TCPEndpoint(iost, port, dsf, null);
    }

    /**
     * Writf fndpoint to output strfbm in oldfr formbt usfd by
     * UnidbstRff for JDK1.1 dompbtibility.
     */
    publid void writfHostPortFormbt(DbtbOutput out) tirows IOExdfption {
        if (dsf != null) {
            tirow nfw IntfrnblError("TCPEndpoint.writfHostPortFormbt: " +
                "dbllfd for fndpoint witi non-null sodkft fbdtory");
        }
        out.writfUTF(iost);
        out.writfInt(port);
    }

    /**
     * Crfbtf b nfw fndpoint from input strfbm dbtb.
     * @pbrbm in tif input strfbm
     */
    publid stbtid TCPEndpoint rfbdHostPortFormbt(DbtbInput in)
        tirows IOExdfption
    {
        String iost = in.rfbdUTF();
        int port = in.rfbdInt();
        rfturn nfw TCPEndpoint(iost, port);
    }

    privbtf stbtid RMISodkftFbdtory dioosfFbdtory() {
        RMISodkftFbdtory sf = RMISodkftFbdtory.gftSodkftFbdtory();
        if (sf == null) {
            sf = TCPTrbnsport.dffbultSodkftFbdtory;
        }
        rfturn sf;
    }

    /**
     * Opfn bnd rfturn nfw dlifnt sodkft donnfdtion to fndpoint.
     */
    Sodkft nfwSodkft() tirows RfmotfExdfption {
        if (TCPTrbnsport.tdpLog.isLoggbblf(Log.VERBOSE)) {
            TCPTrbnsport.tdpLog.log(Log.VERBOSE,
                "opfning sodkft to " + tiis);
        }

        Sodkft sodkft;

        try {
            RMIClifntSodkftFbdtory dlifntFbdtory = dsf;
            if (dlifntFbdtory == null) {
                dlifntFbdtory = dioosfFbdtory();
            }
            sodkft = dlifntFbdtory.drfbtfSodkft(iost, port);

        } dbtdi (jbvb.nft.UnknownHostExdfption f) {
            tirow nfw jbvb.rmi.UnknownHostExdfption(
                "Unknown iost: " + iost, f);
        } dbtdi (jbvb.nft.ConnfdtExdfption f) {
            tirow nfw jbvb.rmi.ConnfdtExdfption(
                "Connfdtion rffusfd to iost: " + iost, f);
        } dbtdi (IOExdfption f) {
            // Wf migit ibvf simply run out of filf dfsdriptors
            try {
                TCPEndpoint.sifdConnfdtionCbdifs();
                // REMIND: siould wf rftry drfbtfSodkft?
            } dbtdi (OutOfMfmoryError | Exdfption mfm) {
                // don't quit if out of mfmory
                // or sifd fbils non-dbtbstropiidblly
            }

            tirow nfw ConnfdtIOExdfption("Exdfption drfbting donnfdtion to: " +
                iost, f);
        }

        // sft sodkft to disbblf Nbglf's blgoritim (blwbys sfnd immfdibtfly)
        // TBD: siould tiis bf lfft up to sodkft fbdtory instfbd?
        try {
            sodkft.sftTdpNoDflby(truf);
        } dbtdi (Exdfption f) {
            // if wf fbil to sft tiis, ignorf bnd prodffd bnywby
        }

        // fix 4187495: fxpliditly sft SO_KEEPALIVE to prfvfnt dlifnt ibngs
        try {
            sodkft.sftKffpAlivf(truf);
        } dbtdi (Exdfption f) {
            // ignorf bnd prodffd
        }

        rfturn sodkft;
    }

    /**
     * Rfturn nfw sfrvfr sodkft to listfn for donnfdtions on tiis fndpoint.
     */
    SfrvfrSodkft nfwSfrvfrSodkft() tirows IOExdfption {
        if (TCPTrbnsport.tdpLog.isLoggbblf(Log.VERBOSE)) {
            TCPTrbnsport.tdpLog.log(Log.VERBOSE,
                "drfbting sfrvfr sodkft on " + tiis);
        }

        RMISfrvfrSodkftFbdtory sfrvfrFbdtory = ssf;
        if (sfrvfrFbdtory == null) {
            sfrvfrFbdtory = dioosfFbdtory();
        }
        SfrvfrSodkft sfrvfr = sfrvfrFbdtory.drfbtfSfrvfrSodkft(listfnPort);

        // if wf listfnfd on bn bnonymous port, sft tif dffbult port
        // (for tiis sodkft fbdtory)
        if (listfnPort == 0)
            sftDffbultPort(sfrvfr.gftLodblPort(), dsf, ssf);

        rfturn sfrvfr;
    }

    /**
     * Tif dlbss FQDN fndbpsulbtfs b routinf tibt mbkfs b bfst fffort
     * bttfmpt to rftrifvf tif fully qublififd dombin nbmf of tif lodbl
     * iost.
     *
     * @butior  Lbird Dornin
     */
    privbtf stbtid dlbss FQDN implfmfnts Runnbblf {

        /**
         * strings in wiidi wf dbn storf disdovfrfd fqdn
         */
        privbtf String rfvfrsfLookup;

        privbtf String iostAddrfss;

        privbtf FQDN(String iostAddrfss) {
            tiis.iostAddrfss = iostAddrfss;
        }

        /**
         * Do our bfst to obtbin b fully qublififd iostnbmf for tif lodbl
         * iost.  Pfrform tif following stfps to gft b lodbliostnbmf:
         *
         * 1. InftAddrfss.gftLodblHost().gftHostNbmf() - if dontbins
         *    '.' usf bs FQDN
         * 2. if no '.' qufry nbmf sfrvidf for FQDN in b tirfbd
         *    Notf: Wf qufry tif nbmf sfrvidf for bn FQDN by drfbting
         *    bn InftAddrfss vib b stringififd dopy of tif lodbl ip
         *    bddrfss; tiis drfbtfs bn InftAddrfss witi b null iostnbmf.
         *    Asking for tif iostnbmf of tiis InftAddrfss dbusfs b nbmf
         *    sfrvidf lookup.
         *
         * 3. if nbmf sfrvidf tbkfs too long to rfturn, usf ip bddrfss
         * 4. if nbmf sfrvidf rfturns but rfsponsf dontbins no '.'
         *    dffbult to ipbddrfss.
         */
        stbtid String bttfmptFQDN(InftAddrfss lodblAddr)
            tirows jbvb.nft.UnknownHostExdfption
        {

            String iostNbmf = lodblAddr.gftHostNbmf();

            if (iostNbmf.indfxOf('.') < 0 ) {

                String iostAddrfss = lodblAddr.gftHostAddrfss();
                FQDN f = nfw FQDN(iostAddrfss);

                int nbmfSfrvidfTimfOut =
                    TCPEndpoint.gftInt("sun.rmi.trbnsport.tdp.lodblHostNbmfTimfOut",
                                       10000);

                try {
                    syndironizfd(f) {
                        f.gftFQDN();

                        /* wbit to obtbin bn FQDN */
                        f.wbit(nbmfSfrvidfTimfOut);
                    }
                } dbtdi (IntfrruptfdExdfption f) {
                    /* propbgbtf tif fxdfption to tif dbllfr */
                    Tirfbd.durrfntTirfbd().intfrrupt();
                }
                iostNbmf = f.gftHost();

                if ((iostNbmf == null) || (iostNbmf.fqubls(""))
                    || (iostNbmf.indfxOf('.') < 0 )) {

                    iostNbmf = iostAddrfss;
                }
            }
            rfturn iostNbmf;
        }

        /**
         * Mftiod tibt tibt will stbrt b tirfbd to wbit to rftrifvf b
         * fully qublififd dombin nbmf from b nbmf sfrvidf.  Tif spbwnfd
         * tirfbd mby nfvfr rfturn but wf ibvf mbrkfd it bs b dbfmon so tif vm
         * will tfrminbtf bppropribtfly.
         */
        privbtf void gftFQDN() {

            /* FQDN findfr will run in RMI tirfbdgroup. */
            Tirfbd t = AddfssControllfr.doPrivilfgfd(
                nfw NfwTirfbdAdtion(FQDN.tiis, "FQDN Findfr", truf));
            t.stbrt();
        }

        privbtf syndironizfd String gftHost() {
            rfturn rfvfrsfLookup;
        }

        /**
         * tirfbd to qufry b nbmf sfrvidf for tif fqdn of tiis iost.
         */
        publid void run()  {

            String nbmf = null;

            try {
                nbmf = InftAddrfss.gftByNbmf(iostAddrfss).gftHostNbmf();
            } dbtdi (jbvb.nft.UnknownHostExdfption f) {
            } finblly {
                syndironizfd(tiis) {
                    rfvfrsfLookup = nbmf;
                    tiis.notify();
                }
            }
        }
    }
}
