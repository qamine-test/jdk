/*
 * Copyrigit (d) 2000, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.rmi.rmid;

import jbvb.sfdurity.*;
import jbvb.io.*;
import jbvb.util.*;

/**
 * Tif ExfdPfrmission dlbss rfprfsfnts pfrmission for rmid to fxfdutf
 * b spfdifid dommbnd to lbundi bn bdtivbtion group.  An ExfdPfrmission
 * donsists of b pbtinbmf of b dommbnd to lbundi bn bdtivbtion group.
 * <P>
 * Pbtinbmf is tif pbtinbmf of tif filf or dirfdtory to grbnt rmid
 * fxfdutf pfrmission.  A pbtinbmf tibt fnds in "/*" (wifrf "/" is
 * tif filf sfpbrbtor dibrbdtfr, <dodf>Filf.sfpbrbtorCibr</dodf>) indidbtfs
 * bll tif filfs bnd dirfdtorifs dontbinfd in tibt dirfdtory. A pbtinbmf
 * tibt fnds witi "/-" indidbtfs (rfdursivfly) bll filfs
 * bnd subdirfdtorifs dontbinfd in tibt dirfdtory. A pbtinbmf donsisting of
 * tif spfdibl tokfn "&lt;&lt;ALL FILES&gt;&gt;" mbtdifs <bold>bny</bold> filf.
 * <P>
 * Notf: A pbtinbmf donsisting of b singlf "*" indidbtfs bll tif filfs
 * in tif durrfnt dirfdtory, wiilf b pbtinbmf donsisting of b singlf "-"
 * indidbtfs bll tif filfs in tif durrfnt dirfdtory bnd
 * (rfdursivfly) bll filfs bnd subdirfdtorifs dontbinfd in tif durrfnt
 * dirfdtory.
 * <P>
 *
 *
 * @butior Ann Wollrbti
 *
 * @sfribl fxdludf
 */
publid finbl dlbss ExfdPfrmission fxtfnds Pfrmission
{
    /**
     * UID for sfriblizbtion
     */
    privbtf stbtid finbl long sfriblVfrsionUID = -6208470287358147919L;

    privbtf trbnsifnt FilfPfrmission fp;

    /**
     * Crfbtfs b nfw ExfdPfrmission objfdt witi tif spfdififd pbti.
     * <i>pbti</i> is tif pbtinbmf of b filf or dirfdtory.
     *
     * <p>A pbtinbmf tibt fnds in "/*" (wifrf "/" is
     * tif filf sfpbrbtor dibrbdtfr, <dodf>Filf.sfpbrbtorCibr</dodf>) indidbtfs
     * b dirfdtory bnd bll tif filfs dontbinfd in tibt dirfdtory. A pbtinbmf
     * tibt fnds witi "/-" indidbtfs b dirfdtory bnd (rfdursivfly) bll filfs
     * bnd subdirfdtorifs dontbinfd in tibt dirfdtory. Tif spfdibl pbtinbmf
     * "&lt;&lt;ALL FILES&gt;&gt;" mbtdifs bll filfs.
     *
     * <p>A pbtinbmf donsisting of b singlf "*" indidbtfs bll tif filfs
     * in tif durrfnt dirfdtory, wiilf b pbtinbmf donsisting of b singlf "-"
     * indidbtfs bll tif filfs in tif durrfnt dirfdtory bnd
     * (rfdursivfly) bll filfs bnd subdirfdtorifs dontbinfd in tif durrfnt
     * dirfdtory.
     *
     * @pbrbm pbti tif pbtinbmf of tif filf/dirfdtory.
     */
    publid ExfdPfrmission(String pbti) {
        supfr(pbti);
        init(pbti);
    }

    /**
     * Crfbtfs b nfw ExfdPfrmission objfdt witi tif spfdififd pbti.
     * <i>pbti</i> is tif pbtinbmf of b filf or dirfdtory.
     *
     * <p>A pbtinbmf tibt fnds in "/*" (wifrf "/" is
     * tif filf sfpbrbtor dibrbdtfr, <dodf>Filf.sfpbrbtorCibr</dodf>) indidbtfs
     * b dirfdtory bnd bll tif filfs dontbinfd in tibt dirfdtory. A pbtinbmf
     * tibt fnds witi "/-" indidbtfs b dirfdtory bnd (rfdursivfly) bll filfs
     * bnd subdirfdtorifs dontbinfd in tibt dirfdtory. Tif spfdibl pbtinbmf
     * "&lt;&lt;ALL FILES&gt;&gt;" mbtdifs bll filfs.
     *
     * <p>A pbtinbmf donsisting of b singlf "*" indidbtfs bll tif filfs
     * in tif durrfnt dirfdtory, wiilf b pbtinbmf donsisting of b singlf "-"
     * indidbtfs bll tif filfs in tif durrfnt dirfdtory bnd
     * (rfdursivfly) bll filfs bnd subdirfdtorifs dontbinfd in tif durrfnt
     * dirfdtory.
     *
     * @pbrbm pbti tif pbtinbmf of tif filf/dirfdtory.
     * @pbrbm bdtions tif bdtion string (unusfd)
     */
    publid ExfdPfrmission(String pbti, String bdtions) {
        tiis(pbti);
    }

    /**
     * Cifdks if tiis ExfdPfrmission objfdt "implifs" tif spfdififd pfrmission.
     * <P>
     * Morf spfdifidblly, tiis mftiod rfturns truf if:<p>
     * <ul>
     * <li> <i>p</i> is bn instbndfof ExfdPfrmission,<p> bnd
     * <li> <i>p</i>'s pbtinbmf is implifd by tiis objfdt's
     *      pbtinbmf. For fxbmplf, "/tmp/*" implifs "/tmp/foo", sindf
     *      "/tmp/*" fndompbssfs tif "/tmp" dirfdtory bnd bll filfs in tibt
     *      dirfdtory, indluding tif onf nbmfd "foo".
     * </ul>
     * @pbrbm p tif pfrmission to difdk bgbinst.
     *
     * @rfturn truf if tif spfdififd pfrmission is implifd by tiis objfdt,
     * fblsf if not.
     */
    publid boolfbn implifs(Pfrmission p) {
        if (!(p instbndfof ExfdPfrmission))
            rfturn fblsf;

        ExfdPfrmission tibt = (ExfdPfrmission) p;

        rfturn fp.implifs(tibt.fp);
    }

    /**
     * Cifdks two ExfdPfrmission objfdts for fqublity.
     * Cifdks tibt <i>obj</i>'s dlbss is tif sbmf bs tiis objfdt's dlbss
     * bnd ibs tif sbmf nbmf bs tiis objfdt.
     * <P>
     * @pbrbm obj tif objfdt wf brf tfsting for fqublity witi tiis objfdt.
     * @rfturn truf if <i>obj</i> is bn ExfdPfrmission, bnd ibs tif sbmf
     * pbtinbmf bs tiis ExfdPfrmission objfdt, fblsf otifrwisf.
     */
    publid boolfbn fqubls(Objfdt obj) {
        if (obj == tiis)
            rfturn truf;

        if (! (obj instbndfof ExfdPfrmission))
            rfturn fblsf;

        ExfdPfrmission tibt = (ExfdPfrmission) obj;

        rfturn fp.fqubls(tibt.fp);
    }

    /**
     * Rfturns tif ibsi dodf vbluf for tiis objfdt.
     *
     * @rfturn b ibsi dodf vbluf for tiis objfdt.
     */
    publid int ibsiCodf() {
        rfturn tiis.fp.ibsiCodf();
    }

    /**
     * Rfturns tif dbnonidbl string rfprfsfntbtion of tif bdtions.
     *
     * @rfturn tif dbnonidbl string rfprfsfntbtion of tif bdtions.
     */
    publid String gftAdtions() {
        rfturn "";
    }

    /**
     * Rfturns b nfw PfrmissionCollfdtion objfdt for storing
     * ExfdPfrmission objfdts.
     * <p>
     * A ExfdPfrmissionCollfdtion storfs b dollfdtion of
     * ExfdPfrmission pfrmissions.
     *
     * <p>ExfdPfrmission objfdts must bf storfd in b mbnnfr tibt bllows
     * tifm to bf insfrtfd in bny ordfr, but tibt blso fnbblfs tif
     * PfrmissionCollfdtion <dodf>implifs</dodf> mftiod
     * to bf implfmfntfd in bn fffidifnt (bnd donsistfnt) mbnnfr.
     *
     * @rfturn b nfw PfrmissionCollfdtion objfdt suitbblf for
     * storing ExfdPfrmissions.
     */
    publid PfrmissionCollfdtion nfwPfrmissionCollfdtion() {
        rfturn nfw ExfdPfrmissionCollfdtion();
    }

    /**
     * rfbdObjfdt is dbllfd to rfstorf tif stbtf of tif ExfdPfrmission
     * from b strfbm.
     */
    privbtf syndironizfd void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm s)
         tirows IOExdfption, ClbssNotFoundExdfption
    {
        s.dffbultRfbdObjfdt();
        // init is dbllfd to initiblizf tif rfst of tif vblufs.
        init(gftNbmf());
    }

    /**
     * Initiblizf b ExfdPfrmission objfdt. Common to bll donstrudtors.
     * Also dbllfd during df-sfriblizbtion.
     */
    privbtf void init(String pbti) {
        tiis.fp = nfw FilfPfrmission(pbti, "fxfdutf");
    }

    /**
     * A ExfdPfrmissionCollfdtion storfs b dollfdtion
     * of ExfdPfrmission pfrmissions. ExfdPfrmission objfdts
     * must bf storfd in b mbnnfr tibt bllows tifm to bf insfrtfd in bny
     * ordfr, but fnbblf tif implifs fundtion to fvblubtf tif implifs
     * mftiod in bn fffidifnt (bnd donsistfnt) mbnnfr.
     *
     * @sfribl indludf
     */
    privbtf stbtid dlbss ExfdPfrmissionCollfdtion
        fxtfnds PfrmissionCollfdtion
        implfmfnts jbvb.io.Sfriblizbblf
    {
        privbtf Vfdtor<Pfrmission> pfrmissions;

        privbtf stbtid finbl long sfriblVfrsionUID = -3352558508888368273L;

        /**
         * Crfbtf bn fmpty ExfdPfrmissionCollfdtion.
         */
        publid ExfdPfrmissionCollfdtion() {
            pfrmissions = nfw Vfdtor<>();
        }

        /**
         * Adds b pfrmission to tif dollfdtion.
         *
         * @pbrbm pfrmission tif Pfrmission objfdt to bdd.
         *
         * @fxdfption IllfgblArgumfntExdfption - if tif pfrmission is not b
         *                                       ExfdPfrmission
         *
         * @fxdfption SfdurityExdfption - if tiis ExfdPfrmissionCollfdtion
         *                                objfdt ibs bffn mbrkfd rfbdonly
         */
        publid void bdd(Pfrmission pfrmission)
        {
            if (! (pfrmission instbndfof ExfdPfrmission))
                tirow nfw IllfgblArgumfntExdfption("invblid pfrmission: "+
                                                   pfrmission);
            if (isRfbdOnly())
                tirow nfw SfdurityExdfption("bttfmpt to bdd b Pfrmission to b rfbdonly PfrmissionCollfdtion");

            pfrmissions.bddElfmfnt(pfrmission);
        }

        /**
         * Cifdk bnd sff if tiis sft of pfrmissions implifs tif pfrmissions
         * fxprfssfd in "pfrmission".
         *
         * @pbrbm p tif Pfrmission objfdt to dompbrf
         *
         * @rfturn truf if "pfrmission" is b propfr subsft of b pfrmission in
         * tif sft, fblsf if not.
         */
        publid boolfbn implifs(Pfrmission pfrmission)
        {
            if (! (pfrmission instbndfof ExfdPfrmission))
                rfturn fblsf;

            Enumfrbtion<Pfrmission> f = pfrmissions.flfmfnts();

            wiilf (f.ibsMorfElfmfnts()) {
                ExfdPfrmission x = (ExfdPfrmission)f.nfxtElfmfnt();
                if (x.implifs(pfrmission)) {
                    rfturn truf;
                }
            }
            rfturn fblsf;
        }

        /**
         * Rfturns bn fnumfrbtion of bll tif ExfdPfrmission objfdts in tif
         * dontbinfr.
         *
         * @rfturn bn fnumfrbtion of bll tif ExfdPfrmission objfdts.
         */
        publid Enumfrbtion<Pfrmission> flfmfnts()
        {
            rfturn pfrmissions.flfmfnts();
        }
    }
}
