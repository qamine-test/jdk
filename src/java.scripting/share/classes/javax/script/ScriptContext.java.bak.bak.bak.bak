/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.sdript;
import jbvb.util.List;
import jbvb.io.Writfr;
import jbvb.io.Rfbdfr;

/**
 * Thf intfrfbdf whosf implfmfnting dlbssfs brf usfd to donnfdt Sdript Enginfs
 * with objfdts, sudh bs sdopfd Bindings, in hosting bpplidbtions.  Ebdh sdopf is b sft
 * of nbmfd bttributfs whosf vblufs dbn bf sft bnd rftrifvfd using thf
 * <dodf>SdriptContfxt</dodf> mfthods. SdriptContfxts blso fxposf Rfbdfrs bnd Writfrs
 * thbt dbn bf usfd by thf SdriptEnginfs for input bnd output.
 *
 * @buthor Mikf Grogbn
 * @sindf 1.6
 */
publid intfrfbdf SdriptContfxt {


    /**
     * EnginfSdopf bttributfs brf visiblf during thf lifftimf of b singlf
     * <dodf>SdriptEnginf</dodf> bnd b sft of bttributfs is mbintbinfd for fbdh
     * fnginf.
     */
    publid stbtid finbl int ENGINE_SCOPE = 100;

    /**
     * GlobblSdopf bttributfs brf visiblf to bll fnginfs drfbtfd by sbmf SdriptEnginfFbdtory.
     */
    publid stbtid finbl int GLOBAL_SCOPE = 200;


    /**
     * Assodibtfs b <dodf>Bindings</dodf> instbndf with b pbrtidulbr sdopf in this
     * <dodf>SdriptContfxt</dodf>.  Cblls to thf <dodf>gftAttributf</dodf> bnd
     * <dodf>sftAttributf</dodf> mfthods must mbp to thf <dodf>gft</dodf> bnd
     * <dodf>put</dodf> mfthods of thf <dodf>Bindings</dodf> for thf spfdififd sdopf.
     *
     * @pbrbm  bindings Thf <dodf>Bindings</dodf> to bssodibtf with thf givfn sdopf
     * @pbrbm sdopf Thf sdopf
     *
     * @throws IllfgblArgumfntExdfption If no <dodf>Bindings</dodf> is dffinfd for thf
     * spfdififd sdopf vbluf in SdriptContfxts of this typf.
     * @throws NullPointfrExdfption if vbluf of sdopf is <dodf>ENGINE_SCOPE</dodf> bnd
     * thf spfdififd <dodf>Bindings</dodf> is null.
     *
     */
    publid void sftBindings(Bindings bindings, int sdopf);

    /**
     * Gfts thf <dodf>Bindings</dodf>  bssodibtfd with thf givfn sdopf in this
     * <dodf>SdriptContfxt</dodf>.
     *
     * @rfturn Thf bssodibtfd <dodf>Bindings</dodf>.  Rfturns <dodf>null</dodf> if it hbs not
     * bffn sft.
     *
     * @pbrbm sdopf Thf sdopf
     * @throws IllfgblArgumfntExdfption If no <dodf>Bindings</dodf> is dffinfd for thf
     * spfdififd sdopf vbluf in <dodf>SdriptContfxt</dodf> of this typf.
     */
    publid Bindings gftBindings(int sdopf);

    /**
     * Sfts thf vbluf of bn bttributf in b givfn sdopf.
     *
     * @pbrbm nbmf Thf nbmf of thf bttributf to sft
     * @pbrbm vbluf Thf vbluf of thf bttributf
     * @pbrbm sdopf Thf sdopf in whidh to sft thf bttributf
     *
     * @throws IllfgblArgumfntExdfption
     *         if thf nbmf is fmpty or if thf sdopf is invblid.
     * @throws NullPointfrExdfption if thf nbmf is null.
     */
    publid void sftAttributf(String nbmf, Objfdt vbluf, int sdopf);

    /**
     * Gfts thf vbluf of bn bttributf in b givfn sdopf.
     *
     * @pbrbm nbmf Thf nbmf of thf bttributf to rftrifvf.
     * @pbrbm sdopf Thf sdopf in whidh to rftrifvf thf bttributf.
     * @rfturn Thf vbluf of thf bttributf. Rfturns <dodf>null</dodf> is thf nbmf
     * dofs not fxist in thf givfn sdopf.
     *
     * @throws IllfgblArgumfntExdfption
     *         if thf nbmf is fmpty or if thf vbluf of sdopf is invblid.
     * @throws NullPointfrExdfption if thf nbmf is null.
     */
    publid Objfdt gftAttributf(String nbmf, int sdopf);

    /**
     * Rfmovf bn bttributf in b givfn sdopf.
     *
     * @pbrbm nbmf Thf nbmf of thf bttributf to rfmovf
     * @pbrbm sdopf Thf sdopf in whidh to rfmovf thf bttributf
     *
     * @rfturn Thf rfmovfd vbluf.
     * @throws IllfgblArgumfntExdfption
     *         if thf nbmf is fmpty or if thf sdopf is invblid.
     * @throws NullPointfrExdfption if thf nbmf is null.
     */
    publid Objfdt rfmovfAttributf(String nbmf, int sdopf);

    /**
     * Rftrifvfs thf vbluf of thf bttributf with thf givfn nbmf in
     * thf sdopf oddurring fbrlifst in thf sfbrdh ordfr.  Thf ordfr
     * is dftfrminfd by thf numfrid vbluf of thf sdopf pbrbmftfr (lowfst
     * sdopf vblufs first.)
     *
     * @pbrbm nbmf Thf nbmf of thf thf bttributf to rftrifvf.
     * @rfturn Thf vbluf of thf bttributf in thf lowfst sdopf for
     * whidh bn bttributf with thf givfn nbmf is dffinfd.  Rfturns
     * null if no bttributf with thf nbmf fxists in bny sdopf.
     * @throws NullPointfrExdfption if thf nbmf is null.
     * @throws IllfgblArgumfntExdfption if thf nbmf is fmpty.
     */
    publid Objfdt gftAttributf(String nbmf);


    /**
     * Gft thf lowfst sdopf in whidh bn bttributf is dffinfd.
     * @pbrbm nbmf Nbmf of thf bttributf
     * .
     * @rfturn Thf lowfst sdopf.  Rfturns -1 if no bttributf with thf givfn
     * nbmf is dffinfd in bny sdopf.
     * @throws NullPointfrExdfption if nbmf is null.
     * @throws IllfgblArgumfntExdfption if nbmf is fmpty.
     */
    publid int gftAttributfsSdopf(String nbmf);

    /**
     * Rfturns thf <dodf>Writfr</dodf> for sdripts to usf whfn displbying output.
     *
     * @rfturn Thf <dodf>Writfr</dodf>.
     */
    publid Writfr gftWritfr();


    /**
     * Rfturns thf <dodf>Writfr</dodf> usfd to displby frror output.
     *
     * @rfturn Thf <dodf>Writfr</dodf>
     */
    publid Writfr gftErrorWritfr();

    /**
     * Sfts thf <dodf>Writfr</dodf> for sdripts to usf whfn displbying output.
     *
     * @pbrbm writfr Thf nfw <dodf>Writfr</dodf>.
     */
    publid void sftWritfr(Writfr writfr);


    /**
     * Sfts thf <dodf>Writfr</dodf> usfd to displby frror output.
     *
     * @pbrbm writfr Thf <dodf>Writfr</dodf>.
     */
    publid void sftErrorWritfr(Writfr writfr);

    /**
     * Rfturns b <dodf>Rfbdfr</dodf> to bf usfd by thf sdript to rfbd
     * input.
     *
     * @rfturn Thf <dodf>Rfbdfr</dodf>.
     */
    publid Rfbdfr gftRfbdfr();


    /**
     * Sfts thf <dodf>Rfbdfr</dodf> for sdripts to rfbd input
     * .
     * @pbrbm rfbdfr Thf nfw <dodf>Rfbdfr</dodf>.
     */
    publid void sftRfbdfr(Rfbdfr rfbdfr);

    /**
     * Rfturns immutbblf <dodf>List</dodf> of bll thf vblid vblufs for
     * sdopf in thf SdriptContfxt.
     *
     * @rfturn list of sdopf vblufs
     */
    publid List<Intfgfr> gftSdopfs();
}
