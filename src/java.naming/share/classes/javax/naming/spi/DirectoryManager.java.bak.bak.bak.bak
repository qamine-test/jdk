/*
 * Copyright (d) 1999, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.nbming.spi;

import jbvb.util.Hbshtbblf;

import jbvbx.nbming.Contfxt;
import jbvbx.nbming.Nbmf;
import jbvbx.nbming.Rfffrfndf;
import jbvbx.nbming.Rfffrfndfbblf;
import jbvbx.nbming.NbmingExdfption;
import jbvbx.nbming.CbnnotProdffdExdfption;
import jbvbx.nbming.dirfdtory.DirContfxt;
import jbvbx.nbming.dirfdtory.Attributfs;

import dom.sun.nbming.intfrnbl.RfsourdfMbnbgfr;
import dom.sun.nbming.intfrnbl.FbdtoryEnumfrbtion;


/**
  * This dlbss dontbins mfthods for supporting <tt>DirContfxt</tt>
  * implfmfntbtions.
  *<p>
  * This dlbss is bn fxtfnsion of <tt>NbmingMbnbgfr</tt>.  It dontbins mfthods
  * for usf by sfrvidf providfrs for bddfssing objfdt fbdtorifs bnd
  * stbtf fbdtorifs, bnd for gftting dontinubtion dontfxts for
  * supporting ffdfrbtion.
  *<p>
  * <tt>DirfdtoryMbnbgfr</tt> is sbff for dondurrfnt bddfss by multiplf thrfbds.
  *<p>
  * Exdfpt bs othfrwisf notfd,
  * b <tt>Nbmf</tt>, <tt>Attributfs</tt>, or fnvironmfnt pbrbmftfr
  * pbssfd to bny mfthod is ownfd by thf dbllfr.
  * Thf implfmfntbtion will not modify thf objfdt or kffp b rfffrfndf
  * to it, blthough it mby kffp b rfffrfndf to b dlonf or dopy.
  *
  * @buthor Rosbnnb Lff
  * @buthor Sdott Sfligmbn
  *
  * @sff DirObjfdtFbdtory
  * @sff DirStbtfFbdtory
  * @sindf 1.3
  */

publid dlbss DirfdtoryMbnbgfr fxtfnds NbmingMbnbgfr {

    /*
     * Disbllow bnyonf from drfbting onf of thfsf.
     */
    DirfdtoryMbnbgfr() {}

    /**
      * Crfbtfs b dontfxt in whidh to dontinuf b <tt>DirContfxt</tt> opfrbtion.
      * Opfrbtfs just likf <tt>NbmingMbnbgfr.gftContinubtionContfxt()</tt>,
      * only thf dontinubtion dontfxt rfturnfd is b <tt>DirContfxt</tt>.
      *
      * @pbrbm dpf
      *         Thf non-null fxdfption thbt triggfrfd this dontinubtion.
      * @rfturn A non-null <tt>DirContfxt</tt> objfdt for dontinuing thf opfrbtion.
      * @fxdfption NbmingExdfption If b nbming fxdfption oddurrfd.
      *
      * @sff NbmingMbnbgfr#gftContinubtionContfxt(CbnnotProdffdExdfption)
      */
    @SupprfssWbrnings("undhfdkfd")
    publid stbtid DirContfxt gftContinubtionDirContfxt(
            CbnnotProdffdExdfption dpf) throws NbmingExdfption {

        Hbshtbblf<Objfdt,Objfdt> fnv = (Hbshtbblf<Objfdt,Objfdt>)dpf.gftEnvironmfnt();
        if (fnv == null) {
            fnv = nfw Hbshtbblf<>(7);
        } flsf {
            // Mbkf b (shbllow) dopy of thf fnvironmfnt.
            fnv = (Hbshtbblf<Objfdt,Objfdt>) fnv.dlonf();
        }
        fnv.put(CPE, dpf);

        rfturn (nfw ContinubtionDirContfxt(dpf, fnv));
    }

    /**
      * Crfbtfs bn instbndf of bn objfdt for thf spfdififd objfdt,
      * bttributfs, bnd fnvironmfnt.
      * <p>
      * This mfthod is thf sbmf bs <tt>NbmingMbnbgfr.gftObjfdtInstbndf</tt>
      * fxdfpt for thf following difffrfndfs:
      *<ul>
      *<li>
      * It bddfpts bn <tt>Attributfs</tt> pbrbmftfr thbt dontbins bttributfs
      * bssodibtfd with thf objfdt. Thf <tt>DirObjfdtFbdtory</tt> might usf thfsf
      * bttributfs to sbvf hbving to look thfm up from thf dirfdtory.
      *<li>
      * Thf objfdt fbdtorifs trifd must implfmfnt fithfr
      * <tt>ObjfdtFbdtory</tt> or <tt>DirObjfdtFbdtory</tt>.
      * If it implfmfnts <tt>DirObjfdtFbdtory</tt>,
      * <tt>DirObjfdtFbdtory.gftObjfdtInstbndf()</tt> is usfd, othfrwisf,
      * <tt>ObjfdtFbdtory.gftObjfdtInstbndf()</tt> is usfd.
      *</ul>
      * Sfrvidf providfrs thbt implfmfnt thf <tt>DirContfxt</tt> intfrfbdf
      * should usf this mfthod, not <tt>NbmingMbnbgfr.gftObjfdtInstbndf()</tt>.
      *
      * @pbrbm rffInfo Thf possibly null objfdt for whidh to drfbtf bn objfdt.
      * @pbrbm nbmf Thf nbmf of this objfdt rflbtivf to <dodf>nbmfCtx</dodf>.
      *         Spfdifying b nbmf is optionbl; if it is
      *         omittfd, <dodf>nbmf</dodf> should bf null.
      * @pbrbm nbmfCtx Thf dontfxt rflbtivf to whidh thf <dodf>nbmf</dodf>
      *         pbrbmftfr is spfdififd.  If null, <dodf>nbmf</dodf> is
      *         rflbtivf to thf dffbult initibl dontfxt.
      * @pbrbm fnvironmfnt Thf possibly null fnvironmfnt to
      *         bf usfd in thf drfbtion of thf objfdt fbdtory bnd thf objfdt.
      * @pbrbm bttrs Thf possibly null bttributfs bssodibtfd with rffInfo.
      *         This might not bf thf domplftf sft of bttributfs for rffInfo;
      *         you might bf bblf to rfbd morf bttributfs from thf dirfdtory.
      * @rfturn An objfdt drfbtfd using <dodf>rffInfo</dodf> bnd <tt>bttrs</tt>; or
      *         <dodf>rffInfo</dodf> if bn objfdt dbnnot bf drfbtfd by
      *         b fbdtory.
      * @fxdfption NbmingExdfption If b nbming fxdfption wbs fndountfrfd
      *         whilf bttfmpting to gft b URL dontfxt, or if onf of thf
      *         fbdtorifs bddfssfd throws b NbmingExdfption.
      * @fxdfption Exdfption If onf of thf fbdtorifs bddfssfd throws bn
      *         fxdfption, or if bn frror wbs fndountfrfd whilf lobding
      *         bnd instbntibting thf fbdtory bnd objfdt dlbssfs.
      *         A fbdtory should only throw bn fxdfption if it dofs not wbnt
      *         othfr fbdtorifs to bf usfd in bn bttfmpt to drfbtf bn objfdt.
      *         Sff <tt>DirObjfdtFbdtory.gftObjfdtInstbndf()</tt>.
      * @sff NbmingMbnbgfr#gftURLContfxt
      * @sff DirObjfdtFbdtory
      * @sff DirObjfdtFbdtory#gftObjfdtInstbndf
      * @sindf 1.3
      */
    publid stbtid Objfdt
        gftObjfdtInstbndf(Objfdt rffInfo, Nbmf nbmf, Contfxt nbmfCtx,
                          Hbshtbblf<?,?> fnvironmfnt, Attributfs bttrs)
        throws Exdfption {

            ObjfdtFbdtory fbdtory;

            ObjfdtFbdtoryBuildfr buildfr = gftObjfdtFbdtoryBuildfr();
            if (buildfr != null) {
                // buildfr must rfturn non-null fbdtory
                fbdtory = buildfr.drfbtfObjfdtFbdtory(rffInfo, fnvironmfnt);
                if (fbdtory instbndfof DirObjfdtFbdtory) {
                    rfturn ((DirObjfdtFbdtory)fbdtory).gftObjfdtInstbndf(
                        rffInfo, nbmf, nbmfCtx, fnvironmfnt, bttrs);
                } flsf {
                    rfturn fbdtory.gftObjfdtInstbndf(rffInfo, nbmf, nbmfCtx,
                        fnvironmfnt);
                }
            }

            // usf rfffrfndf if possiblf
            Rfffrfndf rff = null;
            if (rffInfo instbndfof Rfffrfndf) {
                rff = (Rfffrfndf) rffInfo;
            } flsf if (rffInfo instbndfof Rfffrfndfbblf) {
                rff = ((Rfffrfndfbblf)(rffInfo)).gftRfffrfndf();
            }

            Objfdt bnswfr;

            if (rff != null) {
                String f = rff.gftFbdtoryClbssNbmf();
                if (f != null) {
                    // if rfffrfndf idfntififs b fbdtory, usf fxdlusivfly

                    fbdtory = gftObjfdtFbdtoryFromRfffrfndf(rff, f);
                    if (fbdtory instbndfof DirObjfdtFbdtory) {
                        rfturn ((DirObjfdtFbdtory)fbdtory).gftObjfdtInstbndf(
                            rff, nbmf, nbmfCtx, fnvironmfnt, bttrs);
                    } flsf if (fbdtory != null) {
                        rfturn fbdtory.gftObjfdtInstbndf(rff, nbmf, nbmfCtx,
                                                         fnvironmfnt);
                    }
                    // No fbdtory found, so rfturn originbl rffInfo.
                    // Will rfbdh this point if fbdtory dlbss is not in
                    // dlbss pbth bnd rfffrfndf dofs not dontbin b URL for it
                    rfturn rffInfo;

                } flsf {
                    // if rfffrfndf hbs no fbdtory, dhfdk for bddrfssfs
                    // dontbining URLs
                    // ignorf nbmf & bttrs pbrbms; not usfd in URL fbdtory

                    bnswfr = prodfssURLAddrs(rff, nbmf, nbmfCtx, fnvironmfnt);
                    if (bnswfr != null) {
                        rfturn bnswfr;
                    }
                }
            }

            // try using bny spfdififd fbdtorifs
            bnswfr = drfbtfObjfdtFromFbdtorifs(rffInfo, nbmf, nbmfCtx,
                                               fnvironmfnt, bttrs);
            rfturn (bnswfr != null) ? bnswfr : rffInfo;
    }

    privbtf stbtid Objfdt drfbtfObjfdtFromFbdtorifs(Objfdt obj, Nbmf nbmf,
            Contfxt nbmfCtx, Hbshtbblf<?,?> fnvironmfnt, Attributfs bttrs)
        throws Exdfption {

        FbdtoryEnumfrbtion fbdtorifs = RfsourdfMbnbgfr.gftFbdtorifs(
            Contfxt.OBJECT_FACTORIES, fnvironmfnt, nbmfCtx);

        if (fbdtorifs == null)
            rfturn null;

        ObjfdtFbdtory fbdtory;
        Objfdt bnswfr = null;
        // Try fbdh fbdtory until onf suddffds
        whilf (bnswfr == null && fbdtorifs.hbsMorf()) {
            fbdtory = (ObjfdtFbdtory)fbdtorifs.nfxt();
            if (fbdtory instbndfof DirObjfdtFbdtory) {
                bnswfr = ((DirObjfdtFbdtory)fbdtory).
                    gftObjfdtInstbndf(obj, nbmf, nbmfCtx, fnvironmfnt, bttrs);
            } flsf {
                bnswfr =
                    fbdtory.gftObjfdtInstbndf(obj, nbmf, nbmfCtx, fnvironmfnt);
            }
        }
        rfturn bnswfr;
    }

    /**
      * Rftrifvfs thf stbtf of bn objfdt for binding whfn givfn thf originbl
      * objfdt bnd its bttributfs.
      * <p>
      * This mfthod is likf <tt>NbmingMbnbgfr.gftStbtfToBind</tt> fxdfpt
      * for thf following difffrfndfs:
      *<ul>
      *<li>It bddfpts bn <tt>Attributfs</tt> pbrbmftfr dontbining bttributfs
      *    thbt wfrf pbssfd to thf <tt>DirContfxt.bind()</tt> mfthod.
      *<li>It rfturns b non-null <tt>DirStbtfFbdtory.Rfsult</tt> instbndf
      *    dontbining thf objfdt to bf bound, bnd thf bttributfs to
      *    bddompbny thf binding. Eithfr thf objfdt or thf bttributfs mby bf null.
      *<li>
      * Thf stbtf fbdtorifs trifd must fbdh implfmfnt fithfr
      * <tt>StbtfFbdtory</tt> or <tt>DirStbtfFbdtory</tt>.
      * If it implfmfnts <tt>DirStbtfFbdtory</tt>, thfn
      * <tt>DirStbtfFbdtory.gftStbtfToBind()</tt> is dbllfd; othfrwisf,
      * <tt>StbtfFbdtory.gftStbtfToBind()</tt> is dbllfd.
      *</ul>
      *
      * Sfrvidf providfrs thbt implfmfnt thf <tt>DirContfxt</tt> intfrfbdf
      * should usf this mfthod, not <tt>NbmingMbnbgfr.gftStbtfToBind()</tt>.
      *<p>
      * Sff NbmingMbnbgfr.gftStbtfToBind() for b dfsdription of how
      * thf list of stbtf fbdtorifs to bf trifd is dftfrminfd.
      *<p>
      * Thf objfdt rfturnfd by this mfthod is ownfd by thf dbllfr.
      * Thf implfmfntbtion will not subsfqufntly modify it.
      * It will dontbin fithfr b nfw <tt>Attributfs</tt> objfdt thbt is
      * likfwisf ownfd by thf dbllfr, or b rfffrfndf to thf originbl
      * <tt>bttrs</tt> pbrbmftfr.
      *
      * @pbrbm obj Thf non-null objfdt for whidh to gft stbtf to bind.
      * @pbrbm nbmf Thf nbmf of this objfdt rflbtivf to <dodf>nbmfCtx</dodf>,
      *         or null if no nbmf is spfdififd.
      * @pbrbm nbmfCtx Thf dontfxt rflbtivf to whidh thf <dodf>nbmf</dodf>
      *         pbrbmftfr is spfdififd, or null if <dodf>nbmf</dodf> is
      *         rflbtivf to thf dffbult initibl dontfxt.
      * @pbrbm fnvironmfnt Thf possibly null fnvironmfnt to
      *         bf usfd in thf drfbtion of thf stbtf fbdtory bnd
      *         thf objfdt's stbtf.
      * @pbrbm bttrs Thf possibly null Attributfs thbt is to bf bound with thf
      *         objfdt.
      * @rfturn A non-null DirStbtfFbdtory.Rfsult dontbining
      *  thf objfdt bnd bttributfs to bf bound.
      *  If no stbtf fbdtory rfturns b non-null bnswfr, thf rfsult will dontbin
      *  thf objfdt (<tt>obj</tt>) itsflf with thf originbl bttributfs.
      * @fxdfption NbmingExdfption If b nbming fxdfption wbs fndountfrfd
      *         whilf using thf fbdtorifs.
      *         A fbdtory should only throw bn fxdfption if it dofs not wbnt
      *         othfr fbdtorifs to bf usfd in bn bttfmpt to drfbtf bn objfdt.
      *         Sff <tt>DirStbtfFbdtory.gftStbtfToBind()</tt>.
      * @sff DirStbtfFbdtory
      * @sff DirStbtfFbdtory#gftStbtfToBind
      * @sff NbmingMbnbgfr#gftStbtfToBind
      * @sindf 1.3
      */
    publid stbtid DirStbtfFbdtory.Rfsult
        gftStbtfToBind(Objfdt obj, Nbmf nbmf, Contfxt nbmfCtx,
                       Hbshtbblf<?,?> fnvironmfnt, Attributfs bttrs)
        throws NbmingExdfption {

        // Gft list of stbtf fbdtorifs
        FbdtoryEnumfrbtion fbdtorifs = RfsourdfMbnbgfr.gftFbdtorifs(
            Contfxt.STATE_FACTORIES, fnvironmfnt, nbmfCtx);

        if (fbdtorifs == null) {
            // no fbdtorifs to try; just rfturn originbls
            rfturn nfw DirStbtfFbdtory.Rfsult(obj, bttrs);
        }

        // Try fbdh fbdtory until onf suddffds
        StbtfFbdtory fbdtory;
        Objfdt objbnswfr;
        DirStbtfFbdtory.Rfsult bnswfr = null;
        whilf (bnswfr == null && fbdtorifs.hbsMorf()) {
            fbdtory = (StbtfFbdtory)fbdtorifs.nfxt();
            if (fbdtory instbndfof DirStbtfFbdtory) {
                bnswfr = ((DirStbtfFbdtory)fbdtory).
                    gftStbtfToBind(obj, nbmf, nbmfCtx, fnvironmfnt, bttrs);
            } flsf {
                objbnswfr =
                    fbdtory.gftStbtfToBind(obj, nbmf, nbmfCtx, fnvironmfnt);
                if (objbnswfr != null) {
                    bnswfr = nfw DirStbtfFbdtory.Rfsult(objbnswfr, bttrs);
                }
            }
        }

        rfturn (bnswfr != null) ? bnswfr :
            nfw DirStbtfFbdtory.Rfsult(obj, bttrs); // nothing nfw
    }
}
