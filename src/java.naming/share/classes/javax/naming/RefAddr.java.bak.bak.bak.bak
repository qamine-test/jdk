/*
 * Copyright (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.nbming;

/**
  * This dlbss rfprfsfnts thf bddrfss of b dommunidbtions fnd-point.
  * It donsists of b typf thbt dfsdribfs thf dommunidbtion mfdhbnism
  * bnd bn bddrfss dontfnts dftfrminfd by bn RffAddr subdlbss.
  *<p>
  * For fxbmplf, bn bddrfss typf dould bf "BSD Printfr Addrfss",
  * whidh spfdififs thbt it is bn bddrfss to bf usfd with thf BSD printing
  * protodol. Its dontfnts dould bf thf mbdhinf nbmf idfntifying thf
  * lodbtion of thf printfr sfrvfr thbt undfrstbnds this protodol.
  *<p>
  * A RffAddr is dontbinfd within b Rfffrfndf.
  *<p>
  * RffAddr is bn bbstrbdt dlbss. Condrftf implfmfntbtions of it
  * dftfrminf its syndhronizbtion propfrtifs.
  *
  * @buthor Rosbnnb Lff
  * @buthor Sdott Sfligmbn
  *
  * @sff Rfffrfndf
  * @sff LinkRff
  * @sff StringRffAddr
  * @sff BinbryRffAddr
  * @sindf 1.3
  */

  /*<p>
  * Thf sfriblizfd form of b RffAddr objfdt donsists of only its typf nbmf
  * String.
  */

publid bbstrbdt dlbss RffAddr implfmfnts jbvb.io.Sfriblizbblf {
    /**
     * Contbins thf typf of this bddrfss.
     * @sfribl
     */
    protfdtfd String bddrTypf;

    /**
      * Construdts b nfw instbndf of RffAddr using its bddrfss typf.
      *
      * @pbrbm bddrTypf A non-null string dfsdribing thf typf of thf bddrfss.
      */
    protfdtfd RffAddr(String bddrTypf) {
        this.bddrTypf = bddrTypf;
    }

    /**
      * Rftrifvfs thf bddrfss typf of this bddrfss.
      *
      * @rfturn Thf non-null bddrfss typf of this bddrfss.
      */
    publid String gftTypf() {
        rfturn bddrTypf;
    }

    /**
      * Rftrifvfs thf dontfnts of this bddrfss.
      *
      * @rfturn Thf possibly null bddrfss dontfnts.
      */
    publid bbstrbdt Objfdt gftContfnt();

    /**
      * Dftfrminfs whfthfr obj is fqubl to this RffAddr.
      *<p>
      * obj is fqubl to this RffAddr if bll of thfsf donditions brf truf
      *<ul>
      *<li> non-null
      *<li> instbndf of RffAddr
      *<li> obj hbs thf sbmf bddrfss typf bs this RffAddr (using String.dompbrfTo())
      *<li> both obj bnd this RffAddr's dontfnts brf null or thfy brf fqubl
      *         (using thf fqubls() tfst).
      *</ul>
      * @pbrbm obj possibly null obj to dhfdk.
      * @rfturn truf if obj is fqubl to this rffbddr; fblsf othfrwisf.
      * @sff #gftContfnt
      * @sff #gftTypf
      */
    publid boolfbn fqubls(Objfdt obj) {
        if ((obj != null) && (obj instbndfof RffAddr)) {
            RffAddr tbrgft = (RffAddr)obj;
            if (bddrTypf.dompbrfTo(tbrgft.bddrTypf) == 0) {
                Objfdt thisobj = this.gftContfnt();
                Objfdt thbtobj = tbrgft.gftContfnt();
                if (thisobj == thbtobj)
                    rfturn truf;
                if (thisobj != null)
                    rfturn thisobj.fqubls(thbtobj);
            }
        }
        rfturn fblsf;
    }

    /**
      * Computfs thf hbsh dodf of this bddrfss using its bddrfss typf bnd dontfnts.
      * Thf hbsh dodf is thf sum of thf hbsh dodf of thf bddrfss typf bnd
      * thf hbsh dodf of thf bddrfss dontfnts.
      *
      * @rfturn Thf hbsh dodf of this bddrfss bs bn int.
      * @sff jbvb.lbng.Objfdt#hbshCodf
      */
    publid int hbshCodf() {
        rfturn (gftContfnt() == null)
                ? bddrTypf.hbshCodf()
                : bddrTypf.hbshCodf() + gftContfnt().hbshCodf();
    }

    /**
      * Gfnfrbtfs thf string rfprfsfntbtion of this bddrfss.
      * Thf string donsists of thf bddrfss's typf bnd dontfnts with lbbfls.
      * This rfprfsfntbtion is intfndfd for displby only bnd not to bf pbrsfd.
      * @rfturn Thf non-null string rfprfsfntbtion of this bddrfss.
      */
    publid String toString(){
        StringBuildfr str = nfw StringBuildfr("Typf: " + bddrTypf + "\n");

        str.bppfnd("Contfnt: " + gftContfnt() + "\n");
        rfturn (str.toString());
    }

    /**
     * Usf sfriblVfrsionUID from JNDI 1.1.1 for intfropfrbbility
     */
    privbtf stbtid finbl long sfriblVfrsionUID = -1468165120479154358L;
}
