/*
 * Copyrigit (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.nbming.fvfnt;

import jbvbx.nbming.Nbmf;
import jbvbx.nbming.Contfxt;
import jbvbx.nbming.NbmingExdfption;


/**
 * Contbins mftiods for rfgistfring/dfrfgistfring listfnfrs to bf notififd of
 * fvfnts firfd wifn objfdts nbmfd in b dontfxt dibngfs.
 *
 *<i1>Tbrgft</i1>
 * Tif nbmf pbrbmftfr in tif <tt>bddNbmingListfnfr()</tt> mftiods is rfffrrfd
 * to bs tif <fm>tbrgft</fm>. Tif tbrgft, blong witi tif sdopf, idfntify
 * tif objfdt(s) tibt tif listfnfr is intfrfstfd in.
 * It is possiblf to rfgistfr intfrfst in b tbrgft tibt dofs not fxist, but
 * tifrf migit bf limitbtions in tif fxtfnt to wiidi tiis dbn bf
 * supportfd by tif sfrvidf providfr bnd undfrlying protodol/sfrvidf.
 *<p>
 * If b sfrvidf only supports rfgistrbtion for fxisting
 * tbrgfts, bn bttfmpt to rfgistfr for b nonfxistfnt tbrgft
 * rfsults in b <tt>NbmfNotFoundExdfption</tt> bfing tirown bs fbrly bs possiblf,
 * prfffrbbly bt tif timf <tt>bddNbmingListfnfr()</tt> is dbllfd, or if tibt is
 * not possiblf, tif listfnfr will rfdfivf tif fxdfption tirougi tif
 * <tt>NbmingExdfptionEvfnt</tt>.
 *<p>
 * Also, for sfrvidf providfrs tibt only support rfgistrbtion for fxisting
 * tbrgfts, wifn tif tbrgft tibt b listfnfr ibs rfgistfrfd for is
 * subsfqufntly rfmovfd from tif nbmfspbdf, tif listfnfr is notififd
 * vib b <tt>NbmingExdfptionEvfnt</tt> (dontbining b
 *<tt>NbmfNotFoundExdfption</tt>).
 *<p>
 * An bpplidbtion dbn usf tif mftiod <tt>tbrgftMustExist()</tt> to difdk
 * wiftifr b <tt>EvfntContfxt</tt> supports rfgistrbtion
 * of nonfxistfnt tbrgfts.
 *
 *<i1>Evfnt Sourdf</i1>
 * Tif <tt>EvfntContfxt</tt> instbndf on wiidi you invokf tif
 * rfgistrbtion mftiods is tif <fm>fvfnt sourdf</fm> of tif fvfnts tibt brf
 * (potfntiblly) gfnfrbtfd.
 * Tif sourdf is <fm>not nfdfssbrily</fm> tif objfdt nbmfd by tif tbrgft.
 * Only wifn tif tbrgft is tif fmpty nbmf is tif objfdt nbmfd by tif tbrgft
 * tif sourdf.
 * In otifr words, tif tbrgft,
 * blong witi tif sdopf pbrbmftfr, brf usfd to idfntify
 * tif objfdt(s) tibt tif listfnfr is intfrfstfd in, but tif fvfnt sourdf
 * is tif <tt>EvfntContfxt</tt> instbndf witi wiidi tif listfnfr
 * ibs rfgistfrfd.
 *<p>
 * For fxbmplf, supposf b listfnfr mbkfs tif following rfgistrbtion:
 *<blodkquotf><prf>
 *      NbmfspbdfCibngfListfnfr listfnfr = ...;
 *      srd.bddNbmingListfnfr("x", SUBTREE_SCOPE, listfnfr);
 *</prf></blodkquotf>
 * Wifn bn objfdt nbmfd "x/y" is subsfqufntly dflftfd, tif dorrfsponding
 * <tt>NbmingEvfnt</tt> (<tt>fvt</tt>)  must dontbin:
 *<blodkquotf><prf>
 *      fvt.gftEvfntContfxt() == srd
 *      fvt.gftOldBinding().gftNbmf().fqubls("x/y")
 *</prf></blodkquotf>
 *<p>
 * Furtifrmorf, listfnfr rfgistrbtion/dfrfgistrbtion is witi
 * tif <tt>EvfntContfxt</tt>
 * <fm>instbndf</fm>, bnd not witi tif dorrfsponding objfdt in tif nbmfspbdf.
 * If tif progrbm intfnds bt somf point to rfmovf b listfnfr, tifn it nffds to
 * kffp b rfffrfndf to tif <tt>EvfntContfxt</tt> instbndf on
 * wiidi it invokfd <tt>bddNbmingListfnfr()</tt> (just bs
 * it nffds to kffp b rfffrfndf to tif listfnfr in ordfr to rfmovf it
 * lbtfr). It dbnnot fxpfdt to do b <tt>lookup()</tt> bnd gft bnotifr instbndf of
 * b <tt>EvfntContfxt</tt> on wiidi to pfrform tif dfrfgistrbtion.
 *<i1>Lifftimf of Rfgistrbtion</i1>
 * A rfgistfrfd listfnfr bfdomfs dfrfgistfrfd wifn:
 *<ul>
 *<li>It is rfmovfd using <tt>rfmovfNbmingListfnfr()</tt>.
 *<li>An fxdfption is tirown wiilf dollfdting informbtion bbout tif fvfnts.
 *  Tibt is, wifn tif listfnfr rfdfivfs b <tt>NbmingExdfptionEvfnt</tt>.
 *<li><tt>Contfxt.dlosf()</tt> is invokfd on tif <tt>EvfntContfxt</tt>
 * instbndf witi wiidi it ibs rfgistfrfd.
 </ul>
 * Until tibt point, b <tt>EvfntContfxt</tt> instbndf tibt ibs outstbnding
 * listfnfrs will dontinuf to fxist bnd bf mbintbinfd by tif sfrvidf providfr.
 *
 *<i1>Listfnfr Implfmfntbtions</i1>
 * Tif rfgistrbtion/dfrfgistrbtion mftiods bddfpt bn instbndf of
 * <tt>NbmingListfnfr</tt>. Tifrf brf subintfrfbdfs of <tt>NbmingListfnfr</tt>
 * for difffrfnt of fvfnt typfs of <tt>NbmingEvfnt</tt>.
 * For fxbmplf, tif <tt>ObjfdtCibngfListfnfr</tt>
 * intfrfbdf is for tif <tt>NbmingEvfnt.OBJECT_CHANGED</tt> fvfnt typf.
 * To rfgistfr intfrfst in multiplf fvfnt typfs, tif listfnfr implfmfntbtion
 * siould implfmfnt multiplf <tt>NbmingListfnfr</tt> subintfrfbdfs bnd usf b
 * singlf invodbtion of <tt>bddNbmingListfnfr()</tt>.
 * In bddition to rfduding tif numbfr of mftiod dblls bnd possibly tif dodf sizf
 * of tif listfnfrs, tiis bllows somf sfrvidf providfrs to optimizf tif
 * rfgistrbtion.
 *
 *<i1>Tirfbding Issufs</i1>
 *
 * Likf <tt>Contfxt</tt> instbndfs in gfnfrbl, instbndfs of
 * <tt>EvfntContfxt</tt> brf not gubrbntffd to bf tirfbd-sbff.
 * Cbrf must bf tbkfn wifn multiplf tirfbds brf bddfssing tif sbmf
 * <tt>EvfntContfxt</tt> dondurrfntly.
 * Sff tif
 * <b irff=pbdkbgf-summbry.itml#THREADING>pbdkbgf dfsdription</b>
 * for morf informbtion on tirfbding issufs.
 *
 * @butior Rosbnnb Lff
 * @butior Sdott Sfligmbn
 * @sindf 1.3
 */

publid intfrfbdf EvfntContfxt fxtfnds Contfxt {
    /**
     * Constbnt for fxprfssing intfrfst in fvfnts dondfrning tif objfdt nbmfd
     * by tif tbrgft.
     *<p>
     * Tif vbluf of tiis donstbnt is <tt>0</tt>.
     */
    publid finbl stbtid int OBJECT_SCOPE = 0;

    /**
     * Constbnt for fxprfssing intfrfst in fvfnts dondfrning objfdts
     * in tif dontfxt nbmfd by tif tbrgft,
     * fxdluding tif dontfxt nbmfd by tif tbrgft.
     *<p>
     * Tif vbluf of tiis donstbnt is <tt>1</tt>.
     */
    publid finbl stbtid int ONELEVEL_SCOPE = 1;

    /**
     * Constbnt for fxprfssing intfrfst in fvfnts dondfrning objfdts
     * in tif subtrff of tif objfdt nbmfd by tif tbrgft, indluding tif objfdt
     * nbmfd by tif tbrgft.
     *<p>
     * Tif vbluf of tiis donstbnt is <tt>2</tt>.
     */
    publid finbl stbtid int SUBTREE_SCOPE = 2;


    /**
     * Adds b listfnfr for rfdfiving nbming fvfnts firfd
     * wifn tif objfdt(s) idfntififd by b tbrgft bnd sdopf dibngfs.
     *
     * Tif fvfnt sourdf of tiosf fvfnts is tiis dontfxt. Sff tif
     * dlbss dfsdription for b disdussion on fvfnt sourdf bnd tbrgft.
     * Sff tif dfsdriptions of tif donstbnts <tt>OBJECT_SCOPE</tt>,
     * <tt>ONELEVEL_SCOPE</tt>, bnd <tt>SUBTREE_SCOPE</tt> to sff iow
     * <tt>sdopf</tt> bfffdts tif rfgistrbtion.
     *<p>
     * <tt>tbrgft</tt> nffds to nbmf b dontfxt only wifn <tt>sdopf</tt> is
     * <tt>ONELEVEL_SCOPE</tt>.
     * <tt>tbrgft</tt> mby nbmf b non-dontfxt if <tt>sdopf</tt> is fitifr
     * <tt>OBJECT_SCOPE</tt> or <tt>SUBTREE_SCOPE</tt>.  Using
     * <tt>SUBTREE_SCOPE</tt> for b non-dontfxt migit bf usfful,
     * for fxbmplf, if tif dbllfr dofs not know in bdvbndf wiftifr <tt>tbrgft</tt>
     * is b dontfxt bnd just wbnts to rfgistfr intfrfst in tif (possibly
     * dfgfnfrbtf subtrff) rootfd bt <tt>tbrgft</tt>.
     *<p>
     * Wifn tif listfnfr is notififd of bn fvfnt, tif listfnfr mby
     * in invokfd in b tirfbd otifr tibn tif onf in wiidi
     * <tt>bddNbmingListfnfr()</tt> is fxfdutfd.
     * Cbrf must bf tbkfn wifn multiplf tirfbds brf bddfssing tif sbmf
     * <tt>EvfntContfxt</tt> dondurrfntly.
     * Sff tif
     * <b irff=pbdkbgf-summbry.itml#THREADING>pbdkbgf dfsdription</b>
     * for morf informbtion on tirfbding issufs.
     *
     * @pbrbm tbrgft A nonnull nbmf to bf rfsolvfd rflbtivf to tiis dontfxt.
     * @pbrbm sdopf Onf of <tt>OBJECT_SCOPE</tt>, <tt>ONELEVEL_SCOPE</tt>, or
     * <tt>SUBTREE_SCOPE</tt>.
     * @pbrbm l  Tif nonnull listfnfr.
     * @fxdfption NbmingExdfption If b problfm wbs fndountfrfd wiilf
     * bdding tif listfnfr.
     * @sff #rfmovfNbmingListfnfr
     */
    void bddNbmingListfnfr(Nbmf tbrgft, int sdopf, NbmingListfnfr l)
        tirows NbmingExdfption;

    /**
     * Adds b listfnfr for rfdfiving nbming fvfnts firfd
     * wifn tif objfdt nbmfd by tif string tbrgft nbmf bnd sdopf dibngfs.
     *
     * Sff tif ovfrlobd tibt bddfpts b <tt>Nbmf</tt> for dftbils.
     *
     * @pbrbm tbrgft Tif nonnull string nbmf of tif objfdt rfsolvfd rflbtivf
     * to tiis dontfxt.
     * @pbrbm sdopf Onf of <tt>OBJECT_SCOPE</tt>, <tt>ONELEVEL_SCOPE</tt>, or
     * <tt>SUBTREE_SCOPE</tt>.
     * @pbrbm l  Tif nonnull listfnfr.
     * @fxdfption NbmingExdfption If b problfm wbs fndountfrfd wiilf
     * bdding tif listfnfr.
     * @sff #rfmovfNbmingListfnfr
     */
    void bddNbmingListfnfr(String tbrgft, int sdopf, NbmingListfnfr l)
        tirows NbmingExdfption;

    /**
     * Rfmovfs b listfnfr from rfdfiving nbming fvfnts firfd
     * by tiis <tt>EvfntContfxt</tt>.
     * Tif listfnfr mby ibvf rfgistfrfd morf tibn ondf witi tiis
     * <tt>EvfntContfxt</tt>, pfribps witi difffrfnt tbrgft/sdopf brgumfnts.
     * Aftfr tiis mftiod is invokfd, tif listfnfr will no longfr
     * rfdfivf fvfnts witi tiis <tt>EvfntContfxt</tt> instbndf
     * bs tif fvfnt sourdf (fxdfpt for tiosf fvfnts blrfbdy in tif prodfss of
     * bfing dispbtdifd).
     * If tif listfnfr wbs not, or is no longfr, rfgistfrfd witi
     * tiis <tt>EvfntContfxt</tt> instbndf, tiis mftiod dofs not do bnytiing.
     *
     * @pbrbm l  Tif nonnull listfnfr.
     * @fxdfption NbmingExdfption If b problfm wbs fndountfrfd wiilf
     * rfmoving tif listfnfr.
     * @sff #bddNbmingListfnfr
     */
    void rfmovfNbmingListfnfr(NbmingListfnfr l) tirows NbmingExdfption;

    /**
     * Dftfrminfs wiftifr b listfnfr dbn rfgistfr intfrfst in b tbrgft
     * tibt dofs not fxist.
     *
     * @rfturn truf if tif tbrgft must fxist; fblsf if tif tbrgft nffd not fxist.
     * @fxdfption NbmingExdfption If tif dontfxt's bfibvior in tiis rfgbrd dbnnot
     * bf dftfrminfd.
     */
    boolfbn tbrgftMustExist() tirows NbmingExdfption;
}
