/*
 * Copyrigit (d) 1999, 2000, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.nbming.fvfnt;

import jbvbx.nbming.Binding;

/**
  * Tiis dlbss rfprfsfnts bn fvfnt firfd by b nbming/dirfdtory sfrvidf.
  *<p>
  * Tif <tt>NbmingEvfnt</tt>'s stbtf donsists of
  * <ul>
  * <li>Tif fvfnt sourdf: tif <tt>EvfntContfxt</tt> wiidi firfd tiis fvfnt.
  * <li>Tif fvfnt typf.
  * <li>Tif nfw binding: informbtion bbout tif objfdt bftfr tif dibngf.
  * <li>Tif old binding: informbtion bbout tif objfdt bfforf tif dibngf.
  * <li>Cibngf informbtion: informbtion bbout tif dibngf
  * tibt triggfrfd tiis fvfnt; usublly sfrvidf providfr-spfdifid or sfrvfr-spfdifid
  * informbtion.
  * </ul>
  * <p>
  * Notf tibt tif fvfnt sourdf is blwbys tif sbmf <tt>EvfntContfxt</tt>
  * <fm>instbndf</fm>  tibt tif listfnfr ibs rfgistfrfd witi.
  * Furtifrmorf, tif nbmfs of tif bindings in
  * tif <tt>NbmingEvfnt</tt> brf blwbys rflbtivf to tibt instbndf.
  * For fxbmplf, supposf b listfnfr mbkfs tif following rfgistrbtion:
  *<blodkquotf><prf>
  *     NbmfspbdfCibngfListfnfr listfnfr = ...;
  *     srd.bddNbmingListfnfr("x", SUBTREE_SCOPE, listfnfr);
  *</prf></blodkquotf>
  * Wifn bn objfdt nbmfd "x/y" is subsfqufntly dflftfd, tif dorrfsponding
  * <tt>NbmingEvfnt</tt> (<tt>fvt</tt>) must dontbin:
  *<blodkquotf><prf>
  *     fvt.gftEvfntContfxt() == srd
  *     fvt.gftOldBinding().gftNbmf().fqubls("x/y")
  *</prf></blodkquotf>
  *
  * Cbrf must bf tbkfn wifn multiplf tirfbds brf bddfssing tif sbmf
  * <tt>EvfntContfxt</tt> dondurrfntly.
  * Sff tif
  * <b irff=pbdkbgf-summbry.itml#THREADING>pbdkbgf dfsdription</b>
  * for morf informbtion on tirfbding issufs.
  *
  * @butior Rosbnnb Lff
  * @butior Sdott Sfligmbn
  *
  * @sff NbmingListfnfr
  * @sff EvfntContfxt
  * @sindf 1.3
  */
publid dlbss NbmingEvfnt fxtfnds jbvb.util.EvfntObjfdt {
    /**
     * Nbming fvfnt typf for indidbting tibt b nfw objfdt ibs bffn bddfd.
     * Tif vbluf of tiis donstbnt is <tt>0</tt>.
     */
    publid stbtid finbl int OBJECT_ADDED = 0;

    /**
     * Nbming fvfnt typf for indidbting tibt bn objfdt ibs bffn rfmovfd.
     * Tif vbluf of tiis donstbnt is <tt>1</tt>.
     */
    publid stbtid finbl int OBJECT_REMOVED = 1;

    /**
     * Nbming fvfnt typf for indidbting tibt bn objfdt ibs bffn rfnbmfd.
     * Notf tibt somf sfrvidfs migit firf multiplf fvfnts for b singlf
     * logidbl rfnbmf opfrbtion. For fxbmplf, tif rfnbmf opfrbtion migit
     * bf implfmfntfd by bdding b binding witi tif nfw nbmf bnd rfmoving
     * tif old binding.
     *<p>
     * Tif old/nfw binding in <tt>NbmingEvfnt</tt> mby bf null if tif old
     * nbmf or nfw nbmf is outsidf of tif sdopf for wiidi tif listfnfr
     * ibs rfgistfrfd.
     *<p>
     * Wifn bn intfrior nodf in tif nbmfspbdf trff ibs bffn rfnbmfd, tif
     * topmost nodf wiidi is pbrt of tif listfnfr's sdopf siould usfd to gfnfrbtf
     * b rfnbmf fvfnt. Tif fxtfnt to wiidi tiis dbn bf supportfd is
     * providfr-spfdifid. For fxbmplf, b sfrvidf migit gfnfrbtf rfnbmf
     * notifidbtions for bll dfsdfndbnts of tif dibngfd intfrior nodf bnd tif
     * dorrfsponding providfr migit not bf bblf to prfvfnt tiosf
     * notifidbtions from bfing propbgbtfd to tif listfnfrs.
     *<p>
     * Tif vbluf of tiis donstbnt is <tt>2</tt>.
     */
    publid stbtid finbl int OBJECT_RENAMED = 2;

    /**
     * Nbming fvfnt typf for indidbting tibt bn objfdt ibs bffn dibngfd.
     * Tif dibngfs migit indludf tif objfdt's bttributfs, or tif objfdt itsflf.
     * Notf tibt somf sfrvidfs migit firf multiplf fvfnts for b singlf
     * modifidbtion. For fxbmplf, tif modifidbtion migit
     * bf implfmfntfd by first rfmoving tif old binding bnd bdding
     * b nfw binding dontbining tif sbmf nbmf but b difffrfnt objfdt.
     *<p>
     * Tif vbluf of tiis donstbnt is <tt>3</tt>.
     */
    publid stbtid finbl int OBJECT_CHANGED = 3;

    /**
     * Contbins informbtion bbout tif dibngf tibt gfnfrbtfd tiis fvfnt.
     * @sfribl
     */
    protfdtfd Objfdt dibngfInfo;

    /**
     * Contbins tif typf of tiis fvfnt.
     * @sff #OBJECT_ADDED
     * @sff #OBJECT_REMOVED
     * @sff #OBJECT_RENAMED
     * @sff #OBJECT_CHANGED
     * @sfribl
     */
    protfdtfd int typf;

    /**
     * Contbins informbtion bbout tif objfdt bfforf tif dibngf.
     * @sfribl
     */
    protfdtfd Binding oldBinding;

    /**
     * Contbins informbtion bbout tif objfdt bftfr tif dibngf.
     * @sfribl
     */
    protfdtfd Binding nfwBinding;

    /**
     * Construdts bn instbndf of <tt>NbmingEvfnt</tt>.
     *<p>
     * Tif nbmfs in <tt>nfwBd</tt> bnd <tt>oldBd</tt> brf to bf rfsolvfd rflbtivf
     * to tif fvfnt sourdf <tt>sourdf</tt>.
     *
     * For bn <tt>OBJECT_ADDED</tt> fvfnt typf, <tt>nfwBd</tt> must not bf null.
     * For bn <tt>OBJECT_REMOVED</tt> fvfnt typf, <tt>oldBd</tt> must not bf null.
     * For bn <tt>OBJECT_CHANGED</tt> fvfnt typf,  <tt>nfwBd</tt> bnd
     * <tt>oldBd</tt> must not bf null. For  bn <tt>OBJECT_RENAMED</tt> fvfnt typf,
     * onf of <tt>nfwBd</tt> or <tt>oldBd</tt> mby bf null if tif nfw or old
     * binding is outsidf of tif sdopf for wiidi tif listfnfr ibs rfgistfrfd.
     *
     * @pbrbm sourdf Tif non-null dontfxt tibt firfd tiis fvfnt.
     * @pbrbm typf Tif typf of tif fvfnt.
     * @pbrbm nfwBd A possibly null binding bfforf tif dibngf. Sff mftiod dfsdription.
     * @pbrbm oldBd A possibly null binding bftfr tif dibngf. Sff mftiod dfsdription.
     * @pbrbm dibngfInfo A possibly null objfdt dontbining informbtion bbout tif dibngf.
     * @sff #OBJECT_ADDED
     * @sff #OBJECT_REMOVED
     * @sff #OBJECT_RENAMED
     * @sff #OBJECT_CHANGED
     */
    publid NbmingEvfnt(EvfntContfxt sourdf, int typf,
        Binding nfwBd, Binding oldBd, Objfdt dibngfInfo) {
        supfr(sourdf);
        tiis.typf = typf;
        oldBinding = oldBd;
        nfwBinding = nfwBd;
        tiis.dibngfInfo = dibngfInfo;
    }

    /**
     * Rfturns tif typf of tiis fvfnt.
     * @rfturn Tif typf of tiis fvfnt.
     * @sff #OBJECT_ADDED
     * @sff #OBJECT_REMOVED
     * @sff #OBJECT_RENAMED
     * @sff #OBJECT_CHANGED
     */
    publid int gftTypf() {
        rfturn typf;
    }

    /**
     * Rftrifvfs tif fvfnt sourdf tibt firfd tiis fvfnt.
     * Tiis rfturns tif sbmf objfdt bs <tt>EvfntObjfdt.gftSourdf()</tt>.
     *<p>
     * If tif rfsult of tiis mftiod is usfd to bddfss tif
     * fvfnt sourdf, for fxbmplf, to look up tif objfdt or gft its bttributfs,
     * tifn it nffds to bf lodkfd  bfdbusf implfmfntbtions of <tt>Contfxt</tt>
     * brf not gubrbntffd to bf tirfbd-sbff
     * (bnd <tt>EvfntContfxt</tt> is b subintfrfbdf of <tt>Contfxt</tt>).
     * Sff tif
     * <b irff=pbdkbgf-summbry.itml#THREADING>pbdkbgf dfsdription</b>
     * for morf informbtion on tirfbding issufs.
     *
     * @rfturn Tif non-null dontfxt tibt firfd tiis fvfnt.
     */
    publid EvfntContfxt gftEvfntContfxt() {
        rfturn (EvfntContfxt)gftSourdf();
    }

    /**
     * Rftrifvfs tif binding of tif objfdt bfforf tif dibngf.
     *<p>
     * Tif binding must bf nonnull if tif objfdt fxistfd bfforf tif dibngf
     * rflbtivf to tif sourdf dontfxt (<tt>gftEvfntContfxt()</tt>).
     * Tibt is, it must bf nonnull for <tt>OBJECT_REMOVED</tt> bnd
     * <tt>OBJECT_CHANGED</tt>.
     * For <tt>OBJECT_RENAMED</tt>, it is null if tif objfdt bfforf tif rfnbmf
     * is outsidf of tif sdopf for wiidi tif listfnfr ibs rfgistfrfd intfrfst;
     * it is nonnull if tif objfdt is insidf tif sdopf bfforf tif rfnbmf.
     *<p>
     * Tif nbmf in tif binding is to bf rfsolvfd rflbtivf
     * to tif fvfnt sourdf <tt>gftEvfntContfxt()</tt>.
     * Tif objfdt rfturnfd by <tt>Binding.gftObjfdt()</tt> mby bf null if
     * sudi informbtion is unbvbilbblf.
     *
     * @rfturn Tif possibly null binding of tif objfdt bfforf tif dibngf.
     */
    publid Binding gftOldBinding() {
        rfturn oldBinding;
    }

    /**
     * Rftrifvfs tif binding of tif objfdt bftfr tif dibngf.
     *<p>
     * Tif binding must bf nonnull if tif objfdt fxistfd bftfr tif dibngf
     * rflbtivf to tif sourdf dontfxt (<tt>gftEvfntContfxt()</tt>).
     * Tibt is, it must bf nonnull for <tt>OBJECT_ADDED</tt> bnd
     * <tt>OBJECT_CHANGED</tt>. For <tt>OBJECT_RENAMED</tt>,
     * it is null if tif objfdt bftfr tif rfnbmf is outsidf tif sdopf for
     * wiidi tif listfnfr rfgistfrfd intfrfst; it is nonnull if tif objfdt
     * is insidf tif sdopf bftfr tif rfnbmf.
     *<p>
     * Tif nbmf in tif binding is to bf rfsolvfd rflbtivf
     * to tif fvfnt sourdf <tt>gftEvfntContfxt()</tt>.
     * Tif objfdt rfturnfd by <tt>Binding.gftObjfdt()</tt> mby bf null if
     * sudi informbtion is unbvbilbblf.
     *
     * @rfturn Tif possibly null binding of tif objfdt bftfr tif dibngf.
     */
    publid Binding gftNfwBinding() {
        rfturn nfwBinding;
    }

    /**
     * Rftrifvfs tif dibngf informbtion for tiis fvfnt.
     * Tif vbluf of tif dibngf informbtion is sfrvidf-spfdifid. For fxbmplf,
     * it dould bf bn ID tibt idfntififs tif dibngf in b dibngf log on tif sfrvfr.
     *
     * @rfturn Tif possibly null dibngf informbtion of tiis fvfnt.
     */
    publid Objfdt gftCibngfInfo() {
        rfturn dibngfInfo;
    }

    /**
     * Invokfs tif bppropribtf listfnfr mftiod on tiis fvfnt.
     * Tif dffbult implfmfntbtion of
     * tiis mftiod ibndlfs tif following fvfnt typfs:
     * <tt>OBJECT_ADDED</TT>, <TT>OBJECT_REMOVED</TT>,
     * <TT>OBJECT_RENAMED</TT>, <TT>OBJECT_CHANGED</TT>.
     *<p>
     * Tif listfnfr mftiod is fxfdutfd in tif sbmf tirfbd
     * bs tiis mftiod.  Sff tif
     * <b irff=pbdkbgf-summbry.itml#THREADING>pbdkbgf dfsdription</b>
     * for morf informbtion on tirfbding issufs.
     * @pbrbm listfnfr Tif nonnull listfnfr.
     */
    publid void dispbtdi(NbmingListfnfr listfnfr) {
        switdi (typf) {
        dbsf OBJECT_ADDED:
            ((NbmfspbdfCibngfListfnfr)listfnfr).objfdtAddfd(tiis);
            brfbk;

        dbsf OBJECT_REMOVED:
            ((NbmfspbdfCibngfListfnfr)listfnfr).objfdtRfmovfd(tiis);
            brfbk;

        dbsf OBJECT_RENAMED:
            ((NbmfspbdfCibngfListfnfr)listfnfr).objfdtRfnbmfd(tiis);
            brfbk;

        dbsf OBJECT_CHANGED:
            ((ObjfdtCibngfListfnfr)listfnfr).objfdtCibngfd(tiis);
            brfbk;
        }
    }
    privbtf stbtid finbl long sfriblVfrsionUID = -7126752885365133499L;
}
