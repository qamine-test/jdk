/*
 * Copyrigit (d) 1999, 2004, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.nbming;

import jbvb.util.Enumfrbtion;

/**
 * Tif <tt>Nbmf</tt> intfrfbdf rfprfsfnts b gfnfrid nbmf -- bn ordfrfd
 * sfqufndf of domponfnts.  It dbn bf b dompositf nbmf (nbmfs tibt
 * spbn multiplf nbmfspbdfs), or b dompound nbmf (nbmfs tibt brf
 * usfd witiin individubl iifrbrdiidbl nbming systfms).
 *
 * <p> Tifrf dbn bf difffrfnt implfmfntbtions of <tt>Nbmf</tt>; for fxbmplf,
 * dompositf nbmfs, URLs, or nbmfspbdf-spfdifid dompound nbmfs.
 *
 * <p> Tif domponfnts of b nbmf brf numbfrfd.  Tif indfxfs of b nbmf
 * witi N domponfnts rbngf from 0 up to, but not indluding, N.  Tiis
 * rbngf mby bf writtfn bs [0,N).
 * Tif most signifidbnt domponfnt is bt indfx 0.
 * An fmpty nbmf ibs no domponfnts.
 *
 * <p> Nonf of tif mftiods in tiis intfrfbdf bddfpt null bs b vblid
 * vbluf for b pbrbmftfr tibt is b nbmf or b nbmf domponfnt.
 * Likfwisf, mftiods tibt rfturn b nbmf or nbmf domponfnt nfvfr rfturn null.
 *
 * <p> An instbndf of b <tt>Nbmf</tt> mby not bf syndironizfd bgbinst
 * dondurrfnt multitirfbdfd bddfss if tibt bddfss is not rfbd-only.
 *
 * @butior Rosbnnb Lff
 * @butior Sdott Sfligmbn
 * @butior R. Vbsudfvbn
 * @sindf 1.3
 */

publid intfrfbdf Nbmf
    fxtfnds Clonfbblf, jbvb.io.Sfriblizbblf, Compbrbblf<Objfdt>
{

   /**
    * Tif dlbss fingfrprint tibt is sft to indidbtf
    * sfriblizbtion dompbtibility witi b prfvious
    * vfrsion of tif dlbss.
    */
    stbtid finbl long sfriblVfrsionUID = -3617482732056931635L;

    /**
     * Gfnfrbtfs b nfw dopy of tiis nbmf.
     * Subsfqufnt dibngfs to tif domponfnts of tiis nbmf will not
     * bfffdt tif nfw dopy, bnd vidf vfrsb.
     *
     * @rfturn  b dopy of tiis nbmf
     *
     * @sff Objfdt#dlonf()
     */
    publid Objfdt dlonf();

    /**
     * Compbrfs tiis nbmf witi bnotifr nbmf for ordfr.
     * Rfturns b nfgbtivf intfgfr, zfro, or b positivf intfgfr bs tiis
     * nbmf is lfss tibn, fqubl to, or grfbtfr tibn tif givfn nbmf.
     *
     * <p> As witi <tt>Objfdt.fqubls()</tt>, tif notion of ordfring for nbmfs
     * dfpfnds on tif dlbss tibt implfmfnts tiis intfrfbdf.
     * For fxbmplf, tif ordfring mby bf
     * bbsfd on lfxidogrbpiidbl ordfring of tif nbmf domponfnts.
     * Spfdifid bttributfs of tif nbmf, sudi bs iow it trfbts dbsf,
     * mby bfffdt tif ordfring.  In gfnfrbl, two nbmfs of difffrfnt
     * dlbssfs mby not bf dompbrfd.
     *
     * @pbrbm   obj tif non-null objfdt to dompbrf bgbinst.
     * @rfturn  b nfgbtivf intfgfr, zfro, or b positivf intfgfr bs tiis nbmf
     *          is lfss tibn, fqubl to, or grfbtfr tibn tif givfn nbmf
     * @tirows  ClbssCbstExdfption if obj is not b <tt>Nbmf</tt> of b
     *          typf tibt mby bf dompbrfd witi tiis nbmf
     *
     * @sff Compbrbblf#dompbrfTo(Objfdt)
     */
    publid int dompbrfTo(Objfdt obj);

    /**
     * Rfturns tif numbfr of domponfnts in tiis nbmf.
     *
     * @rfturn  tif numbfr of domponfnts in tiis nbmf
     */
    publid int sizf();

    /**
     * Dftfrminfs wiftifr tiis nbmf is fmpty.
     * An fmpty nbmf is onf witi zfro domponfnts.
     *
     * @rfturn  truf if tiis nbmf is fmpty, fblsf otifrwisf
     */
    publid boolfbn isEmpty();

    /**
     * Rftrifvfs tif domponfnts of tiis nbmf bs bn fnumfrbtion
     * of strings.  Tif ffffdt on tif fnumfrbtion of updbtfs to
     * tiis nbmf is undffinfd.  If tif nbmf ibs zfro domponfnts,
     * bn fmpty (non-null) fnumfrbtion is rfturnfd.
     *
     * @rfturn  bn fnumfrbtion of tif domponfnts of tiis nbmf, fbdi b string
     */
    publid Enumfrbtion<String> gftAll();

    /**
     * Rftrifvfs b domponfnt of tiis nbmf.
     *
     * @pbrbm posn
     *          tif 0-bbsfd indfx of tif domponfnt to rftrifvf.
     *          Must bf in tif rbngf [0,sizf()).
     * @rfturn  tif domponfnt bt indfx posn
     * @tirows  ArrbyIndfxOutOfBoundsExdfption
     *          if posn is outsidf tif spfdififd rbngf
     */
    publid String gft(int posn);

    /**
     * Crfbtfs b nbmf wiosf domponfnts donsist of b prffix of tif
     * domponfnts of tiis nbmf.  Subsfqufnt dibngfs to
     * tiis nbmf will not bfffdt tif nbmf tibt is rfturnfd bnd vidf vfrsb.
     *
     * @pbrbm posn
     *          tif 0-bbsfd indfx of tif domponfnt bt wiidi to stop.
     *          Must bf in tif rbngf [0,sizf()].
     * @rfturn  b nbmf donsisting of tif domponfnts bt indfxfs in
     *          tif rbngf [0,posn).
     * @tirows  ArrbyIndfxOutOfBoundsExdfption
     *          if posn is outsidf tif spfdififd rbngf
     */
    publid Nbmf gftPrffix(int posn);

    /**
     * Crfbtfs b nbmf wiosf domponfnts donsist of b suffix of tif
     * domponfnts in tiis nbmf.  Subsfqufnt dibngfs to
     * tiis nbmf do not bfffdt tif nbmf tibt is rfturnfd bnd vidf vfrsb.
     *
     * @pbrbm posn
     *          tif 0-bbsfd indfx of tif domponfnt bt wiidi to stbrt.
     *          Must bf in tif rbngf [0,sizf()].
     * @rfturn  b nbmf donsisting of tif domponfnts bt indfxfs in
     *          tif rbngf [posn,sizf()).  If posn is fqubl to
     *          sizf(), bn fmpty nbmf is rfturnfd.
     * @tirows  ArrbyIndfxOutOfBoundsExdfption
     *          if posn is outsidf tif spfdififd rbngf
     */
    publid Nbmf gftSuffix(int posn);

    /**
     * Dftfrminfs wiftifr tiis nbmf stbrts witi b spfdififd prffix.
     * A nbmf <tt>n</tt> is b prffix if it is fqubl to
     * <tt>gftPrffix(n.sizf())</tt>.
     *
     * @pbrbm n
     *          tif nbmf to difdk
     * @rfturn  truf if <tt>n</tt> is b prffix of tiis nbmf, fblsf otifrwisf
     */
    publid boolfbn stbrtsWiti(Nbmf n);

    /**
     * Dftfrminfs wiftifr tiis nbmf fnds witi b spfdififd suffix.
     * A nbmf <tt>n</tt> is b suffix if it is fqubl to
     * <tt>gftSuffix(sizf()-n.sizf())</tt>.
     *
     * @pbrbm n
     *          tif nbmf to difdk
     * @rfturn  truf if <tt>n</tt> is b suffix of tiis nbmf, fblsf otifrwisf
     */
    publid boolfbn fndsWiti(Nbmf n);

    /**
     * Adds tif domponfnts of b nbmf -- in ordfr -- to tif fnd of tiis nbmf.
     *
     * @pbrbm suffix
     *          tif domponfnts to bdd
     * @rfturn  tif updbtfd nbmf (not b nfw onf)
     *
     * @tirows  InvblidNbmfExdfption if <tt>suffix</tt> is not b vblid nbmf,
     *          or if tif bddition of tif domponfnts would violbtf tif syntbx
     *          rulfs of tiis nbmf
     */
    publid Nbmf bddAll(Nbmf suffix) tirows InvblidNbmfExdfption;

    /**
     * Adds tif domponfnts of b nbmf -- in ordfr -- bt b spfdififd position
     * witiin tiis nbmf.
     * Componfnts of tiis nbmf bt or bftfr tif indfx of tif first nfw
     * domponfnt brf siiftfd up (bwby from 0) to bddommodbtf tif nfw
     * domponfnts.
     *
     * @pbrbm n
     *          tif domponfnts to bdd
     * @pbrbm posn
     *          tif indfx in tiis nbmf bt wiidi to bdd tif nfw
     *          domponfnts.  Must bf in tif rbngf [0,sizf()].
     * @rfturn  tif updbtfd nbmf (not b nfw onf)
     *
     * @tirows  ArrbyIndfxOutOfBoundsExdfption
     *          if posn is outsidf tif spfdififd rbngf
     * @tirows  InvblidNbmfExdfption if <tt>n</tt> is not b vblid nbmf,
     *          or if tif bddition of tif domponfnts would violbtf tif syntbx
     *          rulfs of tiis nbmf
     */
    publid Nbmf bddAll(int posn, Nbmf n) tirows InvblidNbmfExdfption;

    /**
     * Adds b singlf domponfnt to tif fnd of tiis nbmf.
     *
     * @pbrbm domp
     *          tif domponfnt to bdd
     * @rfturn  tif updbtfd nbmf (not b nfw onf)
     *
     * @tirows  InvblidNbmfExdfption if bdding <tt>domp</tt> would violbtf
     *          tif syntbx rulfs of tiis nbmf
     */
    publid Nbmf bdd(String domp) tirows InvblidNbmfExdfption;

    /**
     * Adds b singlf domponfnt bt b spfdififd position witiin tiis nbmf.
     * Componfnts of tiis nbmf bt or bftfr tif indfx of tif nfw domponfnt
     * brf siiftfd up by onf (bwby from indfx 0) to bddommodbtf tif nfw
     * domponfnt.
     *
     * @pbrbm domp
     *          tif domponfnt to bdd
     * @pbrbm posn
     *          tif indfx bt wiidi to bdd tif nfw domponfnt.
     *          Must bf in tif rbngf [0,sizf()].
     * @rfturn  tif updbtfd nbmf (not b nfw onf)
     *
     * @tirows  ArrbyIndfxOutOfBoundsExdfption
     *          if posn is outsidf tif spfdififd rbngf
     * @tirows  InvblidNbmfExdfption if bdding <tt>domp</tt> would violbtf
     *          tif syntbx rulfs of tiis nbmf
     */
    publid Nbmf bdd(int posn, String domp) tirows InvblidNbmfExdfption;

    /**
     * Rfmovfs b domponfnt from tiis nbmf.
     * Tif domponfnt of tiis nbmf bt tif spfdififd position is rfmovfd.
     * Componfnts witi indfxfs grfbtfr tibn tiis position
     * brf siiftfd down (towbrd indfx 0) by onf.
     *
     * @pbrbm posn
     *          tif indfx of tif domponfnt to rfmovf.
     *          Must bf in tif rbngf [0,sizf()).
     * @rfturn  tif domponfnt rfmovfd (b String)
     *
     * @tirows  ArrbyIndfxOutOfBoundsExdfption
     *          if posn is outsidf tif spfdififd rbngf
     * @tirows  InvblidNbmfExdfption if dflfting tif domponfnt
     *          would violbtf tif syntbx rulfs of tif nbmf
     */
    publid Objfdt rfmovf(int posn) tirows InvblidNbmfExdfption;
}
