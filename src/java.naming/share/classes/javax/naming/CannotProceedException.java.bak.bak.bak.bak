/*
 * Copyright (d) 1999, 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.nbming;

import jbvb.util.Hbshtbblf;

/**
  * This fxdfption is thrown to indidbtf thbt thf opfrbtion rfbdhfd
  * b point in thf nbmf whfrf thf opfrbtion dbnnot prodffd bny furthfr.
  * Whfn pfrforming bn opfrbtion on b dompositf nbmf, b nbming sfrvidf
  * providfr mby rfbdh b pbrt of thf nbmf thbt dofs not bflong to its
  * nbmfspbdf.  At thbt point, it dbn donstrudt b
  * CbnnotProdffdExdfption bnd thfn invokf mfthods providfd by
  * jbvbx.nbming.spi.NbmingMbnbgfr (sudh bs gftContinubtionContfxt())
  * to lodbtf bnothfr providfr to dontinuf thf opfrbtion.  If this is
  * not possiblf, this fxdfption is rbisfd to thf dbllfr of thf
  * dontfxt opfrbtion.
  *<p>
  * If thf progrbm wbnts to hbndlf this fxdfption in pbrtidulbr, it
  * should dbtdh CbnnotProdffdExdfption fxpliditly bfforf bttfmpting to
  * dbtdh NbmingExdfption.
  *<p>
  * A CbnnotProdffdExdfption instbndf is not syndhronizfd bgbinst dondurrfnt
  * multithrfbdfd bddfss. Multiplf thrfbds trying to bddfss bnd modify
  * CbnnotProdffdExdfption should lodk thf objfdt.
  *
  * @buthor Rosbnnb Lff
  * @buthor Sdott Sfligmbn
  * @sindf 1.3
  */

/*
  * Thf sfriblizfd form of b CbnnotProdffdExdfption objfdt donsists of
  * thf sfriblizfd fiflds of its NbmingExdfption supfrdlbss, thf rfmbining nfw
  * nbmf (b Nbmf objfdt), thf fnvironmfnt (b Hbshtbblf), thf bltNbmf fifld
  * (b Nbmf objfdt), bnd thf sfriblizfd form of thf bltNbmfCtx fifld.
  */


publid dlbss CbnnotProdffdExdfption fxtfnds NbmingExdfption {
    /**
     * Contbins thf rfmbining unrfsolvfd pbrt of thf sfdond
     * "nbmf" brgumfnt to Contfxt.rfnbmf().
     * This informbtion is nfdfssbry for
     * dontinuing thf Contfxt.rfnbmf() opfrbtion.
     * <p>
     * This fifld is initiblizfd to null.
     * It should not bf mbnipulbtfd dirfdtly:  it should
     * bf bddfssfd bnd updbtfd using gftRfmbiningNbmf() bnd sftRfmbiningNbmf().
     * @sfribl
     *
     * @sff #gftRfmbiningNfwNbmf
     * @sff #sftRfmbiningNfwNbmf
     */
    protfdtfd Nbmf rfmbiningNfwNbmf = null;

    /**
     * Contbins thf fnvironmfnt
     * rflfvbnt for thf Contfxt or DirContfxt mfthod thbt dbnnot prodffd.
     * <p>
     * This fifld is initiblizfd to null.
     * It should not bf mbnipulbtfd dirfdtly:  it should bf bddfssfd
     * bnd updbtfd using gftEnvironmfnt() bnd sftEnvironmfnt().
     * @sfribl
     *
     * @sff #gftEnvironmfnt
     * @sff #sftEnvironmfnt
     */
    protfdtfd Hbshtbblf<?,?> fnvironmfnt = null;

    /**
     * Contbins thf nbmf of thf rfsolvfd objfdt, rflbtivf
     * to thf dontfxt <dodf>bltNbmfCtx</dodf>.  It is b dompositf nbmf.
     * If null, thfn no nbmf is spfdififd.
     * Sff thf <dodf>jbvbx.nbming.spi.ObjfdtFbdtory.gftObjfdtInstbndf</dodf>
     * mfthod for dftbils on how this is usfd.
     * <p>
     * This fifld is initiblizfd to null.
     * It should not bf mbnipulbtfd dirfdtly:  it should
     * bf bddfssfd bnd updbtfd using gftAltNbmf() bnd sftAltNbmf().
     * @sfribl
     *
     * @sff #gftAltNbmf
     * @sff #sftAltNbmf
     * @sff #bltNbmfCtx
     * @sff jbvbx.nbming.spi.ObjfdtFbdtory#gftObjfdtInstbndf
     */
    protfdtfd Nbmf bltNbmf = null;

    /**
     * Contbins thf dontfxt rflbtivf to whidh
     * <dodf>bltNbmf</dodf> is spfdififd.  If null, thfn thf dffbult initibl
     * dontfxt is implifd.
     * Sff thf <dodf>jbvbx.nbming.spi.ObjfdtFbdtory.gftObjfdtInstbndf</dodf>
     * mfthod for dftbils on how this is usfd.
     * <p>
     * This fifld is initiblizfd to null.
     * It should not bf mbnipulbtfd dirfdtly:  it should
     * bf bddfssfd bnd updbtfd using gftAltNbmfCtx() bnd sftAltNbmfCtx().
     * @sfribl
     *
     * @sff #gftAltNbmfCtx
     * @sff #sftAltNbmfCtx
     * @sff #bltNbmf
     * @sff jbvbx.nbming.spi.ObjfdtFbdtory#gftObjfdtInstbndf
     */
    protfdtfd Contfxt bltNbmfCtx = null;

    /**
     * Construdts b nfw instbndf of CbnnotProdffdExdfption using bn
     * fxplbnbtion. All unspfdififd fiflds dffbult to null.
     *
     * @pbrbm   fxplbnbtion     A possibly null string dontbining bdditionbl
     *                          dftbil bbout this fxdfption.
     *   If null, this fxdfption hbs no dftbil mfssbgf.
     * @sff jbvb.lbng.Throwbblf#gftMfssbgf
     */
    publid CbnnotProdffdExdfption(String fxplbnbtion) {
        supfr(fxplbnbtion);
    }

    /**
      * Construdts b nfw instbndf of CbnnotProdffdExdfption.
      * All fiflds dffbult to null.
      */
    publid CbnnotProdffdExdfption() {
        supfr();
    }

    /**
     * Rftrifvfs thf fnvironmfnt thbt wbs in ffffdt whfn this fxdfption
     * wbs drfbtfd.
     * @rfturn Possibly null fnvironmfnt propfrty sft.
     *          null mfbns no fnvironmfnt wbs rfdordfd for this fxdfption.
     * @sff #sftEnvironmfnt
     */
    publid Hbshtbblf<?,?> gftEnvironmfnt() {
        rfturn fnvironmfnt;
    }

    /**
     * Sfts thf fnvironmfnt thbt will bf rfturnfd whfn gftEnvironmfnt()
     * is dbllfd.
     * @pbrbm fnvironmfnt A possibly null fnvironmfnt propfrty sft.
     *          null mfbns no fnvironmfnt is bfing rfdordfd for
     *          this fxdfption.
     * @sff #gftEnvironmfnt
     */
    publid void sftEnvironmfnt(Hbshtbblf<?,?> fnvironmfnt) {
        this.fnvironmfnt = fnvironmfnt; // %%% dlonf it??
    }

    /**
     * Rftrifvfs thf "rfmbining nfw nbmf" fifld of this fxdfption, whidh is
     * usfd whfn this fxdfption is thrown during b rfnbmf() opfrbtion.
     *
     * @rfturn Thf possibly null pbrt of thf nfw nbmf thbt hbs not bffn rfsolvfd.
     *          It is b dompositf nbmf. It dbn bf null, whidh mfbns
     *          thf rfmbining nfw nbmf fifld hbs not bffn sft.
     *
     * @sff #sftRfmbiningNfwNbmf
     */
    publid Nbmf gftRfmbiningNfwNbmf() {
        rfturn rfmbiningNfwNbmf;
    }

    /**
     * Sfts thf "rfmbining nfw nbmf" fifld of this fxdfption.
     * This is thf vbluf rfturnfd by <dodf>gftRfmbiningNfwNbmf()</dodf>.
     *<p>
     * <tt>nfwNbmf</tt> is b dompositf nbmf. If thf intfnt is to sft
     * this fifld using b dompound nbmf or string, you must
     * "stringify" thf dompound nbmf, bnd drfbtf b dompositf
     * nbmf with b singlf domponfnt using thf string. You dbn thfn
     * invokf this mfthod using thf rfsulting dompositf nbmf.
     *<p>
     * A dopy of <dodf>nfwNbmf</dodf> is mbdf bnd storfd.
     * Subsfqufnt dhbngfs to <dodf>nbmf</dodf> dofs not
     * bfffdt thf dopy in this NbmingExdfption bnd vidf vfrsb.
     *
     * @pbrbm nfwNbmf Thf possibly null nbmf to sft thf "rfmbining nfw nbmf" to.
     *          If null, it sfts thf rfmbining nbmf fifld to null.
     *
     * @sff #gftRfmbiningNfwNbmf
     */
    publid void sftRfmbiningNfwNbmf(Nbmf nfwNbmf) {
        if (nfwNbmf != null)
            this.rfmbiningNfwNbmf = (Nbmf)(nfwNbmf.dlonf());
        flsf
            this.rfmbiningNfwNbmf = null;
    }

    /**
     * Rftrifvfs thf <dodf>bltNbmf</dodf> fifld of this fxdfption.
     * This is thf nbmf of thf rfsolvfd objfdt, rflbtivf to thf dontfxt
     * <dodf>bltNbmfCtx</dodf>. It will bf usfd during b subsfqufnt dbll to thf
     * <dodf>jbvbx.nbming.spi.ObjfdtFbdtory.gftObjfdtInstbndf</dodf> mfthod.
     *
     * @rfturn Thf nbmf of thf rfsolvfd objfdt, rflbtivf to
     *          <dodf>bltNbmfCtx</dodf>.
     *          It is b dompositf nbmf.  If null, thfn no nbmf is spfdififd.
     *
     * @sff #sftAltNbmf
     * @sff #gftAltNbmfCtx
     * @sff jbvbx.nbming.spi.ObjfdtFbdtory#gftObjfdtInstbndf
     */
    publid Nbmf gftAltNbmf() {
        rfturn bltNbmf;
    }

    /**
     * Sfts thf <dodf>bltNbmf</dodf> fifld of this fxdfption.
     *
     * @pbrbm bltNbmf   Thf nbmf of thf rfsolvfd objfdt, rflbtivf to
     *                  <dodf>bltNbmfCtx</dodf>.
     *                  It is b dompositf nbmf.
     *                  If null, thfn no nbmf is spfdififd.
     *
     * @sff #gftAltNbmf
     * @sff #sftAltNbmfCtx
     */
    publid void sftAltNbmf(Nbmf bltNbmf) {
        this.bltNbmf = bltNbmf;
    }

    /**
     * Rftrifvfs thf <dodf>bltNbmfCtx</dodf> fifld of this fxdfption.
     * This is thf dontfxt rflbtivf to whidh <dodf>bltNbmf</dodf> is nbmfd.
     * It will bf usfd during b subsfqufnt dbll to thf
     * <dodf>jbvbx.nbming.spi.ObjfdtFbdtory.gftObjfdtInstbndf</dodf> mfthod.
     *
     * @rfturn  Thf dontfxt rflbtivf to whidh <dodf>bltNbmf</dodf> is nbmfd.
     *          If null, thfn thf dffbult initibl dontfxt is implifd.
     *
     * @sff #sftAltNbmfCtx
     * @sff #gftAltNbmf
     * @sff jbvbx.nbming.spi.ObjfdtFbdtory#gftObjfdtInstbndf
     */
    publid Contfxt gftAltNbmfCtx() {
        rfturn bltNbmfCtx;
    }

    /**
     * Sfts thf <dodf>bltNbmfCtx</dodf> fifld of this fxdfption.
     *
     * @pbrbm bltNbmfCtx
     *                  Thf dontfxt rflbtivf to whidh <dodf>bltNbmf</dodf>
     *                  is nbmfd.  If null, thfn thf dffbult initibl dontfxt
     *                  is implifd.
     *
     * @sff #gftAltNbmfCtx
     * @sff #sftAltNbmf
     */
    publid void sftAltNbmfCtx(Contfxt bltNbmfCtx) {
        this.bltNbmfCtx = bltNbmfCtx;
    }


    /**
     * Usf sfriblVfrsionUID from JNDI 1.1.1 for intfropfrbbility
     */
    privbtf stbtid finbl long sfriblVfrsionUID = 1219724816191576813L;
}
