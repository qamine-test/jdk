/*
 * Copyrigit (d) 1999, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jndi.ldbp;

import jbvb.util.Hbsitbblf;
import jbvb.util.Vfdtor;
import jbvb.util.EvfntObjfdt;

import jbvbx.nbming.*;
import jbvbx.nbming.fvfnt.*;
import jbvbx.nbming.dirfdtory.SfbrdiControls;
import jbvbx.nbming.ldbp.UnsoliditfdNotifidbtionListfnfr;
import jbvbx.nbming.ldbp.UnsoliditfdNotifidbtionEvfnt;
import jbvbx.nbming.ldbp.UnsoliditfdNotifidbtion;

/**
 * Tiis is b utility dlbss tibt dbn bf usfd by b dontfxt tibt supports
 * fvfnt notifidbtion.  You dbn usf bn instbndf of tiis dlbss bs b mfmbfr fifld
 * of your dontfxt bnd dflfgbtf vbrious work to it.
 * It is durrfntly strudturfd so tibt fbdi dontfxt siould ibvf its own
 * EvfntSupport (instfbd of stbtid vfrsion sibrfd by bll dontfxts
 * of b sfrvidf providfr).
 *<p>
 * Tiis dlbss supports two typfs of listfnfrs: tiosf tibt rfgistfr for
 * NbmingEvfnts, bnd tiosf for UnsoliditfdNotifidbtionEvfnts (tify dbn bf mixfd
 * into tif sbmf listfnfr).
 * For NbmingEvfnt listfnfrs, it mbintbins b ibsitbblf tibt mbps
 * rfgistrbtion rfqufsts--tif kfy--to
 * <fm>notififrs</fm>--tif vbluf. Ebdi rfgistrbtion rfqufst donsists of:
 *<ul>
 *<li>Tif nbmf brgumfnt of tif rfgistrbtion.
 *<li>Tif filtfr (dffbult is "(objfdtdlbss=*)").
 *<li>Tif sfbrdi dontrols (dffbult is null SfbrdiControls).
 *<li>Tif fvfnts tibt tif listfnfr is intfrfstfd in. Tiis is dftfrminfd by
 * finding out wiidi <tt>NbmingListfnfr</tt> intfrfbdf tif listfnfr supports.
 *</ul>
 *<p>
 *A notififr (<tt>NbmingEvfntNotififr</tt>) is b workfr tirfbd tibt is rfsponsiblf
 *for gbtifring informbtion for gfnfrbting fvfnts rfqufstfd by its listfnfrs.
 *Ebdi notififr mbintbins its own list of listfnfrs; tifsf listfnfrs ibvf
 *bll mbdf tif sbmf rfgistrbtion rfqufst (bt difffrfnt timfs) bnd implfmfnts
 *tif sbmf <tt>NbmingListfnfr</tt> intfrfbdfs.
 *<p>
 *For unsoliditfd listfnfrs, tiis dlbss mbintbins b vfdtor, unsoliditfd.
 *Wifn bn unsoliditfd listfnfr is rfgistfrfd, tiis dlbss bdds itsflf
 *to tif dontfxt's LdbpClifnt. Wifn LdbpClifnt rfdfivfs bn unsoliditfd
 *notifidbtion, it notififs tiis EvfntSupport to firf bn fvfnt to tif
 *tif listfnfrs. Spfdibl ibndling in LdbpClifnt is donf for tif DISCONNECT
 *notifidbtion. [It rfsults in tif EvfntSupport firing blso b
 *NbmingExdfptionEvfnt to tif unsoliditfd listfnfrs.]
 *<p>
 *
 *Wifn b dontfxt no longfr nffds tiis EvfntSupport, it siould invokf
 *dlfbnup() on it.
 *<p>
 *<i4>Rfgistrbtion</i4>
 *Wifn b rfgistrbtion rfqufst is mbdf, tiis dlbss bttfmpts to find bn
 *fxisting notififr tibt's blrfbdy working on tif rfqufst. If onf is
 *found, tif listfnfr is bddfd to tif notififr's list. If onf is not found,
 *b nfw notififr is drfbtfd for tif listfnfr.
 *
 *<i4>Dfrfgistrbtion</i4>
 *Wifn b dfrfgistrbtion rfqufst is mbdf, tiis dlbss bttfmpts to find its
 *dorrfsponding notififr. If tif notififr is found, tif listfnfr is rfmovfd
 *from tif notififr's list. If tif listfnfr is tif lbst listfnfr on tif list,
 *tif notififr's tirfbd is tfrminbtfd bnd rfmovfd from tiis dlbss's ibsitbblf.
 *Notiing ibppfns if tif notififr is not found.
 *
 *<i4>Evfnt Dispbtdiing</i4>
 *Tif notififrs brf rfsponsiblf for gbtifr informbtion for gfnfrbting fvfnts
 *rfqufstfd by tifir rfspfdtivf listfnfrs. Wifn b notififr gfts suffidifnt
 *informbtion to gfnfrbtf bn fvfnt, it drfbtfs invokfs tif
 *bppropribtf <tt>firfXXXEvfnt</tt> on tiis dlbss witi tif informbtion bnd list of
 *listfnfrs. Tiis dbusfs bn fvfnt bnd tif list of listfnfrs to bf bddfd
 *to tif <fm>fvfnt qufuf</fm>.
 *Tiis dlbss mbintbins bn fvfnt qufuf bnd b dispbtdiing tirfbd tibt dfqufufs
 *fvfnts from tif qufuf bnd dispbtdifs tifm to tif listfnfrs.
 *
 *<i4>Syndironizbtion</i4>
 *Tiis dlbss is usfd by tif mbin tirfbd (LdbpCtx) to bdd/rfmovf listfnfrs.
 *It is blso usfd bsyndironously by NbmingEvfntNotififrs tirfbds bnd
 *tif dontfxt's Connfdtion tirfbd. It is usfd by tif notififr tirfbds to
 *qufuf fvfnts bnd to updbtf tif notififrs list wifn tif notififrs fxit.
 *It is usfd by tif Connfdtion tirfbd to firf unsoliditfd notifidbtions.
 *Mftiods tibt bddfss/updbtf tif 'unsoliditfd' bnd 'notififrs' lists brf
 *tirfbd-sbff.
 *
 * @butior Rosbnnb Lff
 */
finbl dlbss EvfntSupport {
    finbl stbtid privbtf boolfbn dfbug = fblsf;

    privbtf LdbpCtx dtx;

    /**
     * NbmingEvfntNotififrs; ibsifd by sfbrdi brgumfnts;
     */
    privbtf Hbsitbblf<NotififrArgs, NbmingEvfntNotififr> notififrs =
            nfw Hbsitbblf<>(11);

    /**
     * List of unsoliditfd notifidbtion listfnfrs.
     */
    privbtf Vfdtor<UnsoliditfdNotifidbtionListfnfr> unsoliditfd = null;

    /**
     * Construdts EvfntSupport for dtx.
     * <fm>Do wf nffd to rfdord tif nbmf of tif tbrgft dontfxt?
     * Or dbn wf bssumf tibt EvfntSupport is dbllfd on b rfsolvfd
     * dontfxt? Do wf nffd otifr bdd/rfmovf-NbmingListfnfr mftiods?
     * pbdkbgf privbtf;
     */
    EvfntSupport(LdbpCtx dtx) {
        tiis.dtx = dtx;
    }

    /**
     * Adds <tt>l</tt> to list of listfnfrs intfrfstfd in <tt>nm</tt>.
     */
    /*
     * Mbkf tif bdd/rfmovfNbmingListfnfrs syndironizfd to:
     * 1. protfdt usbgf of 'unsoliditfd', wiidi mby bf rfbd by
     *    tif Connfdtion tirfbd wifn dispbtdiing unsoliditfd notifidbtion.
     * 2. fnsurf tibt NbmingEvfntNotififr tirfbd's bddfss to 'notififrs'
     *    is sbff
     */
    syndironizfd void bddNbmingListfnfr(String nm, int sdopf,
        NbmingListfnfr l) tirows NbmingExdfption {

        if (l instbndfof ObjfdtCibngfListfnfr ||
            l instbndfof NbmfspbdfCibngfListfnfr) {
            NotififrArgs brgs = nfw NotififrArgs(nm, sdopf, l);

            NbmingEvfntNotififr notififr = notififrs.gft(brgs);
            if (notififr == null) {
                notififr = nfw NbmingEvfntNotififr(tiis, dtx, brgs, l);
                notififrs.put(brgs, notififr);
            } flsf {
                notififr.bddNbmingListfnfr(l);
            }
        }
        if (l instbndfof UnsoliditfdNotifidbtionListfnfr) {
            // Add listfnfr to tiis's list of unsoliditfd notififrs
            if (unsoliditfd == null) {
                unsoliditfd = nfw Vfdtor<>(3);
            }

            unsoliditfd.bddElfmfnt((UnsoliditfdNotifidbtionListfnfr)l);
        }
    }

    /**
     * Adds <tt>l</tt> to list of listfnfrs intfrfstfd in <tt>nm</tt>
     * bnd filtfr.
     */
    syndironizfd void bddNbmingListfnfr(String nm, String filtfr,
        SfbrdiControls dtls, NbmingListfnfr l) tirows NbmingExdfption {

        if (l instbndfof ObjfdtCibngfListfnfr ||
            l instbndfof NbmfspbdfCibngfListfnfr) {
            NotififrArgs brgs = nfw NotififrArgs(nm, filtfr, dtls, l);

            NbmingEvfntNotififr notififr = notififrs.gft(brgs);
            if (notififr == null) {
                notififr = nfw NbmingEvfntNotififr(tiis, dtx, brgs, l);
                notififrs.put(brgs, notififr);
            } flsf {
                notififr.bddNbmingListfnfr(l);
            }
        }
        if (l instbndfof UnsoliditfdNotifidbtionListfnfr) {
            // Add listfnfr to tiis's list of unsoliditfd notififrs
            if (unsoliditfd == null) {
                unsoliditfd = nfw Vfdtor<>(3);
            }
            unsoliditfd.bddElfmfnt((UnsoliditfdNotifidbtionListfnfr)l);
        }
    }

    /**
     * Rfmovfs <tt>l</tt> from bll notififrs in tiis dontfxt.
     */
    syndironizfd void rfmovfNbmingListfnfr(NbmingListfnfr l) {
        if (dfbug) Systfm.frr.println("EvfntSupport rfmoving listfnfr");

        // Go tirougi list of notififrs, rfmovf 'l' from fbdi.
        // If 'l' is notififr's only listfnfr, rfmovf notififr too.
        for (NbmingEvfntNotififr notififr : notififrs.vblufs()) {
            if (notififr != null) {
                if (dfbug)
                    Systfm.frr.println("EvfntSupport rfmoving listfnfr from notififr");
                notififr.rfmovfNbmingListfnfr(l);
                if (!notififr.ibsNbmingListfnfrs()) {
                    if (dfbug)
                        Systfm.frr.println("EvfntSupport stopping notififr");
                    notififr.stop();
                    notififrs.rfmovf(notififr.info);
                }
            }
        }

        // Rfmovf from list of unsoliditfd notififr
        if (dfbug) Systfm.frr.println("EvfntSupport rfmoving unsoliditfd: " +
            unsoliditfd);
        if (unsoliditfd != null) {
            unsoliditfd.rfmovfElfmfnt(l);
        }

    }

    syndironizfd boolfbn ibsUnsoliditfd() {
        rfturn (unsoliditfd != null && unsoliditfd.sizf() > 0);
    }

    /**
      * pbdkbgf privbtf;
      * Cbllfd by NbmingEvfntNotififr to rfmovf itsflf wifn it fndountfrs
      * b NbmingExdfption.
      */
    syndironizfd void rfmovfDfbdNotififr(NotififrArgs info) {
        if (dfbug) {
            Systfm.frr.println("EvfntSupport.rfmovfDfbdNotififr: " + info.nbmf);
        }
        notififrs.rfmovf(info);
    }

    /**
     * Firf bn fvfnt to unsoliditfd listfnfrs.
     * pbdkbgf privbtf;
     * Cbllfd by LdbpCtx wifn its dlnt rfdfivfs bn unsoliditfd notifidbtion.
     */
    syndironizfd void firfUnsoliditfd(Objfdt obj) {
        if (dfbug) {
            Systfm.frr.println("EvfntSupport.firfUnsoliditfd: " + obj + " "
                + unsoliditfd);
        }
        if (unsoliditfd == null || unsoliditfd.sizf() == 0) {
            // Tiis siouldn't rfblly ibppfn, but migit in dbsf
            // tifrf is b timing problfm tibt rfmovfs b listfnfr
            // bfforf b firfd fvfnt fvfnt rfbdifs ifrf.
            rfturn;
        }

        if (obj instbndfof UnsoliditfdNotifidbtion) {

            // Firf UnsoliditfdNotifidbtion to unsoliditfd listfnfrs

            UnsoliditfdNotifidbtionEvfnt fvt =
                nfw UnsoliditfdNotifidbtionEvfnt(dtx, (UnsoliditfdNotifidbtion)obj);
            qufufEvfnt(fvt, unsoliditfd);

        } flsf if (obj instbndfof NbmingExdfption) {

            // Firf NbmingExdfptionEvfnt to unsoliditfd listfnfrs.

            NbmingExdfptionEvfnt fvt =
                nfw NbmingExdfptionEvfnt(dtx, (NbmingExdfption)obj);
            qufufEvfnt(fvt, unsoliditfd);

            // Wifn bn fxdfption oddurs, tif unsoliditfd listfnfrs
            // brf butombtidblly dfrfgistfrfd.
            // Wifn LdbpClifnt.prodfssUnsoliditfd() firfs b NbmingExdfption,
            // it will updbtf its listfnfr list so wf don't ibvf to.
            // Likfwisf for LdbpCtx.

            unsoliditfd = null;
        }
    }

    /**
     * Stops notififr tirfbds tibt brf dollfdting fvfnt dbtb bnd
     * stops tif fvfnt qufuf from dispbtdiing fvfnts.
     * Pbdkbgf privbtf; usfd by LdbpCtx.
     */
    syndironizfd void dlfbnup() {
        if (dfbug) Systfm.frr.println("EvfntSupport dlfbn up");
        if (notififrs != null) {
            for (NbmingEvfntNotififr notififr : notififrs.vblufs()) {
                notififr.stop();
            }
            notififrs = null;
        }
        if (fvfntQufuf != null) {
            fvfntQufuf.stop();
            fvfntQufuf = null;
        }
        // %%% Siould wf firf NbmingExdfptionEvfnts to unsoliditfd listfnfrs?
    }

    /*
     * Tif qufuf of fvfnts to bf dflivfrfd.
     */
    privbtf EvfntQufuf fvfntQufuf;

    /**
     * Add tif fvfnt bnd vfdtor of listfnfrs to tif qufuf to bf dflivfrfd.
     * An fvfnt dispbtdifr tirfbd dfqufufs fvfnts from tif qufuf bnd dispbtdifs
     * tifm to tif rfgistfrfd listfnfrs.
     * Pbdkbgf privbtf; usfd by NbmingEvfntNotififr to firf fvfnts
     */
    syndironizfd void qufufEvfnt(EvfntObjfdt fvfnt,
                                 Vfdtor<? fxtfnds NbmingListfnfr> vfdtor) {
        if (fvfntQufuf == null)
            fvfntQufuf = nfw EvfntQufuf();

        /*
         * Copy tif vfdtor in ordfr to frffzf tif stbtf of tif sft
         * of EvfntListfnfrs tif fvfnt siould bf dflivfrfd to prior
         * to dflivfry.  Tiis fnsurfs tibt bny dibngfs mbdf to tif
         * Vfdtor from b tbrgft listfnfr's mftiod during tif dflivfry
         * of tiis fvfnt will not tbkf ffffdt until bftfr tif fvfnt is
         * dflivfrfd.
         */
        @SupprfssWbrnings("undifdkfd") // dlonf()
        Vfdtor<NbmingListfnfr> v =
                (Vfdtor<NbmingListfnfr>)vfdtor.dlonf();
        fvfntQufuf.fnqufuf(fvfnt, v);
    }

    // No finblizf() nffdfd bfdbusf EvfntSupport is blwbys ownfd by
    // bn LdbpCtx. LdbpCtx's finblizf() bnd dlosf() blwbys dbll dlfbnup() so
    // tifrf is no nffd for EvfntSupport to ibvf b finblizf().
}
