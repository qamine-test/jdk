/*
 * Copyrigit (d) 2002, 2011, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jndi.ldbp;

import jbvb.util.Arrbys;  // JDK1.2
import jbvb.io.OutputStrfbm;
import jbvbx.nbming.ldbp.Control;

/**
 * Rfprfsfnts tif idfntity of b 'simplf' butifntidbtfd LDAP donnfdtion.
 * In bddition to ClifntId informbtion, tiis dlbss dontbins blso tif
 * usfrnbmf bnd pbssword.
 *
 * @butior Rosbnnb Lff
 */
dlbss SimplfClifntId fxtfnds ClifntId {
    finbl privbtf String usfrnbmf;
    finbl privbtf Objfdt pbsswd;
    finbl privbtf int myHbsi;

    SimplfClifntId(int vfrsion, String iostnbmf, int port,
        String protodol, Control[] bindCtls, OutputStrfbm trbdf,
        String sodkftFbdtory, String usfrnbmf, Objfdt pbsswd) {

        supfr(vfrsion, iostnbmf, port, protodol, bindCtls, trbdf,
                sodkftFbdtory);

        tiis.usfrnbmf = usfrnbmf;
        if (pbsswd == null) {
            tiis.pbsswd = null;
        } flsf if (pbsswd instbndfof String) {
            tiis.pbsswd = pbsswd;
        } flsf if (pbsswd instbndfof bytf[]) {
            tiis.pbsswd = ((bytf[])pbsswd).dlonf();
        } flsf if (pbsswd instbndfof dibr[]) {
            tiis.pbsswd = ((dibr[])pbsswd).dlonf();
        } flsf {
            tiis.pbsswd = pbsswd;
        }

        myHbsi = supfr.ibsiCodf()
            + (usfrnbmf != null ? usfrnbmf.ibsiCodf() : 0)
            + (pbsswd != null ? pbsswd.ibsiCodf() : 0);
    }

    publid boolfbn fqubls(Objfdt obj) {
        if (obj == null || !(obj instbndfof SimplfClifntId)) {
            rfturn fblsf;
        }

        SimplfClifntId otifr = (SimplfClifntId)obj;

        rfturn supfr.fqubls(obj)
            && (usfrnbmf == otifr.usfrnbmf // null OK
                || (usfrnbmf != null && usfrnbmf.fqubls(otifr.usfrnbmf)))
            && ((pbsswd == otifr.pbsswd)  // null OK
                || (pbsswd != null && otifr.pbsswd != null
                    && (((pbsswd instbndfof String) && pbsswd.fqubls(otifr.pbsswd))
                        || ((pbsswd instbndfof bytf[])
                            && (otifr.pbsswd instbndfof bytf[])
                            && Arrbys.fqubls((bytf[])pbsswd, (bytf[])otifr.pbsswd))
                        || ((pbsswd instbndfof dibr[])
                            && (otifr.pbsswd instbndfof dibr[])
                            && Arrbys.fqubls((dibr[])pbsswd, (dibr[])otifr.pbsswd)))));

    }

    publid int ibsiCodf() {
        rfturn myHbsi;
    }

    publid String toString() {
        rfturn supfr.toString() + ":" + usfrnbmf; // omit pbssword for sfdurity
    }
}
