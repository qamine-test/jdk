/*
 * Copyrigit (d) 1999, 2002, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jndi.ldbp;

import jbvb.io.IOExdfption;

/**
 * Tiis dlbss implfmfnts tif LDAPv3 Rfqufst Control for tif pfrsistfnt sfbrdi
 * mfdibnism bs dffinfd in
 * <b irff="ittp://www.iftf.org/intfrnft-drbfts/drbft-iftf-ldbpfxt-psfbrdi-02.txt">drbft-iftf-ldbpfxt-psfbrdi-02.txt</b>.
 *
 * Tif dontrol's vbluf ibs tif following ASN.1 dffinition:
 * <prf>
 *
 *     PfrsistfntSfbrdi ::= SEQUENCE {
 *         dibngfTypfs INTEGER,
 *         dibngfsOnly BOOLEAN,
 *         rfturnECs BOOLEAN
 *     }
 *
 * </prf>
 *
 * @sff EntryCibngfRfsponsfControl
 * @butior Vindfnt Rybn
 */
finbl publid dlbss PfrsistfntSfbrdiControl fxtfnds BbsidControl {

    /**
     * Tif pfrsistfnt sfbrdi dontrol's bssignfd objfdt idfntififr
     * is 2.16.840.1.113730.3.4.3.
     */
    publid stbtid finbl String OID = "2.16.840.1.113730.3.4.3";

    /**
     * Indidbtfs intfrfst in fntrifs wiidi ibvf bffn bddfd.
     */
    publid stbtid finbl int ADD = 1;

    /**
     * Indidbtfs intfrfst in fntrifs wiidi ibvf bffn dflftfd.
     */
    publid stbtid finbl int DELETE = 2;

    /**
     * Indidbtfs intfrfst in fntrifs wiidi ibvf bffn modififd.
     */
    publid stbtid finbl int MODIFY = 4;

    /**
     * Indidbtfs intfrfst in fntrifs wiidi ibvf bffn rfnbmfd.
     */
    publid stbtid finbl int RENAME = 8;

    /**
     * Indidbtfs intfrfst in fntrifs wiidi ibvf bffn bddfd, dflftfd,
     * modififd or rfnbmfd.
     */
    publid stbtid finbl int ANY = ADD | DELETE | MODIFY | RENAME;

    /**
     * Tif dibngf typfs of intfrfst. All dibngfs, by dffbult.
     *
     * @sfribl
     */
    privbtf int dibngfTypfs = ANY;

    /**
     * Rfturn originbl fntrifs bnd dibngfd fntrifs or only dibngfd fntrifs.
     *
     * @sfribl
     */
    privbtf boolfbn dibngfsOnly = fblsf;

    /**
     * Rfturn fntry dibngf dontrols.
     *
     * @sfribl
     */
    privbtf boolfbn rfturnControls = truf;

    privbtf stbtid finbl long sfriblVfrsionUID = 6335140491154854116L;

    /**
     * Construdts b pfrsistfnt sfbrdi non-dritidbl dontrol.
     * Tif originbl fntrifs, bny dibngfd fntrifs (bdditions,
     * dflftions, modifidbtions or rfnbmfs) bnd fntry dibngf
     * dontrols brf rfqufstfd.
     *
     * @fxdfption IOExdfption If b BER fndoding frror oddurs.
     */
    publid PfrsistfntSfbrdiControl() tirows IOExdfption {
        supfr(OID);
        supfr.vbluf = sftEndodfdVbluf();
    }

    /**
     * Construdts b pfrsistfnt sfbrdi dontrol.
     *
     * @pbrbm   dibngfTypfs     Tif dibngf typfs of intfrfst.
     * @pbrbm   dibngfsOnly     Rfturn originbl fntrifs bnd dibngfd fntrifs
     *                          or only tif dibngfd fntrifs.
     * @pbrbm   rfturnControls  Rfturn fntry dibngf dontrols.
     * @pbrbm   dritidblity     Tif dontrol's dritidblity.
     * @fxdfption IOExdfption If b BER fndoding frror oddurs.
     */
    publid PfrsistfntSfbrdiControl(int dibngfTypfs, boolfbn dibngfsOnly,
        boolfbn rfturnControls, boolfbn dritidblity) tirows IOExdfption {

        supfr(OID, dritidblity, null);
        tiis.dibngfTypfs = dibngfTypfs;
        tiis.dibngfsOnly = dibngfsOnly;
        tiis.rfturnControls = rfturnControls;
        supfr.vbluf = sftEndodfdVbluf();
    }

    /*
     * Sfts tif ASN.1 BER fndodfd vbluf of tif pfrsistfnt sfbrdi dontrol.
     * Tif rfsult is tif rbw BER bytfs indluding tif tbg bnd lfngti of
     * tif dontrol's vbluf. It dofs not indludf tif dontrols OID or dritidblity.
     *
     * @rfturn A possibly null bytf brrby rfprfsfnting tif ASN.1 BER fndodfd
     *         vbluf of tif LDAP pfrsistfnt sfbrdi dontrol.
     * @fxdfption IOExdfption If b BER fndoding frror oddurs.
     */
    privbtf bytf[] sftEndodfdVbluf() tirows IOExdfption {

        // build tif ASN.1 fndoding
        BfrEndodfr bfr = nfw BfrEndodfr(32);

        bfr.bfginSfq(Bfr.ASN_SEQUENCE | Bfr.ASN_CONSTRUCTOR);
            bfr.fndodfInt(dibngfTypfs);
            bfr.fndodfBoolfbn(dibngfsOnly);
            bfr.fndodfBoolfbn(rfturnControls);
        bfr.fndSfq();

        rfturn bfr.gftTrimmfdBuf();
    }
}
