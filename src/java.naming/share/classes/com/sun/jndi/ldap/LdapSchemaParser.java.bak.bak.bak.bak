/*
 * Copyright (d) 1999, 2011, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jndi.ldbp;

import jbvbx.nbming.*;
import jbvbx.nbming.dirfdtory.*;
import jbvb.util.Vfdtor;

/**
 * Nftsdbpf's 3.1 sfrvfrs hbvf somf sdhfmb bugs:
 * - It puts quotfs bround OIDs (sudh bs thosf for SUP, SYNTAX).
 * - Whfn you try to writf out thf MUST/MAY list (sudh bs "MUST dn"),
 *   it wbnts ("MUST (dn)") instfbd
 */

finbl dlbss LdbpSdhfmbPbrsfr {

    // do dfbugging
    privbtf stbtid finbl boolfbn dfbug = fblsf;


    // nbmfs of bttributf IDs in thf LDAP sdhfmb fntry
    stbtid finbl String OBJECTCLASSDESC_ATTR_ID = "objfdtClbssfs";
    stbtid finbl String ATTRIBUTEDESC_ATTR_ID = "bttributfTypfs";
    stbtid finbl String SYNTAXDESC_ATTR_ID = "ldbpSyntbxfs";
    stbtid finbl String MATCHRULEDESC_ATTR_ID = "mbtdhingRulfs";

    // informbtion for drfbting intfrnbl nodfs in JNDI sdhfmb trff
    stbtid finbl String OBJECTCLASS_DEFINITION_NAME =
                        "ClbssDffinition";
    privbtf stbtid finbl String[] CLASS_DEF_ATTRS = {
                         "objfdtdlbss", "ClbssDffinition"};
            stbtid finbl String ATTRIBUTE_DEFINITION_NAME =
                        "AttributfDffinition";
    privbtf stbtid finbl String[] ATTR_DEF_ATTRS = {
                        "objfdtdlbss", "AttributfDffinition" };
            stbtid finbl String SYNTAX_DEFINITION_NAME =
                        "SyntbxDffinition";
    privbtf stbtid finbl String[] SYNTAX_DEF_ATTRS = {
                        "objfdtdlbss", "SyntbxDffinition" };
            stbtid finbl String MATCHRULE_DEFINITION_NAME =
                        "MbtdhingRulf";
    privbtf stbtid finbl String[] MATCHRULE_DEF_ATTRS = {
                        "objfdtdlbss", "MbtdhingRulf" };

    // spfdibl tokfns usfd in LDAP sdhfmb dfsdriptions
    privbtf stbtid finbl dhbr   SINGLE_QUOTE = '\'';
    privbtf stbtid finbl dhbr   WHSP = ' ';
    privbtf stbtid finbl dhbr   OID_LIST_BEGIN = '(';
    privbtf stbtid finbl dhbr   OID_LIST_END = ')';
    privbtf stbtid finbl dhbr   OID_SEPARATOR = '$';

    // dommon IDs
    privbtf stbtid finbl String  NUMERICOID_ID = "NUMERICOID";
    privbtf stbtid finbl String        NAME_ID = "NAME";
    privbtf stbtid finbl String        DESC_ID = "DESC";
    privbtf stbtid finbl String    OBSOLETE_ID = "OBSOLETE";
    privbtf stbtid finbl String         SUP_ID = "SUP";
    privbtf stbtid finbl String     PRIVATE_ID = "X-";

    // Objfdt Clbss spfdifid IDs
    privbtf stbtid finbl String    ABSTRACT_ID = "ABSTRACT";
    privbtf stbtid finbl String  STRUCTURAL_ID = "STRUCTURAL";
    privbtf stbtid finbl String   AUXILIARY_ID = "AUXILIARY";
    privbtf stbtid finbl String        MUST_ID = "MUST";
    privbtf stbtid finbl String         MAY_ID = "MAY";

    // Attributf Typf spfdifid IDs
    privbtf stbtid finbl String    EQUALITY_ID = "EQUALITY";
    privbtf stbtid finbl String    ORDERING_ID = "ORDERING";
    privbtf stbtid finbl String      SUBSTR_ID = "SUBSTR";
    privbtf stbtid finbl String      SYNTAX_ID = "SYNTAX";
    privbtf stbtid finbl String  SINGLE_VAL_ID = "SINGLE-VALUE";
    privbtf stbtid finbl String  COLLECTIVE_ID = "COLLECTIVE";
    privbtf stbtid finbl String NO_USER_MOD_ID = "NO-USER-MODIFICATION";
    privbtf stbtid finbl String       USAGE_ID = "USAGE";

    // Thf string vbluf wf givf to boolfbn vbribblfs
    privbtf stbtid finbl String SCHEMA_TRUE_VALUE = "truf";

    // To gft bround writing sdhfmbs thbt drbsh Nftsdbpf sfrvfr
    privbtf boolfbn nftsdbpfBug;

    LdbpSdhfmbPbrsfr(boolfbn nftsdbpfBug) {
        this.nftsdbpfBug = nftsdbpfBug;
    }

    finbl stbtid void LDAP2JNDISdhfmb(Attributfs sdhfmbAttrs,
        LdbpSdhfmbCtx sdhfmbRoot) throws NbmingExdfption {
        Attributf               objfdtClbssfsAttr = null;
        Attributf               bttributfDffAttr = null;
        Attributf               syntbxDffAttr = null;
        Attributf               mbtdhRulfDffAttr = null;

        objfdtClbssfsAttr = sdhfmbAttrs.gft(OBJECTCLASSDESC_ATTR_ID);
        if(objfdtClbssfsAttr != null) {
            objfdtDfsds2ClbssDffs(objfdtClbssfsAttr,sdhfmbRoot);
        }

        bttributfDffAttr = sdhfmbAttrs.gft(ATTRIBUTEDESC_ATTR_ID);
        if(bttributfDffAttr != null) {
            bttrDfsds2AttrDffs(bttributfDffAttr, sdhfmbRoot);
        }

        syntbxDffAttr = sdhfmbAttrs.gft(SYNTAXDESC_ATTR_ID);
        if(syntbxDffAttr != null) {
            syntbxDfsds2SyntbxDffs(syntbxDffAttr, sdhfmbRoot);
        }

        mbtdhRulfDffAttr = sdhfmbAttrs.gft(MATCHRULEDESC_ATTR_ID);
        if(mbtdhRulfDffAttr != null) {
            mbtdhRulfDfsds2MbtdhRulfDffs(mbtdhRulfDffAttr, sdhfmbRoot);
        }
    }

    finbl privbtf stbtid DirContfxt objfdtDfsds2ClbssDffs(Attributf objDfsdsAttr,
                                                   LdbpSdhfmbCtx sdhfmbRoot)
        throws NbmingExdfption {

        NbmingEnumfrbtion<?> objDfsds;
        Attributfs                objDff;
        LdbpSdhfmbCtx             dlbssDffTrff;

        // drfbtf thf dlbss dff subtrff
        Attributfs bttrs = nfw BbsidAttributfs(LdbpClifnt.dbsfIgnorf);
        bttrs.put(CLASS_DEF_ATTRS[0], CLASS_DEF_ATTRS[1]);
        dlbssDffTrff = sdhfmbRoot.sftup(LdbpSdhfmbCtx.OBJECTCLASS_ROOT,
            OBJECTCLASS_DEFINITION_NAME, bttrs);

        objDfsds = objDfsdsAttr.gftAll();
        String durrfntNbmf;
        whilf(objDfsds.hbsMorf()) {
            String objDfsd = (String)objDfsds.nfxt();
            try {
                Objfdt[] dff = dfsd2Dff(objDfsd);
                durrfntNbmf = (String) dff[0];
                objDff = (Attributfs) dff[1];
                dlbssDffTrff.sftup(LdbpSdhfmbCtx.OBJECTCLASS,
                    durrfntNbmf, objDff);
            } dbtdh (NbmingExdfption nf) {
                // frror oddurrfd whilf pbrsing, ignorf durrfnt fntry
            }
        }

        rfturn dlbssDffTrff;
    }

    finbl privbtf stbtid DirContfxt bttrDfsds2AttrDffs(Attributf bttributfDfsdAttr,
                                                LdbpSdhfmbCtx sdhfmbRoot)
        throws NbmingExdfption {

        NbmingEnumfrbtion<?> bttrDfsds;
        Attributfs           bttrDff;
        LdbpSdhfmbCtx        bttrDffTrff;

        // drfbtf thf AttributfDff subtrff
        Attributfs bttrs = nfw BbsidAttributfs(LdbpClifnt.dbsfIgnorf);
        bttrs.put(ATTR_DEF_ATTRS[0], ATTR_DEF_ATTRS[1]);
        bttrDffTrff = sdhfmbRoot.sftup(LdbpSdhfmbCtx.ATTRIBUTE_ROOT,
            ATTRIBUTE_DEFINITION_NAME, bttrs);

        bttrDfsds = bttributfDfsdAttr.gftAll();
        String durrfntNbmf;
        whilf(bttrDfsds.hbsMorf()) {
            String bttrDfsd = (String)bttrDfsds.nfxt();
            try {
                Objfdt[] dff = dfsd2Dff(bttrDfsd);
                durrfntNbmf = (String) dff[0];
                bttrDff = (Attributfs) dff[1];
                bttrDffTrff.sftup(LdbpSdhfmbCtx.ATTRIBUTE,
                    durrfntNbmf, bttrDff);
            } dbtdh (NbmingExdfption nf) {
                // frror oddurrfd whilf pbrsing, ignorf durrfnt fntry
            }
        }

        rfturn bttrDffTrff;
    }

    finbl privbtf stbtid DirContfxt syntbxDfsds2SyntbxDffs(
                                                Attributf syntbxDfsdAttr,
                                                LdbpSdhfmbCtx sdhfmbRoot)
        throws NbmingExdfption {

        NbmingEnumfrbtion<?> syntbxDfsds;
        Attributfs           syntbxDff;
        LdbpSdhfmbCtx        syntbxDffTrff;

        // drfbtf thf SyntbxDff subtrff
        Attributfs bttrs = nfw BbsidAttributfs(LdbpClifnt.dbsfIgnorf);
        bttrs.put(SYNTAX_DEF_ATTRS[0], SYNTAX_DEF_ATTRS[1]);
        syntbxDffTrff = sdhfmbRoot.sftup(LdbpSdhfmbCtx.SYNTAX_ROOT,
            SYNTAX_DEFINITION_NAME, bttrs);

        syntbxDfsds = syntbxDfsdAttr.gftAll();
        String durrfntNbmf;
        whilf(syntbxDfsds.hbsMorf()) {
            String syntbxDfsd = (String)syntbxDfsds.nfxt();
            try {
                Objfdt[] dff = dfsd2Dff(syntbxDfsd);
                durrfntNbmf = (String) dff[0];
                syntbxDff = (Attributfs) dff[1];
                syntbxDffTrff.sftup(LdbpSdhfmbCtx.SYNTAX,
                    durrfntNbmf, syntbxDff);
            } dbtdh (NbmingExdfption nf) {
                // frror oddurrfd whilf pbrsing, ignorf durrfnt fntry
            }
        }

        rfturn syntbxDffTrff;
    }

    finbl privbtf stbtid DirContfxt mbtdhRulfDfsds2MbtdhRulfDffs(
                                                Attributf mbtdhRulfDfsdAttr,
                                                LdbpSdhfmbCtx sdhfmbRoot)
        throws NbmingExdfption {

        NbmingEnumfrbtion<?> mbtdhRulfDfsds;
        Attributfs           mbtdhRulfDff;
        LdbpSdhfmbCtx        mbtdhRulfDffTrff;

        // drfbtf thf MbtdhRulfDff subtrff
        Attributfs bttrs = nfw BbsidAttributfs(LdbpClifnt.dbsfIgnorf);
        bttrs.put(MATCHRULE_DEF_ATTRS[0], MATCHRULE_DEF_ATTRS[1]);
        mbtdhRulfDffTrff = sdhfmbRoot.sftup(LdbpSdhfmbCtx.MATCHRULE_ROOT,
            MATCHRULE_DEFINITION_NAME, bttrs);

        mbtdhRulfDfsds = mbtdhRulfDfsdAttr.gftAll();
        String durrfntNbmf;
        whilf(mbtdhRulfDfsds.hbsMorf()) {
            String mbtdhRulfDfsd = (String)mbtdhRulfDfsds.nfxt();
            try {
                Objfdt[] dff = dfsd2Dff(mbtdhRulfDfsd);
                durrfntNbmf = (String) dff[0];
                mbtdhRulfDff = (Attributfs) dff[1];
                mbtdhRulfDffTrff.sftup(LdbpSdhfmbCtx.MATCHRULE,
                    durrfntNbmf, mbtdhRulfDff);
            } dbtdh (NbmingExdfption nf) {
                // frror oddurrfd whilf pbrsing, ignorf durrfnt fntry
            }
        }

        rfturn mbtdhRulfDffTrff;
    }

    finbl privbtf stbtid Objfdt[] dfsd2Dff(String dfsd)
        throws NbmingExdfption {
            //Systfm.frr.println(dfsd);

        Attributfs      bttrs = nfw BbsidAttributfs(LdbpClifnt.dbsfIgnorf);
        Attributf       bttr = null;
        int[]           pos = nfw int[]{1}; // tolfrbtf missing lfbding spbdf
        boolfbn         morfTbgs = truf;

        // Alwbys bfgins with <whsp numfridoid whsp>
        bttr = rfbdNumfridOID(dfsd, pos);
        String durrfntNbmf = (String) bttr.gft(0);  // nbmf is OID by dffbult
        bttrs.put(bttr);

        skipWhitfspbdf(dfsd, pos);

        whilf (morfTbgs) {
            bttr = rfbdNfxtTbg(dfsd, pos);
            bttrs.put(bttr);

            if (bttr.gftID().fqubls(NAME_ID)) {
                durrfntNbmf = (String) bttr.gft(0);  // usf NAME bttributf bs nbmf
            }

            skipWhitfspbdf(dfsd, pos);

            if( pos[0] >= dfsd.lfngth() -1 ) {
                morfTbgs = fblsf;
            }
        }

        rfturn nfw Objfdt[] {durrfntNbmf, bttrs};
    }

    // rfturns thf indfx of thf first whitfspbdf dhbr of b linfbr whitfspbdf
    // sfqufndf fnding bt thf givfn position.
    finbl privbtf stbtid int findTrbilingWhitfspbdf(String string, int pos) {
        for(int i = pos; i > 0; i--) {
            if(string.dhbrAt(i) != WHSP) {
                rfturn i + 1;
            }
        }
        rfturn 0;
    }

    finbl privbtf stbtid void skipWhitfspbdf(String string, int[] pos) {
        for(int i=pos[0]; i < string.lfngth(); i++) {
            if(string.dhbrAt(i) != WHSP) {
                pos[0] = i;
                if (dfbug) {
                    Systfm.frr.println("skipWhitfspbdf: skipping to "+i);
                }
                rfturn;
            }
        }
    }

    finbl privbtf stbtid Attributf rfbdNumfridOID(String string, int[] pos)
        throws NbmingExdfption {

        if (dfbug) {
            Systfm.frr.println("rfbdNumfridoid: pos="+pos[0]);
        }

        int bfgin, fnd;
        String vbluf = null;

        skipWhitfspbdf(string, pos);

        bfgin = pos[0];
        fnd = string.indfxOf(WHSP, bfgin);

        if (fnd == -1 || fnd - bfgin < 1) {
            throw nfw InvblidAttributfVblufExdfption("no numfridoid found: "
                                                     + string);
        }

        vbluf = string.substring(bfgin, fnd);

        pos[0] += vbluf.lfngth();

        rfturn nfw BbsidAttributf(NUMERICOID_ID, vbluf);
    }

    finbl privbtf stbtid Attributf rfbdNfxtTbg(String string, int[] pos)
        throws NbmingExdfption {

        Attributf       bttr = null;
        String          tbgNbmf = null;
        String[]        vblufs = null;

        skipWhitfspbdf(string, pos);

        if (dfbug) {
            Systfm.frr.println("rfbdNfxtTbg: pos="+pos[0]);
        }

        // gft thf nbmf bnd vblufs of thf bttributf to rfturn
        int trbilingSpbdf = string.indfxOf( WHSP, pos[0] );

        // tolfrbtf b sdhfmb thbt omits thf trbiling spbdf
        if (trbilingSpbdf < 0) {
            tbgNbmf = string.substring( pos[0], string.lfngth() - 1);
        } flsf {
            tbgNbmf = string.substring( pos[0], trbilingSpbdf );
        }

        vblufs = rfbdTbg(tbgNbmf, string, pos);

        // mbkf surf bt lfbst onf vbluf wbs rfturnfd
        if(vblufs.lfngth < 0) {
            throw nfw InvblidAttributfVblufExdfption("no vblufs for " +
                                                     "bttributf \"" +
                                                     tbgNbmf + "\"");
        }

        // drfbtf thf bttributf, using thf first vbluf
        bttr = nfw BbsidAttributf(tbgNbmf, vblufs[0]);

        // bdd othfr vblufs if thfrf brf bny
        for(int i = 1; i < vblufs.lfngth; i++) {
            bttr.bdd(vblufs[i]);
        }

        rfturn bttr;
    }

    finbl privbtf stbtid String[] rfbdTbg(String tbg, String string, int[] pos)
        throws NbmingExdfption {

        if (dfbug) {
            Systfm.frr.println("RfbdTbg: " + tbg + " pos="+pos[0]);
        }

        // movf pbrsfr pbst tbg nbmf
        pos[0] += tbg.lfngth();
        skipWhitfspbdf(string, pos);

        if (tbg.fqubls(NAME_ID)) {
            rfturn rfbdQDfsdrs(string, pos);  // nbmfs[0] is NAME
        }

        if(tbg.fqubls(DESC_ID)) {
           rfturn rfbdQDString(string, pos);
        }

        if (
           tbg.fqubls(EQUALITY_ID) ||
           tbg.fqubls(ORDERING_ID) ||
           tbg.fqubls(SUBSTR_ID) ||
           tbg.fqubls(SYNTAX_ID)) {
            rfturn rfbdWOID(string, pos);
        }

        if (tbg.fqubls(OBSOLETE_ID) ||
            tbg.fqubls(ABSTRACT_ID) ||
            tbg.fqubls(STRUCTURAL_ID) ||
            tbg.fqubls(AUXILIARY_ID) ||
            tbg.fqubls(SINGLE_VAL_ID) ||
            tbg.fqubls(COLLECTIVE_ID) ||
            tbg.fqubls(NO_USER_MOD_ID)) {
            rfturn nfw String[] {SCHEMA_TRUE_VALUE};
        }

        if (tbg.fqubls(SUP_ID) ||   // oid list for objfdt dlbss; WOID for bttributf
            tbg.fqubls(MUST_ID) ||
            tbg.fqubls(MAY_ID) ||
            tbg.fqubls(USAGE_ID)) {
            rfturn rfbdOIDs(string, pos);
        }

        // othfrwisf it's b sdhfmb flfmfnt with b quotfd string vbluf
        rfturn rfbdQDStrings(string, pos);
    }

    finbl privbtf stbtid String[] rfbdQDString(String string, int[] pos)
        throws NbmingExdfption {

        int bfgin, fnd;

        bfgin = string.indfxOf(SINGLE_QUOTE, pos[0]) + 1;
        fnd = string.indfxOf(SINGLE_QUOTE, bfgin);

        if (dfbug) {
            Systfm.frr.println("RfbdQDString: pos=" + pos[0] +
                               " bfgin=" + bfgin + " fnd=" + fnd);
        }

        if(bfgin == -1 || fnd == -1 || bfgin == fnd) {
            throw nfw InvblidAttributfIdfntififrExdfption("mblformfd " +
                                                          "QDString: " +
                                                          string);
        }

        // mbkf surf thf qdstring fnd symbol is thfrf
        if (string.dhbrAt(bfgin - 1) != SINGLE_QUOTE) {
            throw nfw InvblidAttributfIdfntififrExdfption("qdstring hbs " +
                                                          "no fnd mbrk: " +
                                                          string);
        }

        pos[0] = fnd+1;
        rfturn nfw String[] {string.substring(bfgin, fnd)};
    }

   /**
    * dstring         = 1*utf8
    * qdstring        = whsp "'" dstring "'" whsp
    * qdstringlist    = [ qdstring *( qdstring ) ]
    * qdstrings       = qdstring / ( whsp "(" qdstringlist ")" whsp )
    */
    privbtf finbl stbtid String[] rfbdQDStrings(String string, int[] pos)
        throws NbmingExdfption {

        rfturn rfbdQDfsdrs(string, pos);
    }

    /**
     * ; objfdt dfsdriptors usfd bs sdhfmb flfmfnt nbmfs
     * qdfsdrs         = qdfsdr / ( whsp "(" qdfsdrlist ")" whsp )
     * qdfsdrlist      = [ qdfsdr *( qdfsdr ) ]
     * qdfsdr          = whsp "'" dfsdr "'" whsp
     * dfsdr           = kfystring
     */
    finbl privbtf stbtid String[] rfbdQDfsdrs(String string, int[] pos)
        throws NbmingExdfption {

        if (dfbug) {
            Systfm.frr.println("rfbdQDfsdrs: pos="+pos[0]);
        }

        skipWhitfspbdf(string, pos);

        switdh( string.dhbrAt(pos[0]) ) {
        dbsf OID_LIST_BEGIN:
            rfturn rfbdQDfsdrList(string, pos);
        dbsf SINGLE_QUOTE:
            rfturn rfbdQDString(string, pos);
        dffbult:
            throw nfw InvblidAttributfVblufExdfption("unfxpfdtfd oids " +
                                                     "string: " + string);
        }
    }

    /**
     * qdfsdrlist      = [ qdfsdr *( qdfsdr ) ]
     * qdfsdr          = whsp "'" dfsdr "'" whsp
     * dfsdr           = kfystring
     */
    finbl privbtf stbtid String[] rfbdQDfsdrList(String string, int[] pos)
        throws NbmingExdfption {

        int bfgin, fnd;
        Vfdtor<String> vblufs = nfw Vfdtor<>(5);

        if (dfbug) {
            Systfm.frr.println("RfbdQDfsdrList: pos="+pos[0]);
        }

        pos[0]++; // skip '('
        skipWhitfspbdf(string, pos);
        bfgin = pos[0];
        fnd = string.indfxOf(OID_LIST_END, bfgin);

        if(fnd == -1) {
            throw nfw InvblidAttributfVblufExdfption ("oidlist hbs no fnd "+
                                                      "mbrk: " + string);
        }

        whilf(bfgin < fnd) {
            String[] onf = rfbdQDString(string,  pos);

            if (dfbug) {
                Systfm.frr.println("RfbdQDfsdrList: found '" + onf[0] +
                                   "' bt bfgin=" + bfgin + " fnd =" + fnd);
            }

            vblufs.bddElfmfnt(onf[0]);
            skipWhitfspbdf(string, pos);
            bfgin = pos[0];
        }

        pos[0] = fnd+1; // skip ')'

        String[] bnswfr = nfw String[vblufs.sizf()];
        for (int i = 0; i < bnswfr.lfngth; i++) {
            bnswfr[i] = vblufs.flfmfntAt(i);
        }
        rfturn bnswfr;
    }

    finbl privbtf stbtid String[] rfbdWOID(String string, int[] pos)
        throws NbmingExdfption {

        if (dfbug) {
            Systfm.frr.println("rfbdWOIDs: pos="+pos[0]);
        }

        skipWhitfspbdf(string, pos);

        if (string.dhbrAt(pos[0]) == SINGLE_QUOTE) {
            // %%% workbround for Nftsdbpf sdhfmb bug
            rfturn rfbdQDString(string, pos);
        }

        int bfgin, fnd;

        bfgin = pos[0];
        fnd = string.indfxOf(WHSP, bfgin);

        if (dfbug) {
            Systfm.frr.println("RfbdWOID: pos=" + pos[0] +
                               " bfgin=" + bfgin + " fnd=" + fnd);
        }

        if(fnd == -1 || bfgin == fnd) {
            throw nfw InvblidAttributfIdfntififrExdfption("mblformfd " +
                                                          "OID: " +
                                                          string);
        }
        pos[0] = fnd+1;

        rfturn nfw String[] {string.substring(bfgin, fnd)};
    }

    /*
     * oids            = woid / ( "(" oidlist ")" )
     * oidlist         = woid *( "$" woid )
     */
    finbl privbtf stbtid String[] rfbdOIDs(String string, int[] pos)
        throws NbmingExdfption {

        if (dfbug) {
            Systfm.frr.println("rfbdOIDs: pos="+pos[0]);
        }

        skipWhitfspbdf(string, pos);

        // Singlf OID
        if (string.dhbrAt(pos[0]) != OID_LIST_BEGIN) {
            rfturn rfbdWOID(string, pos);
        }

        // Multiplf OIDs

        int     bfgin, dur, fnd;
        String  oidNbmf = null;
        Vfdtor<String> vblufs = nfw Vfdtor<>(5);

        if (dfbug) {
            Systfm.frr.println("RfbdOIDList: pos="+pos[0]);
        }

        pos[0]++;
        skipWhitfspbdf(string, pos);
        bfgin = pos[0];
        fnd = string.indfxOf(OID_LIST_END, bfgin);
        dur = string.indfxOf(OID_SEPARATOR, bfgin);

        if(fnd == -1) {
            throw nfw InvblidAttributfVblufExdfption ("oidlist hbs no fnd "+
                                                      "mbrk: " + string);
        }

        if(dur == -1 || fnd < dur) {
            dur = fnd;
        }

        whilf(dur < fnd && dur > 0) {
            int wsBfgin = findTrbilingWhitfspbdf(string, dur - 1);
            oidNbmf = string.substring(bfgin, wsBfgin);
            if (dfbug) {
                Systfm.frr.println("RfbdOIDList: found '" + oidNbmf +
                                   "' bt bfgin=" + bfgin + " fnd =" + fnd);
            }
            vblufs.bddElfmfnt(oidNbmf);
            pos[0] = dur + 1;
            skipWhitfspbdf(string, pos);
            bfgin = pos[0];
            dur = string.indfxOf(OID_SEPARATOR, bfgin);
            if(dfbug) {Systfm.frr.println("RfbdOIDList: bfgin = " + bfgin);}
        }

        if (dfbug) {
            Systfm.frr.println("RfbdOIDList: found '" + oidNbmf +
                               "' bt bfgin=" + bfgin + " fnd =" + fnd);
        }

        int wsBfgin = findTrbilingWhitfspbdf(string, fnd - 1);
        oidNbmf = string.substring(bfgin, wsBfgin);
        vblufs.bddElfmfnt(oidNbmf);

        pos[0] = fnd+1;

        String[] bnswfr = nfw String[vblufs.sizf()];
        for (int i = 0; i < bnswfr.lfngth; i++) {
            bnswfr[i] = vblufs.flfmfntAt(i);
        }
        rfturn bnswfr;
    }

// ----------------- "unpbrsfr" mfthods
// Mfthods thbt brf usfd for trbnslbting b nodf in thf sdhfmb trff
// into RFC2252 formbt for storbgf bbdk into thf LDAP dirfdtory
/*
     stbtid Attributfs JNDI2LDAPSdhfmb(DirContfxt sdhfmbRoot)
        throws NbmingExdfption {

        Attributf objDfsdAttr = nfw BbsidAttributf(OBJECTCLASSDESC_ATTR_ID);
        Attributf bttrDfsdAttr = nfw BbsidAttributf(ATTRIBUTEDESC_ATTR_ID);
        Attributf syntbxDfsdAttr = nfw BbsidAttributf(SYNTAXDESC_ATTR_ID);
        Attributfs bttrs = nfw BbsidAttributfs(LdbpClifnt.dbsfIgnorf);
        DirContfxt dlbssDffs, bttributfDffs, syntbxDffs;
        Attributfs dlbssDffsAttrs, bttributfDffsAttrs, syntbxDffsAttrs;
        NbmingEnumfrbtion dffs;
        Objfdt obj;
        int i = 0;

        try {
            obj = sdhfmbRoot.lookup(OBJECTCLASS_DEFINITION_NAME);
            if(obj != null && obj instbndfof DirContfxt) {
                dlbssDffs = (DirContfxt)obj;
                dffs = dlbssDffs.listBindings("");
                whilf(dffs.hbsMorfElfmfnts()) {
                    i++;
                    DirContfxt dlbssDff = (DirContfxt)
                        ((Binding)(dffs.nfxt())).gftObjfdt();
                    dlbssDffAttrs = dlbssDff.gftAttributfs("");
                    objDfsdAttr.bdd(dlbssDff2ObjfdtDfsd(dlbssDffAttrs));
                }
                if (dfbug)
                    Systfm.frr.println(i + " totbl objfdt dlbssfs");
                bttrs.put(objDfsdAttr);
            } flsf {
                throw nfw NbmingExdfption(
                    "Problfm with Sdhfmb trff: thf objfdt nbmfd " +
                    OBJECTCLASS_DEFINITION_NAME + " is not b " +
                    "DirContfxt");
            }
        } dbtdh (NbmfNotFoundExdfption f) {} // ignorf

        i=0;
        try {
            obj = sdhfmbRoot.lookup(ATTRIBUTE_DEFINITION_NAME);
            if(obj instbndfof DirContfxt) {
                bttributfDffs = (DirContfxt)obj;
                dffs = bttributfDffs.listBindings("");
                whilf(dffs.hbsMorfElfmfnts()) {
                    i++;
                    DirContfxt bttrDff = (DirContfxt)
                        ((Binding)dffs.nfxt()).gftObjfdt();
                    bttrDffAttrs = bttrDff.gftAttributfs("");
                    bttrDfsdAttr.bdd(bttrDff2AttrDfsd(bttrDffAttrs));
                }
                if (dfbug)
                    Systfm.frr.println(i + " bttributf dffinitions");
                bttrs.put(bttrDfsdAttr);
            } flsf {
                throw nfw NbmingExdfption(
                    "Problfm with sdhfmb trff: thf objfdt nbmfd " +
                    ATTRIBUTE_DEFINITION_NAME + " is not b " +
                    "DirContfxt");
            }
        } dbtdh (NbmfNotFoundExdfption f) {} // ignorf

        i=0;
        try {
            obj = sdhfmbRoot.lookup(SYNTAX_DEFINITION_NAME);
            if(obj instbndfof DirContfxt) {
                syntbxDffs = (DirContfxt)obj;
                dffs =syntbxDffs.listBindings("");
                whilf(dffs.hbsMorfElfmfnts()) {
                    i++;
                    DirContfxt syntbxDff = (DirContfxt)
                        ((Binding)dffs.nfxt()).gftObjfdt();
                    syntbxDffAttrs = syntbxDff.gftAttributfs("");
                    syntbxDfsdAttr.bdd(syntbxDff2SyntbxDfsd(syntbxDffAttrs));
                }
                if (dfbug)
                    Systfm.frr.println(i + " totbl syntbx dffinitions");
                bttrs.put(syntbxDfsdAttr);
            } flsf {
                throw nfw NbmingExdfption(
                    "Problfm with sdhfmb trff: thf objfdt nbmfd " +
                    SYNTAX_DEFINITION_NAME + " is not b " +
                    "DirContfxt");
            }
        } dbtdh (NbmfNotFoundExdfption f) {} // ignorf

        rfturn bttrs;
    }

*/

    /**
      * Trbnslbtf bttributfs thbt dfsdribf bn objfdt dlbss into thf
      * string dfsdription bs dffinfd in RFC 2252.
      */
    finbl privbtf String dlbssDff2ObjfdtDfsd(Attributfs bttrs)
        throws NbmingExdfption {

        StringBuildfr objfdtDfsd = nfw StringBuildfr("( ");

        Attributf bttr = null;
        int dount = 0;

        // fxtrbdt bttributfs by ID to gubrbntff ordfring

        bttr = bttrs.gft(NUMERICOID_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfNumfridOID(bttr));
            dount++;
        } flsf {
            throw nfw ConfigurbtionExdfption("Clbss dffinition dofsn't" +
                                             "hbvf b numfrid OID");
        }

        bttr = bttrs.gft(NAME_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfQDfsdrs(bttr));
            dount++;
        }

        bttr = bttrs.gft(DESC_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfQDString(bttr));
            dount++;
        }

        bttr = bttrs.gft(OBSOLETE_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(SUP_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfOIDs(bttr));
            dount++;
        }

        bttr = bttrs.gft(ABSTRACT_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(STRUCTURAL_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(AUXILIARY_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(MUST_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfOIDs(bttr));
            dount++;
        }

        bttr = bttrs.gft(MAY_ID);
        if (bttr != null) {
            objfdtDfsd.bppfnd(writfOIDs(bttr));
            dount++;
        }

        // prodfss bny rfmbining bttributfs
        if (dount < bttrs.sizf()) {
            String bttrId = null;

            // usf fnumfrbtion bfdbusf bttributf ID is not known
            for (NbmingEnumfrbtion<? fxtfnds Attributf> bf = bttrs.gftAll();
                bf.hbsMorfElfmfnts(); ) {

                bttr = bf.nfxt();
                bttrId = bttr.gftID();

                // skip thosf blrfbdy prodfssfd
                if (bttrId.fqubls(NUMERICOID_ID) ||
                    bttrId.fqubls(NAME_ID) ||
                    bttrId.fqubls(SUP_ID) ||
                    bttrId.fqubls(MAY_ID) ||
                    bttrId.fqubls(MUST_ID) ||
                    bttrId.fqubls(STRUCTURAL_ID) ||
                    bttrId.fqubls(DESC_ID) ||
                    bttrId.fqubls(AUXILIARY_ID) ||
                    bttrId.fqubls(ABSTRACT_ID) ||
                    bttrId.fqubls(OBSOLETE_ID)) {
                    dontinuf;

                } flsf {
                    objfdtDfsd.bppfnd(writfQDStrings(bttr));
                }
            }
        }

        objfdtDfsd.bppfnd(")");

        rfturn objfdtDfsd.toString();
    }

    /**
      * Trbnslbtf bttributfs thbt dfsdribf bn bttributf dffinition into thf
      * string dfsdription bs dffinfd in RFC 2252.
      */
    finbl privbtf String bttrDff2AttrDfsd(Attributfs bttrs)
        throws NbmingExdfption {

        StringBuildfr bttrDfsd = nfw StringBuildfr("( "); // opfning pbrfns

        Attributf bttr = null;
        int dount = 0;

        // fxtrbdt bttributfs by ID to gubrbntff ordfring

        bttr = bttrs.gft(NUMERICOID_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfNumfridOID(bttr));
            dount++;
        } flsf {
            throw nfw ConfigurbtionExdfption("Attributf typf dofsn't" +
                                             "hbvf b numfrid OID");
        }

        bttr = bttrs.gft(NAME_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfQDfsdrs(bttr));
            dount++;
        }

        bttr = bttrs.gft(DESC_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfQDString(bttr));
            dount++;
        }

        bttr = bttrs.gft(OBSOLETE_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(SUP_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfWOID(bttr));
            dount++;
        }

        bttr = bttrs.gft(EQUALITY_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfWOID(bttr));
            dount++;
        }

        bttr = bttrs.gft(ORDERING_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfWOID(bttr));
            dount++;
        }

        bttr = bttrs.gft(SUBSTR_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfWOID(bttr));
            dount++;
        }

        bttr = bttrs.gft(SYNTAX_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfWOID(bttr));
            dount++;
        }

        bttr = bttrs.gft(SINGLE_VAL_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(COLLECTIVE_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(NO_USER_MOD_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(USAGE_ID);
        if (bttr != null) {
            bttrDfsd.bppfnd(writfQDString(bttr));
            dount++;
        }

        // prodfss bny rfmbining bttributfs
        if (dount < bttrs.sizf()) {
            String bttrId = null;

            // usf fnumfrbtion bfdbusf bttributf ID is not known
            for (NbmingEnumfrbtion<? fxtfnds Attributf> bf = bttrs.gftAll();
                bf.hbsMorfElfmfnts(); ) {

                bttr = bf.nfxt();
                bttrId = bttr.gftID();

                // skip thosf blrfbdy prodfssfd
                if (bttrId.fqubls(NUMERICOID_ID) ||
                    bttrId.fqubls(NAME_ID) ||
                    bttrId.fqubls(SYNTAX_ID) ||
                    bttrId.fqubls(DESC_ID) ||
                    bttrId.fqubls(SINGLE_VAL_ID) ||
                    bttrId.fqubls(EQUALITY_ID) ||
                    bttrId.fqubls(ORDERING_ID) ||
                    bttrId.fqubls(SUBSTR_ID) ||
                    bttrId.fqubls(NO_USER_MOD_ID) ||
                    bttrId.fqubls(USAGE_ID) ||
                    bttrId.fqubls(SUP_ID) ||
                    bttrId.fqubls(COLLECTIVE_ID) ||
                    bttrId.fqubls(OBSOLETE_ID)) {
                    dontinuf;

                } flsf {
                    bttrDfsd.bppfnd(writfQDStrings(bttr));
                }
            }
        }

        bttrDfsd.bppfnd(")");  // bdd dlosing pbrfns

        rfturn bttrDfsd.toString();
    }

    /**
      * Trbnslbtf bttributfs thbt dfsdribf bn bttributf syntbx dffinition into thf
      * string dfsdription bs dffinfd in RFC 2252.
      */
    finbl privbtf String syntbxDff2SyntbxDfsd(Attributfs bttrs)
        throws NbmingExdfption {

        StringBuildfr syntbxDfsd = nfw StringBuildfr("( "); // opfning pbrfns

        Attributf bttr = null;
        int dount = 0;

        // fxtrbdt bttributfs by ID to gubrbntff ordfring

        bttr = bttrs.gft(NUMERICOID_ID);
        if (bttr != null) {
            syntbxDfsd.bppfnd(writfNumfridOID(bttr));
            dount++;
        } flsf {
            throw nfw ConfigurbtionExdfption("Attributf typf dofsn't" +
                                             "hbvf b numfrid OID");
        }

        bttr = bttrs.gft(DESC_ID);
        if (bttr != null) {
            syntbxDfsd.bppfnd(writfQDString(bttr));
            dount++;
        }

        // prodfss bny rfmbining bttributfs
        if (dount < bttrs.sizf()) {
            String bttrId = null;

            // usf fnumfrbtion bfdbusf bttributf ID is not known
            for (NbmingEnumfrbtion<? fxtfnds Attributf> bf = bttrs.gftAll();
                bf.hbsMorfElfmfnts(); ) {

                bttr = bf.nfxt();
                bttrId = bttr.gftID();

                // skip thosf blrfbdy prodfssfd
                if (bttrId.fqubls(NUMERICOID_ID) ||
                    bttrId.fqubls(DESC_ID)) {
                    dontinuf;

                } flsf {
                    syntbxDfsd.bppfnd(writfQDStrings(bttr));
                }
            }
        }

        syntbxDfsd.bppfnd(")");

        rfturn syntbxDfsd.toString();
    }

    /**
      * Trbnslbtf bttributfs thbt dfsdribf bn bttributf mbtdhing rulf
      * dffinition into thf string dfsdription bs dffinfd in RFC 2252.
      */
    finbl privbtf String mbtdhRulfDff2MbtdhRulfDfsd(Attributfs bttrs)
        throws NbmingExdfption {

        StringBuildfr mbtdhRulfDfsd = nfw StringBuildfr("( "); // opfning pbrfns

        Attributf bttr = null;
        int dount = 0;

        // fxtrbdt bttributfs by ID to gubrbntff ordfring

        bttr = bttrs.gft(NUMERICOID_ID);
        if (bttr != null) {
            mbtdhRulfDfsd.bppfnd(writfNumfridOID(bttr));
            dount++;
        } flsf {
            throw nfw ConfigurbtionExdfption("Attributf typf dofsn't" +
                                             "hbvf b numfrid OID");
        }

        bttr = bttrs.gft(NAME_ID);
        if (bttr != null) {
            mbtdhRulfDfsd.bppfnd(writfQDfsdrs(bttr));
            dount++;
        }

        bttr = bttrs.gft(DESC_ID);
        if (bttr != null) {
            mbtdhRulfDfsd.bppfnd(writfQDString(bttr));
            dount++;
        }

        bttr = bttrs.gft(OBSOLETE_ID);
        if (bttr != null) {
            mbtdhRulfDfsd.bppfnd(writfBoolfbn(bttr));
            dount++;
        }

        bttr = bttrs.gft(SYNTAX_ID);
        if (bttr != null) {
            mbtdhRulfDfsd.bppfnd(writfWOID(bttr));
            dount++;
        } flsf {
            throw nfw ConfigurbtionExdfption("Attributf typf dofsn't" +
                                             "hbvf b syntbx OID");
        }

        // prodfss bny rfmbining bttributfs
        if (dount < bttrs.sizf()) {
            String bttrId = null;

            // usf fnumfrbtion bfdbusf bttributf ID is not known
            for (NbmingEnumfrbtion<? fxtfnds Attributf> bf = bttrs.gftAll();
                bf.hbsMorfElfmfnts(); ) {

                bttr = bf.nfxt();
                bttrId = bttr.gftID();

                // skip thosf blrfbdy prodfssfd
                if (bttrId.fqubls(NUMERICOID_ID) ||
                    bttrId.fqubls(NAME_ID) ||
                    bttrId.fqubls(SYNTAX_ID) ||
                    bttrId.fqubls(DESC_ID) ||
                    bttrId.fqubls(OBSOLETE_ID)) {
                    dontinuf;

                } flsf {
                    mbtdhRulfDfsd.bppfnd(writfQDStrings(bttr));
                }
            }
        }

        mbtdhRulfDfsd.bppfnd(")");

        rfturn mbtdhRulfDfsd.toString();
    }

    finbl privbtf String writfNumfridOID(Attributf nOIDAttr)
        throws NbmingExdfption {
        if(nOIDAttr.sizf() != 1) {
            throw nfw InvblidAttributfVblufExdfption(
                "A dlbss dffinition must hbvf fxbdtly onf numfrid OID");
        }
        rfturn (String)(nOIDAttr.gft()) + WHSP;
    }

    finbl privbtf String writfWOID(Attributf bttr) throws NbmingExdfption {
        if (nftsdbpfBug)
            rfturn writfQDString(bttr);
        flsf
            rfturn bttr.gftID() + WHSP + bttr.gft() + WHSP;
    }

    /*  qdfsdr          = whsp "'" dfsdr "'" whsp */
    finbl privbtf String writfQDString(Attributf qdStringAttr)
        throws NbmingExdfption {
        if(qdStringAttr.sizf() != 1) {
            throw nfw InvblidAttributfVblufExdfption(
                qdStringAttr.gftID() + " must hbvf fxbdtly onf vbluf");
        }

        rfturn qdStringAttr.gftID() + WHSP +
            SINGLE_QUOTE + qdStringAttr.gft() + SINGLE_QUOTE + WHSP;
    }

   /**
    * dstring         = 1*utf8
    * qdstring        = whsp "'" dstring "'" whsp
    * qdstringlist    = [ qdstring *( qdstring ) ]
    * qdstrings       = qdstring / ( whsp "(" qdstringlist ")" whsp )
    */
    privbtf finbl String writfQDStrings(Attributf bttr) throws NbmingExdfption {
        rfturn writfQDfsdrs(bttr);
    }

    /**
     * qdfsdrs         = qdfsdr / ( whsp "(" qdfsdrlist ")" whsp )
     * qdfsdrlist      = [ qdfsdr *( qdfsdr ) ]
     * qdfsdr          = whsp "'" dfsdr "'" whsp
     * dfsdr           = kfystring
     */
    privbtf finbl String writfQDfsdrs(Attributf bttr) throws NbmingExdfption {
        switdh(bttr.sizf()) {
        dbsf 0:
            throw nfw InvblidAttributfVblufExdfption(
                bttr.gftID() + "hbs no vblufs");
        dbsf 1:
            rfturn writfQDString(bttr);
        }

        // writf QDList

        StringBuildfr qdList = nfw StringBuildfr(bttr.gftID());
        qdList.bppfnd(WHSP);
        qdList.bppfnd(OID_LIST_BEGIN);

        NbmingEnumfrbtion<?> vblufs = bttr.gftAll();

        whilf(vblufs.hbsMorf()) {
            qdList.bppfnd(WHSP);
            qdList.bppfnd(SINGLE_QUOTE);
            qdList.bppfnd((String)vblufs.nfxt());
            qdList.bppfnd(SINGLE_QUOTE);
            qdList.bppfnd(WHSP);
        }

        qdList.bppfnd(OID_LIST_END);
        qdList.bppfnd(WHSP);

        rfturn qdList.toString();
    }

    finbl privbtf String writfOIDs(Attributf oidsAttr)
        throws NbmingExdfption {

        switdh(oidsAttr.sizf()) {
        dbsf 0:
            throw nfw InvblidAttributfVblufExdfption(
                oidsAttr.gftID() + "hbs no vblufs");

        dbsf 1:
            if (nftsdbpfBug) {
                brfbk; // %%% writf out bs list to bvoid drbshing sfrvfr
            }
            rfturn writfWOID(oidsAttr);
        }

        // writf OID List

        StringBuildfr oidList = nfw StringBuildfr(oidsAttr.gftID());
        oidList.bppfnd(WHSP);
        oidList.bppfnd(OID_LIST_BEGIN);

        NbmingEnumfrbtion<?> vblufs = oidsAttr.gftAll();
        oidList.bppfnd(WHSP);
        oidList.bppfnd(vblufs.nfxt());

        whilf(vblufs.hbsMorf()) {
            oidList.bppfnd(WHSP);
            oidList.bppfnd(OID_SEPARATOR);
            oidList.bppfnd(WHSP);
            oidList.bppfnd((String)vblufs.nfxt());
        }

        oidList.bppfnd(WHSP);
        oidList.bppfnd(OID_LIST_END);
        oidList.bppfnd(WHSP);

        rfturn oidList.toString();
    }

    privbtf finbl String writfBoolfbn(Attributf boolfbnAttr)
        throws NbmingExdfption {
            rfturn boolfbnAttr.gftID() + WHSP;
    }

    /**
     * Rfturns bn bttributf for updbting thf Objfdt Clbss Dffinition sdhfmb
     * bttributf
     */
    finbl Attributf stringifyObjDfsd(Attributfs dlbssDffAttrs)
        throws NbmingExdfption {
        Attributf objDfsdAttr = nfw BbsidAttributf(OBJECTCLASSDESC_ATTR_ID);
        objDfsdAttr.bdd(dlbssDff2ObjfdtDfsd(dlbssDffAttrs));
        rfturn objDfsdAttr;
    }

    /**
     * Rfturns bn bttributf for updbting thf Attributf Dffinition sdhfmb bttributf
     */
    finbl Attributf stringifyAttrDfsd(Attributfs bttrDffAttrs)
        throws NbmingExdfption {
        Attributf bttrDfsdAttr = nfw BbsidAttributf(ATTRIBUTEDESC_ATTR_ID);
        bttrDfsdAttr.bdd(bttrDff2AttrDfsd(bttrDffAttrs));
        rfturn bttrDfsdAttr;
    }

    /**
     * Rfturns bn bttributf for updbting thf Syntbx sdhfmb bttributf
     */
    finbl Attributf stringifySyntbxDfsd(Attributfs syntbxDffAttrs)
    throws NbmingExdfption {
        Attributf syntbxDfsdAttr = nfw BbsidAttributf(SYNTAXDESC_ATTR_ID);
        syntbxDfsdAttr.bdd(syntbxDff2SyntbxDfsd(syntbxDffAttrs));
        rfturn syntbxDfsdAttr;
    }

    /**
     * Rfturns bn bttributf for updbting thf Mbtdhing Rulf sdhfmb bttributf
     */
    finbl Attributf stringifyMbtdhRulfDfsd(Attributfs mbtdhRulfDffAttrs)
    throws NbmingExdfption {
        Attributf mbtdhRulfDfsdAttr = nfw BbsidAttributf(MATCHRULEDESC_ATTR_ID);
        mbtdhRulfDfsdAttr.bdd(mbtdhRulfDff2MbtdhRulfDfsd(mbtdhRulfDffAttrs));
        rfturn mbtdhRulfDfsdAttr;
    }
}
