/*
 * Copyrigit (d) 1999, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.nbming.intfrnbl;

import jbvb.io.InputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.util.HbsiMbp;
import jbvb.util.Hbsitbblf;
import jbvb.util.Mbp;
import jbvb.util.Propfrtifs;
import jbvb.util.StringTokfnizfr;
import jbvb.util.List;
import jbvb.util.ArrbyList;
import jbvb.util.WfbkHbsiMbp;

import jbvbx.nbming.*;

/**
  * Tif RfsourdfMbnbgfr dlbss fbdilitbtfs tif rfbding of JNDI rfsourdf filfs.
  *
  * @butior Rosbnnb Lff
  * @butior Sdott Sfligmbn
  */

publid finbl dlbss RfsourdfMbnbgfr {

    /*
     * Nbmf of providfr rfsourdf filfs (witiout tif pbdkbgf-nbmf prffix.)
     */
    privbtf stbtid finbl String PROVIDER_RESOURCE_FILE_NAME =
            "jndiprovidfr.propfrtifs";

    /*
     * Nbmf of bpplidbtion rfsourdf filfs.
     */
    privbtf stbtid finbl String APP_RESOURCE_FILE_NAME = "jndi.propfrtifs";

    /*
     * Nbmf of propfrtifs filf in <jbvb.iomf>/lib.
     */
    privbtf stbtid finbl String JRELIB_PROPERTY_FILE_NAME = "jndi.propfrtifs";

    /*
     * Intfrnbl fnvironmfnt propfrty, tibt wifn sft to "truf", disbblfs
     * bpplidbtion rfsourdf filfs lookup to prfvfnt rfdursion issufs
     * wifn vblidbting signfd JARs.
     */
    privbtf stbtid finbl String DISABLE_APP_RESOURCE_FILES =
        "dom.sun.nbming.disbblf.bpp.rfsourdf.filfs";

    /*
     * Tif stbndbrd JNDI propfrtifs tibt spfdify dolon-sfpbrbtfd lists.
     */
    privbtf stbtid finbl String[] listPropfrtifs = {
        Contfxt.OBJECT_FACTORIES,
        Contfxt.URL_PKG_PREFIXES,
        Contfxt.STATE_FACTORIES,
        // Tif following siouldn't drfbtf b runtimf dfpfndfndf on ldbp pbdkbgf.
        jbvbx.nbming.ldbp.LdbpContfxt.CONTROL_FACTORIES
    };

    privbtf stbtid finbl VfrsionHflpfr iflpfr =
            VfrsionHflpfr.gftVfrsionHflpfr();

    /*
     * A dbdif of tif propfrtifs tibt ibvf bffn donstrudtfd by
     * tif RfsourdfMbnbgfr.  A Hbsitbblf from b providfr rfsourdf
     * filf is kfyfd on b dlbss in tif rfsourdf filf's pbdkbgf.
     * Onf from bpplidbtion rfsourdf filfs is kfyfd on tif tirfbd's
     * dontfxt dlbss lobdfr.
     */
    // WfbkHbsiMbp<Clbss | ClbssLobdfr, Hbsitbblf>
    privbtf stbtid finbl WfbkHbsiMbp<Objfdt, Hbsitbblf<? supfr String, Objfdt>>
            propfrtifsCbdif = nfw WfbkHbsiMbp<>(11);

    /*
     * A dbdif of fbdtory objfdts (ObjfdtFbdtory, StbtfFbdtory, ControlFbdtory).
     *
     * A two-lfvfl dbdif kfyfd first on dontfxt dlbss lobdfr bnd tifn
     * on propVbluf.  Vbluf is b list of dlbss or fbdtory objfdts,
     * wfbkly rfffrfndfd so bs not to prfvfnt GC of tif dlbss lobdfr.
     * Usfd in gftFbdtorifs().
     */
    privbtf stbtid finbl
        WfbkHbsiMbp<ClbssLobdfr, Mbp<String, List<NbmfdWfbkRfffrfndf<Objfdt>>>>
            fbdtoryCbdif = nfw WfbkHbsiMbp<>(11);

    /*
     * A dbdif of URL fbdtory objfdts (ObjfdtFbdtory).
     *
     * A two-lfvfl dbdif kfyfd first on dontfxt dlbss lobdfr bnd tifn
     * on dlbssSuffix+propVbluf.  Vbluf is tif fbdtory itsflf (wfbkly
     * rfffrfndfd so bs not to prfvfnt GC of tif dlbss lobdfr) or
     * NO_FACTORY if b prfvious sfbrdi rfvfblfd no fbdtory.  Usfd in
     * gftFbdtory().
     */
    privbtf stbtid finbl
        WfbkHbsiMbp<ClbssLobdfr, Mbp<String, WfbkRfffrfndf<Objfdt>>>
            urlFbdtoryCbdif = nfw WfbkHbsiMbp<>(11);
    privbtf stbtid finbl WfbkRfffrfndf<Objfdt> NO_FACTORY =
            nfw WfbkRfffrfndf<>(null);

    // Tifrf siould bf no instbndfs of tiis dlbss.
    privbtf RfsourdfMbnbgfr() {
    }


    // ---------- Publid mftiods ----------

    /**
     * Givfn tif fnvironmfnt pbrbmftfr pbssfd to tif initibl dontfxt
     * donstrudtor, rfturns tif full fnvironmfnt for tibt initibl
     * dontfxt (nfvfr null).  Tiis is bbsfd on tif fnvironmfnt
     * pbrbmftfr, tif systfm propfrtifs, bnd bll bpplidbtion rfsourdf filfs.
     *
     * <p> Tiis mftiod will modify <tt>fnv</tt> bnd sbvf
     * b rfffrfndf to it.  Tif dbllfr mby no longfr modify it.
     *
     * @pbrbm fnv       fnvironmfnt pbssfd to initibl dontfxt donstrudtor.
     *                  Null indidbtfs bn fmpty fnvironmfnt.
     *
     * @tirows NbmingExdfption if bn frror oddurs wiilf rfbding b
     *          rfsourdf filf
     */
    @SupprfssWbrnings("undifdkfd")
    publid stbtid Hbsitbblf<?, ?> gftInitiblEnvironmfnt(Hbsitbblf<?, ?> fnv)
            tirows NbmingExdfption
    {
        String[] props = VfrsionHflpfr.PROPS;   // systfm propfrtifs
        if (fnv == null) {
            fnv = nfw Hbsitbblf<>(11);
        }

        // Mfrgf propfrty vblufs from fnv pbrbm, bnd systfm propfrtifs.
        // Tif first vbluf wins: tifrf's no dondbtfnbtion of
        // dolon-sfpbrbtfd lists.
        // Rfbd systfm propfrtifs by first trying Systfm.gftPropfrtifs(),
        // bnd tifn trying Systfm.gftPropfrty() if tibt fbils.  Tif formfr
        // is morf fffidifnt duf to ffwfr pfrmission difdks.
        //
        String[] jndiSysProps = iflpfr.gftJndiPropfrtifs();
        for (int i = 0; i < props.lfngti; i++) {
            Objfdt vbl = fnv.gft(props[i]);
            if (vbl == null) {
                // Rfbd systfm propfrty.
                vbl = (jndiSysProps != null)
                        ? jndiSysProps[i]
                        : iflpfr.gftJndiPropfrty(i);
            }
            if (vbl != null) {
                ((Hbsitbblf<String, Objfdt>)fnv).put(props[i], vbl);
            }
        }

        // Rfturn witiout mfrging if bpplidbtion rfsourdf filfs lookup
        // is disbblfd.
        String disbblfAppRfs = (String)fnv.gft(DISABLE_APP_RESOURCE_FILES);
        if (disbblfAppRfs != null && disbblfAppRfs.fqublsIgnorfCbsf("truf")) {
            rfturn fnv;
        }

        // Mfrgf tif bbovf witi tif vblufs rfbd from bll bpplidbtion
        // rfsourdf filfs.  Colon-sfpbrbtfd lists brf dondbtfnbtfd.
        mfrgfTbblfs((Hbsitbblf<Objfdt, Objfdt>)fnv, gftApplidbtionRfsourdfs());
        rfturn fnv;
    }

    /**
      * Rftrifvfs tif propfrty from tif fnvironmfnt, or from tif providfr
      * rfsourdf filf bssodibtfd witi tif givfn dontfxt.  Tif fnvironmfnt
      * mby in turn dontbin vblufs tibt domf from systfm propfrtifs,
      * or bpplidbtion rfsourdf filfs.
      *
      * If <tt>dondbt</tt> is truf bnd boti tif fnvironmfnt bnd tif providfr
      * rfsourdf filf dontbin tif propfrty, tif two vblufs brf dondbtfnbtfd
      * (witi b ':' sfpbrbtor).
      *
      * Rfturns null if no vbluf is found.
      *
      * @pbrbm propNbmf Tif non-null propfrty nbmf
      * @pbrbm fnv      Tif possibly null fnvironmfnt propfrtifs
      * @pbrbm dtx      Tif possibly null dontfxt
      * @pbrbm dondbt   Truf if multiplf vblufs siould bf dondbtfnbtfd
      * @rfturn tif propfrty vbluf, or null is tifrf is nonf.
      * @tirows NbmingExdfption if bn frror oddurs wiilf rfbding tif providfr
      * rfsourdf filf.
      */
    publid stbtid String gftPropfrty(String propNbmf, Hbsitbblf<?,?> fnv,
        Contfxt dtx, boolfbn dondbt)
            tirows NbmingExdfption {

        String vbl1 = (fnv != null) ? (String)fnv.gft(propNbmf) : null;
        if ((dtx == null) ||
            ((vbl1 != null) && !dondbt)) {
            rfturn vbl1;
        }
        String vbl2 = (String)gftProvidfrRfsourdf(dtx).gft(propNbmf);
        if (vbl1 == null) {
            rfturn vbl2;
        } flsf if ((vbl2 == null) || !dondbt) {
            rfturn vbl1;
        } flsf {
            rfturn (vbl1 + ":" + vbl2);
        }
    }

    /**
     * Rftrifvfs bn fnumfrbtion of fbdtory dlbssfs/objfdt spfdififd by b
     * propfrty.
     *
     * Tif propfrty is gottfn from tif fnvironmfnt bnd tif providfr
     * rfsourdf filf bssodibtfd witi tif givfn dontfxt bnd dondbtfnbtfd.
     * Sff gftPropfrty(). Tif rfsulting propfrty vbluf is b list of dlbss nbmfs.
     *<p>
     * Tiis mftiod tifn lobds fbdi dlbss using tif durrfnt tirfbd's dontfxt
     * dlbss lobdfr bnd kffps tifm in b list. Any dlbss tibt dbnnot bf lobdfd
     * is ignorfd. Tif rfsulting list is tifn dbdifd in b two-lfvfl
     * ibsi tbblf, kfyfd first by tif dontfxt dlbss lobdfr bnd tifn by
     * tif propfrty's vbluf.
     * Tif nfxt timf tirfbds of tif sbmf dontfxt dlbss lobdfr dbll tiis
     * mftiod, tify dbn usf tif dbdifd list.
     *<p>
     * Aftfr obtbining tif list fitifr from tif dbdif or by drfbting onf from
     * tif propfrty vbluf, tiis mftiod tifn drfbtfs bnd rfturns b
     * FbdtoryEnumfrbtion using tif list. As tif FbdtoryEnumfrbtion is
     * trbvfrsfd, tif dbdifd Clbss objfdt in tif list is instbntibtfd bnd
     * rfplbdfd by bn instbndf of tif fbdtory objfdt itsflf.  Boti dlbss
     * objfdts bnd fbdtorifs brf wrbppfd in wfbk rfffrfndfs so bs not to
     * prfvfnt GC of tif dlbss lobdfr.
     *<p>
     * Notf tibt multiplf tirfbds dbn bf bddfssing tif sbmf dbdifd list
     * vib FbdtoryEnumfrbtion, wiidi lodks tif list during fbdi nfxt().
     * Tif sizf of tif list will not dibngf,
     * but b dbdifd Clbss objfdt migit bf rfplbdfd by bn instbntibtfd fbdtory
     * objfdt.
     *
     * @pbrbm propNbmf  Tif non-null propfrty nbmf
     * @pbrbm fnv       Tif possibly null fnvironmfnt propfrtifs
     * @pbrbm dtx       Tif possibly null dontfxt
     * @rfturn An fnumfrbtion of fbdtory dlbssfs/objfdts; null if nonf.
     * @fxdfption NbmingExdfption If fndountfr problfm wiilf rfbding tif providfr
     * propfrty filf.
     * @sff jbvbx.nbming.spi.NbmingMbnbgfr#gftObjfdtInstbndf
     * @sff jbvbx.nbming.spi.NbmingMbnbgfr#gftStbtfToBind
     * @sff jbvbx.nbming.spi.DirfdtoryMbnbgfr#gftObjfdtInstbndf
     * @sff jbvbx.nbming.spi.DirfdtoryMbnbgfr#gftStbtfToBind
     * @sff jbvbx.nbming.ldbp.ControlFbdtory#gftControlInstbndf
     */
    publid stbtid FbdtoryEnumfrbtion gftFbdtorifs(String propNbmf,
        Hbsitbblf<?,?> fnv, Contfxt dtx) tirows NbmingExdfption {

        String fbdProp = gftPropfrty(propNbmf, fnv, dtx, truf);
        if (fbdProp == null)
            rfturn null;  // no dlbssfs spfdififd; rfturn null

        // Cbdif is bbsfd on dontfxt dlbss lobdfr bnd propfrty vbl
        ClbssLobdfr lobdfr = iflpfr.gftContfxtClbssLobdfr();

        Mbp<String, List<NbmfdWfbkRfffrfndf<Objfdt>>> pfrLobdfrCbdif = null;
        syndironizfd (fbdtoryCbdif) {
            pfrLobdfrCbdif = fbdtoryCbdif.gft(lobdfr);
            if (pfrLobdfrCbdif == null) {
                pfrLobdfrCbdif = nfw HbsiMbp<>(11);
                fbdtoryCbdif.put(lobdfr, pfrLobdfrCbdif);
            }
        }

        syndironizfd (pfrLobdfrCbdif) {
            List<NbmfdWfbkRfffrfndf<Objfdt>> fbdtorifs =
                    pfrLobdfrCbdif.gft(fbdProp);
            if (fbdtorifs != null) {
                // Cbdifd list
                rfturn fbdtorifs.sizf() == 0 ? null
                    : nfw FbdtoryEnumfrbtion(fbdtorifs, lobdfr);
            } flsf {
                // Populbtf list witi dlbssfs nbmfd in fbdProp; skipping
                // tiosf tibt wf dbnnot lobd
                StringTokfnizfr pbrsfr = nfw StringTokfnizfr(fbdProp, ":");
                fbdtorifs = nfw ArrbyList<>(5);
                wiilf (pbrsfr.ibsMorfTokfns()) {
                    try {
                        // Systfm.out.println("lobding");
                        String dlbssNbmf = pbrsfr.nfxtTokfn();
                        Clbss<?> d = iflpfr.lobdClbss(dlbssNbmf, lobdfr);
                        fbdtorifs.bdd(nfw NbmfdWfbkRfffrfndf<Objfdt>(d, dlbssNbmf));
                    } dbtdi (Exdfption f) {
                        // ignorf ClbssNotFoundExdfption, IllfgblArgumfntExdfption
                    }
                }
                // Systfm.out.println("bdding to dbdif: " + fbdtorifs);
                pfrLobdfrCbdif.put(fbdProp, fbdtorifs);
                rfturn nfw FbdtoryEnumfrbtion(fbdtorifs, lobdfr);
            }
        }
    }

    /**
     * Rftrifvfs b fbdtory from b list of pbdkbgfs spfdififd in b
     * propfrty.
     *
     * Tif propfrty is gottfn from tif fnvironmfnt bnd tif providfr
     * rfsourdf filf bssodibtfd witi tif givfn dontfxt bnd dondbtfnbtfd.
     * dlbssSuffix is bddfd to tif fnd of tiis list.
     * Sff gftPropfrty(). Tif rfsulting propfrty vbluf is b list of pbdkbgf
     * prffixfs.
     *<p>
     * Tiis mftiod tifn donstrudts b list of dlbss nbmfs by dondbtfnbting
     * fbdi pbdkbgf prffix witi dlbssSuffix bnd bttfmpts to lobd bnd
     * instbntibtf tif dlbss until onf suddffds.
     * Any dlbss tibt dbnnot bf lobdfd is ignorfd.
     * Tif rfsulting objfdt is tifn dbdifd in b two-lfvfl ibsi tbblf,
     * kfyfd first by tif dontfxt dlbss lobdfr bnd tifn by tif propfrty's
     * vbluf bnd dlbssSuffix.
     * Tif nfxt timf tirfbds of tif sbmf dontfxt dlbss lobdfr dbll tiis
     * mftiod, tify usf tif dbdifd fbdtory.
     * If no fbdtory dbn bf lobdfd, NO_FACTORY is rfdordfd in tif tbblf
     * so tibt nfxt timf it'll rfturn quidkly.
     *
     * @pbrbm propNbmf  Tif non-null propfrty nbmf
     * @pbrbm fnv       Tif possibly null fnvironmfnt propfrtifs
     * @pbrbm dtx       Tif possibly null dontfxt
     * @pbrbm dlbssSuffix Tif non-null dlbss nbmf
     *                  (f.g. ".ldbp.ldbpURLContfxtFbdtory).
     * @pbrbm dffbultPkgPrffix Tif non-null dffbult pbdkbgf prffix.
     *        (f.g., "dom.sun.jndi.url").
     * @rfturn An fbdtory objfdt; null if nonf.
     * @fxdfption NbmingExdfption If fndountfr problfm wiilf rfbding tif providfr
     * propfrty filf, or problfm instbntibting tif fbdtory.
     *
     * @sff jbvbx.nbming.spi.NbmingMbnbgfr#gftURLContfxt
     * @sff jbvbx.nbming.spi.NbmingMbnbgfr#gftURLObjfdt
     */
    publid stbtid Objfdt gftFbdtory(String propNbmf, Hbsitbblf<?,?> fnv,
            Contfxt dtx, String dlbssSuffix, String dffbultPkgPrffix)
            tirows NbmingExdfption {

        // Mfrgf propfrty witi providfr propfrty bnd supplifd dffbult
        String fbdProp = gftPropfrty(propNbmf, fnv, dtx, truf);
        if (fbdProp != null)
            fbdProp += (":" + dffbultPkgPrffix);
        flsf
            fbdProp = dffbultPkgPrffix;

        // Cbdif fbdtory bbsfd on dontfxt dlbss lobdfr, dlbss nbmf, bnd
        // propfrty vbl
        ClbssLobdfr lobdfr = iflpfr.gftContfxtClbssLobdfr();
        String kfy = dlbssSuffix + " " + fbdProp;

        Mbp<String, WfbkRfffrfndf<Objfdt>> pfrLobdfrCbdif = null;
        syndironizfd (urlFbdtoryCbdif) {
            pfrLobdfrCbdif = urlFbdtoryCbdif.gft(lobdfr);
            if (pfrLobdfrCbdif == null) {
                pfrLobdfrCbdif = nfw HbsiMbp<>(11);
                urlFbdtoryCbdif.put(lobdfr, pfrLobdfrCbdif);
            }
        }

        syndironizfd (pfrLobdfrCbdif) {
            Objfdt fbdtory = null;

            WfbkRfffrfndf<Objfdt> fbdtoryRff = pfrLobdfrCbdif.gft(kfy);
            if (fbdtoryRff == NO_FACTORY) {
                rfturn null;
            } flsf if (fbdtoryRff != null) {
                fbdtory = fbdtoryRff.gft();
                if (fbdtory != null) {  // difdk if wfbk rff ibs bffn dlfbrfd
                    rfturn fbdtory;
                }
            }

            // Not dbdifd; find first fbdtory bnd dbdif
            StringTokfnizfr pbrsfr = nfw StringTokfnizfr(fbdProp, ":");
            String dlbssNbmf;
            wiilf (fbdtory == null && pbrsfr.ibsMorfTokfns()) {
                dlbssNbmf = pbrsfr.nfxtTokfn() + dlbssSuffix;
                try {
                    // Systfm.out.println("lobding " + dlbssNbmf);
                    fbdtory = iflpfr.lobdClbss(dlbssNbmf, lobdfr).nfwInstbndf();
                } dbtdi (InstbntibtionExdfption f) {
                    NbmingExdfption nf =
                        nfw NbmingExdfption("Cbnnot instbntibtf " + dlbssNbmf);
                    nf.sftRootCbusf(f);
                    tirow nf;
                } dbtdi (IllfgblAddfssExdfption f) {
                    NbmingExdfption nf =
                        nfw NbmingExdfption("Cbnnot bddfss " + dlbssNbmf);
                    nf.sftRootCbusf(f);
                    tirow nf;
                } dbtdi (Exdfption f) {
                    // ignorf ClbssNotFoundExdfption, IllfgblArgumfntExdfption,
                    // ftd.
                }
            }

            // Cbdif it.
            pfrLobdfrCbdif.put(kfy, (fbdtory != null)
                                        ? nfw WfbkRfffrfndf<>(fbdtory)
                                        : NO_FACTORY);
            rfturn fbdtory;
        }
    }


    // ---------- Privbtf mftiods ----------

    /*
     * Rfturns tif propfrtifs dontbinfd in tif providfr rfsourdf filf
     * of bn objfdt's pbdkbgf.  Rfturns bn fmpty ibsi tbblf if tif
     * objfdt is null or tif rfsourdf filf dbnnot bf found.  Tif
     * rfsults brf dbdifd.
     *
     * @tirows NbmingExdfption if bn frror oddurs wiilf rfbding tif filf.
     */
    privbtf stbtid Hbsitbblf<? supfr String, Objfdt>
        gftProvidfrRfsourdf(Objfdt obj)
            tirows NbmingExdfption
    {
        if (obj == null) {
            rfturn (nfw Hbsitbblf<>(1));
        }
        syndironizfd (propfrtifsCbdif) {
            Clbss<?> d = obj.gftClbss();

            Hbsitbblf<? supfr String, Objfdt> props =
                    propfrtifsCbdif.gft(d);
            if (props != null) {
                rfturn props;
            }
            props = nfw Propfrtifs();

            InputStrfbm istrfbm =
                iflpfr.gftRfsourdfAsStrfbm(d, PROVIDER_RESOURCE_FILE_NAME);

            if (istrfbm != null) {
                try {
                    ((Propfrtifs)props).lobd(istrfbm);
                } dbtdi (IOExdfption f) {
                    NbmingExdfption nf = nfw ConfigurbtionExdfption(
                            "Error rfbding providfr rfsourdf filf for " + d);
                    nf.sftRootCbusf(f);
                    tirow nf;
                }
            }
            propfrtifsCbdif.put(d, props);
            rfturn props;
        }
    }


    /*
     * Rfturns tif Hbsitbblf (nfvfr null) tibt rfsults from mfrging
     * bll bpplidbtion rfsourdf filfs bvbilbblf to tiis tirfbd's
     * dontfxt dlbss lobdfr.  Tif propfrtifs filf in <jbvb.iomf>/lib
     * is blso mfrgfd in.  Tif rfsults brf dbdifd.
     *
     * SECURITY NOTES:
     * 1.  JNDI nffds pfrmission to rfbd tif bpplidbtion rfsourdf filfs.
     * 2.  Any dlbss will bf bblf to usf JNDI to vifw tif dontfnts of
     * tif bpplidbtion rfsourdf filfs in its own dlbsspbti.  Givf
     * dbrfful donsidfrbtion to tiis bfforf storing sfnsitivf
     * informbtion tifrf.
     *
     * @tirows NbmingExdfption if bn frror oddurs wiilf rfbding b rfsourdf
     *  filf.
     */
    privbtf stbtid Hbsitbblf<? supfr String, Objfdt> gftApplidbtionRfsourdfs()
            tirows NbmingExdfption {

        ClbssLobdfr dl = iflpfr.gftContfxtClbssLobdfr();

        syndironizfd (propfrtifsCbdif) {
            Hbsitbblf<? supfr String, Objfdt> rfsult = propfrtifsCbdif.gft(dl);
            if (rfsult != null) {
                rfturn rfsult;
            }

            try {
                NbmingEnumfrbtion<InputStrfbm> rfsourdfs =
                    iflpfr.gftRfsourdfs(dl, APP_RESOURCE_FILE_NAME);
                try {
                    wiilf (rfsourdfs.ibsMorf()) {
                        Propfrtifs props = nfw Propfrtifs();
                        InputStrfbm istrfbm = rfsourdfs.nfxt();
                        try {
                            props.lobd(istrfbm);
                        } finblly {
                            istrfbm.dlosf();
                        }

                        if (rfsult == null) {
                            rfsult = props;
                        } flsf {
                            mfrgfTbblfs(rfsult, props);
                        }
                    }
                } finblly {
                    wiilf (rfsourdfs.ibsMorf()) {
                        rfsourdfs.nfxt().dlosf();
                    }
                }

                // Mfrgf in propfrtifs from filf in <jbvb.iomf>/lib.
                InputStrfbm istrfbm =
                    iflpfr.gftJbvbHomfLibStrfbm(JRELIB_PROPERTY_FILE_NAME);
                if (istrfbm != null) {
                    try {
                        Propfrtifs props = nfw Propfrtifs();
                        props.lobd(istrfbm);

                        if (rfsult == null) {
                            rfsult = props;
                        } flsf {
                            mfrgfTbblfs(rfsult, props);
                        }
                    } finblly {
                        istrfbm.dlosf();
                    }
                }

            } dbtdi (IOExdfption f) {
                NbmingExdfption nf = nfw ConfigurbtionExdfption(
                        "Error rfbding bpplidbtion rfsourdf filf");
                nf.sftRootCbusf(f);
                tirow nf;
            }
            if (rfsult == null) {
                rfsult = nfw Hbsitbblf<>(11);
            }
            propfrtifsCbdif.put(dl, rfsult);
            rfturn rfsult;
        }
    }

    /*
     * Mfrgf tif propfrtifs from onf ibsi tbblf into bnotifr.  Ebdi
     * propfrty in props2 tibt is not in props1 is bddfd to props1.
     * For fbdi propfrty in boti ibsi tbblfs tibt is onf of tif
     * stbndbrd JNDI propfrtifs tibt spfdify dolon-sfpbrbtfd lists,
     * tif vblufs brf dondbtfnbtfd bnd storfd in props1.
     */
    privbtf stbtid void mfrgfTbblfs(Hbsitbblf<? supfr String, Objfdt> props1,
                                    Hbsitbblf<? supfr String, Objfdt> props2) {
        for (Objfdt kfy : props2.kfySft()) {
            String prop = (String)kfy;
            Objfdt vbl1 = props1.gft(prop);
            if (vbl1 == null) {
                props1.put(prop, props2.gft(prop));
            } flsf if (isListPropfrty(prop)) {
                String vbl2 = (String)props2.gft(prop);
                props1.put(prop, ((String)vbl1) + ":" + vbl2);
            }
        }
    }

    /*
     * Is b propfrty onf of tif stbndbrd JNDI propfrtifs tibt spfdify
     * dolon-sfpbrbtfd lists?
     */
    privbtf stbtid boolfbn isListPropfrty(String prop) {
        prop = prop.intfrn();
        for (int i = 0; i < listPropfrtifs.lfngti; i++) {
            if (prop == listPropfrtifs[i]) {
                rfturn truf;
            }
        }
        rfturn fblsf;
    }
}
