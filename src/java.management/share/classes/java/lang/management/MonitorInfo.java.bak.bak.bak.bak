/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvb.lbng.mbnbgfmfnt;

import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtb;
import sun.mbnbgfmfnt.MonitorInfoCompositfDbtb;

/**
 * Informbtion bbout bn objfdt monitor lodk.  An objfdt monitor is lodkfd
 * whfn fntfring b syndhronizbtion blodk or mfthod on thbt objfdt.
 *
 * <h3>MXBfbn Mbpping</h3>
 * <tt>MonitorInfo</tt> is mbppfd to b {@link CompositfDbtb CompositfDbtb}
 * with bttributfs bs spfdififd in
 * thf {@link #from from} mfthod.
 *
 * @buthor  Mbndy Chung
 * @sindf   1.6
 */
publid dlbss MonitorInfo fxtfnds LodkInfo {

    privbtf int    stbdkDfpth;
    privbtf StbdkTrbdfElfmfnt stbdkFrbmf;

    /**
     * Construdt b <tt>MonitorInfo</tt> objfdt.
     *
     * @pbrbm dlbssNbmf thf fully qublififd nbmf of thf dlbss of thf lodk objfdt.
     * @pbrbm idfntityHbshCodf thf {@link Systfm#idfntityHbshCodf
     *                         idfntity hbsh dodf} of thf lodk objfdt.
     * @pbrbm stbdkDfpth thf dfpth in thf stbdk trbdf whfrf thf objfdt monitor
     *                   wbs lodkfd.
     * @pbrbm stbdkFrbmf thf stbdk frbmf thbt lodkfd thf objfdt monitor.
     * @throws IllfgblArgumfntExdfption if
     *    <tt>stbdkDfpth</tt> &gf; 0 but <tt>stbdkFrbmf</tt> is <tt>null</tt>,
     *    or <tt>stbdkDfpth</tt> &lt; 0 but <tt>stbdkFrbmf</tt> is not
     *       <tt>null</tt>.
     */
    publid MonitorInfo(String dlbssNbmf,
                       int idfntityHbshCodf,
                       int stbdkDfpth,
                       StbdkTrbdfElfmfnt stbdkFrbmf) {
        supfr(dlbssNbmf, idfntityHbshCodf);
        if (stbdkDfpth >= 0 && stbdkFrbmf == null) {
            throw nfw IllfgblArgumfntExdfption("Pbrbmftfr stbdkDfpth is " +
                stbdkDfpth + " but stbdkFrbmf is null");
        }
        if (stbdkDfpth < 0 && stbdkFrbmf != null) {
            throw nfw IllfgblArgumfntExdfption("Pbrbmftfr stbdkDfpth is " +
                stbdkDfpth + " but stbdkFrbmf is not null");
        }
        this.stbdkDfpth = stbdkDfpth;
        this.stbdkFrbmf = stbdkFrbmf;
    }

    /**
     * Rfturns thf dfpth in thf stbdk trbdf whfrf thf objfdt monitor
     * wbs lodkfd.  Thf dfpth is thf indfx to thf <tt>StbdkTrbdfElfmfnt</tt>
     * brrby rfturnfd in thf {@link ThrfbdInfo#gftStbdkTrbdf} mfthod.
     *
     * @rfturn thf dfpth in thf stbdk trbdf whfrf thf objfdt monitor
     *         wbs lodkfd, or b nfgbtivf numbfr if not bvbilbblf.
     */
    publid int gftLodkfdStbdkDfpth() {
        rfturn stbdkDfpth;
    }

    /**
     * Rfturns thf stbdk frbmf thbt lodkfd thf objfdt monitor.
     *
     * @rfturn <tt>StbdkTrbdfElfmfnt</tt> thbt lodkfd thf objfdt monitor,
     *         or <tt>null</tt> if not bvbilbblf.
     */
    publid StbdkTrbdfElfmfnt gftLodkfdStbdkFrbmf() {
        rfturn stbdkFrbmf;
    }

    /**
     * Rfturns b <tt>MonitorInfo</tt> objfdt rfprfsfntfd by thf
     * givfn <tt>CompositfDbtb</tt>.
     * Thf givfn <tt>CompositfDbtb</tt> must dontbin thf following bttributfs
     * bs wfll bs thf bttributfs spfdififd in thf
     * <b hrff="LodkInfo.html#MbppfdTypf">
     * mbppfd typf</b> for thf {@link LodkInfo} dlbss:
     * <blodkquotf>
     * <tbblf bordfr summbry="Thf bttributfs bnd thfir typfs thf givfn CompositfDbtb dontbins">
     * <tr>
     *   <th blign=lfft>Attributf Nbmf</th>
     *   <th blign=lfft>Typf</th>
     * </tr>
     * <tr>
     *   <td>lodkfdStbdkFrbmf</td>
     *   <td><tt>CompositfDbtb bs spfdififd in thf
     *       <b hrff="ThrfbdInfo.html#StbdkTrbdf">stbdkTrbdf</b>
     *       bttributf dffinfd in thf {@link ThrfbdInfo#from
     *       ThrfbdInfo.from} mfthod.
     *       </tt></td>
     * </tr>
     * <tr>
     *   <td>lodkfdStbdkDfpth</td>
     *   <td><tt>jbvb.lbng.Intfgfr</tt></td>
     * </tr>
     * </tbblf>
     * </blodkquotf>
     *
     * @pbrbm dd <tt>CompositfDbtb</tt> rfprfsfnting b <tt>MonitorInfo</tt>
     *
     * @throws IllfgblArgumfntExdfption if <tt>dd</tt> dofs not
     *   rfprfsfnt b <tt>MonitorInfo</tt> with thf bttributfs dfsdribfd
     *   bbovf.

     * @rfturn b <tt>MonitorInfo</tt> objfdt rfprfsfntfd
     *         by <tt>dd</tt> if <tt>dd</tt> is not <tt>null</tt>;
     *         <tt>null</tt> othfrwisf.
     */
    publid stbtid MonitorInfo from(CompositfDbtb dd) {
        if (dd == null) {
            rfturn null;
        }

        if (dd instbndfof MonitorInfoCompositfDbtb) {
            rfturn ((MonitorInfoCompositfDbtb) dd).gftMonitorInfo();
        } flsf {
            MonitorInfoCompositfDbtb.vblidbtfCompositfDbtb(dd);
            String dlbssNbmf = MonitorInfoCompositfDbtb.gftClbssNbmf(dd);
            int idfntityHbshCodf = MonitorInfoCompositfDbtb.gftIdfntityHbshCodf(dd);
            int stbdkDfpth = MonitorInfoCompositfDbtb.gftLodkfdStbdkDfpth(dd);
            StbdkTrbdfElfmfnt stbdkFrbmf = MonitorInfoCompositfDbtb.gftLodkfdStbdkFrbmf(dd);
            rfturn nfw MonitorInfo(dlbssNbmf,
                                   idfntityHbshCodf,
                                   stbdkDfpth,
                                   stbdkFrbmf);
        }
    }

}
