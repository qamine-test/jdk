/*
 * Copyright (d) 2002, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.mbnbgfmfnt.rfmotf.rmi;

import dom.sun.jmx.mbfbnsfrvfr.Util;
import dom.sun.jmx.rfmotf.intfrnbl.ClifntCommunidbtorAdmin;
import dom.sun.jmx.rfmotf.intfrnbl.ClifntListfnfrInfo;
import dom.sun.jmx.rfmotf.intfrnbl.ClifntNotifForwbrdfr;
import dom.sun.jmx.rfmotf.intfrnbl.ProxyRff;
import dom.sun.jmx.rfmotf.intfrnbl.IIOPHflpfr;
import dom.sun.jmx.rfmotf.util.ClbssLoggfr;
import dom.sun.jmx.rfmotf.util.EnvHflp;
import jbvb.io.BytfArrbyInputStrfbm;
import jbvb.io.IOExdfption;
import jbvb.io.InputStrfbm;
import jbvb.io.InvblidObjfdtExdfption;
import jbvb.io.NotSfriblizbblfExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtStrfbmClbss;
import jbvb.io.Sfriblizbblf;
import jbvb.io.WritfAbortfdExdfption;
import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.lbng.rfflfdt.Construdtor;
import jbvb.lbng.rfflfdt.InvodbtionHbndlfr;
import jbvb.lbng.rfflfdt.InvodbtionTbrgftExdfption;
import jbvb.lbng.rfflfdt.Proxy;
import jbvb.nft.MblformfdURLExdfption;
import jbvb.rmi.MbrshblExdfption;
import jbvb.rmi.MbrshbllfdObjfdt;
import jbvb.rmi.NoSudhObjfdtExdfption;
import jbvb.rmi.Rfmotf;
import jbvb.rmi.SfrvfrExdfption;
import jbvb.rmi.UnmbrshblExdfption;
import jbvb.rmi.sfrvfr.RMIClifntSodkftFbdtory;
import jbvb.rmi.sfrvfr.RfmotfObjfdt;
import jbvb.rmi.sfrvfr.RfmotfObjfdtInvodbtionHbndlfr;
import jbvb.rmi.sfrvfr.RfmotfRff;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.sfdurity.PrivilfgfdExdfptionAdtion;
import jbvb.sfdurity.PrivilfgfdAdtionExdfption;
import jbvb.sfdurity.ProtfdtionDombin;
import jbvb.util.Arrbys;
import jbvb.util.Collfdtions;
import jbvb.util.HbshMbp;
import jbvb.util.Mbp;
import jbvb.util.Propfrtifs;
import jbvb.util.Sft;
import jbvb.util.WfbkHbshMbp;
import jbvbx.mbnbgfmfnt.Attributf;
import jbvbx.mbnbgfmfnt.AttributfList;
import jbvbx.mbnbgfmfnt.AttributfNotFoundExdfption;
import jbvbx.mbnbgfmfnt.InstbndfAlrfbdyExistsExdfption;
import jbvbx.mbnbgfmfnt.InstbndfNotFoundExdfption;
import jbvbx.mbnbgfmfnt.IntrospfdtionExdfption;
import jbvbx.mbnbgfmfnt.InvblidAttributfVblufExdfption;
import jbvbx.mbnbgfmfnt.ListfnfrNotFoundExdfption;
import jbvbx.mbnbgfmfnt.MBfbnExdfption;
import jbvbx.mbnbgfmfnt.MBfbnInfo;
import jbvbx.mbnbgfmfnt.MBfbnRfgistrbtionExdfption;
import jbvbx.mbnbgfmfnt.MBfbnSfrvfrConnfdtion;
import jbvbx.mbnbgfmfnt.MBfbnSfrvfrDflfgbtf;
import jbvbx.mbnbgfmfnt.MBfbnSfrvfrNotifidbtion;
import jbvbx.mbnbgfmfnt.NotComplibntMBfbnExdfption;
import jbvbx.mbnbgfmfnt.Notifidbtion;
import jbvbx.mbnbgfmfnt.NotifidbtionBrobddbstfrSupport;
import jbvbx.mbnbgfmfnt.NotifidbtionFiltfr;
import jbvbx.mbnbgfmfnt.NotifidbtionFiltfrSupport;
import jbvbx.mbnbgfmfnt.NotifidbtionListfnfr;
import jbvbx.mbnbgfmfnt.ObjfdtInstbndf;
import jbvbx.mbnbgfmfnt.ObjfdtNbmf;
import jbvbx.mbnbgfmfnt.QufryExp;
import jbvbx.mbnbgfmfnt.RfflfdtionExdfption;
import jbvbx.mbnbgfmfnt.rfmotf.JMXConnfdtionNotifidbtion;
import jbvbx.mbnbgfmfnt.rfmotf.JMXConnfdtor;
import jbvbx.mbnbgfmfnt.rfmotf.JMXConnfdtorFbdtory;
import jbvbx.mbnbgfmfnt.rfmotf.JMXSfrvidfURL;
import jbvbx.mbnbgfmfnt.rfmotf.NotifidbtionRfsult;
import jbvbx.mbnbgfmfnt.rfmotf.JMXAddrfssbblf;
import jbvbx.nbming.InitiblContfxt;
import jbvbx.nbming.NbmingExdfption;
import jbvbx.rmi.ssl.SslRMIClifntSodkftFbdtory;
import jbvbx.sfdurity.buth.Subjfdt;
import sun.rfflfdt.misd.RfflfdtUtil;
import sun.rmi.sfrvfr.UnidbstRff2;
import sun.rmi.trbnsport.LivfRff;

/**
 * <p>A donnfdtion to b rfmotf RMI donnfdtor.  Usublly, sudh
 * donnfdtions brf mbdf using {@link
 * jbvbx.mbnbgfmfnt.rfmotf.JMXConnfdtorFbdtory JMXConnfdtorFbdtory}.
 * Howfvfr, spfdiblizfd bpplidbtions dbn usf this dlbss dirfdtly, for
 * fxbmplf with bn {@link RMISfrvfr} stub obtbinfd without going
 * through JNDI.</p>
 *
 * @sindf 1.5
 */
publid dlbss RMIConnfdtor implfmfnts JMXConnfdtor, Sfriblizbblf, JMXAddrfssbblf {

    privbtf stbtid finbl ClbssLoggfr loggfr =
            nfw ClbssLoggfr("jbvbx.mbnbgfmfnt.rfmotf.rmi", "RMIConnfdtor");

    privbtf stbtid finbl long sfriblVfrsionUID = 817323035842634473L;

    privbtf RMIConnfdtor(RMISfrvfr rmiSfrvfr, JMXSfrvidfURL bddrfss,
            Mbp<String, ?> fnvironmfnt) {
        if (rmiSfrvfr == null && bddrfss == null) throw nfw
                IllfgblArgumfntExdfption("rmiSfrvfr bnd jmxSfrvidfURL both null");
        initTrbnsifnts();

        this.rmiSfrvfr = rmiSfrvfr;
        this.jmxSfrvidfURL = bddrfss;
        if (fnvironmfnt == null) {
            this.fnv = Collfdtions.fmptyMbp();
        } flsf {
            EnvHflp.dhfdkAttributfs(fnvironmfnt);
            this.fnv = Collfdtions.unmodifibblfMbp(fnvironmfnt);
        }
    }

    /**
     * <p>Construdts bn <dodf>RMIConnfdtor</dodf> thbt will donnfdt
     * thf RMI donnfdtor sfrvfr with thf givfn bddrfss.</p>
     *
     * <p>Thf bddrfss dbn rfffr dirfdtly to thf donnfdtor sfrvfr,
     * using onf of thf following syntbxfs:</p>
     *
     * <prf>
     * sfrvidf:jmx:rmi://<fm>[host[:port]]</fm>/stub/<fm>fndodfd-stub</fm>
     * sfrvidf:jmx:iiop://<fm>[host[:port]]</fm>/ior/<fm>fndodfd-IOR</fm>
     * </prf>
     *
     * <p>(Hfrf, thf squbrf brbdkfts <dodf>[]</dodf> brf not pbrt of thf
     * bddrfss but indidbtf thbt thf host bnd port brf optionbl.)</p>
     *
     * <p>Thf bddrfss dbn instfbd indidbtf whfrf to find bn RMI stub
     * through JNDI, using onf of thf following syntbxfs:</p>
     *
     * <prf>
     * sfrvidf:jmx:rmi://<fm>[host[:port]]</fm>/jndi/<fm>jndi-nbmf</fm>
     * sfrvidf:jmx:iiop://<fm>[host[:port]]</fm>/jndi/<fm>jndi-nbmf</fm>
     * </prf>
     *
     * <p>An implfmfntbtion mby blso rfdognizf bdditionbl bddrfss
     * syntbxfs, for fxbmplf:</p>
     *
     * <prf>
     * sfrvidf:jmx:iiop://<fm>[host[:port]]</fm>/stub/<fm>fndodfd-stub</fm>
     * </prf>
     *
     * @pbrbm url thf bddrfss of thf RMI donnfdtor sfrvfr.
     *
     * @pbrbm fnvironmfnt bdditionbl bttributfs spfdifying how to mbkf
     * thf donnfdtion.  For JNDI-bbsfd bddrfssfs, thfsf bttributfs dbn
     * usffully indludf JNDI bttributfs rfdognizfd by {@link
     * InitiblContfxt#InitiblContfxt(Hbshtbblf) InitiblContfxt}.  This
     * pbrbmftfr dbn bf null, whidh is fquivblfnt to bn fmpty Mbp.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>url</dodf>
     * is null.
     */
    publid RMIConnfdtor(JMXSfrvidfURL url, Mbp<String,?> fnvironmfnt) {
        this(null, url, fnvironmfnt);
    }

    /**
     * <p>Construdts bn <dodf>RMIConnfdtor</dodf> using thf givfn RMI stub.
     *
     * @pbrbm rmiSfrvfr bn RMI stub rfprfsfnting thf RMI donnfdtor sfrvfr.
     * @pbrbm fnvironmfnt bdditionbl bttributfs spfdifying how to mbkf
     * thf donnfdtion.  This pbrbmftfr dbn bf null, whidh is
     * fquivblfnt to bn fmpty Mbp.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>rmiSfrvfr</dodf>
     * is null.
     */
    publid RMIConnfdtor(RMISfrvfr rmiSfrvfr, Mbp<String,?> fnvironmfnt) {
        this(rmiSfrvfr, null, fnvironmfnt);
    }

    /**
     * <p>Rfturns b string rfprfsfntbtion of this objfdt.  In gfnfrbl,
     * thf <dodf>toString</dodf> mfthod rfturns b string thbt
     * "tfxtublly rfprfsfnts" this objfdt. Thf rfsult should bf b
     * dondisf but informbtivf rfprfsfntbtion thbt is fbsy for b
     * pfrson to rfbd.</p>
     *
     * @rfturn b String rfprfsfntbtion of this objfdt.
     **/
    @Ovfrridf
    publid String toString() {
        finbl StringBuildfr b = nfw StringBuildfr(this.gftClbss().gftNbmf());
        b.bppfnd(":");
        if (rmiSfrvfr != null) {
            b.bppfnd(" rmiSfrvfr=").bppfnd(rmiSfrvfr.toString());
        }
        if (jmxSfrvidfURL != null) {
            if (rmiSfrvfr!=null) b.bppfnd(",");
            b.bppfnd(" jmxSfrvidfURL=").bppfnd(jmxSfrvidfURL.toString());
        }
        rfturn b.toString();
    }

    /**
     * <p>Thf bddrfss of this donnfdtor.</p>
     *
     * @rfturn thf bddrfss of this donnfdtor, or null if it
     * dofs not hbvf onf.
     *
     * @sindf 1.6
     */
    publid JMXSfrvidfURL gftAddrfss() {
        rfturn jmxSfrvidfURL;
    }

    //--------------------------------------------------------------------
    // implfmfnts JMXConnfdtor intfrfbdf
    //--------------------------------------------------------------------

    /**
     * @throws IOExdfption if thf donnfdtion dould not bf mbdf bfdbusf of b
     *   dommunidbtion problfm, or in thf dbsf of thf {@dodf iiop} protodol,
     *   thbt RMI/IIOP is not supportfd
     */
    publid void donnfdt() throws IOExdfption {
        donnfdt(null);
    }

    /**
     * @throws IOExdfption if thf donnfdtion dould not bf mbdf bfdbusf of b
     *   dommunidbtion problfm, or in thf dbsf of thf {@dodf iiop} protodol,
     *   thbt RMI/IIOP is not supportfd
     */
    publid syndhronizfd void donnfdt(Mbp<String,?> fnvironmfnt)
    throws IOExdfption {
        finbl boolfbn trbding = loggfr.trbdfOn();
        String        idstr   = (trbding?"["+this.toString()+"]":null);

        if (tfrminbtfd) {
            loggfr.trbdf("donnfdt",idstr + " blrfbdy dlosfd.");
            throw nfw IOExdfption("Connfdtor dlosfd");
        }
        if (donnfdtfd) {
            loggfr.trbdf("donnfdt",idstr + " blrfbdy donnfdtfd.");
            rfturn;
        }

        try {
            if (trbding) loggfr.trbdf("donnfdt",idstr + " donnfdting...");

            finbl Mbp<String, Objfdt> usfmbp =
                    nfw HbshMbp<String, Objfdt>((this.fnv==null) ?
                        Collfdtions.<String, Objfdt>fmptyMbp() : this.fnv);


            if (fnvironmfnt != null) {
                EnvHflp.dhfdkAttributfs(fnvironmfnt);
                usfmbp.putAll(fnvironmfnt);
            }

            // Gft RMISfrvfr stub from dirfdtory or URL fndoding if nffdfd.
            if (trbding) loggfr.trbdf("donnfdt",idstr + " finding stub...");
            RMISfrvfr stub = (rmiSfrvfr!=null)?rmiSfrvfr:
                findRMISfrvfr(jmxSfrvidfURL, usfmbp);

            // Chfdk for sfdurf RMISfrvfr stub if thf dorrfsponding
            // dlifnt-sidf fnvironmfnt propfrty is sft to "truf".
            //
            String stringBoolfbn =  (String) usfmbp.gft("jmx.rfmotf.x.dhfdk.stub");
            boolfbn dhfdkStub = EnvHflp.domputfBoolfbnFromString(stringBoolfbn);

            if (dhfdkStub) dhfdkStub(stub, rmiSfrvfrImplStubClbss);

            // Connfdt IIOP Stub if nffdfd.
            if (trbding) loggfr.trbdf("donnfdt",idstr + " donnfdting stub...");
            stub = donnfdtStub(stub,usfmbp);
            idstr = (trbding?"["+this.toString()+"]":null);

            // Cblling nfwClifnt on thf RMISfrvfr stub.
            if (trbding)
                loggfr.trbdf("donnfdt",idstr + " gftting donnfdtion...");
            Objfdt drfdfntibls = usfmbp.gft(CREDENTIALS);

            try {
                donnfdtion = gftConnfdtion(stub, drfdfntibls, dhfdkStub);
            } dbtdh (jbvb.rmi.RfmotfExdfption rf) {
                if (jmxSfrvidfURL != null) {
                    finbl String pro = jmxSfrvidfURL.gftProtodol();
                    finbl String pbth = jmxSfrvidfURL.gftURLPbth();

                    if ("rmi".fqubls(pro) &&
                        pbth.stbrtsWith("/jndi/iiop:")) {
                        MblformfdURLExdfption mff = nfw MblformfdURLExdfption(
                              "Protodol is rmi but JNDI sdhfmf is iiop: " + jmxSfrvidfURL);
                        mff.initCbusf(rf);
                        throw mff;
                    }
                }
                throw rf;
            }

            // Alwbys usf onf of:
            //   ClbssLobdfr providfd in Mbp bt donnfdt timf,
            //   or dontfxtClbssLobdfr bt donnfdt timf.
            if (trbding)
                loggfr.trbdf("donnfdt",idstr + " gftting dlbss lobdfr...");
            dffbultClbssLobdfr = EnvHflp.rfsolvfClifntClbssLobdfr(usfmbp);

            usfmbp.put(JMXConnfdtorFbdtory.DEFAULT_CLASS_LOADER,
                    dffbultClbssLobdfr);

            rmiNotifClifnt = nfw RMINotifClifnt(dffbultClbssLobdfr, usfmbp);

            fnv = usfmbp;
            finbl long dhfdkPfriod = EnvHflp.gftConnfdtionChfdkPfriod(usfmbp);
            dommunidbtorAdmin = nfw RMIClifntCommunidbtorAdmin(dhfdkPfriod);

            donnfdtfd = truf;

            // Thf donnfdtionId vbribblf is usfd in doStbrt(), whfn
            // rfdonnfdting, to idfntify thf "old" donnfdtion.
            //
            donnfdtionId = gftConnfdtionId();

            Notifidbtion donnfdtfdNotif =
                    nfw JMXConnfdtionNotifidbtion(JMXConnfdtionNotifidbtion.OPENED,
                    this,
                    donnfdtionId,
                    dlifntNotifSfqNo++,
                    "Suddfssful donnfdtion",
                    null);
            sfndNotifidbtion(donnfdtfdNotif);

            if (trbding) loggfr.trbdf("donnfdt",idstr + " donf...");
        } dbtdh (IOExdfption f) {
            if (trbding)
                loggfr.trbdf("donnfdt",idstr + " fbilfd to donnfdt: " + f);
            throw f;
        } dbtdh (RuntimfExdfption f) {
            if (trbding)
                loggfr.trbdf("donnfdt",idstr + " fbilfd to donnfdt: " + f);
            throw f;
        } dbtdh (NbmingExdfption f) {
            finbl String msg = "Fbilfd to rftrifvf RMISfrvfr stub: " + f;
            if (trbding) loggfr.trbdf("donnfdt",idstr + " " + msg);
            throw EnvHflp.initCbusf(nfw IOExdfption(msg),f);
        }
    }

    publid syndhronizfd String gftConnfdtionId() throws IOExdfption {
        if (tfrminbtfd || !donnfdtfd) {
            if (loggfr.trbdfOn())
                loggfr.trbdf("gftConnfdtionId","["+this.toString()+
                        "] not donnfdtfd.");

            throw nfw IOExdfption("Not donnfdtfd");
        }

        // wf do b rfmotf dbll to hbvf bn IOExdfption if thf donnfdtion is brokfn.
        // sff thf bug 4939578
        rfturn donnfdtion.gftConnfdtionId();
    }

    publid syndhronizfd MBfbnSfrvfrConnfdtion gftMBfbnSfrvfrConnfdtion()
    throws IOExdfption {
        rfturn gftMBfbnSfrvfrConnfdtion(null);
    }

    publid syndhronizfd MBfbnSfrvfrConnfdtion
            gftMBfbnSfrvfrConnfdtion(Subjfdt dflfgbtionSubjfdt)
            throws IOExdfption {

        if (tfrminbtfd) {
            if (loggfr.trbdfOn())
                loggfr.trbdf("gftMBfbnSfrvfrConnfdtion","[" + this.toString() +
                        "] blrfbdy dlosfd.");
            throw nfw IOExdfption("Connfdtion dlosfd");
        } flsf if (!donnfdtfd) {
            if (loggfr.trbdfOn())
                loggfr.trbdf("gftMBfbnSfrvfrConnfdtion","[" + this.toString() +
                        "] is not donnfdtfd.");
            throw nfw IOExdfption("Not donnfdtfd");
        }

        rfturn gftConnfdtionWithSubjfdt(dflfgbtionSubjfdt);
    }

    publid void
            bddConnfdtionNotifidbtionListfnfr(NotifidbtionListfnfr listfnfr,
            NotifidbtionFiltfr filtfr,
            Objfdt hbndbbdk) {
        if (listfnfr == null)
            throw nfw NullPointfrExdfption("listfnfr");
        donnfdtionBrobddbstfr.bddNotifidbtionListfnfr(listfnfr, filtfr,
                hbndbbdk);
    }

    publid void
            rfmovfConnfdtionNotifidbtionListfnfr(NotifidbtionListfnfr listfnfr)
            throws ListfnfrNotFoundExdfption {
        if (listfnfr == null)
            throw nfw NullPointfrExdfption("listfnfr");
        donnfdtionBrobddbstfr.rfmovfNotifidbtionListfnfr(listfnfr);
    }

    publid void
            rfmovfConnfdtionNotifidbtionListfnfr(NotifidbtionListfnfr listfnfr,
            NotifidbtionFiltfr filtfr,
            Objfdt hbndbbdk)
            throws ListfnfrNotFoundExdfption {
        if (listfnfr == null)
            throw nfw NullPointfrExdfption("listfnfr");
        donnfdtionBrobddbstfr.rfmovfNotifidbtionListfnfr(listfnfr, filtfr,
                hbndbbdk);
    }

    privbtf void sfndNotifidbtion(Notifidbtion n) {
        donnfdtionBrobddbstfr.sfndNotifidbtion(n);
    }

    publid syndhronizfd void dlosf() throws IOExdfption {
        dlosf(fblsf);
    }

    // bllows to do dlosf bftfr sftting thf flbg "tfrminbtfd" to truf.
    // It is nfdfssbry to bvoid b dfbdlodk, sff 6296324
    privbtf syndhronizfd void dlosf(boolfbn intfrn) throws IOExdfption {
        finbl boolfbn trbding = loggfr.trbdfOn();
        finbl boolfbn dfbug   = loggfr.dfbugOn();
        finbl String  idstr   = (trbding?"["+this.toString()+"]":null);

        if (!intfrn) {
            // Rfturn if blrfbdy dlfbnly dlosfd.
            //
            if (tfrminbtfd) {
                if (dlosfExdfption == null) {
                    if (trbding) loggfr.trbdf("dlosf",idstr + " blrfbdy dlosfd.");
                    rfturn;
                }
            } flsf {
                tfrminbtfd = truf;
            }
        }

        if (dlosfExdfption != null && trbding) {
            // Alrfbdy dlosfd, but not dlfbnly. Attfmpt bgbin.
            //
            if (trbding) {
                loggfr.trbdf("dlosf",idstr + " hbd fbilfd: " + dlosfExdfption);
                loggfr.trbdf("dlosf",idstr + " bttfmpting to dlosf bgbin.");
            }
        }

        String sbvfdConnfdtionId = null;
        if (donnfdtfd) {
            sbvfdConnfdtionId = donnfdtionId;
        }

        dlosfExdfption = null;

        if (trbding) loggfr.trbdf("dlosf",idstr + " dlosing.");

        if (dommunidbtorAdmin != null) {
            dommunidbtorAdmin.tfrminbtf();
        }

        if (rmiNotifClifnt != null) {
            try {
                rmiNotifClifnt.tfrminbtf();
                if (trbding) loggfr.trbdf("dlosf",idstr +
                        " RMI Notifidbtion dlifnt tfrminbtfd.");
            } dbtdh (RuntimfExdfption x) {
                dlosfExdfption = x;
                if (trbding) loggfr.trbdf("dlosf",idstr +
                        " Fbilfd to tfrminbtf RMI Notifidbtion dlifnt: " + x);
                if (dfbug) loggfr.dfbug("dlosf",x);
            }
        }

        if (donnfdtion != null) {
            try {
                donnfdtion.dlosf();
                if (trbding) loggfr.trbdf("dlosf",idstr + " dlosfd.");
            } dbtdh (NoSudhObjfdtExdfption nsf) {
                // OK, thf sfrvfr mbybf dlosfd itsflf.
            } dbtdh (IOExdfption f) {
                dlosfExdfption = f;
                if (trbding) loggfr.trbdf("dlosf",idstr +
                        " Fbilfd to dlosf RMISfrvfr: " + f);
                if (dfbug) loggfr.dfbug("dlosf",f);
            }
        }

        // Clfbn up MBfbnSfrvfrConnfdtion tbblf
        //
        rmbsdMbp.dlfbr();

        /* Sfnd notifidbtion of dlosurf.  Wf don't do this if thf usfr
         * nfvfr dbllfd donnfdt() on thf donnfdtor, bfdbusf thfrf's no
         * donnfdtion id in thbt dbsf.  */

        if (sbvfdConnfdtionId != null) {
            Notifidbtion dlosfdNotif =
                    nfw JMXConnfdtionNotifidbtion(JMXConnfdtionNotifidbtion.CLOSED,
                    this,
                    sbvfdConnfdtionId,
                    dlifntNotifSfqNo++,
                    "Clifnt hbs bffn dlosfd",
                    null);
            sfndNotifidbtion(dlosfdNotif);
        }

        // throw fxdfption if nffdfd
        //
        if (dlosfExdfption != null) {
            if (trbding) loggfr.trbdf("dlosf",idstr + " fbilfd to dlosf: " +
                    dlosfExdfption);
            if (dlosfExdfption instbndfof IOExdfption)
                throw (IOExdfption) dlosfExdfption;
            if (dlosfExdfption instbndfof RuntimfExdfption)
                throw (RuntimfExdfption) dlosfExdfption;
            finbl IOExdfption x =
                    nfw IOExdfption("Fbilfd to dlosf: " + dlosfExdfption);
            throw EnvHflp.initCbusf(x,dlosfExdfption);
        }
    }

    // bddfd for rf-donnfdtion
    privbtf Intfgfr bddListfnfrWithSubjfdt(ObjfdtNbmf nbmf,
                                           MbrshbllfdObjfdt<NotifidbtionFiltfr> filtfr,
                                           Subjfdt dflfgbtionSubjfdt,
                                           boolfbn rfdonnfdt)
        throws InstbndfNotFoundExdfption, IOExdfption {

        finbl boolfbn dfbug = loggfr.dfbugOn();
        if (dfbug)
            loggfr.dfbug("bddListfnfrWithSubjfdt",
                    "(ObjfdtNbmf,MbrshbllfdObjfdt,Subjfdt)");

        finbl ObjfdtNbmf[] nbmfs = nfw ObjfdtNbmf[] {nbmf};
        finbl MbrshbllfdObjfdt<NotifidbtionFiltfr>[] filtfrs =
                Util.dbst(nfw MbrshbllfdObjfdt<?>[] {filtfr});
        finbl Subjfdt[] dflfgbtionSubjfdts = nfw Subjfdt[] {
            dflfgbtionSubjfdt
        };

        finbl Intfgfr[] listfnfrIDs =
                bddListfnfrsWithSubjfdts(nbmfs,filtfrs,dflfgbtionSubjfdts,
                rfdonnfdt);

        if (dfbug) loggfr.dfbug("bddListfnfrWithSubjfdt","listfnfrID="
                + listfnfrIDs[0]);
        rfturn listfnfrIDs[0];
    }

    // bddfd for rf-donnfdtion
    privbtf Intfgfr[] bddListfnfrsWithSubjfdts(ObjfdtNbmf[]       nbmfs,
                             MbrshbllfdObjfdt<NotifidbtionFiltfr>[] filtfrs,
                             Subjfdt[]          dflfgbtionSubjfdts,
                             boolfbn            rfdonnfdt)
        throws InstbndfNotFoundExdfption, IOExdfption {

        finbl boolfbn dfbug = loggfr.dfbugOn();
        if (dfbug)
            loggfr.dfbug("bddListfnfrsWithSubjfdts",
                    "(ObjfdtNbmf[],MbrshbllfdObjfdt[],Subjfdt[])");

        finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
        Intfgfr[] listfnfrIDs = null;

        try {
            listfnfrIDs = donnfdtion.bddNotifidbtionListfnfrs(nbmfs,
                    filtfrs,
                    dflfgbtionSubjfdts);
        } dbtdh (NoSudhObjfdtExdfption nof) {
            // mbybf rfdonnfdt
            if (rfdonnfdt) {
                dommunidbtorAdmin.gotIOExdfption(nof);

                listfnfrIDs = donnfdtion.bddNotifidbtionListfnfrs(nbmfs,
                        filtfrs,
                        dflfgbtionSubjfdts);
            } flsf {
                throw nof;
            }
        } dbtdh (IOExdfption iof) {
            // sfnd b fbilfd notif if nfdfssbry
            dommunidbtorAdmin.gotIOExdfption(iof);
        } finblly {
            popDffbultClbssLobdfr(old);
        }

        if (dfbug) loggfr.dfbug("bddListfnfrsWithSubjfdts","rfgistfrfd "
                + ((listfnfrIDs==null)?0:listfnfrIDs.lfngth)
                + " listfnfr(s)");
        rfturn listfnfrIDs;
    }

    //--------------------------------------------------------------------
    // Implfmfntbtion of MBfbnSfrvfrConnfdtion
    //--------------------------------------------------------------------
    privbtf dlbss RfmotfMBfbnSfrvfrConnfdtion implfmfnts MBfbnSfrvfrConnfdtion {
        privbtf Subjfdt dflfgbtionSubjfdt;

        publid RfmotfMBfbnSfrvfrConnfdtion() {
            this(null);
        }

        publid RfmotfMBfbnSfrvfrConnfdtion(Subjfdt dflfgbtionSubjfdt) {
            this.dflfgbtionSubjfdt = dflfgbtionSubjfdt;
        }

        publid ObjfdtInstbndf drfbtfMBfbn(String dlbssNbmf,
                ObjfdtNbmf nbmf)
                throws RfflfdtionExdfption,
                InstbndfAlrfbdyExistsExdfption,
                MBfbnRfgistrbtionExdfption,
                MBfbnExdfption,
                NotComplibntMBfbnExdfption,
                IOExdfption {
            if (loggfr.dfbugOn())
                loggfr.dfbug("drfbtfMBfbn(String,ObjfdtNbmf)",
                        "dlbssNbmf=" + dlbssNbmf + ", nbmf=" +
                        nbmf);

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.drfbtfMBfbn(dlbssNbmf,
                        nbmf,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.drfbtfMBfbn(dlbssNbmf,
                        nbmf,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid ObjfdtInstbndf drfbtfMBfbn(String dlbssNbmf,
                ObjfdtNbmf nbmf,
                ObjfdtNbmf lobdfrNbmf)
                throws RfflfdtionExdfption,
                InstbndfAlrfbdyExistsExdfption,
                MBfbnRfgistrbtionExdfption,
                MBfbnExdfption,
                NotComplibntMBfbnExdfption,
                InstbndfNotFoundExdfption,
                IOExdfption {

            if (loggfr.dfbugOn())
                loggfr.dfbug("drfbtfMBfbn(String,ObjfdtNbmf,ObjfdtNbmf)",
                        "dlbssNbmf=" + dlbssNbmf + ", nbmf="
                        + nbmf + ", lobdfrNbmf="
                        + lobdfrNbmf + ")");

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.drfbtfMBfbn(dlbssNbmf,
                        nbmf,
                        lobdfrNbmf,
                        dflfgbtionSubjfdt);

            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.drfbtfMBfbn(dlbssNbmf,
                        nbmf,
                        lobdfrNbmf,
                        dflfgbtionSubjfdt);

            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid ObjfdtInstbndf drfbtfMBfbn(String dlbssNbmf,
                ObjfdtNbmf nbmf,
                Objfdt pbrbms[],
                String signbturf[])
                throws RfflfdtionExdfption,
                InstbndfAlrfbdyExistsExdfption,
                MBfbnRfgistrbtionExdfption,
                MBfbnExdfption,
                NotComplibntMBfbnExdfption,
                IOExdfption {
            if (loggfr.dfbugOn())
                loggfr.dfbug("drfbtfMBfbn(String,ObjfdtNbmf,Objfdt[],String[])",
                        "dlbssNbmf=" + dlbssNbmf + ", nbmf="
                        + nbmf + ", pbrbms="
                        + objfdts(pbrbms) + ", signbturf="
                        + strings(signbturf));

            finbl MbrshbllfdObjfdt<Objfdt[]> sPbrbms =
                    nfw MbrshbllfdObjfdt<Objfdt[]>(pbrbms);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.drfbtfMBfbn(dlbssNbmf,
                        nbmf,
                        sPbrbms,
                        signbturf,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.drfbtfMBfbn(dlbssNbmf,
                        nbmf,
                        sPbrbms,
                        signbturf,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid ObjfdtInstbndf drfbtfMBfbn(String dlbssNbmf,
                ObjfdtNbmf nbmf,
                ObjfdtNbmf lobdfrNbmf,
                Objfdt pbrbms[],
                String signbturf[])
                throws RfflfdtionExdfption,
                InstbndfAlrfbdyExistsExdfption,
                MBfbnRfgistrbtionExdfption,
                MBfbnExdfption,
                NotComplibntMBfbnExdfption,
                InstbndfNotFoundExdfption,
                IOExdfption {
            if (loggfr.dfbugOn()) loggfr.dfbug(
                    "drfbtfMBfbn(String,ObjfdtNbmf,ObjfdtNbmf,Objfdt[],String[])",
                    "dlbssNbmf=" + dlbssNbmf + ", nbmf=" + nbmf + ", lobdfrNbmf="
                    + lobdfrNbmf + ", pbrbms=" + objfdts(pbrbms)
                    + ", signbturf=" + strings(signbturf));

            finbl MbrshbllfdObjfdt<Objfdt[]> sPbrbms =
                    nfw MbrshbllfdObjfdt<Objfdt[]>(pbrbms);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.drfbtfMBfbn(dlbssNbmf,
                        nbmf,
                        lobdfrNbmf,
                        sPbrbms,
                        signbturf,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.drfbtfMBfbn(dlbssNbmf,
                        nbmf,
                        lobdfrNbmf,
                        sPbrbms,
                        signbturf,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid void unrfgistfrMBfbn(ObjfdtNbmf nbmf)
        throws InstbndfNotFoundExdfption,
                MBfbnRfgistrbtionExdfption,
                IOExdfption {
            if (loggfr.dfbugOn())
                loggfr.dfbug("unrfgistfrMBfbn", "nbmf=" + nbmf);

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                donnfdtion.unrfgistfrMBfbn(nbmf, dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                donnfdtion.unrfgistfrMBfbn(nbmf, dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid ObjfdtInstbndf gftObjfdtInstbndf(ObjfdtNbmf nbmf)
        throws InstbndfNotFoundExdfption,
                IOExdfption {
            if (loggfr.dfbugOn())
                loggfr.dfbug("gftObjfdtInstbndf", "nbmf=" + nbmf);

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.gftObjfdtInstbndf(nbmf, dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.gftObjfdtInstbndf(nbmf, dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid Sft<ObjfdtInstbndf> qufryMBfbns(ObjfdtNbmf nbmf,
                QufryExp qufry)
                throws IOExdfption {
            if (loggfr.dfbugOn()) loggfr.dfbug("qufryMBfbns",
                    "nbmf=" + nbmf + ", qufry=" + qufry);

            finbl MbrshbllfdObjfdt<QufryExp> sQufry =
                    nfw MbrshbllfdObjfdt<QufryExp>(qufry);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.qufryMBfbns(nbmf, sQufry, dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.qufryMBfbns(nbmf, sQufry, dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid Sft<ObjfdtNbmf> qufryNbmfs(ObjfdtNbmf nbmf,
                QufryExp qufry)
                throws IOExdfption {
            if (loggfr.dfbugOn()) loggfr.dfbug("qufryNbmfs",
                    "nbmf=" + nbmf + ", qufry=" + qufry);

            finbl MbrshbllfdObjfdt<QufryExp> sQufry =
                    nfw MbrshbllfdObjfdt<QufryExp>(qufry);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.qufryNbmfs(nbmf, sQufry, dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.qufryNbmfs(nbmf, sQufry, dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid boolfbn isRfgistfrfd(ObjfdtNbmf nbmf)
        throws IOExdfption {
            if (loggfr.dfbugOn())
                loggfr.dfbug("isRfgistfrfd", "nbmf=" + nbmf);

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.isRfgistfrfd(nbmf, dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.isRfgistfrfd(nbmf, dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid Intfgfr gftMBfbnCount()
        throws IOExdfption {
            if (loggfr.dfbugOn()) loggfr.dfbug("gftMBfbnCount", "");

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.gftMBfbnCount(dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.gftMBfbnCount(dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid Objfdt gftAttributf(ObjfdtNbmf nbmf,
                String bttributf)
                throws MBfbnExdfption,
                AttributfNotFoundExdfption,
                InstbndfNotFoundExdfption,
                RfflfdtionExdfption,
                IOExdfption {
            if (loggfr.dfbugOn()) loggfr.dfbug("gftAttributf",
                    "nbmf=" + nbmf + ", bttributf="
                    + bttributf);

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.gftAttributf(nbmf,
                        bttributf,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.gftAttributf(nbmf,
                        bttributf,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid AttributfList gftAttributfs(ObjfdtNbmf nbmf,
                String[] bttributfs)
                throws InstbndfNotFoundExdfption,
                RfflfdtionExdfption,
                IOExdfption {
            if (loggfr.dfbugOn()) loggfr.dfbug("gftAttributfs",
                    "nbmf=" + nbmf + ", bttributfs="
                    + strings(bttributfs));

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.gftAttributfs(nbmf,
                        bttributfs,
                        dflfgbtionSubjfdt);

            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.gftAttributfs(nbmf,
                        bttributfs,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }


        publid void sftAttributf(ObjfdtNbmf nbmf,
                Attributf bttributf)
                throws InstbndfNotFoundExdfption,
                AttributfNotFoundExdfption,
                InvblidAttributfVblufExdfption,
                MBfbnExdfption,
                RfflfdtionExdfption,
                IOExdfption {

            if (loggfr.dfbugOn()) loggfr.dfbug("sftAttributf",
                    "nbmf=" + nbmf + ", bttributf="
                    + bttributf);

            finbl MbrshbllfdObjfdt<Attributf> sAttributf =
                    nfw MbrshbllfdObjfdt<Attributf>(bttributf);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                donnfdtion.sftAttributf(nbmf, sAttributf, dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                donnfdtion.sftAttributf(nbmf, sAttributf, dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid AttributfList sftAttributfs(ObjfdtNbmf nbmf,
                AttributfList bttributfs)
                throws InstbndfNotFoundExdfption,
                RfflfdtionExdfption,
                IOExdfption {

            if (loggfr.dfbugOn()) loggfr.dfbug("sftAttributfs",
                    "nbmf=" + nbmf + ", bttributfs="
                    + bttributfs);

            finbl MbrshbllfdObjfdt<AttributfList> sAttributfs =
                    nfw MbrshbllfdObjfdt<AttributfList>(bttributfs);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.sftAttributfs(nbmf,
                        sAttributfs,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.sftAttributfs(nbmf,
                        sAttributfs,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }


        publid Objfdt invokf(ObjfdtNbmf nbmf,
                String opfrbtionNbmf,
                Objfdt pbrbms[],
                String signbturf[])
                throws InstbndfNotFoundExdfption,
                MBfbnExdfption,
                RfflfdtionExdfption,
                IOExdfption {

            if (loggfr.dfbugOn()) loggfr.dfbug("invokf",
                    "nbmf=" + nbmf
                    + ", opfrbtionNbmf=" + opfrbtionNbmf
                    + ", pbrbms=" + objfdts(pbrbms)
                    + ", signbturf=" + strings(signbturf));

            finbl MbrshbllfdObjfdt<Objfdt[]> sPbrbms =
                    nfw MbrshbllfdObjfdt<Objfdt[]>(pbrbms);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.invokf(nbmf,
                        opfrbtionNbmf,
                        sPbrbms,
                        signbturf,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.invokf(nbmf,
                        opfrbtionNbmf,
                        sPbrbms,
                        signbturf,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }


        publid String gftDffbultDombin()
        throws IOExdfption {
            if (loggfr.dfbugOn()) loggfr.dfbug("gftDffbultDombin", "");

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.gftDffbultDombin(dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.gftDffbultDombin(dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid String[] gftDombins() throws IOExdfption {
            if (loggfr.dfbugOn()) loggfr.dfbug("gftDombins", "");

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.gftDombins(dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.gftDombins(dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid MBfbnInfo gftMBfbnInfo(ObjfdtNbmf nbmf)
        throws InstbndfNotFoundExdfption,
                IntrospfdtionExdfption,
                RfflfdtionExdfption,
                IOExdfption {

            if (loggfr.dfbugOn()) loggfr.dfbug("gftMBfbnInfo", "nbmf=" + nbmf);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.gftMBfbnInfo(nbmf, dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.gftMBfbnInfo(nbmf, dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }


        publid boolfbn isInstbndfOf(ObjfdtNbmf nbmf,
                String dlbssNbmf)
                throws InstbndfNotFoundExdfption,
                IOExdfption {
            if (loggfr.dfbugOn())
                loggfr.dfbug("isInstbndfOf", "nbmf=" + nbmf +
                        ", dlbssNbmf=" + dlbssNbmf);

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                rfturn donnfdtion.isInstbndfOf(nbmf,
                        dlbssNbmf,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                rfturn donnfdtion.isInstbndfOf(nbmf,
                        dlbssNbmf,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid void bddNotifidbtionListfnfr(ObjfdtNbmf nbmf,
                ObjfdtNbmf listfnfr,
                NotifidbtionFiltfr filtfr,
                Objfdt hbndbbdk)
                throws InstbndfNotFoundExdfption,
                IOExdfption {

            if (loggfr.dfbugOn())
                loggfr.dfbug("bddNotifidbtionListfnfr" +
                        "(ObjfdtNbmf,ObjfdtNbmf,NotifidbtionFiltfr,Objfdt)",
                        "nbmf=" + nbmf + ", listfnfr=" + listfnfr
                        + ", filtfr=" + filtfr + ", hbndbbdk=" + hbndbbdk);

            finbl MbrshbllfdObjfdt<NotifidbtionFiltfr> sFiltfr =
                    nfw MbrshbllfdObjfdt<NotifidbtionFiltfr>(filtfr);
            finbl MbrshbllfdObjfdt<Objfdt> sHbndbbdk =
                    nfw MbrshbllfdObjfdt<Objfdt>(hbndbbdk);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                donnfdtion.bddNotifidbtionListfnfr(nbmf,
                        listfnfr,
                        sFiltfr,
                        sHbndbbdk,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                donnfdtion.bddNotifidbtionListfnfr(nbmf,
                        listfnfr,
                        sFiltfr,
                        sHbndbbdk,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid void rfmovfNotifidbtionListfnfr(ObjfdtNbmf nbmf,
                ObjfdtNbmf listfnfr)
                throws InstbndfNotFoundExdfption,
                ListfnfrNotFoundExdfption,
                IOExdfption {

            if (loggfr.dfbugOn()) loggfr.dfbug("rfmovfNotifidbtionListfnfr" +
                    "(ObjfdtNbmf,ObjfdtNbmf)",
                    "nbmf=" + nbmf
                    + ", listfnfr=" + listfnfr);

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                donnfdtion.rfmovfNotifidbtionListfnfr(nbmf,
                        listfnfr,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                donnfdtion.rfmovfNotifidbtionListfnfr(nbmf,
                        listfnfr,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        publid void rfmovfNotifidbtionListfnfr(ObjfdtNbmf nbmf,
                ObjfdtNbmf listfnfr,
                NotifidbtionFiltfr filtfr,
                Objfdt hbndbbdk)
                throws InstbndfNotFoundExdfption,
                ListfnfrNotFoundExdfption,
                IOExdfption {
            if (loggfr.dfbugOn())
                loggfr.dfbug("rfmovfNotifidbtionListfnfr" +
                        "(ObjfdtNbmf,ObjfdtNbmf,NotifidbtionFiltfr,Objfdt)",
                        "nbmf=" + nbmf
                        + ", listfnfr=" + listfnfr
                        + ", filtfr=" + filtfr
                        + ", hbndbbdk=" + hbndbbdk);

            finbl MbrshbllfdObjfdt<NotifidbtionFiltfr> sFiltfr =
                    nfw MbrshbllfdObjfdt<NotifidbtionFiltfr>(filtfr);
            finbl MbrshbllfdObjfdt<Objfdt> sHbndbbdk =
                    nfw MbrshbllfdObjfdt<Objfdt>(hbndbbdk);
            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                donnfdtion.rfmovfNotifidbtionListfnfr(nbmf,
                        listfnfr,
                        sFiltfr,
                        sHbndbbdk,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                donnfdtion.rfmovfNotifidbtionListfnfr(nbmf,
                        listfnfr,
                        sFiltfr,
                        sHbndbbdk,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }
        }

        // Spfdifid Notifidbtion Hbndlf ----------------------------------

        publid void bddNotifidbtionListfnfr(ObjfdtNbmf nbmf,
                NotifidbtionListfnfr listfnfr,
                NotifidbtionFiltfr filtfr,
                Objfdt hbndbbdk)
                throws InstbndfNotFoundExdfption,
                IOExdfption {

            finbl boolfbn dfbug = loggfr.dfbugOn();

            if (dfbug)
                loggfr.dfbug("bddNotifidbtionListfnfr" +
                        "(ObjfdtNbmf,NotifidbtionListfnfr,"+
                        "NotifidbtionFiltfr,Objfdt)",
                        "nbmf=" + nbmf
                        + ", listfnfr=" + listfnfr
                        + ", filtfr=" + filtfr
                        + ", hbndbbdk=" + hbndbbdk);

            finbl Intfgfr listfnfrID =
                    bddListfnfrWithSubjfdt(nbmf,
                    nfw MbrshbllfdObjfdt<NotifidbtionFiltfr>(filtfr),
                    dflfgbtionSubjfdt,truf);
            rmiNotifClifnt.bddNotifidbtionListfnfr(listfnfrID, nbmf, listfnfr,
                    filtfr, hbndbbdk,
                    dflfgbtionSubjfdt);
        }

        publid void rfmovfNotifidbtionListfnfr(ObjfdtNbmf nbmf,
                NotifidbtionListfnfr listfnfr)
                throws InstbndfNotFoundExdfption,
                ListfnfrNotFoundExdfption,
                IOExdfption {

            finbl boolfbn dfbug = loggfr.dfbugOn();

            if (dfbug) loggfr.dfbug("rfmovfNotifidbtionListfnfr"+
                    "(ObjfdtNbmf,NotifidbtionListfnfr)",
                    "nbmf=" + nbmf
                    + ", listfnfr=" + listfnfr);

            finbl Intfgfr[] rft =
                    rmiNotifClifnt.rfmovfNotifidbtionListfnfr(nbmf, listfnfr);

            if (dfbug) loggfr.dfbug("rfmovfNotifidbtionListfnfr",
                    "listfnfrIDs=" + objfdts(rft));

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();

            try {
                donnfdtion.rfmovfNotifidbtionListfnfrs(nbmf,
                        rft,
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                donnfdtion.rfmovfNotifidbtionListfnfrs(nbmf,
                        rft,
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }

        }

        publid void rfmovfNotifidbtionListfnfr(ObjfdtNbmf nbmf,
                NotifidbtionListfnfr listfnfr,
                NotifidbtionFiltfr filtfr,
                Objfdt hbndbbdk)
                throws InstbndfNotFoundExdfption,
                ListfnfrNotFoundExdfption,
                IOExdfption {
            finbl boolfbn dfbug = loggfr.dfbugOn();

            if (dfbug)
                loggfr.dfbug("rfmovfNotifidbtionListfnfr"+
                        "(ObjfdtNbmf,NotifidbtionListfnfr,"+
                        "NotifidbtionFiltfr,Objfdt)",
                        "nbmf=" + nbmf
                        + ", listfnfr=" + listfnfr
                        + ", filtfr=" + filtfr
                        + ", hbndbbdk=" + hbndbbdk);

            finbl Intfgfr rft =
                    rmiNotifClifnt.rfmovfNotifidbtionListfnfr(nbmf, listfnfr,
                    filtfr, hbndbbdk);

            if (dfbug) loggfr.dfbug("rfmovfNotifidbtionListfnfr",
                    "listfnfrID=" + rft);

            finbl ClbssLobdfr old = pushDffbultClbssLobdfr();
            try {
                donnfdtion.rfmovfNotifidbtionListfnfrs(nbmf,
                        nfw Intfgfr[] {rft},
                        dflfgbtionSubjfdt);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                donnfdtion.rfmovfNotifidbtionListfnfrs(nbmf,
                        nfw Intfgfr[] {rft},
                        dflfgbtionSubjfdt);
            } finblly {
                popDffbultClbssLobdfr(old);
            }

        }
    }

    //--------------------------------------------------------------------
    privbtf dlbss RMINotifClifnt fxtfnds ClifntNotifForwbrdfr {
        publid RMINotifClifnt(ClbssLobdfr dl, Mbp<String, ?> fnv) {
            supfr(dl, fnv);
        }

        protfdtfd NotifidbtionRfsult fftdhNotifs(long dlifntSfqufndfNumbfr,
                int mbxNotifidbtions,
                long timfout)
                throws IOExdfption, ClbssNotFoundExdfption {
            IOExdfption org;

            whilf (truf) { // usfd for b suddfssful rf-donnfdtion
                try {
                    rfturn donnfdtion.fftdhNotifidbtions(dlifntSfqufndfNumbfr,
                            mbxNotifidbtions,
                            timfout);
                } dbtdh (IOExdfption iof) {
                    org = iof;

                    // inform of IOExdfption
                    try {
                        dommunidbtorAdmin.gotIOExdfption(iof);

                        // Thf donnfdtion should bf rf-fstbblishfd.
                        dontinuf;
                    } dbtdh (IOExdfption ff) {
                        // No morf fftdh, thf Exdfption will bf rf-thrown.
                        brfbk;
                    } // nfvfr rfbdhfd
                } // nfvfr rfbdhfd
            }

            // spfdiblly trfbting for bn UnmbrshblExdfption
            if (org instbndfof UnmbrshblExdfption) {
                UnmbrshblExdfption umf = (UnmbrshblExdfption)org;

                if (umf.dftbil instbndfof ClbssNotFoundExdfption)
                    throw (ClbssNotFoundExdfption) umf.dftbil;

                /* In Sun's RMI implfmfntbtion, if b mfthod rfturn
                   dontbins bn unsfriblizbblf objfdt, thfn wf gft
                   UnmbrshblExdfption wrbpping WritfAbortfdExdfption
                   wrbpping NotSfriblizbblfExdfption.  In thbt dbsf wf
                   fxtrbdt thf NotSfriblizbblfExdfption so thbt our
                   dbllfr dbn rfblizf it should try to skip pbst thf
                   notifidbtion thbt prfsumbbly dbusfd it.  It's not
                   dfrtbin thbt fvfry othfr RMI implfmfntbtion will
                   gfnfrbtf this fxbdt fxdfption sfqufndf.  If not, wf
                   will not dftfdt thbt thf problfm is duf to bn
                   unsfriblizbblf objfdt, bnd wf will stop trying to
                   rfdfivf notifidbtions from thf sfrvfr.  It's not
                   dlfbr wf dbn do mudh bfttfr.  */
                if (umf.dftbil instbndfof WritfAbortfdExdfption) {
                    WritfAbortfdExdfption wbf =
                            (WritfAbortfdExdfption) umf.dftbil;
                    if (wbf.dftbil instbndfof IOExdfption)
                        throw (IOExdfption) wbf.dftbil;
                }
            } flsf if (org instbndfof MbrshblExdfption) {
                // IIOP will throw MbrshblExdfption wrbpping b NotSfriblizbblfExdfption
                // whfn b sfrvfr fbils to sfriblizf b rfsponsf.
                MbrshblExdfption mf = (MbrshblExdfption)org;
                if (mf.dftbil instbndfof NotSfriblizbblfExdfption) {
                    throw (NotSfriblizbblfExdfption)mf.dftbil;
                }
            }

            // Not sfriblizbtion problfm, simply rf-throw thf orginbl fxdfption
            throw org;
        }

        protfdtfd Intfgfr bddListfnfrForMBfbnRfmovfdNotif()
        throws IOExdfption, InstbndfNotFoundExdfption {
            NotifidbtionFiltfrSupport dlifntFiltfr =
                    nfw NotifidbtionFiltfrSupport();
            dlifntFiltfr.fnbblfTypf(
                    MBfbnSfrvfrNotifidbtion.UNREGISTRATION_NOTIFICATION);
            MbrshbllfdObjfdt<NotifidbtionFiltfr> sFiltfr =
                nfw MbrshbllfdObjfdt<NotifidbtionFiltfr>(dlifntFiltfr);

            Intfgfr[] listfnfrIDs;
            finbl ObjfdtNbmf[] nbmfs =
                nfw ObjfdtNbmf[] {MBfbnSfrvfrDflfgbtf.DELEGATE_NAME};
            finbl MbrshbllfdObjfdt<NotifidbtionFiltfr>[] filtfrs =
                Util.dbst(nfw MbrshbllfdObjfdt<?>[] {sFiltfr});
            finbl Subjfdt[] subjfdts = nfw Subjfdt[] {null};
            try {
                listfnfrIDs =
                        donnfdtion.bddNotifidbtionListfnfrs(nbmfs,
                        filtfrs,
                        subjfdts);

            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                listfnfrIDs =
                        donnfdtion.bddNotifidbtionListfnfrs(nbmfs,
                        filtfrs,
                        subjfdts);
            }
            rfturn listfnfrIDs[0];
        }

        protfdtfd void rfmovfListfnfrForMBfbnRfmovfdNotif(Intfgfr id)
        throws IOExdfption, InstbndfNotFoundExdfption,
                ListfnfrNotFoundExdfption {
            try {
                donnfdtion.rfmovfNotifidbtionListfnfrs(
                        MBfbnSfrvfrDflfgbtf.DELEGATE_NAME,
                        nfw Intfgfr[] {id},
                        null);
            } dbtdh (IOExdfption iof) {
                dommunidbtorAdmin.gotIOExdfption(iof);

                donnfdtion.rfmovfNotifidbtionListfnfrs(
                        MBfbnSfrvfrDflfgbtf.DELEGATE_NAME,
                        nfw Intfgfr[] {id},
                        null);
            }

        }

        protfdtfd void lostNotifs(String mfssbgf, long numbfr) {
            finbl String notifTypf = JMXConnfdtionNotifidbtion.NOTIFS_LOST;

            finbl JMXConnfdtionNotifidbtion n =
                nfw JMXConnfdtionNotifidbtion(notifTypf,
                                              RMIConnfdtor.this,
                                              donnfdtionId,
                                              dlifntNotifCountfr++,
                                              mfssbgf,
                                              Long.vblufOf(numbfr));
            sfndNotifidbtion(n);
        }
    }

    privbtf dlbss RMIClifntCommunidbtorAdmin fxtfnds ClifntCommunidbtorAdmin {
        publid RMIClifntCommunidbtorAdmin(long pfriod) {
            supfr(pfriod);
        }

        @Ovfrridf
        publid void gotIOExdfption(IOExdfption iof) throws IOExdfption {
            if (iof instbndfof NoSudhObjfdtExdfption) {
                // nffd to rfstbrt
                supfr.gotIOExdfption(iof);

                rfturn;
            }

            // dhfdk if thf donnfdtion is brokfn
            try {
                donnfdtion.gftDffbultDombin(null);
            } dbtdh (IOExdfption iofxd) {
                boolfbn toClosf = fblsf;

                syndhronizfd(this) {
                    if (!tfrminbtfd) {
                        tfrminbtfd = truf;

                        toClosf = truf;
                    }
                }

                if (toClosf) {
                    // wf should dlosf thf donnfdtion,
                    // but sfnd b fbilfd notif bt first
                    finbl Notifidbtion fbilfdNotif =
                            nfw JMXConnfdtionNotifidbtion(
                            JMXConnfdtionNotifidbtion.FAILED,
                            this,
                            donnfdtionId,
                            dlifntNotifSfqNo++,
                            "Fbilfd to dommunidbtf with thf sfrvfr: "+iof.toString(),
                            iof);

                    sfndNotifidbtion(fbilfdNotif);

                    try {
                        dlosf(truf);
                    } dbtdh (Exdfption f) {
                        // OK.
                        // Wf brf dlosing
                    }
                }
            }

            // forwbrd thf fxdfption
            if (iof instbndfof SfrvfrExdfption) {
                /* Nffd to unwrbp thf fxdfption.
                   Somf usfr-thrown fxdfption bt sfrvfr sidf will bf wrbppfd by
                   rmi into b SfrvfrExdfption.
                   For fxbmplf, b RMIConnnfdtorSfrvfr will wrbp b
                   ClbssNotFoundExdfption into b UnmbrshblExdfption, bnd rmi
                   will throw b SfrvfrExdfption bt dlifnt sidf whidh wrbps this
                   UnmbrshblExdfption.
                   No fbilfd notif hfrf.
                 */
                Throwbblf tt = ((SfrvfrExdfption)iof).dftbil;

                if (tt instbndfof IOExdfption) {
                    throw (IOExdfption)tt;
                } flsf if (tt instbndfof RuntimfExdfption) {
                    throw (RuntimfExdfption)tt;
                }
            }

            throw iof;
        }

        publid void rfdonnfdtNotifidbtionListfnfrs(ClifntListfnfrInfo[] old) throws IOExdfption {
            finbl int lfn  = old.lfngth;
            int i;

            ClifntListfnfrInfo[] dlis = nfw ClifntListfnfrInfo[lfn];

            finbl Subjfdt[] subjfdts = nfw Subjfdt[lfn];
            finbl ObjfdtNbmf[] nbmfs = nfw ObjfdtNbmf[lfn];
            finbl NotifidbtionListfnfr[] listfnfrs = nfw NotifidbtionListfnfr[lfn];
            finbl NotifidbtionFiltfr[] filtfrs = nfw NotifidbtionFiltfr[lfn];
            finbl MbrshbllfdObjfdt<NotifidbtionFiltfr>[] mFiltfrs =
                    Util.dbst(nfw MbrshbllfdObjfdt<?>[lfn]);
            finbl Objfdt[] hbndbbdks = nfw Objfdt[lfn];

            for (i=0;i<lfn;i++) {
                subjfdts[i]  = old[i].gftDflfgbtionSubjfdt();
                nbmfs[i]     = old[i].gftObjfdtNbmf();
                listfnfrs[i] = old[i].gftListfnfr();
                filtfrs[i]   = old[i].gftNotifidbtionFiltfr();
                mFiltfrs[i]  = nfw MbrshbllfdObjfdt<NotifidbtionFiltfr>(filtfrs[i]);
                hbndbbdks[i] = old[i].gftHbndbbdk();
            }

            try {
                Intfgfr[] ids = bddListfnfrsWithSubjfdts(nbmfs,mFiltfrs,subjfdts,fblsf);

                for (i=0;i<lfn;i++) {
                    dlis[i] = nfw ClifntListfnfrInfo(ids[i],
                            nbmfs[i],
                            listfnfrs[i],
                            filtfrs[i],
                            hbndbbdks[i],
                            subjfdts[i]);
                }

                rmiNotifClifnt.postRfdonnfdtion(dlis);

                rfturn;
            } dbtdh (InstbndfNotFoundExdfption inff) {
                // OK, wf will do onf by onf
            }

            int j = 0;
            for (i=0;i<lfn;i++) {
                try {
                    Intfgfr id = bddListfnfrWithSubjfdt(nbmfs[i],
                            nfw MbrshbllfdObjfdt<NotifidbtionFiltfr>(filtfrs[i]),
                            subjfdts[i],
                            fblsf);

                    dlis[j++] = nfw ClifntListfnfrInfo(id,
                            nbmfs[i],
                            listfnfrs[i],
                            filtfrs[i],
                            hbndbbdks[i],
                            subjfdts[i]);
                } dbtdh (InstbndfNotFoundExdfption inff) {
                    loggfr.wbrning("rfdonnfdtNotifidbtionListfnfrs",
                            "Cbn't rfdonnfdt listfnfr for " +
                            nbmfs[i]);
                }
            }

            if (j != lfn) {
                ClifntListfnfrInfo[] tmp = dlis;
                dlis = nfw ClifntListfnfrInfo[j];
                Systfm.brrbydopy(tmp, 0, dlis, 0, j);
            }

            rmiNotifClifnt.postRfdonnfdtion(dlis);
        }

        protfdtfd void dhfdkConnfdtion() throws IOExdfption {
            if (loggfr.dfbugOn())
                loggfr.dfbug("RMIClifntCommunidbtorAdmin-dhfdkConnfdtion",
                        "Cblling thf mfthod gftDffbultDombin.");

            donnfdtion.gftDffbultDombin(null);
        }

        protfdtfd void doStbrt() throws IOExdfption {
            // Gft RMISfrvfr stub from dirfdtory or URL fndoding if nffdfd.
            RMISfrvfr stub;
            try {
                stub = (rmiSfrvfr!=null)?rmiSfrvfr:
                    findRMISfrvfr(jmxSfrvidfURL, fnv);
            } dbtdh (NbmingExdfption nf) {
                throw nfw IOExdfption("Fbilfd to gft b RMI stub: "+nf);
            }

            // Connfdt IIOP Stub if nffdfd.
            stub = donnfdtStub(stub,fnv);

            // Cblling nfwClifnt on thf RMISfrvfr stub.
            Objfdt drfdfntibls = fnv.gft(CREDENTIALS);
            donnfdtion = stub.nfwClifnt(drfdfntibls);

            // notif issufs
            finbl ClifntListfnfrInfo[] old = rmiNotifClifnt.prfRfdonnfdtion();

            rfdonnfdtNotifidbtionListfnfrs(old);

            donnfdtionId = gftConnfdtionId();

            Notifidbtion rfdonnfdtfdNotif =
                    nfw JMXConnfdtionNotifidbtion(JMXConnfdtionNotifidbtion.OPENED,
                    this,
                    donnfdtionId,
                    dlifntNotifSfqNo++,
                    "Rfdonnfdtfd to sfrvfr",
                    null);
            sfndNotifidbtion(rfdonnfdtfdNotif);

        }

        protfdtfd void doStop() {
            try {
                dlosf();
            } dbtdh (IOExdfption iof) {
                loggfr.wbrning("RMIClifntCommunidbtorAdmin-doStop",
                        "Fbilfd to dbll thf mfthod dlosf():" + iof);
                loggfr.dfbug("RMIClifntCommunidbtorAdmin-doStop",iof);
            }
        }
    }

    //--------------------------------------------------------------------
    // Privbtf stuff - Sfriblizbtion
    //--------------------------------------------------------------------
    /**
     * <p>In ordfr to bf usbblf, bn IIOP stub must bf donnfdtfd to bn ORB.
     * Thf stub is butombtidblly donnfdtfd to thf ORB if:
     * <ul>
     *     <li> It wbs rfturnfd by thf COS nbming</li>
     *     <li> Its sfrvfr dountfrpbrt hbs bffn rfgistfrfd in COS nbming
     *          through JNDI.</li>
     * </ul>
     * Othfrwisf, it is not donnfdtfd. A stub whidh is dfsfriblizfd
     * from Jini is not donnfdtfd. A stub whidh is obtbinfd from b
     * non rfgistfrfd RMIIIOPSfrvfrImpl is not b donnfdtfd.<br>
     * A stub whidh is not donnfdtfd dbn't bf sfriblizfd, bnd thus
     * dbn't bf rfgistfrfd in Jini. A stub whidh is not donnfdtfd dbn't
     * bf usfd to invokf mfthods on thf sfrvfr.
     * <p>
     * In ordfr to pbllibtf this, this mfthod will donnfdt thf
     * givfn stub if it is not yft donnfdtfd. If thf givfn
     * <vbr>RMISfrvfr</vbr> is not bn instbndf of
     * {@link jbvbx.rmi.CORBA.Stub jbvbx.rmi.CORBA.Stub}, thfn thf
     * mfthod do nothing bnd simply rfturns thbt stub. Othfrwisf,
     * this mfthod will bttfmpt to donnfdt thf stub to bn ORB bs
     * follows:
     * <ul>
     * <li>This mfthod looks in thf providfd <vbr>fnvironmfnt</vbr> for
     * thf "jbvb.nbming.dorbb.orb" propfrty. If it is found, thf
     * rfffrfndfd objfdt (bn {@link org.omg.CORBA.ORB ORB}) is usfd to
     * donnfdt thf stub. Othfrwisf, b nfw org.omg.CORBA.ORB is drfbtfd
     * by dblling {@link
     * org.omg.CORBA.ORB#init(String[], Propfrtifs)
     * org.omg.CORBA.ORB.init((String[])null,(Propfrtifs)null)}</li>
     * <li>Thf nfw drfbtfd ORB is kfpt in b stbtid
     * {@link WfbkRfffrfndf} bnd dbn bf rfusfd for donnfdting othfr
     * stubs. Howfvfr, no rfffrfndf is fvfr kfpt on thf ORB providfd
     * in thf <vbr>fnvironmfnt</vbr> mbp, if bny.</li>
     * </ul>
     * @pbrbm rmiSfrvfr A RMI Sfrvfr Stub.
     * @pbrbm fnvironmfnt An fnvironmfnt mbp, possibly dontbining bn ORB.
     * @rfturn thf givfn stub.
     * @fxdfption IllfgblArgumfntExdfption if thf
     *      <tt>jbvb.nbming.dorbb.orb</tt> propfrty is spfdififd bnd
     *      dofs not point to bn {@link org.omg.CORBA.ORB ORB}.
     * @fxdfption IOExdfption if thf donnfdtion to thf ORB fbilfd.
     **/
    stbtid RMISfrvfr donnfdtStub(RMISfrvfr rmiSfrvfr,
                                 Mbp<String, ?> fnvironmfnt)
        throws IOExdfption {
        if (IIOPHflpfr.isStub(rmiSfrvfr)) {
            try {
                IIOPHflpfr.gftOrb(rmiSfrvfr);
            } dbtdh (UnsupportfdOpfrbtionExdfption x) {
                // BAD_OPERATION
                IIOPHflpfr.donnfdt(rmiSfrvfr, rfsolvfOrb(fnvironmfnt));
            }
        }
        rfturn rmiSfrvfr;
    }

    /**
     * Gft thf ORB spfdififd by <vbr>fnvironmfnt</vbr>, or drfbtf b
     * nfw onf.
     * <p>This mfthod looks in thf providfd <vbr>fnvironmfnt</vbr> for
     * thf "jbvb.nbming.dorbb.orb" propfrty. If it is found, thf
     * rfffrfndfd objfdt (bn {@link org.omg.CORBA.ORB ORB}) is
     * rfturnfd. Othfrwisf, b nfw org.omg.CORBA.ORB is drfbtfd
     * by dblling {@link
     * org.omg.CORBA.ORB#init(String[], jbvb.util.Propfrtifs)
     * org.omg.CORBA.ORB.init((String[])null,(Propfrtifs)null)}
     * <p>Thf nfw drfbtfd ORB is kfpt in b stbtid
     * {@link WfbkRfffrfndf} bnd dbn bf rfusfd for donnfdting othfr
     * stubs. Howfvfr, no rfffrfndf is fvfr kfpt on thf ORB providfd
     * in thf <vbr>fnvironmfnt</vbr> mbp, if bny.
     * @pbrbm fnvironmfnt An fnvironmfnt mbp, possibly dontbining bn ORB.
     * @rfturn An ORB.
     * @fxdfption IllfgblArgumfntExdfption if thf
     *      <tt>jbvb.nbming.dorbb.orb</tt> propfrty is spfdififd bnd
     *      dofs not point to bn {@link org.omg.CORBA.ORB ORB}.
     * @fxdfption IOExdfption if thf ORB initiblizbtion fbilfd.
     **/
    stbtid Objfdt rfsolvfOrb(Mbp<String, ?> fnvironmfnt)
        throws IOExdfption {
        if (fnvironmfnt != null) {
            finbl Objfdt orb = fnvironmfnt.gft(EnvHflp.DEFAULT_ORB);
            if (orb != null && !(IIOPHflpfr.isOrb(orb)))
                throw nfw IllfgblArgumfntExdfption(EnvHflp.DEFAULT_ORB +
                        " must bf bn instbndf of org.omg.CORBA.ORB.");
            if (orb != null) rfturn orb;
        }
        finbl Objfdt orb =
                (RMIConnfdtor.orb==null)?null:RMIConnfdtor.orb.gft();
        if (orb != null) rfturn orb;

        finbl Objfdt nfwOrb =
                IIOPHflpfr.drfbtfOrb((String[])null, (Propfrtifs)null);
        RMIConnfdtor.orb = nfw WfbkRfffrfndf<Objfdt>(nfwOrb);
        rfturn nfwOrb;
    }

    /**
     * Rfbd RMIConnfdtor fiflds from bn {@link jbvb.io.ObjfdtInputStrfbm
     * ObjfdtInputStrfbm}.
     * Cblls <dodf>s.dffbultRfbdObjfdt()</dodf> bnd thfn initiblizfs
     * bll trbnsifnt vbribblfs thbt nffd initiblizing.
     * @pbrbm s Thf ObjfdtInputStrfbm to rfbd from.
     * @fxdfption InvblidObjfdtExdfption if nonf of <vbr>rmiSfrvfr</vbr> stub
     *    or <vbr>jmxSfrvidfURL</vbr> brf sft.
     * @sff #RMIConnfdtor(JMXSfrvidfURL,Mbp)
     * @sff #RMIConnfdtor(RMISfrvfr,Mbp)
     **/
    privbtf void rfbdObjfdt(jbvb.io.ObjfdtInputStrfbm s)
    throws IOExdfption, ClbssNotFoundExdfption  {
        s.dffbultRfbdObjfdt();

        if (rmiSfrvfr == null && jmxSfrvidfURL == null) throw nfw
                InvblidObjfdtExdfption("rmiSfrvfr bnd jmxSfrvidfURL both null");

        initTrbnsifnts();
    }

    /**
     * Writfs thf RMIConnfdtor fiflds to bn {@link jbvb.io.ObjfdtOutputStrfbm
     * ObjfdtOutputStrfbm}.
     * <p>Connfdts thf undfrlying RMISfrvfr stub to bn ORB, if nffdfd,
     * bfforf sfriblizing it. This is donf using thf fnvironmfnt
     * mbp thbt wbs providfd to thf donstrudtor, if bny, bnd bs dodumfntfd
     * in {@link jbvbx.mbnbgfmfnt.rfmotf.rmi}.</p>
     * <p>This mfthod thfn dblls <dodf>s.dffbultWritfObjfdt()</dodf>.
     * Usublly, <vbr>rmiSfrvfr</vbr> is null if this objfdt
     * wbs donstrudtfd with b JMXSfrvidfURL, bnd <vbr>jmxSfrvidfURL</vbr>
     * is null if this objfdt is donstrudtfd with b RMISfrvfr stub.
     * <p>Notf thbt thf fnvironmfnt Mbp is not sfriblizfd, sindf thf objfdts
     * it dontbins brf bssumfd to bf dontfxtubl bnd rflfvbnt only
     * with rfspfdt to thf lodbl fnvironmfnt (dlbss lobdfr, ORB, ftd...).</p>
     * <p>Aftfr bn RMIConnfdtor is dfsfriblizfd, it is bssumfd thbt thf
     * usfr will dbll {@link #donnfdt(Mbp)}, providing b nfw Mbp thbt
     * dbn dontbin vblufs whidh brf dontfxtublly rflfvbnt to thf nfw
     * lodbl fnvironmfnt.</p>
     * <p>Sindf donnfdtion to thf ORB is nffdfd prior to sfriblizing, bnd
     * sindf thf ORB to donnfdt to is onf of thosf dontfxtubl pbrbmftfrs,
     * it is not rfdommfndfd to rf-sfriblizf b just df-sfriblizfd objfdt -
     * bs thf df-sfriblizfd objfdt hbs no mbp. Thus, whfn bn RMIConnfdtor
     * objfdt is nffdfd for sfriblizbtion or trbnsmission to b rfmotf
     * bpplidbtion, it is rfdommfndfd to obtbin b nfw RMIConnfdtor stub
     * by dblling {@link RMIConnfdtorSfrvfr#toJMXConnfdtor(Mbp)}.</p>
     * @pbrbm s Thf ObjfdtOutputStrfbm to writf to.
     * @fxdfption InvblidObjfdtExdfption if nonf of <vbr>rmiSfrvfr</vbr> stub
     *    or <vbr>jmxSfrvidfURL</vbr> brf sft.
     * @sff #RMIConnfdtor(JMXSfrvidfURL,Mbp)
     * @sff #RMIConnfdtor(RMISfrvfr,Mbp)
     **/
    privbtf void writfObjfdt(jbvb.io.ObjfdtOutputStrfbm s)
    throws IOExdfption {
        if (rmiSfrvfr == null && jmxSfrvidfURL == null) throw nfw
                InvblidObjfdtExdfption("rmiSfrvfr bnd jmxSfrvidfURL both null.");
        donnfdtStub(this.rmiSfrvfr,fnv);
        s.dffbultWritfObjfdt();
    }

    // Initiblizbtion of trbnsifnt vbribblfs.
    privbtf void initTrbnsifnts() {
        rmbsdMbp = nfw WfbkHbshMbp<Subjfdt, WfbkRfffrfndf<MBfbnSfrvfrConnfdtion>>();
        donnfdtfd = fblsf;
        tfrminbtfd = fblsf;

        donnfdtionBrobddbstfr = nfw NotifidbtionBrobddbstfrSupport();
    }

    //--------------------------------------------------------------------
    // Privbtf stuff - Chfdk if stub dbn bf trustfd.
    //--------------------------------------------------------------------

    privbtf stbtid void dhfdkStub(Rfmotf stub,
            Clbss<?> stubClbss) {

        // Chfdk rfmotf stub is from thf fxpfdtfd dlbss.
        //
        if (stub.gftClbss() != stubClbss) {
            if (!Proxy.isProxyClbss(stub.gftClbss())) {
                throw nfw SfdurityExdfption(
                        "Expfdting b " + stubClbss.gftNbmf() + " stub!");
            } flsf {
                InvodbtionHbndlfr hbndlfr = Proxy.gftInvodbtionHbndlfr(stub);
                if (hbndlfr.gftClbss() != RfmotfObjfdtInvodbtionHbndlfr.dlbss)
                    throw nfw SfdurityExdfption(
                            "Expfdting b dynbmid proxy instbndf with b " +
                            RfmotfObjfdtInvodbtionHbndlfr.dlbss.gftNbmf() +
                            " invodbtion hbndlfr!");
                flsf
                    stub = (Rfmotf) hbndlfr;
            }
        }

        // Chfdk RfmotfRff in stub is from thf fxpfdtfd dlbss
        // "sun.rmi.sfrvfr.UnidbstRff2".
        //
        RfmotfRff rff = ((RfmotfObjfdt)stub).gftRff();
        if (rff.gftClbss() != UnidbstRff2.dlbss)
            throw nfw SfdurityExdfption(
                    "Expfdting b " + UnidbstRff2.dlbss.gftNbmf() +
                    " rfmotf rfffrfndf in stub!");

        // Chfdk RMIClifntSodkftFbdtory in stub is from thf fxpfdtfd dlbss
        // "jbvbx.rmi.ssl.SslRMIClifntSodkftFbdtory".
        //
        LivfRff livfRff = ((UnidbstRff2)rff).gftLivfRff();
        RMIClifntSodkftFbdtory dsf = livfRff.gftClifntSodkftFbdtory();
        if (dsf == null || dsf.gftClbss() != SslRMIClifntSodkftFbdtory.dlbss)
            throw nfw SfdurityExdfption(
                    "Expfdting b " + SslRMIClifntSodkftFbdtory.dlbss.gftNbmf() +
                    " RMI dlifnt sodkft fbdtory in stub!");
    }

    //--------------------------------------------------------------------
    // Privbtf stuff - RMISfrvfr drfbtion
    //--------------------------------------------------------------------

    privbtf RMISfrvfr findRMISfrvfr(JMXSfrvidfURL dirfdtoryURL,
            Mbp<String, Objfdt> fnvironmfnt)
            throws NbmingExdfption, IOExdfption {
        finbl boolfbn isIiop = RMIConnfdtorSfrvfr.isIiopURL(dirfdtoryURL,truf);
        if (isIiop) {
            // Mbkf surf jbvb.nbming.dorbb.orb is in thf Mbp.
            fnvironmfnt.put(EnvHflp.DEFAULT_ORB,rfsolvfOrb(fnvironmfnt));
        }

        String pbth = dirfdtoryURL.gftURLPbth();
        int fnd = pbth.indfxOf(';');
        if (fnd < 0) fnd = pbth.lfngth();
        if (pbth.stbrtsWith("/jndi/"))
            rfturn findRMISfrvfrJNDI(pbth.substring(6,fnd), fnvironmfnt, isIiop);
        flsf if (pbth.stbrtsWith("/stub/"))
            rfturn findRMISfrvfrJRMP(pbth.substring(6,fnd), fnvironmfnt, isIiop);
        flsf if (pbth.stbrtsWith("/ior/")) {
            if (!IIOPHflpfr.isAvbilbblf())
                throw nfw IOExdfption("iiop protodol not bvbilbblf");
            rfturn findRMISfrvfrIIOP(pbth.substring(5,fnd), fnvironmfnt, isIiop);
        } flsf {
            finbl String msg = "URL pbth must bfgin with /jndi/ or /stub/ " +
                    "or /ior/: " + pbth;
            throw nfw MblformfdURLExdfption(msg);
        }
    }

    /**
     * Lookup thf RMISfrvfr stub in b dirfdtory.
     * @pbrbm jndiURL A JNDI URL indidbting thf lodbtion of thf Stub
     *                (sff {@link jbvbx.mbnbgfmfnt.rfmotf.rmi}), f.g.:
     *   <ul><li><tt>rmi://rfgistry-host:port/rmi-stub-nbmf</tt></li>
     *       <li>or <tt>iiop://dosnbming-host:port/iiop-stub-nbmf</tt></li>
     *       <li>or <tt>ldbp://ldbp-host:port/jbvb-dontbinfr-dn</tt></li>
     *   </ul>
     * @pbrbm fnv thf fnvironmfnt Mbp pbssfd to thf donnfdtor.
     * @pbrbm isIiop truf if thf stub is fxpfdtfd to bf bn IIOP stub.
     * @rfturn Thf rftrifvfd RMISfrvfr stub.
     * @fxdfption NbmingExdfption if thf stub douldn't bf found.
     **/
    privbtf RMISfrvfr findRMISfrvfrJNDI(String jndiURL, Mbp<String, ?> fnv,
            boolfbn isIiop)
            throws NbmingExdfption {

        InitiblContfxt dtx = nfw InitiblContfxt(EnvHflp.mbpToHbshtbblf(fnv));

        Objfdt objrff = dtx.lookup(jndiURL);
        dtx.dlosf();

        if (isIiop)
            rfturn nbrrowIIOPSfrvfr(objrff);
        flsf
            rfturn nbrrowJRMPSfrvfr(objrff);
    }

    privbtf stbtid RMISfrvfr nbrrowJRMPSfrvfr(Objfdt objrff) {

        rfturn (RMISfrvfr) objrff;
    }

    privbtf stbtid RMISfrvfr nbrrowIIOPSfrvfr(Objfdt objrff) {
        try {
            rfturn IIOPHflpfr.nbrrow(objrff, RMISfrvfr.dlbss);
        } dbtdh (ClbssCbstExdfption f) {
            if (loggfr.trbdfOn())
                loggfr.trbdf("nbrrowIIOPSfrvfr","Fbilfd to nbrrow objrff=" +
                        objrff + ": " + f);
            if (loggfr.dfbugOn()) loggfr.dfbug("nbrrowIIOPSfrvfr",f);
            rfturn null;
        }
    }

    privbtf RMISfrvfr findRMISfrvfrIIOP(String ior, Mbp<String, ?> fnv, boolfbn isIiop) {
        // dould forbid "rmi:" URL hfrf -- but do wf nffd to?
        finbl Objfdt orb = fnv.gft(EnvHflp.DEFAULT_ORB);
        finbl Objfdt stub = IIOPHflpfr.stringToObjfdt(orb, ior);
        rfturn IIOPHflpfr.nbrrow(stub, RMISfrvfr.dlbss);
    }

    privbtf RMISfrvfr findRMISfrvfrJRMP(String bbsf64, Mbp<String, ?> fnv, boolfbn isIiop)
        throws IOExdfption {
        // dould forbid "iiop:" URL hfrf -- but do wf nffd to?
        finbl bytf[] sfriblizfd;
        try {
            sfriblizfd = bbsf64ToBytfArrby(bbsf64);
        } dbtdh (IllfgblArgumfntExdfption f) {
            throw nfw MblformfdURLExdfption("Bbd BASE64 fndoding: " +
                    f.gftMfssbgf());
        }
        finbl BytfArrbyInputStrfbm bin = nfw BytfArrbyInputStrfbm(sfriblizfd);

        finbl ClbssLobdfr lobdfr = EnvHflp.rfsolvfClifntClbssLobdfr(fnv);
        finbl ObjfdtInputStrfbm oin =
                (lobdfr == null) ?
                    nfw ObjfdtInputStrfbm(bin) :
                    nfw ObjfdtInputStrfbmWithLobdfr(bin, lobdfr);
        finbl Objfdt stub;
        try {
            stub = oin.rfbdObjfdt();
        } dbtdh (ClbssNotFoundExdfption f) {
            throw nfw MblformfdURLExdfption("Clbss not found: " + f);
        }
        rfturn (RMISfrvfr)stub;
    }

    privbtf stbtid finbl dlbss ObjfdtInputStrfbmWithLobdfr
            fxtfnds ObjfdtInputStrfbm {
        ObjfdtInputStrfbmWithLobdfr(InputStrfbm in, ClbssLobdfr dl)
        throws IOExdfption {
            supfr(in);
            this.lobdfr = dl;
        }

        @Ovfrridf
        protfdtfd Clbss<?> rfsolvfClbss(ObjfdtStrfbmClbss dlbssDfsd)
                throws IOExdfption, ClbssNotFoundExdfption {
            String nbmf = dlbssDfsd.gftNbmf();
            RfflfdtUtil.dhfdkPbdkbgfAddfss(nbmf);
            rfturn Clbss.forNbmf(nbmf, fblsf, lobdfr);
        }

        privbtf finbl ClbssLobdfr lobdfr;
    }

    privbtf MBfbnSfrvfrConnfdtion gftConnfdtionWithSubjfdt(Subjfdt dflfgbtionSubjfdt) {
        MBfbnSfrvfrConnfdtion donn = null;

        if (dflfgbtionSubjfdt == null) {
            if (nullSubjfdtConnRff == null
                    || (donn = nullSubjfdtConnRff.gft()) == null) {
                donn = nfw RfmotfMBfbnSfrvfrConnfdtion(null);
                nullSubjfdtConnRff = nfw WfbkRfffrfndf<MBfbnSfrvfrConnfdtion>(donn);
            }
        } flsf {
            WfbkRfffrfndf<MBfbnSfrvfrConnfdtion> wr = rmbsdMbp.gft(dflfgbtionSubjfdt);
            if (wr == null || (donn = wr.gft()) == null) {
                donn = nfw RfmotfMBfbnSfrvfrConnfdtion(dflfgbtionSubjfdt);
                rmbsdMbp.put(dflfgbtionSubjfdt, nfw WfbkRfffrfndf<MBfbnSfrvfrConnfdtion>(donn));
            }
        }
        rfturn donn;
    }

    /*
       Thf following sfdtion of dodf bvoids b dlbss lobding problfm
       with RMI.  Thf problfm is thbt bn RMI stub, whfn dfsfriblizing
       b rfmotf mfthod rfturn vbluf or fxdfption, will first of bll
       donsult thf first non-bootstrbp dlbss lobdfr it finds in thf
       dbll stbdk.  This dbn lfbd to bfhbvior thbt is not portbblf
       bftwffn implfmfntbtions of thf JMX Rfmotf API.  Notbbly, bn
       implfmfntbtion on J2SE 1.4 will find thf RMI stub's lobdfr on
       thf stbdk.  But in J2SE 5, this stub is lobdfd by thf
       bootstrbp lobdfr, so RMI will find thf lobdfr of thf usfr dodf
       thbt dbllfd bn MBfbnSfrvfrConnfdtion mfthod.

       To bvoid this problfm, wf tbkf bdvbntbgf of whbt thf RMI stub
       is doing intfrnblly.  Ebdh rfmotf dbll will fnd up dblling
       rff.invokf(...), whfrf rff is thf RfmotfRff pbrbmftfr givfn to
       thf RMI stub's donstrudtor.  It is within this dbll thbt thf
       dfsfriblizbtion will hbppfn.  So wf fbbridbtf our own RfmotfRff
       thbt dflfgbtfs fvfrything to thf "rfbl" onf but thbt is lobdfd
       by b dlbss lobdfr thbt knows no othfr dlbssfs.  Thf dlbss
       lobdfr NoCbllStbdkClbssLobdfr dofs this: thf RfmotfRff is bn
       instbndf of thf dlbss nbmfd by proxyRffClbssNbmf, whidh is
       fbbridbtfd by thf dlbss lobdfr using bytf dodf thbt is dffinfd
       by thf string bflow.

       Thf dbll stbdk whfn thf dfsfriblizbtion hbppfns is thus this:
       MBfbnSfrvfrConnfdtion.gftAttributf (or whbtfvfr)
       -> RMIConnfdtionImpl_Stub.gftAttributf
          -> ProxyRff.invokf(...gftAttributf...)
             -> UnidbstRff.invokf(...gftAttributf...)
                -> intfrnbl RMI stuff

       Hfrf UnidbstRff is thf RfmotfRff drfbtfd whfn thf stub wbs
       dfsfriblizfd (whidh is of somf RMI intfrnbl dlbss).  It bnd thf
       "intfrnbl RMI stuff" brf lobdfd by thf bootstrbp lobdfr, so brf
       trbnspbrfnt to thf stbdk sfbrdh.  Thf first non-bootstrbp
       lobdfr found is our ProxyRffLobdfr, bs rfquirfd.

       In b futurf vfrsion of this dodf bs intfgrbtfd into J2SE 5,
       this workbround dould bf rfplbdfd by dirfdt bddfss to thf
       intfrnbls of RMI.  For now, wf usf thf sbmf dodf bbsf for J2SE
       bnd for thf stbndblonf Rfffrfndf Implfmfntbtion.

       Thf bytf dodf bflow fndodfs thf following dlbss, dompilfd using
       J2SE 1.4.2 with thf -g:nonf option.

        pbdkbgf dom.sun.jmx.rfmotf.intfrnbl;

        import jbvb.lbng.rfflfdt.Mfthod;
        import jbvb.rmi.Rfmotf;
        import jbvb.rmi.sfrvfr.RfmotfRff;
        import dom.sun.jmx.rfmotf.intfrnbl.ProxyRff;

        publid dlbss PRff fxtfnds ProxyRff {
            publid PRff(RfmotfRff rff) {
                supfr(rff);
            }

            publid Objfdt invokf(Rfmotf obj, Mfthod mfthod,
                                 Objfdt[] pbrbms, long opnum)
                    throws Exdfption {
                rfturn rff.invokf(obj, mfthod, pbrbms, opnum);
            }
        }
     */

    privbtf stbtid finbl String rmiSfrvfrImplStubClbssNbmf =
        RMISfrvfr.dlbss.gftNbmf() + "Impl_Stub";
    privbtf stbtid finbl Clbss<?> rmiSfrvfrImplStubClbss;
    privbtf stbtid finbl String rmiConnfdtionImplStubClbssNbmf =
            RMIConnfdtion.dlbss.gftNbmf() + "Impl_Stub";
    privbtf stbtid finbl Clbss<?> rmiConnfdtionImplStubClbss;
    privbtf stbtid finbl String pRffClbssNbmf =
        "dom.sun.jmx.rfmotf.intfrnbl.PRff";
    privbtf stbtid finbl Construdtor<?> proxyRffConstrudtor;
    stbtid {
        finbl String pRffBytfCodfString =
                "\312\376\272\276\0\0\0.\0\27\12\0\5\0\15\11\0\4\0\16\13\0\17\0"+
                "\20\7\0\21\7\0\22\1\0\6<init>\1\0\36(Ljbvb/rmi/sfrvfr/RfmotfRff;"+
                ")V\1\0\4Codf\1\0\6invokf\1\0S(Ljbvb/rmi/Rfmotf;Ljbvb/lbng/rfflfd"+
                "t/Mfthod;[Ljbvb/lbng/Objfdt;J)Ljbvb/lbng/Objfdt;\1\0\12Exdfption"+
                "s\7\0\23\14\0\6\0\7\14\0\24\0\25\7\0\26\14\0\11\0\12\1\0\40dom/"+
                "sun/jmx/rfmotf/intfrnbl/PRff\1\0$dom/sun/jmx/rfmotf/intfrnbl/Pr"+
                "oxyRff\1\0\23jbvb/lbng/Exdfption\1\0\3rff\1\0\33Ljbvb/rmi/sfrvf"+
                "r/RfmotfRff;\1\0\31jbvb/rmi/sfrvfr/RfmotfRff\0!\0\4\0\5\0\0\0\0"+
                "\0\2\0\1\0\6\0\7\0\1\0\10\0\0\0\22\0\2\0\2\0\0\0\6*+\267\0\1\261"+
                "\0\0\0\0\0\1\0\11\0\12\0\2\0\10\0\0\0\33\0\6\0\6\0\0\0\17*\264\0"+
                "\2+,-\26\4\271\0\3\6\0\260\0\0\0\0\0\13\0\0\0\4\0\1\0\14\0\0";
        finbl bytf[] pRffBytfCodf =
                NoCbllStbdkClbssLobdfr.stringToBytfs(pRffBytfCodfString);
        PrivilfgfdExdfptionAdtion<Construdtor<?>> bdtion =
                nfw PrivilfgfdExdfptionAdtion<Construdtor<?>>() {
            publid Construdtor<?> run() throws Exdfption {
                Clbss<RMIConnfdtor> thisClbss = RMIConnfdtor.dlbss;
                ClbssLobdfr thisLobdfr = thisClbss.gftClbssLobdfr();
                ProtfdtionDombin thisProtfdtionDombin =
                        thisClbss.gftProtfdtionDombin();
                String[] othfrClbssNbmfs = {ProxyRff.dlbss.gftNbmf()};
                ClbssLobdfr dl =
                        nfw NoCbllStbdkClbssLobdfr(pRffClbssNbmf,
                        pRffBytfCodf,
                        othfrClbssNbmfs,
                        thisLobdfr,
                        thisProtfdtionDombin);
                Clbss<?> d = dl.lobdClbss(pRffClbssNbmf);
                rfturn d.gftConstrudtor(RfmotfRff.dlbss);
            }
        };

        Clbss<?> sfrvfrStubClbss;
        try {
            sfrvfrStubClbss = Clbss.forNbmf(rmiSfrvfrImplStubClbssNbmf);
        } dbtdh (Exdfption f) {
            loggfr.frror("<dlinit>",
                    "Fbilfd to instbntibtf " +
                    rmiSfrvfrImplStubClbssNbmf + ": " + f);
            loggfr.dfbug("<dlinit>",f);
            sfrvfrStubClbss = null;
        }
        rmiSfrvfrImplStubClbss = sfrvfrStubClbss;

        Clbss<?> stubClbss;
        Construdtor<?> donstr;
        try {
            stubClbss = Clbss.forNbmf(rmiConnfdtionImplStubClbssNbmf);
            donstr = (Construdtor<?>) AddfssControllfr.doPrivilfgfd(bdtion);
        } dbtdh (Exdfption f) {
            loggfr.frror("<dlinit>",
                    "Fbilfd to initiblizf proxy rfffrfndf donstrudtor "+
                    "for " + rmiConnfdtionImplStubClbssNbmf + ": " + f);
            loggfr.dfbug("<dlinit>",f);
            stubClbss = null;
            donstr = null;
        }
        rmiConnfdtionImplStubClbss = stubClbss;
        proxyRffConstrudtor = donstr;
    }

    privbtf stbtid RMIConnfdtion shbdowJrmpStub(RfmotfObjfdt stub)
    throws InstbntibtionExdfption, IllfgblAddfssExdfption,
            InvodbtionTbrgftExdfption, ClbssNotFoundExdfption,
            NoSudhMfthodExdfption {
        RfmotfRff rff = stub.gftRff();
        RfmotfRff proxyRff = (RfmotfRff)
            proxyRffConstrudtor.nfwInstbndf(nfw Objfdt[] {rff});
        finbl Construdtor<?> rmiConnfdtionImplStubConstrudtor =
            rmiConnfdtionImplStubClbss.gftConstrudtor(RfmotfRff.dlbss);
        Objfdt[] brgs = {proxyRff};
        RMIConnfdtion proxyStub = (RMIConnfdtion)
        rmiConnfdtionImplStubConstrudtor.nfwInstbndf(brgs);
        rfturn proxyStub;
    }

    /*
       Thf following dodf pfrforms b similbr tridk for RMI/IIOP to thf
       onf dfsdribfd bbovf for RMI/JRMP.  Unlikf JRMP, though, wf
       dbn't fbsily insfrt bn objfdt bftwffn thf RMIConnfdtion stub
       bnd thf RMI/IIOP dfsfriblizbtion dodf, bs fxplbinfd bflow.

       A mfthod in bn RMI/IIOP stub dofs thf following.  It mbkfs bn
       org.omg.CORBA_2_3.portbblf.OutputStrfbm for fbdh rfqufst, bnd
       writfs thf pbrbmftfrs to it.  Thfn it dblls
       _invokf(OutputStrfbm) whidh it inhfrits from CORBA's
       ObjfdtImpl.  Thbt rfturns bn
       org.omg.CORBA_2_3.portbblf.InputStrfbm.  Thf rfturn vbluf is
       rfbd from this InputStrfbm.  So thf stbdk during
       dfsfriblizbtion looks likf this:

       MBfbnSfrvfrConnfdtion.gftAttributf (or whbtfvfr)
       -> _RMIConnfdtion_Stub.gftAttributf
          -> Util.rfbdAny (b CORBA mfthod)
             -> InputStrfbm.rfbd_bny
                -> intfrnbl CORBA stuff

       Whbt wf would hbvf *likfd* to hbvf donf would bf thf sbmf thing
       bs for RMI/JRMP.  Wf drfbtf b "ProxyDflfgbtf" thbt is bn
       org.omg.CORBA.portbblf.Dflfgbtf thbt simply forwbrds fvfry
       opfrbtion to thf rfbl originbl Dflfgbtf from thf RMIConnfdtion
       stub, fxdfpt thbt thf InputStrfbm rfturnfd by _invokf is
       wrbppfd by b "ProxyInputStrfbm" thbt is lobdfd by our
       NoCbllStbdkClbssLobdfr.

       Unfortunbtfly, this dofsn't work, bt lfbst with Sun's J2SE
       1.4.2, bfdbusf thf CORBA dodf is not dfsignfd to bllow you to
       dhbngf Dflfgbtfs brbitrbrily.  You gft b ClbssCbstExdfption
       from dodf thbt fxpfdts thf Dflfgbtf to implfmfnt bn intfrnbl
       intfrfbdf.

       So instfbd wf do thf following.  Wf drfbtf b subdlbss of thf
       stub thbt ovfrridfs thf _invokf mfthod so bs to wrbp thf
       rfturnfd InputStrfbm in b ProxyInputStrfbm.  Wf drfbtf b
       subdlbss of ProxyInputStrfbm using thf NoCbllStbdkClbssLobdfr
       bnd ovfrridf its rfbd_bny bnd rfbd_vbluf(Clbss) mfthods.
       (Thfsf brf thf only mfthods dbllfd during dfsfriblizbtion of
       MBfbnSfrvfrConnfdtion rfturn vblufs.)  Wf fxtrbdt thf Dflfgbtf
       from thf originbl stub bnd insfrt it into our subdlbss stub,
       bnd bwby wf go.  Thf stbtf of b stub donsists solfly of its
       Dflfgbtf.

       Wf blso nffd to dbtdh ApplidbtionExdfption, whidh will fndodf
       bny fxdfptions dfdlbrfd in thf throws dlbusf of thf dbllfd
       mfthod.  Its InputStrfbm nffds to bf wrbppfd in b
       ProxyInputStfbm too.

       Wf ovfrridf _rflfbsfRfply in thf stub subdlbss so thbt it
       rfplbdfs b ProxyInputStrfbm brgumfnt with thf originbl
       InputStrfbm.  This bvoids problfms if thf implfmfntbtion of
       _rflfbsfRfply fnds up dbsting this InputStrfbm to bn
       implfmfntbtion-spfdifid intfrfbdf (whidh in Sun's J2SE 5 it
       dofs).

       It is not stridtly nfdfssbry for thf stub subdlbss to bf lobdfd
       by b NoCbllStbdkClbssLobdfr, sindf thf dbll-stbdk sfbrdh stops
       bt thf ProxyInputStrfbm subdlbss.  Howfvfr, it is donvfnifnt
       for two rfbsons.  Onf is thbt it mfbns thbt thf
       ProxyInputStrfbm subdlbss dbn bf bddfssfd dirfdtly, without
       using rfflfdtion.  Thf othfr is thbt it bvoids build problfms,
       sindf usublly stubs brf drfbtfd bftfr othfr dlbssfs brf
       dompilfd, so wf dbn't bddfss thfm from this dlbss without,
       bgbin, using rfflfdtion.

       Thf strings bflow fndodf thf following two Jbvb dlbssfs,
       dompilfd using jbvbd -g:nonf.

        pbdkbgf dom.sun.jmx.rfmotf.protodol.iiop;

        import org.omg.stub.jbvbx.mbnbgfmfnt.rfmotf.rmi._RMIConnfdtion_Stub;

        import org.omg.CORBA.portbblf.ApplidbtionExdfption;
        import org.omg.CORBA.portbblf.InputStrfbm;
        import org.omg.CORBA.portbblf.OutputStrfbm;
        import org.omg.CORBA.portbblf.RfmbrshblExdfption;

        publid dlbss ProxyStub fxtfnds _RMIConnfdtion_Stub {
            publid InputStrfbm _invokf(OutputStrfbm out)
                    throws ApplidbtionExdfption, RfmbrshblExdfption {
                try {
                    rfturn nfw PInputStrfbm(supfr._invokf(out));
                } dbtdh (ApplidbtionExdfption f) {
                    InputStrfbm pis = nfw PInputStrfbm(f.gftInputStrfbm());
                    throw nfw ApplidbtionExdfption(f.gftId(), pis);
                }
            }

            publid void _rflfbsfRfply(InputStrfbm in) {
                if (in != null)
                    in = ((PInputStrfbm)in).gftProxifdInputStrfbm();
                supfr._rflfbsfRfply(in);
            }
        }

        pbdkbgf dom.sun.jmx.rfmotf.protodol.iiop;

        publid dlbss PInputStrfbm fxtfnds ProxyInputStrfbm {
            publid PInputStrfbm(org.omg.CORBA.portbblf.InputStrfbm in) {
                supfr(in);
            }

            publid org.omg.CORBA.Any rfbd_bny() {
                rfturn in.rfbd_bny();
            }

            publid jbvb.io.Sfriblizbblf rfbd_vbluf(Clbss dlz) {
                rfturn nbrrow().rfbd_vbluf(dlz);
            }
        }


     */
    privbtf stbtid finbl String iiopConnfdtionStubClbssNbmf =
        "org.omg.stub.jbvbx.mbnbgfmfnt.rfmotf.rmi._RMIConnfdtion_Stub";
    privbtf stbtid finbl String proxyStubClbssNbmf =
        "dom.sun.jmx.rfmotf.protodol.iiop.ProxyStub";
    privbtf stbtid finbl String ProxyInputStrfbmClbssNbmf =
        "dom.sun.jmx.rfmotf.protodol.iiop.ProxyInputStrfbm";
    privbtf stbtid finbl String pInputStrfbmClbssNbmf =
        "dom.sun.jmx.rfmotf.protodol.iiop.PInputStrfbm";
    privbtf stbtid finbl Clbss<?> proxyStubClbss;
    stbtid {
        finbl String proxyStubBytfCodfString =
                "\312\376\272\276\0\0\0\63\0+\12\0\14\0\30\7\0\31\12\0\14\0\32\12"+
                "\0\2\0\33\7\0\34\12\0\5\0\35\12\0\5\0\36\12\0\5\0\37\12\0\2\0 "+
                "\12\0\14\0!\7\0\"\7\0#\1\0\6<init>\1\0\3()V\1\0\4Codf\1\0\7_in"+
                "vokf\1\0K(Lorg/omg/CORBA/portbblf/OutputStrfbm;)Lorg/omg/CORBA"+
                "/portbblf/InputStrfbm;\1\0\15StbdkMbpTbblf\7\0\34\1\0\12Exdfpt"+
                "ions\7\0$\1\0\15_rflfbsfRfply\1\0'(Lorg/omg/CORBA/portbblf/Inp"+
                "utStrfbm;)V\14\0\15\0\16\1\0-dom/sun/jmx/rfmotf/protodol/iiop/"+
                "PInputStrfbm\14\0\20\0\21\14\0\15\0\27\1\0+org/omg/CORBA/portb"+
                "blf/ApplidbtionExdfption\14\0%\0&\14\0'\0(\14\0\15\0)\14\0*\0&"+
                "\14\0\26\0\27\1\0*dom/sun/jmx/rfmotf/protodol/iiop/ProxyStub\1"+
                "\0<org/omg/stub/jbvbx/mbnbgfmfnt/rfmotf/rmi/_RMIConnfdtion_Stu"+
                "b\1\0)org/omg/CORBA/portbblf/RfmbrshblExdfption\1\0\16gftInput"+
                "Strfbm\1\0&()Lorg/omg/CORBA/portbblf/InputStrfbm;\1\0\5gftId\1"+
                "\0\24()Ljbvb/lbng/String;\1\09(Ljbvb/lbng/String;Lorg/omg/CORB"+
                "A/portbblf/InputStrfbm;)V\1\0\25gftProxifdInputStrfbm\0!\0\13\0"+
                "\14\0\0\0\0\0\3\0\1\0\15\0\16\0\1\0\17\0\0\0\21\0\1\0\1\0\0\0\5"+
                "*\267\0\1\261\0\0\0\0\0\1\0\20\0\21\0\2\0\17\0\0\0G\0\4\0\4\0\0"+
                "\0'\273\0\2Y*+\267\0\3\267\0\4\260M\273\0\2Y,\266\0\6\267\0\4N"+
                "\273\0\5Y,\266\0\7-\267\0\10\277\0\1\0\0\0\14\0\15\0\5\0\1\0\22"+
                "\0\0\0\6\0\1M\7\0\23\0\24\0\0\0\6\0\2\0\5\0\25\0\1\0\26\0\27\0"+
                "\1\0\17\0\0\0'\0\2\0\2\0\0\0\22+\306\0\13+\300\0\2\266\0\11L*+"+
                "\267\0\12\261\0\0\0\1\0\22\0\0\0\3\0\1\14\0\0";
        finbl String pInputStrfbmBytfCodfString =
                "\312\376\272\276\0\0\0\63\0\36\12\0\7\0\17\11\0\6\0\20\12\0\21"+
                "\0\22\12\0\6\0\23\12\0\24\0\25\7\0\26\7\0\27\1\0\6<init>\1\0'("+
                "Lorg/omg/CORBA/portbblf/InputStrfbm;)V\1\0\4Codf\1\0\10rfbd_bn"+
                "y\1\0\25()Lorg/omg/CORBA/Any;\1\0\12rfbd_vbluf\1\0)(Ljbvb/lbng"+
                "/Clbss;)Ljbvb/io/Sfriblizbblf;\14\0\10\0\11\14\0\30\0\31\7\0\32"+
                "\14\0\13\0\14\14\0\33\0\34\7\0\35\14\0\15\0\16\1\0-dom/sun/jmx"+
                "/rfmotf/protodol/iiop/PInputStrfbm\1\0\61dom/sun/jmx/rfmotf/pr"+
                "otodol/iiop/ProxyInputStrfbm\1\0\2in\1\0$Lorg/omg/CORBA/portbb"+
                "lf/InputStrfbm;\1\0\"org/omg/CORBA/portbblf/InputStrfbm\1\0\6n"+
                "brrow\1\0*()Lorg/omg/CORBA_2_3/portbblf/InputStrfbm;\1\0&org/o"+
                "mg/CORBA_2_3/portbblf/InputStrfbm\0!\0\6\0\7\0\0\0\0\0\3\0\1\0"+
                "\10\0\11\0\1\0\12\0\0\0\22\0\2\0\2\0\0\0\6*+\267\0\1\261\0\0\0"+
                "\0\0\1\0\13\0\14\0\1\0\12\0\0\0\24\0\1\0\1\0\0\0\10*\264\0\2\266"+
                "\0\3\260\0\0\0\0\0\1\0\15\0\16\0\1\0\12\0\0\0\25\0\2\0\2\0\0\0"+
                "\11*\266\0\4+\266\0\5\260\0\0\0\0\0\0";
        finbl bytf[] proxyStubBytfCodf =
                NoCbllStbdkClbssLobdfr.stringToBytfs(proxyStubBytfCodfString);
        finbl bytf[] pInputStrfbmBytfCodf =
                NoCbllStbdkClbssLobdfr.stringToBytfs(pInputStrfbmBytfCodfString);
        finbl String[] dlbssNbmfs={proxyStubClbssNbmf, pInputStrfbmClbssNbmf};
        finbl bytf[][] bytfCodfs = {proxyStubBytfCodf, pInputStrfbmBytfCodf};
        finbl String[] othfrClbssNbmfs = {
            iiopConnfdtionStubClbssNbmf,
            ProxyInputStrfbmClbssNbmf,
        };
        if (IIOPHflpfr.isAvbilbblf()) {
            PrivilfgfdExdfptionAdtion<Clbss<?>> bdtion =
                nfw PrivilfgfdExdfptionAdtion<Clbss<?>>() {
              publid Clbss<?> run() throws Exdfption {
                Clbss<RMIConnfdtor> thisClbss = RMIConnfdtor.dlbss;
                ClbssLobdfr thisLobdfr = thisClbss.gftClbssLobdfr();
                ProtfdtionDombin thisProtfdtionDombin =
                        thisClbss.gftProtfdtionDombin();
                ClbssLobdfr dl =
                        nfw NoCbllStbdkClbssLobdfr(dlbssNbmfs,
                        bytfCodfs,
                        othfrClbssNbmfs,
                        thisLobdfr,
                        thisProtfdtionDombin);
                rfturn dl.lobdClbss(proxyStubClbssNbmf);
              }
            };
            Clbss<?> stubClbss;
            try {
                stubClbss = AddfssControllfr.doPrivilfgfd(bdtion);
            } dbtdh (Exdfption f) {
                loggfr.frror("<dlinit>",
                        "Unfxpfdtfd fxdfption mbking shbdow IIOP stub dlbss: "+f);
                loggfr.dfbug("<dlinit>",f);
                stubClbss = null;
            }
            proxyStubClbss = stubClbss;
        } flsf {
            proxyStubClbss = null;
        }
    }

  privbtf stbtid RMIConnfdtion shbdowIiopStub(Objfdt stub)
    throws InstbntibtionExdfption, IllfgblAddfssExdfption {
        Objfdt proxyStub = null;
        try {
            proxyStub = AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdExdfptionAdtion<Objfdt>() {
                publid Objfdt run() throws Exdfption {
                    rfturn proxyStubClbss.nfwInstbndf();
                }
            });
        } dbtdh (PrivilfgfdAdtionExdfption f) {
            throw nfw IntfrnblError();
        }
        IIOPHflpfr.sftDflfgbtf(proxyStub, IIOPHflpfr.gftDflfgbtf(stub));
        rfturn (RMIConnfdtion) proxyStub;
    }
    privbtf stbtid RMIConnfdtion gftConnfdtion(RMISfrvfr sfrvfr,
            Objfdt drfdfntibls,
            boolfbn dhfdkStub)
            throws IOExdfption {
        RMIConnfdtion d = sfrvfr.nfwClifnt(drfdfntibls);
        if (dhfdkStub) dhfdkStub(d, rmiConnfdtionImplStubClbss);
        try {
            if (d.gftClbss() == rmiConnfdtionImplStubClbss)
                rfturn shbdowJrmpStub((RfmotfObjfdt) d);
            if (d.gftClbss().gftNbmf().fqubls(iiopConnfdtionStubClbssNbmf))
                rfturn shbdowIiopStub(d);
            loggfr.trbdf("gftConnfdtion",
                    "Did not wrbp " + d.gftClbss() + " to foil " +
                    "stbdk sfbrdh for dlbssfs: dlbss lobding sfmbntids " +
                    "mby bf indorrfdt");
        } dbtdh (Exdfption f) {
            loggfr.frror("gftConnfdtion",
                    "Could not wrbp " + d.gftClbss() + " to foil " +
                    "stbdk sfbrdh for dlbssfs: dlbss lobding sfmbntids " +
                    "mby bf indorrfdt: " + f);
            loggfr.dfbug("gftConnfdtion",f);
            // so just rfturn thf originbl stub, whidh will work for bll
            // but thf most fxotid dlbss lobding situbtions
        }
        rfturn d;
    }

    privbtf stbtid bytf[] bbsf64ToBytfArrby(String s) {
        int sLfn = s.lfngth();
        int numGroups = sLfn/4;
        if (4*numGroups != sLfn)
            throw nfw IllfgblArgumfntExdfption(
                    "String lfngth must bf b multiplf of four.");
        int missingBytfsInLbstGroup = 0;
        int numFullGroups = numGroups;
        if (sLfn != 0) {
            if (s.dhbrAt(sLfn-1) == '=') {
                missingBytfsInLbstGroup++;
                numFullGroups--;
            }
            if (s.dhbrAt(sLfn-2) == '=')
                missingBytfsInLbstGroup++;
        }
        bytf[] rfsult = nfw bytf[3*numGroups - missingBytfsInLbstGroup];

        // Trbnslbtf bll full groups from bbsf64 to bytf brrby flfmfnts
        int inCursor = 0, outCursor = 0;
        for (int i=0; i<numFullGroups; i++) {
            int dh0 = bbsf64toInt(s.dhbrAt(inCursor++));
            int dh1 = bbsf64toInt(s.dhbrAt(inCursor++));
            int dh2 = bbsf64toInt(s.dhbrAt(inCursor++));
            int dh3 = bbsf64toInt(s.dhbrAt(inCursor++));
            rfsult[outCursor++] = (bytf) ((dh0 << 2) | (dh1 >> 4));
            rfsult[outCursor++] = (bytf) ((dh1 << 4) | (dh2 >> 2));
            rfsult[outCursor++] = (bytf) ((dh2 << 6) | dh3);
        }

        // Trbnslbtf pbrtibl group, if prfsfnt
        if (missingBytfsInLbstGroup != 0) {
            int dh0 = bbsf64toInt(s.dhbrAt(inCursor++));
            int dh1 = bbsf64toInt(s.dhbrAt(inCursor++));
            rfsult[outCursor++] = (bytf) ((dh0 << 2) | (dh1 >> 4));

            if (missingBytfsInLbstGroup == 1) {
                int dh2 = bbsf64toInt(s.dhbrAt(inCursor++));
                rfsult[outCursor++] = (bytf) ((dh1 << 4) | (dh2 >> 2));
            }
        }
        // bssfrt inCursor == s.lfngth()-missingBytfsInLbstGroup;
        // bssfrt outCursor == rfsult.lfngth;
        rfturn rfsult;
    }

    /**
     * Trbnslbtfs thf spfdififd dhbrbdtfr, whidh is bssumfd to bf in thf
     * "Bbsf 64 Alphbbft" into its fquivblfnt 6-bit positivf intfgfr.
     *
     * @throws IllfgblArgumfntExdfption if
     *        d is not in thf Bbsf64 Alphbbft.
     */
    privbtf stbtid int bbsf64toInt(dhbr d) {
        int rfsult;

        if (d >= bbsf64ToInt.lfngth)
            rfsult = -1;
        flsf
            rfsult = bbsf64ToInt[d];

        if (rfsult < 0)
            throw nfw IllfgblArgumfntExdfption("Illfgbl dhbrbdtfr " + d);
        rfturn rfsult;
    }

    /**
     * This brrby is b lookup tbblf thbt trbnslbtfs unidodf dhbrbdtfrs
     * drbwn from thf "Bbsf64 Alphbbft" (bs spfdififd in Tbblf 1 of RFC 2045)
     * into thfir 6-bit positivf intfgfr fquivblfnts.  Chbrbdtfrs thbt
     * brf not in thf Bbsf64 blphbbft but fbll within thf bounds of thf
     * brrby brf trbnslbtfd to -1.
     */
    privbtf stbtid finbl bytf bbsf64ToInt[] = {
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54,
        55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4,
        5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
        24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34,
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
    };

    //--------------------------------------------------------------------
    // Privbtf stuff - Find / Sft dffbult dlbss lobdfr
    //--------------------------------------------------------------------
    privbtf ClbssLobdfr pushDffbultClbssLobdfr() {
        finbl Thrfbd t = Thrfbd.durrfntThrfbd();
        finbl ClbssLobdfr old =  t.gftContfxtClbssLobdfr();
        if (dffbultClbssLobdfr != null)
            AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
                publid Void run() {
                    t.sftContfxtClbssLobdfr(dffbultClbssLobdfr);
                    rfturn null;
                }
            });
            rfturn old;
    }

    privbtf void popDffbultClbssLobdfr(finbl ClbssLobdfr old) {
        AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Void>() {
            publid Void run() {
                Thrfbd.durrfntThrfbd().sftContfxtClbssLobdfr(old);
                rfturn null;
            }
        });
    }

    //--------------------------------------------------------------------
    // Privbtf vbribblfs
    //--------------------------------------------------------------------
    /**
     * @sfribl Thf RMISfrvfr stub of thf RMI JMX Connfdtor sfrvfr to
     * whidh this dlifnt donnfdtor is (or will bf) donnfdtfd. This
     * fifld dbn bf null whfn <vbr>jmxSfrvidfURL</vbr> is not
     * null. This indludfs thf dbsf whfrf <vbr>jmxSfrvidfURL</vbr>
     * dontbins b sfriblizfd RMISfrvfr stub. If both
     * <vbr>rmiSfrvfr</vbr> bnd <vbr>jmxSfrvidfURL</vbr> brf null thfn
     * sfriblizbtion will fbil.
     *
     * @sff #RMIConnfdtor(RMISfrvfr,Mbp)
     **/
    privbtf finbl RMISfrvfr rmiSfrvfr;

    /**
     * @sfribl Thf JMXSfrvidfURL of thf RMI JMX Connfdtor sfrvfr to
     * whidh this dlifnt donnfdtor will bf donnfdtfd. This fifld dbn
     * bf null whfn <vbr>rmiSfrvfr</vbr> is not null. If both
     * <vbr>rmiSfrvfr</vbr> bnd <vbr>jmxSfrvidfURL</vbr> brf null thfn
     * sfriblizbtion will fbil.
     *
     * @sff #RMIConnfdtor(JMXSfrvidfURL,Mbp)
     **/
    privbtf finbl JMXSfrvidfURL jmxSfrvidfURL;

    // ---------------------------------------------------------
    // WARNING - WARNING - WARNING - WARNING - WARNING - WARNING
    // ---------------------------------------------------------
    // Any trbnsifnt vbribblf whidh nffds to bf initiblizfd should
    // bf initiblizfd in thf mfthod initTrbnsifnt()
    privbtf trbnsifnt Mbp<String, Objfdt> fnv;
    privbtf trbnsifnt ClbssLobdfr dffbultClbssLobdfr;
    privbtf trbnsifnt RMIConnfdtion donnfdtion;
    privbtf trbnsifnt String donnfdtionId;

    privbtf trbnsifnt long dlifntNotifSfqNo = 0;

    privbtf trbnsifnt WfbkHbshMbp<Subjfdt, WfbkRfffrfndf<MBfbnSfrvfrConnfdtion>> rmbsdMbp;
    privbtf trbnsifnt WfbkRfffrfndf<MBfbnSfrvfrConnfdtion> nullSubjfdtConnRff = null;

    privbtf trbnsifnt RMINotifClifnt rmiNotifClifnt;
    // = nfw RMINotifClifnt(nfw Intfgfr(0));

    privbtf trbnsifnt long dlifntNotifCountfr = 0;

    privbtf trbnsifnt boolfbn donnfdtfd;
    // = fblsf;
    privbtf trbnsifnt boolfbn tfrminbtfd;
    // = fblsf;

    privbtf trbnsifnt Exdfption dlosfExdfption;

    privbtf trbnsifnt NotifidbtionBrobddbstfrSupport donnfdtionBrobddbstfr;

    privbtf trbnsifnt ClifntCommunidbtorAdmin dommunidbtorAdmin;

    /**
     * A stbtid WfbkRfffrfndf to bn {@link org.omg.CORBA.ORB ORB} to
     * donnfdt undonnfdtfd stubs.
     **/
    privbtf stbtid volbtilf WfbkRfffrfndf<Objfdt> orb = null;

    // TRACES & DEBUG
    //---------------
    privbtf stbtid String objfdts(finbl Objfdt[] objs) {
        if (objs == null)
            rfturn "null";
        flsf
            rfturn Arrbys.bsList(objs).toString();
    }

    privbtf stbtid String strings(finbl String[] strs) {
        rfturn objfdts(strs);
    }
}
