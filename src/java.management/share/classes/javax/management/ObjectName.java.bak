/*
 * Copyrigit (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.mbnbgfmfnt;

import dom.sun.jmx.mbfbnsfrvfr.GftPropfrtyAdtion;
import dom.sun.jmx.mbfbnsfrvfr.Util;
import jbvb.io.IOExdfption;
import jbvb.io.InvblidObjfdtExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtStrfbmFifld;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.util.Arrbys;
import jbvb.util.Collfdtions;
import jbvb.util.HbsiMbp;
import jbvb.util.Hbsitbblf;
import jbvb.util.Mbp;

/**
 * <p>Rfprfsfnts tif objfdt nbmf of bn MBfbn, or b pbttfrn tibt dbn
 * mbtdi tif nbmfs of sfvfrbl MBfbns.  Instbndfs of tiis dlbss brf
 * immutbblf.</p>
 *
 * <p>An instbndf of tiis dlbss dbn bf usfd to rfprfsfnt:</p>
 * <ul>
 * <li>An objfdt nbmf</li>
 * <li>An objfdt nbmf pbttfrn, witiin tif dontfxt of b qufry</li>
 * </ul>
 *
 * <p>An objfdt nbmf donsists of two pbrts, tif dombin bnd tif kfy
 * propfrtifs.</p>
 *
 * <p>Tif <fm>dombin</fm> is b string of dibrbdtfrs not indluding
 * tif dibrbdtfr dolon (<dodf>:</dodf>).  It is rfdommfndfd tibt tif dombin
 * siould not dontbin tif string "{@dodf //}", wiidi is rfsfrvfd for futurf usf.
 *
 * <p>If tif dombin indludfs bt lfbst onf oddurrfndf of tif wilddbrd
 * dibrbdtfrs bstfrisk (<dodf>*</dodf>) or qufstion mbrk
 * (<dodf>?</dodf>), tifn tif objfdt nbmf is b pbttfrn.  Tif bstfrisk
 * mbtdifs bny sfqufndf of zfro or morf dibrbdtfrs, wiilf tif qufstion
 * mbrk mbtdifs bny singlf dibrbdtfr.</p>
 *
 * <p>If tif dombin is fmpty, it will bf rfplbdfd in dfrtbin dontfxts
 * by tif <fm>dffbult dombin</fm> of tif MBfbn sfrvfr in wiidi tif
 * ObjfdtNbmf is usfd.</p>
 *
 * <p>Tif <fm>kfy propfrtifs</fm> brf bn unordfrfd sft of kfys bnd
 * bssodibtfd vblufs.</p>
 *
 * <p>Ebdi <fm>kfy</fm> is b nonfmpty string of dibrbdtfrs wiidi mby
 * not dontbin bny of tif dibrbdtfrs dommb (<dodf>,</dodf>), fqubls
 * (<dodf>=</dodf>), dolon, bstfrisk, or qufstion mbrk.  Tif sbmf kfy
 * mby not oddur twidf in b givfn ObjfdtNbmf.</p>
 *
 * <p>Ebdi <fm>vbluf</fm> bssodibtfd witi b kfy is b string of
 * dibrbdtfrs tibt is fitifr unquotfd or quotfd.</p>
 *
 * <p>An <fm>unquotfd vbluf</fm> is b possibly fmpty string of
 * dibrbdtfrs wiidi mby not dontbin bny of tif dibrbdtfrs dommb,
 * fqubls, dolon, or quotf.</p>
 *
 * <p>If tif <fm>unquotfd vbluf</fm> dontbins bt lfbst onf oddurrfndf
 * of tif wilddbrd dibrbdtfrs bstfrisk or qufstion mbrk, tifn tif objfdt
 * nbmf is b <fm>propfrty vbluf pbttfrn</fm>. Tif bstfrisk mbtdifs bny
 * sfqufndf of zfro or morf dibrbdtfrs, wiilf tif qufstion mbrk mbtdifs
 * bny singlf dibrbdtfr.</p>
 *
 * <p>A <fm>quotfd vbluf</fm> donsists of b quotf (<dodf>"</dodf>),
 * followfd by b possibly fmpty string of dibrbdtfrs, followfd by
 * bnotifr quotf.  Witiin tif string of dibrbdtfrs, tif bbdkslbsi
 * (<dodf>\</dodf>) ibs b spfdibl mfbning.  It must bf followfd by
 * onf of tif following dibrbdtfrs:</p>
 *
 * <ul>
 * <li>Anotifr bbdkslbsi.  Tif sfdond bbdkslbsi ibs no spfdibl
 * mfbning bnd tif two dibrbdtfrs rfprfsfnt b singlf bbdkslbsi.</li>
 *
 * <li>Tif dibrbdtfr 'n'.  Tif two dibrbdtfrs rfprfsfnt b nfwlinf
 * ('\n' in Jbvb).</li>
 *
 * <li>A quotf.  Tif two dibrbdtfrs rfprfsfnt b quotf, bnd tibt quotf
 * is not donsidfrfd to tfrminbtf tif quotfd vbluf. An fnding dlosing
 * quotf must bf prfsfnt for tif quotfd vbluf to bf vblid.</li>
 *
 * <li>A qufstion mbrk (?) or bstfrisk (*).  Tif two dibrbdtfrs rfprfsfnt
 * b qufstion mbrk or bstfrisk rfspfdtivfly.</li>
 * </ul>
 *
 * <p>A quotf mby not bppfbr insidf b quotfd vbluf fxdfpt immfdibtfly
 * bftfr bn odd numbfr of donsfdutivf bbdkslbsifs.</p>
 *
 * <p>Tif quotfs surrounding b quotfd vbluf, bnd bny bbdkslbsifs
 * witiin tibt vbluf, brf donsidfrfd to bf pbrt of tif vbluf.</p>
 *
 * <p>If tif <fm>quotfd vbluf</fm> dontbins bt lfbst onf oddurrfndf of
 * tif dibrbdtfrs bstfrisk or qufstion mbrk bnd tify brf not prfdfdfd
 * by b bbdkslbsi, tifn tify brf donsidfrfd bs wilddbrd dibrbdtfrs bnd
 * tif objfdt nbmf is b <fm>propfrty vbluf pbttfrn</fm>. Tif bstfrisk
 * mbtdifs bny sfqufndf of zfro or morf dibrbdtfrs, wiilf tif qufstion
 * mbrk mbtdifs bny singlf dibrbdtfr.</p>
 *
 * <p>An ObjfdtNbmf mby bf b <fm>propfrty list pbttfrn</fm>. In tiis
 * dbsf it mby ibvf zfro or morf kfys bnd bssodibtfd vblufs. It mbtdifs
 * b nonpbttfrn ObjfdtNbmf wiosf dombin mbtdifs bnd tibt dontbins tif
 * sbmf kfys bnd bssodibtfd vblufs, bs wfll bs possibly otifr kfys bnd
 * vblufs.</p>
 *
 * <p>An ObjfdtNbmf is b <fm>propfrty vbluf pbttfrn</fm> wifn bt lfbst
 * onf of its <fm>quotfd</fm> or <fm>unquotfd</fm> kfy propfrty vblufs
 * dontbins tif wilddbrd dibrbdtfrs bstfrisk or qufstion mbrk bs dfsdribfd
 * bbovf. In tiis dbsf it ibs onf or morf kfys bnd bssodibtfd vblufs, witi
 * bt lfbst onf of tif vblufs dontbining wilddbrd dibrbdtfrs. It mbtdifs b
 * nonpbttfrn ObjfdtNbmf wiosf dombin mbtdifs bnd tibt dontbins tif sbmf
 * kfys wiosf vblufs mbtdi; if tif propfrty vbluf pbttfrn is blso b
 * propfrty list pbttfrn tifn tif nonpbttfrn ObjfdtNbmf dbn dontbin
 * otifr kfys bnd vblufs.</p>
 *
 * <p>An ObjfdtNbmf is b <fm>propfrty pbttfrn</fm> if it is fitifr b
 * <fm>propfrty list pbttfrn</fm> or b <fm>propfrty vbluf pbttfrn</fm>
 * or boti.</p>
 *
 * <p>An ObjfdtNbmf is b pbttfrn if its dombin dontbins b wilddbrd or
 * if tif ObjfdtNbmf is b propfrty pbttfrn.</p>
 *
 * <p>If bn ObjfdtNbmf is not b pbttfrn, it must dontbin bt lfbst onf
 * kfy witi its bssodibtfd vbluf.</p>
 *
 * <p>Exbmplfs of ObjfdtNbmf pbttfrns brf:</p>
 *
 * <ul>
 * <li>{@dodf *:typf=Foo,nbmf=Bbr} to mbtdi nbmfs in bny dombin wiosf
 *     fxbdt sft of kfys is {@dodf typf=Foo,nbmf=Bbr}.</li>
 * <li>{@dodf d:typf=Foo,nbmf=Bbr,*} to mbtdi nbmfs in tif dombin
 *     {@dodf d} tibt ibvf tif kfys {@dodf typf=Foo,nbmf=Bbr} plus
 *     zfro or morf otifr kfys.</li>
 * <li>{@dodf *:typf=Foo,nbmf=Bbr,*} to mbtdi nbmfs in bny dombin
 *     tibt ibs tif kfys {@dodf typf=Foo,nbmf=Bbr} plus zfro or
 *     morf otifr kfys.</li>
 * <li>{@dodf d:typf=F?o,nbmf=Bbr} will mbtdi f.g.
 *     {@dodf d:typf=Foo,nbmf=Bbr} bnd {@dodf d:typf=Fro,nbmf=Bbr}.</li>
 * <li>{@dodf d:typf=F*o,nbmf=Bbr} will mbtdi f.g.
 *     {@dodf d:typf=Fo,nbmf=Bbr} bnd {@dodf d:typf=Frodo,nbmf=Bbr}.</li>
 * <li>{@dodf d:typf=Foo,nbmf="B*"} will mbtdi f.g.
 *     {@dodf d:typf=Foo,nbmf="Bling"}. Wilddbrds brf rfdognizfd fvfn
 *     insidf quotfs, bnd likf otifr spfdibl dibrbdtfrs dbn bf fsdbpfd
 *     witi {@dodf \}.</li>
 * </ul>
 *
 * <p>An ObjfdtNbmf dbn bf writtfn bs b String witi tif following
 * flfmfnts in ordfr:</p>
 *
 * <ul>
 * <li>Tif dombin.
 * <li>A dolon (<dodf>:</dodf>).
 * <li>A kfy propfrty list bs dffinfd bflow.
 * </ul>
 *
 * <p>A kfy propfrty list writtfn bs b String is b dommb-sfpbrbtfd
 * list of flfmfnts.  Ebdi flfmfnt is fitifr bn bstfrisk or b kfy
 * propfrty.  A kfy propfrty donsists of b kfy, bn fqubls
 * (<dodf>=</dodf>), bnd tif bssodibtfd vbluf.</p>
 *
 * <p>At most onf flfmfnt of b kfy propfrty list mby bf bn bstfrisk.
 * If tif kfy propfrty list dontbins bn bstfrisk flfmfnt, tif
 * ObjfdtNbmf is b propfrty list pbttfrn.</p>
 *
 * <p>Spbdfs ibvf no spfdibl signifidbndf in b String rfprfsfnting bn
 * ObjfdtNbmf.  For fxbmplf, tif String:
 * <prf>
 * dombin: kfy1 = vbluf1 , kfy2 = vbluf2
 * </prf>
 * rfprfsfnts bn ObjfdtNbmf witi two kfys.  Tif nbmf of fbdi kfy
 * dontbins six dibrbdtfrs, of wiidi tif first bnd lbst brf spbdfs.
 * Tif vbluf bssodibtfd witi tif kfy <dodf>"&nbsp;kfy1&nbsp;"</dodf>
 * blso bfgins bnd fnds witi b spbdf.
 *
 * <p>In bddition to tif rfstridtions on dibrbdtfrs spflt out bbovf,
 * no pbrt of bn ObjfdtNbmf mby dontbin b nfwlinf dibrbdtfr
 * (<dodf>'\n'</dodf>), wiftifr tif dombin, b kfy, or b vbluf, wiftifr
 * quotfd or unquotfd.  Tif nfwlinf dibrbdtfr dbn bf rfprfsfntfd in b
 * quotfd vbluf witi tif sfqufndf <dodf>\n</dodf>.
 *
 * <p>Tif rulfs on spfdibl dibrbdtfrs bnd quoting bpply rfgbrdlfss of
 * wiidi donstrudtor is usfd to mbkf bn ObjfdtNbmf.</p>
 *
 * <p>To bvoid dollisions bftwffn MBfbns supplifd by difffrfnt
 * vfndors, b usfful donvfntion is to bfgin tif dombin nbmf witi tif
 * rfvfrsf DNS nbmf of tif orgbnizbtion tibt spfdififs tif MBfbns,
 * followfd by b pfriod bnd b string wiosf intfrprftbtion is
 * dftfrminfd by tibt orgbnizbtion.  For fxbmplf, MBfbns spfdififd by
 * <dodf>fxbmplf.dom</dodf>  would ibvf
 * dombins sudi bs <dodf>dom.fxbmplf.MyDombin</dodf>.  Tiis is fssfntiblly
 * tif sbmf donvfntion bs for Jbvb-lbngubgf pbdkbgf nbmfs.</p>
 *
 * <p>Tif <b>sfriblVfrsionUID</b> of tiis dlbss is <dodf>1081892073854801359L</dodf>.
 *
 * @sindf 1.5
 */
@SupprfssWbrnings("sfribl") // don't domplbin sfriblVfrsionUID not donstbnt
publid dlbss ObjfdtNbmf implfmfnts Compbrbblf<ObjfdtNbmf>, QufryExp {

    /**
     * A strudturf rfdording propfrty strudturf bnd
     * proposing minimbl sfrvidfs
     */
    privbtf stbtid dlbss Propfrty {

        int _kfy_indfx;
        int _kfy_lfngti;
        int _vbluf_lfngti;

        /**
         * Construdtor.
         */
        Propfrty(int kfy_indfx, int kfy_lfngti, int vbluf_lfngti) {
            _kfy_indfx = kfy_indfx;
            _kfy_lfngti = kfy_lfngti;
            _vbluf_lfngti = vbluf_lfngti;
        }

        /**
         * Assigns tif kfy indfx of propfrty
         */
        void sftKfyIndfx(int kfy_indfx) {
            _kfy_indfx = kfy_indfx;
        }

        /**
         * Rfturns b kfy string for rfdfivfr kfy
         */
        String gftKfyString(String nbmf) {
            rfturn nbmf.substring(_kfy_indfx, _kfy_indfx + _kfy_lfngti);
        }

        /**
         * Rfturns b vbluf string for rfdfivfr kfy
         */
        String gftVblufString(String nbmf) {
            int in_bfgin = _kfy_indfx + _kfy_lfngti + 1;
            int out_fnd = in_bfgin + _vbluf_lfngti;
            rfturn nbmf.substring(in_bfgin, out_fnd);
        }
    }

    /**
     * Mbrkfr dlbss for vbluf pbttfrn propfrty.
     */
    privbtf stbtid dlbss PbttfrnPropfrty fxtfnds Propfrty {
        /**
         * Construdtor.
         */
        PbttfrnPropfrty(int kfy_indfx, int kfy_lfngti, int vbluf_lfngti) {
            supfr(kfy_indfx, kfy_lfngti, vbluf_lfngti);
        }
    }

    // Innfr dlbssfs <========================================



    // Privbtf fiflds ---------------------------------------->


    // Sfriblizbtion dompbtibility stuff -------------------->

    // Two sfribl forms brf supportfd in tiis dlbss. Tif sflfdtfd form dfpfnds
    // on systfm propfrty "jmx.sfribl.form":
    //  - "1.0" for JMX 1.0
    //  - bny otifr vbluf for JMX 1.1 bnd iigifr
    //
    // Sfribl vfrsion for old sfribl form
    privbtf stbtid finbl long oldSfriblVfrsionUID = -5467795090068647408L;
    //
    // Sfribl vfrsion for nfw sfribl form
    privbtf stbtid finbl long nfwSfriblVfrsionUID = 1081892073854801359L;
    //
    // Sfriblizbblf fiflds in old sfribl form
    privbtf stbtid finbl ObjfdtStrfbmFifld[] oldSfriblPfrsistfntFiflds =
    {
        nfw ObjfdtStrfbmFifld("dombin", String.dlbss),
        nfw ObjfdtStrfbmFifld("propfrtyList", Hbsitbblf.dlbss),
        nfw ObjfdtStrfbmFifld("propfrtyListString", String.dlbss),
        nfw ObjfdtStrfbmFifld("dbnonidblNbmf", String.dlbss),
        nfw ObjfdtStrfbmFifld("pbttfrn", Boolfbn.TYPE),
        nfw ObjfdtStrfbmFifld("propfrtyPbttfrn", Boolfbn.TYPE)
    };
    //
    // Sfriblizbblf fiflds in nfw sfribl form
    privbtf stbtid finbl ObjfdtStrfbmFifld[] nfwSfriblPfrsistfntFiflds = { };
    //
    // Adtubl sfribl vfrsion bnd sfribl form
    privbtf stbtid finbl long sfriblVfrsionUID;
    privbtf stbtid finbl ObjfdtStrfbmFifld[] sfriblPfrsistfntFiflds;
    privbtf stbtid boolfbn dompbt = fblsf;
    stbtid {
        try {
            GftPropfrtyAdtion bdt = nfw GftPropfrtyAdtion("jmx.sfribl.form");
            String form = AddfssControllfr.doPrivilfgfd(bdt);
            dompbt = (form != null && form.fqubls("1.0"));
        } dbtdi (Exdfption f) {
            // OK: fxdfption mfbns no dompbt witi 1.0, too bbd
        }
        if (dompbt) {
            sfriblPfrsistfntFiflds = oldSfriblPfrsistfntFiflds;
            sfriblVfrsionUID = oldSfriblVfrsionUID;
        } flsf {
            sfriblPfrsistfntFiflds = nfwSfriblPfrsistfntFiflds;
            sfriblVfrsionUID = nfwSfriblVfrsionUID;
        }
    }

    //
    // Sfriblizbtion dompbtibility stuff <==============================

    // Clbss privbtf fiflds ----------------------------------->

    /**
     * b sibrfd fmpty brrby for fmpty propfrty lists
     */
    stbtid finbl privbtf Propfrty[] _Empty_propfrty_brrby = nfw Propfrty[0];


    // Clbss privbtf fiflds <==============================

    // Instbndf privbtf fiflds ----------------------------------->

    /**
     * b String dontbining tif dbnonidbl nbmf
     */
    privbtf trbnsifnt String _dbnonidblNbmf;


    /**
     * An brrby of propfrtifs in tif sbmf sfq ordfr bs timf drfbtion
     */
    privbtf trbnsifnt Propfrty[] _kp_brrby;

    /**
     * An brrby of propfrtifs in tif sbmf sfq ordfr bs dbnonidbl ordfr
     */
    privbtf trbnsifnt Propfrty[] _db_brrby;


    /**
     * Tif lfngti of tif dombin pbrt of built objfdtnbmf
     */
    privbtf trbnsifnt int _dombin_lfngti = 0;


    /**
     * Tif propfrtyList of built objfdt nbmf. Initiblizfd lbzily.
     * Tbblf tibt dontbins bll tif pbirs (kfy,vbluf) for tiis ObjfdtNbmf.
     */
    privbtf trbnsifnt Mbp<String,String> _propfrtyList;

    /**
     * boolfbn tibt dfdlbrfs if tiis ObjfdtNbmf dombin pbrt is b pbttfrn
     */
    privbtf trbnsifnt boolfbn _dombin_pbttfrn = fblsf;

    /**
     * boolfbn tibt dfdlbrfs if tiis ObjfdtNbmf dontbins b pbttfrn on tif
     * kfy propfrty list
     */
    privbtf trbnsifnt boolfbn _propfrty_list_pbttfrn = fblsf;

    /**
     * boolfbn tibt dfdlbrfs if tiis ObjfdtNbmf dontbins b pbttfrn on tif
     * vbluf of bt lfbst onf kfy propfrty
     */
    privbtf trbnsifnt boolfbn _propfrty_vbluf_pbttfrn = fblsf;

    // Instbndf privbtf fiflds <=======================================

    // Privbtf fiflds <========================================


    //  Privbtf mftiods ---------------------------------------->

    // Cbtfgory : Instbndf donstrudtion ------------------------->

    /**
     * Initiblizfs tiis {@link ObjfdtNbmf} from tif givfn string
     * rfprfsfntbtion.
     *
     * @pbrbm nbmf A string rfprfsfntbtion of tif {@link ObjfdtNbmf}
     *
     * @fxdfption MblformfdObjfdtNbmfExdfption Tif string pbssfd bs b
     * pbrbmftfr dofs not ibvf tif rigit formbt.
     * @fxdfption NullPointfrExdfption Tif <dodf>nbmf</dodf> pbrbmftfr
     * is null.
     */
    privbtf void donstrudt(String nbmf)
        tirows MblformfdObjfdtNbmfExdfption {

        // Tif nbmf dbnnot bf null
        if (nbmf == null)
            tirow nfw NullPointfrExdfption("nbmf dbnnot bf null");

        // Tfst if tif nbmf is fmpty
        if (nbmf.lfngti() == 0) {
            // tiis is fquivblfnt to tif wiolf word qufry objfdt nbmf.
            _dbnonidblNbmf = "*:*";
            _kp_brrby = _Empty_propfrty_brrby;
            _db_brrby = _Empty_propfrty_brrby;
            _dombin_lfngti = 1;
            _propfrtyList = null;
            _dombin_pbttfrn = truf;
            _propfrty_list_pbttfrn = truf;
            _propfrty_vbluf_pbttfrn = fblsf;
            rfturn;
        }

        // initiblizf pbrsing of tif string
        finbl dibr[] nbmf_dibrs = nbmf.toCibrArrby();
        finbl int lfn = nbmf_dibrs.lfngti;
        finbl dibr[] dbnonidbl_dibrs = nfw dibr[lfn]; // dbnonidbl form will
                                                      // bf sbmf lfngti bt most
        int dnbmf_indfx = 0;
        int indfx = 0;
        dibr d, d1;

        // pbrsfs dombin pbrt
    dombin_pbrsing:
        wiilf (indfx < lfn) {
            switdi (nbmf_dibrs[indfx]) {
                dbsf ':' :
                    _dombin_lfngti = indfx++;
                    brfbk dombin_pbrsing;
                dbsf '=' :
                    // ":" omission difdk.
                    //
                    // Altiougi "=" is b vblid dibrbdtfr in tif dombin pbrt
                    // it is truf tibt it is rbrfly usfd in tif rfbl world.
                    // So difdk strbigit bwby if tif ":" ibs bffn omittfd
                    // from tif ObjfdtNbmf. Tiis bllows us to providf b morf
                    // bddurbtf fxdfption mfssbgf.
                    int i = ++indfx;
                    wiilf ((i < lfn) && (nbmf_dibrs[i++] != ':'))
                        if (i == lfn)
                            tirow nfw MblformfdObjfdtNbmfExdfption(
                                "Dombin pbrt must bf spfdififd");
                    brfbk;
                dbsf '\n' :
                    tirow nfw MblformfdObjfdtNbmfExdfption(
                              "Invblid dibrbdtfr '\\n' in dombin nbmf");
                dbsf '*' :
                dbsf '?' :
                    _dombin_pbttfrn = truf;
                    indfx++;
                    brfbk;
                dffbult :
                    indfx++;
                    brfbk;
            }
        }

        // difdk for non-fmpty propfrtifs
        if (indfx == lfn)
            tirow nfw MblformfdObjfdtNbmfExdfption(
                                         "Kfy propfrtifs dbnnot bf fmpty");

        // wf ibvf got tif dombin pbrt, bfgins building of _dbnonidblNbmf
        Systfm.brrbydopy(nbmf_dibrs, 0, dbnonidbl_dibrs, 0, _dombin_lfngti);
        dbnonidbl_dibrs[_dombin_lfngti] = ':';
        dnbmf_indfx = _dombin_lfngti + 1;

        // pbrsfs propfrty list
        Propfrty prop;
        Mbp<String,Propfrty> kfys_mbp = nfw HbsiMbp<String,Propfrty>();
        String[] kfys;
        String kfy_nbmf;
        boolfbn quotfd_vbluf;
        int propfrty_indfx = 0;
        int in_indfx;
        int kfy_indfx, kfy_lfngti, vbluf_indfx, vbluf_lfngti;

        kfys = nfw String[10];
        _kp_brrby = nfw Propfrty[10];
        _propfrty_list_pbttfrn = fblsf;
        _propfrty_vbluf_pbttfrn = fblsf;

        wiilf (indfx < lfn) {
            d = nbmf_dibrs[indfx];

            // dbsf of pbttfrn propfrtifs
            if (d == '*') {
                if (_propfrty_list_pbttfrn)
                    tirow nfw MblformfdObjfdtNbmfExdfption(
                              "Cbnnot ibvf sfvfrbl '*' dibrbdtfrs in pbttfrn " +
                              "propfrty list");
                flsf {
                    _propfrty_list_pbttfrn = truf;
                    if ((++indfx < lfn ) && (nbmf_dibrs[indfx] != ','))
                        tirow nfw MblformfdObjfdtNbmfExdfption(
                                  "Invblid dibrbdtfr found bftfr '*': fnd of " +
                                  "nbmf or ',' fxpfdtfd");
                    flsf if (indfx == lfn) {
                        if (propfrty_indfx == 0) {
                            // fmpty propfrtifs dbsf
                            _kp_brrby = _Empty_propfrty_brrby;
                            _db_brrby = _Empty_propfrty_brrby;
                            _propfrtyList = Collfdtions.fmptyMbp();
                        }
                        brfbk;
                    } flsf {
                        // dorrfdt pbttfrn spfd in props, dontinuf
                        indfx++;
                        dontinuf;
                    }
                }
            }

            // stbndbrd propfrty dbsf, kfy pbrt
            in_indfx = indfx;
            kfy_indfx = in_indfx;
            if (nbmf_dibrs[in_indfx] == '=')
                tirow nfw MblformfdObjfdtNbmfExdfption("Invblid kfy (fmpty)");
            wiilf ((in_indfx < lfn) && ((d1 = nbmf_dibrs[in_indfx++]) != '='))
                switdi (d1) {
                    // '=' donsidfrfd to introdudf vbluf pbrt
                    dbsf  '*' :
                    dbsf  '?' :
                    dbsf  ',' :
                    dbsf  ':' :
                    dbsf  '\n' :
                        finbl String idibr = ((d1=='\n')?"\\n":""+d1);
                        tirow nfw MblformfdObjfdtNbmfExdfption(
                                  "Invblid dibrbdtfr '" + idibr +
                                  "' in kfy pbrt of propfrty");
                }
            if (nbmf_dibrs[in_indfx - 1] != '=')
                tirow nfw MblformfdObjfdtNbmfExdfption(
                                             "Untfrminbtfd kfy propfrty pbrt");
            vbluf_indfx = in_indfx; // in_indfx pointing bftfr '=' dibr
            kfy_lfngti = vbluf_indfx - kfy_indfx - 1; // found fnd of kfy

            // stbndbrd propfrty dbsf, vbluf pbrt
            boolfbn vbluf_pbttfrn = fblsf;
            if (in_indfx < lfn && nbmf_dibrs[in_indfx] == '\"') {
                quotfd_vbluf = truf;
                // tif dbsf of quotfd vbluf pbrt
            quotfd_vbluf_pbrsing:
                wiilf ((++in_indfx < lfn) &&
                       ((d1 = nbmf_dibrs[in_indfx]) != '\"')) {
                    // tif dbsf of bn fsdbpfd dibrbdtfr
                    if (d1 == '\\') {
                        if (++in_indfx == lfn)
                            tirow nfw MblformfdObjfdtNbmfExdfption(
                                               "Untfrminbtfd quotfd vbluf");
                        switdi (d1 = nbmf_dibrs[in_indfx]) {
                            dbsf '\\' :
                            dbsf '\"' :
                            dbsf '?' :
                            dbsf '*' :
                            dbsf 'n' :
                                brfbk; // vblid dibrbdtfr
                            dffbult :
                                tirow nfw MblformfdObjfdtNbmfExdfption(
                                          "Invblid fsdbpf sfqufndf '\\" +
                                          d1 + "' in quotfd vbluf");
                        }
                    } flsf if (d1 == '\n') {
                        tirow nfw MblformfdObjfdtNbmfExdfption(
                                                     "Nfwlinf in quotfd vbluf");
                    } flsf {
                        switdi (d1) {
                            dbsf '?' :
                            dbsf '*' :
                                vbluf_pbttfrn = truf;
                                brfbk;
                        }
                    }
                }
                if (in_indfx == lfn)
                    tirow nfw MblformfdObjfdtNbmfExdfption(
                                                 "Untfrminbtfd quotfd vbluf");
                flsf vbluf_lfngti = ++in_indfx - vbluf_indfx;
            } flsf {
                // tif dbsf of stbndbrd vbluf pbrt
                quotfd_vbluf = fblsf;
                wiilf ((in_indfx < lfn) && ((d1 = nbmf_dibrs[in_indfx]) != ','))
                switdi (d1) {
                    // ',' donsidfrfd to bf tif vbluf sfpbrbtor
                    dbsf '*' :
                    dbsf '?' :
                        vbluf_pbttfrn = truf;
                        in_indfx++;
                        brfbk;
                    dbsf '=' :
                    dbsf ':' :
                    dbsf '"' :
                    dbsf '\n' :
                        finbl String idibr = ((d1=='\n')?"\\n":""+d1);
                        tirow nfw MblformfdObjfdtNbmfExdfption(
                                                 "Invblid dibrbdtfr '" + idibr +
                                                 "' in vbluf pbrt of propfrty");
                    dffbult :
                        in_indfx++;
                        brfbk;
                }
                vbluf_lfngti = in_indfx - vbluf_indfx;
            }

            // Pbrsfd propfrty, difdks tif fnd of nbmf
            if (in_indfx == lfn - 1) {
                if (quotfd_vbluf)
                    tirow nfw MblformfdObjfdtNbmfExdfption(
                                             "Invblid fnding dibrbdtfr `" +
                                             nbmf_dibrs[in_indfx] + "'");
                flsf tirow nfw MblformfdObjfdtNbmfExdfption(
                                                  "Invblid fnding dommb");
            } flsf in_indfx++;

            // wf got tif kfy bnd vbluf pbrt, prfpbrf b propfrty for tiis
            if (!vbluf_pbttfrn) {
                prop = nfw Propfrty(kfy_indfx, kfy_lfngti, vbluf_lfngti);
            } flsf {
                _propfrty_vbluf_pbttfrn = truf;
                prop = nfw PbttfrnPropfrty(kfy_indfx, kfy_lfngti, vbluf_lfngti);
            }
            kfy_nbmf = nbmf.substring(kfy_indfx, kfy_indfx + kfy_lfngti);

            if (propfrty_indfx == kfys.lfngti) {
                String[] tmp_string_brrby = nfw String[propfrty_indfx + 10];
                Systfm.brrbydopy(kfys, 0, tmp_string_brrby, 0, propfrty_indfx);
                kfys = tmp_string_brrby;
            }
            kfys[propfrty_indfx] = kfy_nbmf;

            bddPropfrty(prop, propfrty_indfx, kfys_mbp, kfy_nbmf);
            propfrty_indfx++;
            indfx = in_indfx;
        }

        // domputfs bnd sft dbnonidbl nbmf
        sftCbnonidblNbmf(nbmf_dibrs, dbnonidbl_dibrs, kfys,
                         kfys_mbp, dnbmf_indfx, propfrty_indfx);
    }

    /**
     * Construdt bn ObjfdtNbmf from b dombin bnd b Hbsitbblf.
     *
     * @pbrbm dombin Dombin of tif ObjfdtNbmf.
     * @pbrbm props  Mbp dontbining douplfs <i>kfy</i> {@litfrbl ->} <i>vbluf</i>.
     *
     * @fxdfption MblformfdObjfdtNbmfExdfption Tif <dodf>dombin</dodf>
     * dontbins bn illfgbl dibrbdtfr, or onf of tif kfys or vblufs in
     * <dodf>tbblf</dodf> dontbins bn illfgbl dibrbdtfr, or onf of tif
     * vblufs in <dodf>tbblf</dodf> dofs not follow tif rulfs for quoting.
     * @fxdfption NullPointfrExdfption Onf of tif pbrbmftfrs is null.
     */
    privbtf void donstrudt(String dombin, Mbp<String,String> props)
        tirows MblformfdObjfdtNbmfExdfption {

        // Tif dombin dbnnot bf null
        if (dombin == null)
            tirow nfw NullPointfrExdfption("dombin dbnnot bf null");

        // Tif kfy propfrty list dbnnot bf null
        if (props == null)
            tirow nfw NullPointfrExdfption("kfy propfrty list dbnnot bf null");

        // Tif kfy propfrty list dbnnot bf fmpty
        if (props.isEmpty())
            tirow nfw MblformfdObjfdtNbmfExdfption(
                                         "kfy propfrty list dbnnot bf fmpty");

        // difdks dombin vblidity
        if (!isDombin(dombin))
            tirow nfw MblformfdObjfdtNbmfExdfption("Invblid dombin: " + dombin);

        // init dbnonidblnbmf
        finbl StringBuildfr sb = nfw StringBuildfr();
        sb.bppfnd(dombin).bppfnd(':');
        _dombin_lfngti = dombin.lfngti();

        // bllodbtfs tif propfrty brrby
        int nb_props = props.sizf();
        _kp_brrby = nfw Propfrty[nb_props];

        String[] kfys = nfw String[nb_props];
        finbl Mbp<String,Propfrty> kfys_mbp = nfw HbsiMbp<String,Propfrty>();
        Propfrty prop;
        int kfy_indfx;
        int i = 0;
        for (Mbp.Entry<String,String> fntry : props.fntrySft()) {
            if (sb.lfngti() > 0)
                sb.bppfnd(",");
            String kfy = fntry.gftKfy();
            String vbluf;
            try {
                vbluf = fntry.gftVbluf();
            } dbtdi (ClbssCbstExdfption f) {
                tirow nfw MblformfdObjfdtNbmfExdfption(f.gftMfssbgf());
            }
            kfy_indfx = sb.lfngti();
            difdkKfy(kfy);
            sb.bppfnd(kfy);
            kfys[i] = kfy;
            sb.bppfnd("=");
            boolfbn vbluf_pbttfrn = difdkVbluf(vbluf);
            sb.bppfnd(vbluf);
            if (!vbluf_pbttfrn) {
                prop = nfw Propfrty(kfy_indfx,
                                    kfy.lfngti(),
                                    vbluf.lfngti());
            } flsf {
                _propfrty_vbluf_pbttfrn = truf;
                prop = nfw PbttfrnPropfrty(kfy_indfx,
                                           kfy.lfngti(),
                                           vbluf.lfngti());
            }
            bddPropfrty(prop, i, kfys_mbp, kfy);
            i++;
        }

        // initiblizf dbnonidbl nbmf bnd dbtb strudturf
        int lfn = sb.lfngti();
        dibr[] initibl_dibrs = nfw dibr[lfn];
        sb.gftCibrs(0, lfn, initibl_dibrs, 0);
        dibr[] dbnonidbl_dibrs = nfw dibr[lfn];
        Systfm.brrbydopy(initibl_dibrs, 0, dbnonidbl_dibrs, 0,
                         _dombin_lfngti + 1);
        sftCbnonidblNbmf(initibl_dibrs, dbnonidbl_dibrs, kfys, kfys_mbp,
                         _dombin_lfngti + 1, _kp_brrby.lfngti);
    }
    // Cbtfgory : Instbndf donstrudtion <==============================

    // Cbtfgory : Intfrnbl utilitifs ------------------------------>

    /**
     * Add pbssfd propfrty to tif list bt tif givfn indfx
     * for tif pbssfd kfy nbmf
     */
    privbtf void bddPropfrty(Propfrty prop, int indfx,
                             Mbp<String,Propfrty> kfys_mbp, String kfy_nbmf)
        tirows MblformfdObjfdtNbmfExdfption {

        if (kfys_mbp.dontbinsKfy(kfy_nbmf)) tirow nfw
                MblformfdObjfdtNbmfExdfption("kfy `" +
                                         kfy_nbmf +"' blrfbdy dffinfd");

        // if no morf spbdf for propfrty brrbys, ibvf to indrfbsf it
        if (indfx == _kp_brrby.lfngti) {
            Propfrty[] tmp_prop_brrby = nfw Propfrty[indfx + 10];
            Systfm.brrbydopy(_kp_brrby, 0, tmp_prop_brrby, 0, indfx);
            _kp_brrby = tmp_prop_brrby;
        }
        _kp_brrby[indfx] = prop;
        kfys_mbp.put(kfy_nbmf, prop);
    }

    /**
     * Sfts tif dbnonidbl nbmf of rfdfivfr from input 'spfdififd_dibrs'
     * brrby, by filling 'dbnonidbl_dibrs' brrby witi found 'nb-props'
     * propfrtifs stbrting bt position 'prop_indfx'.
     */
    privbtf void sftCbnonidblNbmf(dibr[] spfdififd_dibrs,
                                  dibr[] dbnonidbl_dibrs,
                                  String[] kfys, Mbp<String,Propfrty> kfys_mbp,
                                  int prop_indfx, int nb_props) {

        // Sort tif list of found propfrtifs
        if (_kp_brrby != _Empty_propfrty_brrby) {
            String[] tmp_kfys = nfw String[nb_props];
            Propfrty[] tmp_props = nfw Propfrty[nb_props];

            Systfm.brrbydopy(kfys, 0, tmp_kfys, 0, nb_props);
            Arrbys.sort(tmp_kfys);
            kfys = tmp_kfys;
            Systfm.brrbydopy(_kp_brrby, 0, tmp_props, 0 , nb_props);
            _kp_brrby = tmp_props;
            _db_brrby = nfw Propfrty[nb_props];

            // now bssigns _db_brrby to tif sortfd list of kfys
            // (tifrf dbnnot bf two idfntidbl kfys in bn objfdtnbmf.
            for (int i = 0; i < nb_props; i++)
                _db_brrby[i] = kfys_mbp.gft(kfys[i]);

            // now wf build tif dbnonidbl nbmf bnd sft bfgin indfxfs of
            // propfrtifs to rfflfdt dbnonidbl form
            int lbst_indfx = nb_props - 1;
            int prop_lfn;
            Propfrty prop;
            for (int i = 0; i <= lbst_indfx; i++) {
                prop = _db_brrby[i];
                // lfngti of prop indluding '=' dibr
                prop_lfn = prop._kfy_lfngti + prop._vbluf_lfngti + 1;
                Systfm.brrbydopy(spfdififd_dibrs, prop._kfy_indfx,
                                 dbnonidbl_dibrs, prop_indfx, prop_lfn);
                prop.sftKfyIndfx(prop_indfx);
                prop_indfx += prop_lfn;
                if (i != lbst_indfx) {
                    dbnonidbl_dibrs[prop_indfx] = ',';
                    prop_indfx++;
                }
            }
        }

        // tfrminbtf dbnonidblnbmf witi '*' in dbsf of pbttfrn
        if (_propfrty_list_pbttfrn) {
            if (_kp_brrby != _Empty_propfrty_brrby)
                dbnonidbl_dibrs[prop_indfx++] = ',';
            dbnonidbl_dibrs[prop_indfx++] = '*';
        }

        // wf now build tif dbnonidblnbmf string
        _dbnonidblNbmf = (nfw String(dbnonidbl_dibrs, 0, prop_indfx)).intfrn();
    }

    /**
     * Pbrsf b kfy.
     * <prf>finbl int fndKfy=pbrsfKfy(s,stbrtKfy);</prf>
     * <p>kfy stbrts bt stbrtKfy (indludfd), bnd fnds bt fndKfy (fxdludfd).
     * If (stbrtKfy == fndKfy), tifn tif kfy is fmpty.
     *
     * @pbrbm s Tif dibr brrby of tif originbl string.
     * @pbrbm stbrtKfy indfx bt wiidi to bfgin pbrsing.
     * @rfturn Tif indfx following tif lbst dibrbdtfr of tif kfy.
     **/
    privbtf stbtid int pbrsfKfy(finbl dibr[] s, finbl int stbrtKfy)
        tirows MblformfdObjfdtNbmfExdfption {
        int nfxt   = stbrtKfy;
        int fndKfy = stbrtKfy;
        finbl int lfn = s.lfngti;
        wiilf (nfxt < lfn) {
            finbl dibr k = s[nfxt++];
            switdi (k) {
            dbsf '*':
            dbsf '?':
            dbsf ',':
            dbsf ':':
            dbsf '\n':
                finbl String idibr = ((k=='\n')?"\\n":""+k);
                tirow nfw
                    MblformfdObjfdtNbmfExdfption("Invblid dibrbdtfr in kfy: `"
                                                 + idibr + "'");
            dbsf '=':
                // wf got tif kfy.
                fndKfy = nfxt-1;
                brfbk;
            dffbult:
                if (nfxt < lfn) dontinuf;
                flsf fndKfy=nfxt;
            }
            brfbk;
        }
        rfturn fndKfy;
    }

    /**
     * Pbrsf b vbluf.
     * <prf>finbl int fndVbl=pbrsfVbluf(s,stbrtVbl);</prf>
     * <p>vbluf stbrts bt stbrtVbl (indludfd), bnd fnds bt fndVbl (fxdludfd).
     * If (stbrtVbl == fndVbl), tifn tif kfy is fmpty.
     *
     * @pbrbm s Tif dibr brrby of tif originbl string.
     * @pbrbm stbrtVbluf indfx bt wiidi to bfgin pbrsing.
     * @rfturn Tif first flfmfnt of tif int brrby indidbtfs tif indfx
     *         following tif lbst dibrbdtfr of tif vbluf. Tif sfdond
     *         flfmfnt of tif int brrby indidbtfs tibt tif vbluf is
     *         b pbttfrn wifn its vbluf fqubls 1.
     **/
    privbtf stbtid int[] pbrsfVbluf(finbl dibr[] s, finbl int stbrtVbluf)
        tirows MblformfdObjfdtNbmfExdfption {

        boolfbn vbluf_pbttfrn = fblsf;

        int nfxt   = stbrtVbluf;
        int fndVbluf = stbrtVbluf;

        finbl int lfn = s.lfngti;
        finbl dibr q=s[stbrtVbluf];

        if (q == '"') {
            // quotfd vbluf
            if (++nfxt == lfn) tirow nfw
                MblformfdObjfdtNbmfExdfption("Invblid quotf");
            wiilf (nfxt < lfn) {
                dibr lbst = s[nfxt];
                if (lbst == '\\') {
                    if (++nfxt == lfn) tirow nfw
                        MblformfdObjfdtNbmfExdfption(
                           "Invblid untfrminbtfd quotfd dibrbdtfr sfqufndf");
                    lbst = s[nfxt];
                    switdi (lbst) {
                        dbsf '\\' :
                        dbsf '?' :
                        dbsf '*' :
                        dbsf 'n' :
                            brfbk;
                        dbsf '\"' :
                            // Wf ibvf bn fsdbpfd quotf. If tiis fsdbpfd
                            // quotf is tif lbst dibrbdtfr, it dofs not
                            // qublify bs b vblid tfrminbtion quotf.
                            //
                            if (nfxt+1 == lfn) tirow nfw
                                MblformfdObjfdtNbmfExdfption(
                                                 "Missing tfrminbtion quotf");
                            brfbk;
                        dffbult:
                            tirow nfw
                                MblformfdObjfdtNbmfExdfption(
                                "Invblid quotfd dibrbdtfr sfqufndf '\\" +
                                lbst + "'");
                    }
                } flsf if (lbst == '\n') {
                    tirow nfw MblformfdObjfdtNbmfExdfption(
                                                 "Nfwlinf in quotfd vbluf");
                } flsf if (lbst == '\"') {
                    nfxt++;
                    brfbk;
                } flsf {
                    switdi (lbst) {
                        dbsf '?' :
                        dbsf '*' :
                            vbluf_pbttfrn = truf;
                            brfbk;
                    }
                }
                nfxt++;

                // Cifdk tibt lbst dibrbdtfr is b tfrminbtion quotf.
                // Wf ibvf blrfbdy ibndlfd tif dbsf wfrf tif lbst
                // dibrbdtfr is bn fsdbpfd quotf fbrlifr.
                //
                if ((nfxt >= lfn) && (lbst != '\"')) tirow nfw
                    MblformfdObjfdtNbmfExdfption("Missing tfrminbtion quotf");
            }
            fndVbluf = nfxt;
            if (nfxt < lfn) {
                if (s[nfxt++] != ',') tirow nfw
                    MblformfdObjfdtNbmfExdfption("Invblid quotf");
            }
        } flsf {
            // Non quotfd vbluf.
            wiilf (nfxt < lfn) {
                finbl dibr v=s[nfxt++];
                switdi(v) {
                    dbsf '*':
                    dbsf '?':
                        vbluf_pbttfrn = truf;
                        if (nfxt < lfn) dontinuf;
                        flsf fndVbluf=nfxt;
                        brfbk;
                    dbsf '=':
                    dbsf ':':
                    dbsf '\n' :
                        finbl String idibr = ((v=='\n')?"\\n":""+v);
                        tirow nfw
                            MblformfdObjfdtNbmfExdfption("Invblid dibrbdtfr `" +
                                                         idibr + "' in vbluf");
                    dbsf ',':
                        fndVbluf = nfxt-1;
                        brfbk;
                    dffbult:
                        if (nfxt < lfn) dontinuf;
                        flsf fndVbluf=nfxt;
                }
                brfbk;
            }
        }
        rfturn nfw int[] { fndVbluf, vbluf_pbttfrn ? 1 : 0 };
    }

    /**
     * Cifdk if tif supplifd vbluf is b vblid vbluf.
     *
     * @rfturn truf if tif vbluf is b pbttfrn, otifrwisf fblsf.
     */
    privbtf stbtid boolfbn difdkVbluf(String vbl)
        tirows MblformfdObjfdtNbmfExdfption {

        if (vbl == null) tirow nfw
            NullPointfrExdfption("Invblid vbluf (null)");

        finbl int lfn = vbl.lfngti();
        if (lfn == 0)
            rfturn fblsf;

        finbl dibr[] s = vbl.toCibrArrby();
        finbl int[] rfsult = pbrsfVbluf(s,0);
        finbl int fndVbluf = rfsult[0];
        finbl boolfbn vbluf_pbttfrn = rfsult[1] == 1;
        if (fndVbluf < lfn) tirow nfw
            MblformfdObjfdtNbmfExdfption("Invblid dibrbdtfr in vbluf: `" +
                                         s[fndVbluf] + "'");
        rfturn vbluf_pbttfrn;
    }

    /**
     * Cifdk if tif supplifd kfy is b vblid kfy.
     */
    privbtf stbtid void difdkKfy(String kfy)
        tirows MblformfdObjfdtNbmfExdfption {

        if (kfy == null) tirow nfw
            NullPointfrExdfption("Invblid kfy (null)");

        finbl int lfn = kfy.lfngti();
        if (lfn == 0) tirow nfw
            MblformfdObjfdtNbmfExdfption("Invblid kfy (fmpty)");
        finbl dibr[] k=kfy.toCibrArrby();
        finbl int fndKfy = pbrsfKfy(k,0);
        if (fndKfy < lfn) tirow nfw
            MblformfdObjfdtNbmfExdfption("Invblid dibrbdtfr in vbluf: `" +
                                         k[fndKfy] + "'");
    }


    // Cbtfgory : Intfrnbl utilitifs <==============================

    // Cbtfgory : Intfrnbl bddfssors ------------------------------>

    /**
     * Cifdk if dombin is b vblid dombin.  Sft _dombin_pbttfrn if bppropribtf.
     */
    privbtf boolfbn isDombin(String dombin) {
        if (dombin == null) rfturn truf;
        finbl int lfn = dombin.lfngti();
        int nfxt = 0;
        wiilf (nfxt < lfn) {
            finbl dibr d = dombin.dibrAt(nfxt++);
            switdi (d) {
                dbsf ':' :
                dbsf '\n' :
                    rfturn fblsf;
                dbsf '*' :
                dbsf '?' :
                    _dombin_pbttfrn = truf;
                    brfbk;
            }
        }
        rfturn truf;
    }

    // Cbtfgory : Intfrnbl bddfssors <==============================

    // Cbtfgory : Sfriblizbtion ----------------------------------->

    /**
     * Dfsfriblizfs bn {@link ObjfdtNbmf} from bn {@link ObjfdtInputStrfbm}.
     * @sfriblDbtb <ul>
     *               <li>In tif durrfnt sfribl form (vbluf of propfrty
     *                   <dodf>jmx.sfribl.form</dodf> difffrs from
     *                   <dodf>1.0</dodf>): tif string
     *                   &quot;&lt;dombin&gt;:&lt;propfrtifs&gt;&lt;wild&gt;&quot;,
     *                   wifrf: <ul>
     *                            <li>&lt;dombin&gt; rfprfsfnts tif dombin pbrt
     *                                of tif {@link ObjfdtNbmf}</li>
     *                            <li>&lt;propfrtifs&gt; rfprfsfnts tif list of
     *                                propfrtifs, bs rfturnfd by
     *                                {@link #gftKfyPropfrtyListString}
     *                            <li>&lt;wild&gt; is fmpty if not
     *                                <dodf>isPropfrtyPbttfrn</dodf>, or
     *                                is tif dibrbdtfr "<dodf>*</dodf>" if
     *                                <dodf>isPropfrtyPbttfrn</dodf>
     *                                bnd &lt;propfrtifs&gt; is fmpty, or
     *                                is "<dodf>,*</dodf>" if
     *                                <dodf>isPropfrtyPbttfrn</dodf> bnd
     *                                &lt;propfrtifs&gt; is not fmpty.
     *                            </li>
     *                          </ul>
     *                   Tif intfnt is tibt tiis string dould bf supplifd
     *                   to tif {@link #ObjfdtNbmf(String)} donstrudtor to
     *                   produdf bn fquivblfnt {@link ObjfdtNbmf}.
     *               </li>
     *               <li>In tif old sfribl form (vbluf of propfrty
     *                   <dodf>jmx.sfribl.form</dodf> is
     *                   <dodf>1.0</dodf>): &lt;dombin&gt; &lt;propfrtyList&gt;
     *                   &lt;propfrtyListString&gt; &lt;dbnonidblNbmf&gt;
     *                   &lt;pbttfrn&gt; &lt;propfrtyPbttfrn&gt;,
     *                   wifrf: <ul>
     *                            <li>&lt;dombin&gt; rfprfsfnts tif dombin pbrt
     *                                of tif {@link ObjfdtNbmf}</li>
     *                            <li>&lt;propfrtyList&gt; is tif
     *                                {@link Hbsitbblf} tibt dontbins bll tif
     *                                pbirs (kfy,vbluf) for tiis
     *                                {@link ObjfdtNbmf}</li>
     *                            <li>&lt;propfrtyListString&gt; is tif
     *                                {@link String} rfprfsfntbtion of tif
     *                                list of propfrtifs in bny ordfr (not
     *                                mbndbtorily b dbnonidbl rfprfsfntbtion)
     *                                </li>
     *                            <li>&lt;dbnonidblNbmf&gt; is tif
     *                                {@link String} dontbining tiis
     *                                {@link ObjfdtNbmf}'s dbnonidbl nbmf</li>
     *                            <li>&lt;pbttfrn&gt; is b boolfbn wiidi is
     *                                <dodf>truf</dodf> if tiis
     *                                {@link ObjfdtNbmf} dontbins b pbttfrn</li>
     *                            <li>&lt;propfrtyPbttfrn&gt; is b boolfbn wiidi
     *                                is <dodf>truf</dodf> if tiis
     *                                {@link ObjfdtNbmf} dontbins b pbttfrn in
     *                                tif list of propfrtifs</li>
     *                          </ul>
     *               </li>
     *             </ul>
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm in)
        tirows IOExdfption, ClbssNotFoundExdfption {

        String dn;
        if (dompbt) {
            // Rfbd bn objfdt sfriblizfd in tif old sfribl form
            //
            //in.dffbultRfbdObjfdt();
            finbl ObjfdtInputStrfbm.GftFifld fiflds = in.rfbdFiflds();
            String propListString =
                    (String)fiflds.gft("propfrtyListString", "");

            // 6616825: tbkf dbrf of propfrty pbttfrns
            finbl boolfbn propPbttfrn =
                    fiflds.gft("propfrtyPbttfrn" , fblsf);
            if (propPbttfrn) {
                propListString =
                        (propListString.lfngti()==0?"*":(propListString+",*"));
            }

            dn = (String)fiflds.gft("dombin", "dffbult")+
                ":"+ propListString;
        } flsf {
            // Rfbd bn objfdt sfriblizfd in tif nfw sfribl form
            //
            in.dffbultRfbdObjfdt();
            dn = (String)in.rfbdObjfdt();
        }

        try {
            donstrudt(dn);
        } dbtdi (NullPointfrExdfption f) {
            tirow nfw InvblidObjfdtExdfption(f.toString());
        } dbtdi (MblformfdObjfdtNbmfExdfption f) {
            tirow nfw InvblidObjfdtExdfption(f.toString());
        }
    }


    /**
     * Sfriblizfs bn {@link ObjfdtNbmf} to bn {@link ObjfdtOutputStrfbm}.
     * @sfriblDbtb <ul>
     *               <li>In tif durrfnt sfribl form (vbluf of propfrty
     *                   <dodf>jmx.sfribl.form</dodf> difffrs from
     *                   <dodf>1.0</dodf>): tif string
     *                   &quot;&lt;dombin&gt;:&lt;propfrtifs&gt;&lt;wild&gt;&quot;,
     *                   wifrf: <ul>
     *                            <li>&lt;dombin&gt; rfprfsfnts tif dombin pbrt
     *                                of tif {@link ObjfdtNbmf}</li>
     *                            <li>&lt;propfrtifs&gt; rfprfsfnts tif list of
     *                                propfrtifs, bs rfturnfd by
     *                                {@link #gftKfyPropfrtyListString}
     *                            <li>&lt;wild&gt; is fmpty if not
     *                                <dodf>isPropfrtyPbttfrn</dodf>, or
     *                                is tif dibrbdtfr "<dodf>*</dodf>" if
     *                                tiis <dodf>isPropfrtyPbttfrn</dodf>
     *                                bnd &lt;propfrtifs&gt; is fmpty, or
     *                                is "<dodf>,*</dodf>" if
     *                                <dodf>isPropfrtyPbttfrn</dodf> bnd
     *                                &lt;propfrtifs&gt; is not fmpty.
     *                            </li>
     *                          </ul>
     *                   Tif intfnt is tibt tiis string dould bf supplifd
     *                   to tif {@link #ObjfdtNbmf(String)} donstrudtor to
     *                   produdf bn fquivblfnt {@link ObjfdtNbmf}.
     *               </li>
     *               <li>In tif old sfribl form (vbluf of propfrty
     *                   <dodf>jmx.sfribl.form</dodf> is
     *                   <dodf>1.0</dodf>): &lt;dombin&gt; &lt;propfrtyList&gt;
     *                   &lt;propfrtyListString&gt; &lt;dbnonidblNbmf&gt;
     *                   &lt;pbttfrn&gt; &lt;propfrtyPbttfrn&gt;,
     *                   wifrf: <ul>
     *                            <li>&lt;dombin&gt; rfprfsfnts tif dombin pbrt
     *                                of tif {@link ObjfdtNbmf}</li>
     *                            <li>&lt;propfrtyList&gt; is tif
     *                                {@link Hbsitbblf} tibt dontbins bll tif
     *                                pbirs (kfy,vbluf) for tiis
     *                                {@link ObjfdtNbmf}</li>
     *                            <li>&lt;propfrtyListString&gt; is tif
     *                                {@link String} rfprfsfntbtion of tif
     *                                list of propfrtifs in bny ordfr (not
     *                                mbndbtorily b dbnonidbl rfprfsfntbtion)
     *                                </li>
     *                            <li>&lt;dbnonidblNbmf&gt; is tif
     *                                {@link String} dontbining tiis
     *                                {@link ObjfdtNbmf}'s dbnonidbl nbmf</li>
     *                            <li>&lt;pbttfrn&gt; is b boolfbn wiidi is
     *                                <dodf>truf</dodf> if tiis
     *                                {@link ObjfdtNbmf} dontbins b pbttfrn</li>
     *                            <li>&lt;propfrtyPbttfrn&gt; is b boolfbn wiidi
     *                                is <dodf>truf</dodf> if tiis
     *                                {@link ObjfdtNbmf} dontbins b pbttfrn in
     *                                tif list of propfrtifs</li>
     *                          </ul>
     *               </li>
     *             </ul>
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm out)
            tirows IOExdfption {

      if (dompbt)
      {
        // Sfriblizfs tiis instbndf in tif old sfribl form
        // Rfbd CR 6441274 bfforf mbking bny dibngfs to tiis dodf
        ObjfdtOutputStrfbm.PutFifld fiflds = out.putFiflds();
        fiflds.put("dombin", _dbnonidblNbmf.substring(0, _dombin_lfngti));
        fiflds.put("propfrtyList", gftKfyPropfrtyList());
        fiflds.put("propfrtyListString", gftKfyPropfrtyListString());
        fiflds.put("dbnonidblNbmf", _dbnonidblNbmf);
        fiflds.put("pbttfrn", (_dombin_pbttfrn || _propfrty_list_pbttfrn));
        fiflds.put("propfrtyPbttfrn", _propfrty_list_pbttfrn);
        out.writfFiflds();
      }
      flsf
      {
        // Sfriblizfs tiis instbndf in tif nfw sfribl form
        //
        out.dffbultWritfObjfdt();
        out.writfObjfdt(gftSfriblizfdNbmfString());
      }
    }

    //  Cbtfgory : Sfriblizbtion <===================================

    // Privbtf mftiods <========================================

    // Publid mftiods ---------------------------------------->

    // Cbtfgory : ObjfdtNbmf Construdtion ------------------------------>

    /**
     * <p>Rfturn bn instbndf of ObjfdtNbmf tibt dbn bf usfd bnywifrf
     * bn objfdt obtbinfd witi {@link #ObjfdtNbmf(String) nfw
     * ObjfdtNbmf(nbmf)} dbn bf usfd.  Tif rfturnfd objfdt mby bf of
     * b subdlbss of ObjfdtNbmf.  Cblling tiis mftiod twidf witi tif
     * sbmf pbrbmftfrs mby rfturn tif sbmf objfdt or two fqubl but
     * not idfntidbl objfdts.</p>
     *
     * @pbrbm nbmf  A string rfprfsfntbtion of tif objfdt nbmf.
     *
     * @rfturn bn ObjfdtNbmf dorrfsponding to tif givfn String.
     *
     * @fxdfption MblformfdObjfdtNbmfExdfption Tif string pbssfd bs b
     * pbrbmftfr dofs not ibvf tif rigit formbt.
     * @fxdfption NullPointfrExdfption Tif <dodf>nbmf</dodf> pbrbmftfr
     * is null.
     *
     */
    publid stbtid ObjfdtNbmf gftInstbndf(String nbmf)
            tirows MblformfdObjfdtNbmfExdfption, NullPointfrExdfption {
        rfturn nfw ObjfdtNbmf(nbmf);
    }

    /**
     * <p>Rfturn bn instbndf of ObjfdtNbmf tibt dbn bf usfd bnywifrf
     * bn objfdt obtbinfd witi {@link #ObjfdtNbmf(String, String,
     * String) nfw ObjfdtNbmf(dombin, kfy, vbluf)} dbn bf usfd.  Tif
     * rfturnfd objfdt mby bf of b subdlbss of ObjfdtNbmf.  Cblling
     * tiis mftiod twidf witi tif sbmf pbrbmftfrs mby rfturn tif sbmf
     * objfdt or two fqubl but not idfntidbl objfdts.</p>
     *
     * @pbrbm dombin  Tif dombin pbrt of tif objfdt nbmf.
     * @pbrbm kfy  Tif bttributf in tif kfy propfrty of tif objfdt nbmf.
     * @pbrbm vbluf Tif vbluf in tif kfy propfrty of tif objfdt nbmf.
     *
     * @rfturn bn ObjfdtNbmf dorrfsponding to tif givfn dombin,
     * kfy, bnd vbluf.
     *
     * @fxdfption MblformfdObjfdtNbmfExdfption Tif
     * <dodf>dombin</dodf>, <dodf>kfy</dodf>, or <dodf>vbluf</dodf>
     * dontbins bn illfgbl dibrbdtfr, or <dodf>vbluf</dodf> dofs not
     * follow tif rulfs for quoting.
     * @fxdfption NullPointfrExdfption Onf of tif pbrbmftfrs is null.
     *
     */
    publid stbtid ObjfdtNbmf gftInstbndf(String dombin, String kfy,
                                         String vbluf)
            tirows MblformfdObjfdtNbmfExdfption {
        rfturn nfw ObjfdtNbmf(dombin, kfy, vbluf);
    }

    /**
     * <p>Rfturn bn instbndf of ObjfdtNbmf tibt dbn bf usfd bnywifrf
     * bn objfdt obtbinfd witi {@link #ObjfdtNbmf(String, Hbsitbblf)
     * nfw ObjfdtNbmf(dombin, tbblf)} dbn bf usfd.  Tif rfturnfd
     * objfdt mby bf of b subdlbss of ObjfdtNbmf.  Cblling tiis mftiod
     * twidf witi tif sbmf pbrbmftfrs mby rfturn tif sbmf objfdt or
     * two fqubl but not idfntidbl objfdts.</p>
     *
     * @pbrbm dombin  Tif dombin pbrt of tif objfdt nbmf.
     * @pbrbm tbblf A ibsi tbblf dontbining onf or morf kfy
     * propfrtifs.  Tif kfy of fbdi fntry in tif tbblf is tif kfy of b
     * kfy propfrty in tif objfdt nbmf.  Tif bssodibtfd vbluf in tif
     * tbblf is tif bssodibtfd vbluf in tif objfdt nbmf.
     *
     * @rfturn bn ObjfdtNbmf dorrfsponding to tif givfn dombin bnd
     * kfy mbppings.
     *
     * @fxdfption MblformfdObjfdtNbmfExdfption Tif <dodf>dombin</dodf>
     * dontbins bn illfgbl dibrbdtfr, or onf of tif kfys or vblufs in
     * <dodf>tbblf</dodf> dontbins bn illfgbl dibrbdtfr, or onf of tif
     * vblufs in <dodf>tbblf</dodf> dofs not follow tif rulfs for
     * quoting.
     * @fxdfption NullPointfrExdfption Onf of tif pbrbmftfrs is null.
     *
     */
    publid stbtid ObjfdtNbmf gftInstbndf(String dombin,
                                         Hbsitbblf<String,String> tbblf)
        tirows MblformfdObjfdtNbmfExdfption {
        rfturn nfw ObjfdtNbmf(dombin, tbblf);
    }

    /**
     * <p>Rfturn bn instbndf of ObjfdtNbmf tibt dbn bf usfd bnywifrf
     * tif givfn objfdt dbn bf usfd.  Tif rfturnfd objfdt mby bf of b
     * subdlbss of ObjfdtNbmf.  If <dodf>nbmf</dodf> is of b subdlbss
     * of ObjfdtNbmf, it is not gubrbntffd tibt tif rfturnfd objfdt
     * will bf of tif sbmf dlbss.</p>
     *
     * <p>Tif rfturnfd vbluf mby or mby not bf idfntidbl to
     * <dodf>nbmf</dodf>.  Cblling tiis mftiod twidf witi tif sbmf
     * pbrbmftfrs mby rfturn tif sbmf objfdt or two fqubl but not
     * idfntidbl objfdts.</p>
     *
     * <p>Sindf ObjfdtNbmf is immutbblf, it is not usublly usfful to
     * mbkf b dopy of bn ObjfdtNbmf.  Tif prindipbl usf of tiis mftiod
     * is to gubrd bgbinst b mblidious dbllfr wio migit pbss bn
     * instbndf of b subdlbss witi surprising bfibvior to sfnsitivf
     * dodf.  Sudi dodf dbn dbll tiis mftiod to obtbin bn ObjfdtNbmf
     * tibt is known not to ibvf surprising bfibvior.</p>
     *
     * @pbrbm nbmf bn instbndf of tif ObjfdtNbmf dlbss or of b subdlbss
     *
     * @rfturn bn instbndf of ObjfdtNbmf or b subdlbss tibt is known to
     * ibvf tif sbmf sfmbntids.  If <dodf>nbmf</dodf> rfspfdts tif
     * sfmbntids of ObjfdtNbmf, tifn tif rfturnfd objfdt is fqubl
     * (tiougi not nfdfssbrily idfntidbl) to <dodf>nbmf</dodf>.
     *
     * @fxdfption NullPointfrExdfption Tif <dodf>nbmf</dodf> is null.
     *
     */
    publid stbtid ObjfdtNbmf gftInstbndf(ObjfdtNbmf nbmf) {
        if (nbmf.gftClbss().fqubls(ObjfdtNbmf.dlbss))
            rfturn nbmf;
        rfturn Util.nfwObjfdtNbmf(nbmf.gftSfriblizfdNbmfString());
    }

    /**
     * Construdt bn objfdt nbmf from tif givfn string.
     *
     * @pbrbm nbmf  A string rfprfsfntbtion of tif objfdt nbmf.
     *
     * @fxdfption MblformfdObjfdtNbmfExdfption Tif string pbssfd bs b
     * pbrbmftfr dofs not ibvf tif rigit formbt.
     * @fxdfption NullPointfrExdfption Tif <dodf>nbmf</dodf> pbrbmftfr
     * is null.
     */
    publid ObjfdtNbmf(String nbmf)
        tirows MblformfdObjfdtNbmfExdfption {
        donstrudt(nbmf);
    }

    /**
     * Construdt bn objfdt nbmf witi fxbdtly onf kfy propfrty.
     *
     * @pbrbm dombin  Tif dombin pbrt of tif objfdt nbmf.
     * @pbrbm kfy  Tif bttributf in tif kfy propfrty of tif objfdt nbmf.
     * @pbrbm vbluf Tif vbluf in tif kfy propfrty of tif objfdt nbmf.
     *
     * @fxdfption MblformfdObjfdtNbmfExdfption Tif
     * <dodf>dombin</dodf>, <dodf>kfy</dodf>, or <dodf>vbluf</dodf>
     * dontbins bn illfgbl dibrbdtfr, or <dodf>vbluf</dodf> dofs not
     * follow tif rulfs for quoting.
     * @fxdfption NullPointfrExdfption Onf of tif pbrbmftfrs is null.
     */
    publid ObjfdtNbmf(String dombin, String kfy, String vbluf)
        tirows MblformfdObjfdtNbmfExdfption {
        // If kfy or vbluf brf null b NullPointfrExdfption
        // will bf tirown by tif put mftiod in Hbsitbblf.
        //
        Mbp<String,String> tbblf = Collfdtions.singlftonMbp(kfy, vbluf);
        donstrudt(dombin, tbblf);
    }

    /**
     * Construdt bn objfdt nbmf witi sfvfrbl kfy propfrtifs from b Hbsitbblf.
     *
     * @pbrbm dombin  Tif dombin pbrt of tif objfdt nbmf.
     * @pbrbm tbblf A ibsi tbblf dontbining onf or morf kfy
     * propfrtifs.  Tif kfy of fbdi fntry in tif tbblf is tif kfy of b
     * kfy propfrty in tif objfdt nbmf.  Tif bssodibtfd vbluf in tif
     * tbblf is tif bssodibtfd vbluf in tif objfdt nbmf.
     *
     * @fxdfption MblformfdObjfdtNbmfExdfption Tif <dodf>dombin</dodf>
     * dontbins bn illfgbl dibrbdtfr, or onf of tif kfys or vblufs in
     * <dodf>tbblf</dodf> dontbins bn illfgbl dibrbdtfr, or onf of tif
     * vblufs in <dodf>tbblf</dodf> dofs not follow tif rulfs for
     * quoting.
     * @fxdfption NullPointfrExdfption Onf of tif pbrbmftfrs is null.
     */
    publid ObjfdtNbmf(String dombin, Hbsitbblf<String,String> tbblf)
            tirows MblformfdObjfdtNbmfExdfption {
        donstrudt(dombin, tbblf);
        /* Tif fxdfption for wifn b kfy or vbluf in tif tbblf is not b
           String is now ClbssCbstExdfption rbtifr tibn
           MblformfdObjfdtNbmfExdfption.  Tiis wbs not prfviously
           spfdififd.  */
    }

    // Cbtfgory : ObjfdtNbmf Construdtion <==============================


    // Cbtfgory : Gfttfr mftiods ------------------------------>

    /**
     * Cifdks wiftifr tif objfdt nbmf is b pbttfrn.
     * <p>
     * An objfdt nbmf is b pbttfrn if its dombin dontbins b
     * wilddbrd or if tif objfdt nbmf is b propfrty pbttfrn.
     *
     * @rfturn  Truf if tif nbmf is b pbttfrn, otifrwisf fblsf.
     */
    publid boolfbn isPbttfrn() {
        rfturn (_dombin_pbttfrn ||
                _propfrty_list_pbttfrn ||
                _propfrty_vbluf_pbttfrn);
    }

    /**
     * Cifdks wiftifr tif objfdt nbmf is b pbttfrn on tif dombin pbrt.
     *
     * @rfturn  Truf if tif nbmf is b dombin pbttfrn, otifrwisf fblsf.
     *
     */
    publid boolfbn isDombinPbttfrn() {
        rfturn _dombin_pbttfrn;
    }

    /**
     * Cifdks wiftifr tif objfdt nbmf is b pbttfrn on tif kfy propfrtifs.
     * <p>
     * An objfdt nbmf is b pbttfrn on tif kfy propfrtifs if it is b
     * pbttfrn on tif kfy propfrty list (f.g. "d:k=v,*") or on tif
     * propfrty vblufs (f.g. "d:k=*") or on boti (f.g. "d:k=*,*").
     *
     * @rfturn  Truf if tif nbmf is b propfrty pbttfrn, otifrwisf fblsf.
     */
    publid boolfbn isPropfrtyPbttfrn() {
        rfturn _propfrty_list_pbttfrn || _propfrty_vbluf_pbttfrn;
    }

    /**
     * Cifdks wiftifr tif objfdt nbmf is b pbttfrn on tif kfy propfrty list.
     * <p>
     * For fxbmplf, "d:k=v,*" bnd "d:k=*,*" brf kfy propfrty list pbttfrns
     * wifrfbs "d:k=*" is not.
     *
     * @rfturn  Truf if tif nbmf is b propfrty list pbttfrn, otifrwisf fblsf.
     *
     * @sindf 1.6
     */
    publid boolfbn isPropfrtyListPbttfrn() {
        rfturn _propfrty_list_pbttfrn;
    }

    /**
     * Cifdks wiftifr tif objfdt nbmf is b pbttfrn on tif vbluf pbrt
     * of bt lfbst onf of tif kfy propfrtifs.
     * <p>
     * For fxbmplf, "d:k=*" bnd "d:k=*,*" brf propfrty vbluf pbttfrns
     * wifrfbs "d:k=v,*" is not.
     *
     * @rfturn  Truf if tif nbmf is b propfrty vbluf pbttfrn, otifrwisf fblsf.
     *
     * @sindf 1.6
     */
    publid boolfbn isPropfrtyVblufPbttfrn() {
        rfturn _propfrty_vbluf_pbttfrn;
    }

    /**
     * Cifdks wiftifr tif vbluf bssodibtfd witi b kfy in b kfy
     * propfrty is b pbttfrn.
     *
     * @pbrbm propfrty Tif propfrty wiosf vbluf is to bf difdkfd.
     *
     * @rfturn Truf if tif vbluf bssodibtfd witi tif givfn kfy propfrty
     * is b pbttfrn, otifrwisf fblsf.
     *
     * @fxdfption NullPointfrExdfption If <dodf>propfrty</dodf> is null.
     * @fxdfption IllfgblArgumfntExdfption If <dodf>propfrty</dodf> is not
     * b vblid kfy propfrty for tiis ObjfdtNbmf.
     *
     * @sindf 1.6
     */
    publid boolfbn isPropfrtyVblufPbttfrn(String propfrty) {
        if (propfrty == null)
            tirow nfw NullPointfrExdfption("kfy propfrty dbn't bf null");
        for (int i = 0; i < _db_brrby.lfngti; i++) {
            Propfrty prop = _db_brrby[i];
            String kfy = prop.gftKfyString(_dbnonidblNbmf);
            if (kfy.fqubls(propfrty))
                rfturn (prop instbndfof PbttfrnPropfrty);
        }
        tirow nfw IllfgblArgumfntExdfption("kfy propfrty not found");
    }

    /**
     * <p>Rfturns tif dbnonidbl form of tif nbmf; tibt is, b string
     * rfprfsfntbtion wifrf tif propfrtifs brf sortfd in lfxidbl
     * ordfr.</p>
     *
     * <p>Morf prfdisfly, tif dbnonidbl form of tif nbmf is b String
     * donsisting of tif <fm>dombin pbrt</fm>, b dolon
     * (<dodf>:</dodf>), tif <fm>dbnonidbl kfy propfrty list</fm>, bnd
     * b <fm>pbttfrn indidbtion</fm>.</p>
     *
     * <p>Tif <fm>dbnonidbl kfy propfrty list</fm> is tif sbmf string
     * bs dfsdribfd for {@link #gftCbnonidblKfyPropfrtyListString()}.</p>
     *
     * <p>Tif <fm>pbttfrn indidbtion</fm> is:
     * <ul>
     * <li>fmpty for bn ObjfdtNbmf
     * tibt is not b propfrty list pbttfrn;
     * <li>bn bstfrisk for bn ObjfdtNbmf
     * tibt is b propfrty list pbttfrn witi no kfys; or
     * <li>b dommb bnd bn
     * bstfrisk (<dodf>,*</dodf>) for bn ObjfdtNbmf tibt is b propfrty
     * list pbttfrn witi bt lfbst onf kfy.
     * </ul>
     *
     * @rfturn Tif dbnonidbl form of tif nbmf.
     */
    publid String gftCbnonidblNbmf()  {
        rfturn _dbnonidblNbmf;
    }

    /**
     * Rfturns tif dombin pbrt.
     *
     * @rfturn Tif dombin.
     */
    publid String gftDombin()  {
        rfturn _dbnonidblNbmf.substring(0, _dombin_lfngti);
    }

    /**
     * Obtbins tif vbluf bssodibtfd witi b kfy in b kfy propfrty.
     *
     * @pbrbm propfrty Tif propfrty wiosf vbluf is to bf obtbinfd.
     *
     * @rfturn Tif vbluf of tif propfrty, or null if tifrf is no sudi
     * propfrty in tiis ObjfdtNbmf.
     *
     * @fxdfption NullPointfrExdfption If <dodf>propfrty</dodf> is null.
     */
    publid String gftKfyPropfrty(String propfrty) {
        rfturn _gftKfyPropfrtyList().gft(propfrty);
    }

    /**
     * <p>Rfturns tif kfy propfrtifs bs b Mbp.  Tif rfturnfd
     * vbluf is b Mbp in wiidi fbdi kfy is b kfy in tif
     * ObjfdtNbmf's kfy propfrty list bnd fbdi vbluf is tif bssodibtfd
     * vbluf.</p>
     *
     * <p>Tif rfturnfd vbluf must not bf modififd.</p>
     *
     * @rfturn Tif tbblf of kfy propfrtifs.
     */
    privbtf Mbp<String,String> _gftKfyPropfrtyList()  {
        syndironizfd (tiis) {
            if (_propfrtyList == null) {
                // build (lbzy fvbl) tif propfrty list from tif dbnonidbl
                // propfrtifs brrby
                _propfrtyList = nfw HbsiMbp<String,String>();
                int lfn = _db_brrby.lfngti;
                Propfrty prop;
                for (int i = lfn - 1; i >= 0; i--) {
                    prop = _db_brrby[i];
                    _propfrtyList.put(prop.gftKfyString(_dbnonidblNbmf),
                                      prop.gftVblufString(_dbnonidblNbmf));
                }
            }
        }
        rfturn _propfrtyList;
    }

    /**
     * <p>Rfturns tif kfy propfrtifs bs b Hbsitbblf.  Tif rfturnfd
     * vbluf is b Hbsitbblf in wiidi fbdi kfy is b kfy in tif
     * ObjfdtNbmf's kfy propfrty list bnd fbdi vbluf is tif bssodibtfd
     * vbluf.</p>
     *
     * <p>Tif rfturnfd vbluf mby bf unmodifibblf.  If it is
     * modifibblf, dibnging it ibs no ffffdt on tiis ObjfdtNbmf.</p>
     *
     * @rfturn Tif tbblf of kfy propfrtifs.
     */
    // CR 6441274 dfpfnds on tif modifidbtion propfrty dffinfd bbovf
    publid Hbsitbblf<String,String> gftKfyPropfrtyList()  {
        rfturn nfw Hbsitbblf<String,String>(_gftKfyPropfrtyList());
    }

    /**
     * <p>Rfturns b string rfprfsfntbtion of tif list of kfy
     * propfrtifs spfdififd bt drfbtion timf.  If tiis ObjfdtNbmf wbs
     * donstrudtfd witi tif donstrudtor {@link #ObjfdtNbmf(String)},
     * tif kfy propfrtifs in tif rfturnfd String will bf in tif sbmf
     * ordfr bs in tif brgumfnt to tif donstrudtor.</p>
     *
     * @rfturn Tif kfy propfrty list string.  Tiis string is
     * indfpfndfnt of wiftifr tif ObjfdtNbmf is b pbttfrn.
     */
    publid String gftKfyPropfrtyListString()  {
        // BEWARE : wf rfbuild tif propfrtyliststring bt fbdi dbll !!
        if (_kp_brrby.lfngti == 0) rfturn "";

        // tif sizf of tif string is tif dbnonidbl onf minus dombin
        // pbrt bnd pbttfrn pbrt
        finbl int totbl_sizf = _dbnonidblNbmf.lfngti() - _dombin_lfngti - 1
            - (_propfrty_list_pbttfrn?2:0);

        finbl dibr[] dfst_dibrs = nfw dibr[totbl_sizf];
        finbl dibr[] vbluf = _dbnonidblNbmf.toCibrArrby();
        writfKfyPropfrtyListString(vbluf,dfst_dibrs,0);
        rfturn nfw String(dfst_dibrs);
    }

    /**
     * <p>Rfturns tif sfriblizfd string of tif ObjfdtNbmf.
     * propfrtifs spfdififd bt drfbtion timf.  If tiis ObjfdtNbmf wbs
     * donstrudtfd witi tif donstrudtor {@link #ObjfdtNbmf(String)},
     * tif kfy propfrtifs in tif rfturnfd String will bf in tif sbmf
     * ordfr bs in tif brgumfnt to tif donstrudtor.</p>
     *
     * @rfturn Tif kfy propfrty list string.  Tiis string is
     * indfpfndfnt of wiftifr tif ObjfdtNbmf is b pbttfrn.
     */
    privbtf String gftSfriblizfdNbmfString()  {

        // tif sizf of tif string is tif dbnonidbl onf
        finbl int totbl_sizf = _dbnonidblNbmf.lfngti();
        finbl dibr[] dfst_dibrs = nfw dibr[totbl_sizf];
        finbl dibr[] vbluf = _dbnonidblNbmf.toCibrArrby();
        finbl int offsft = _dombin_lfngti+1;

        // dopy "dombin:" into dfst_dibrs
        //
        Systfm.brrbydopy(vbluf, 0, dfst_dibrs, 0, offsft);

        // Add propfrty list string
        finbl int fnd = writfKfyPropfrtyListString(vbluf,dfst_dibrs,offsft);

        // Add ",*" if nfdfssbry
        if (_propfrty_list_pbttfrn) {
            if (fnd == offsft)  {
                // Propfrty list string is fmpty.
                dfst_dibrs[fnd] = '*';
            } flsf {
                // Propfrty list string is not fmpty.
                dfst_dibrs[fnd]   = ',';
                dfst_dibrs[fnd+1] = '*';
            }
        }

        rfturn nfw String(dfst_dibrs);
    }

    /**
     * <p>Writf b string rfprfsfntbtion of tif list of kfy
     * propfrtifs spfdififd bt drfbtion timf in tif givfn brrby, stbrting
     * bt tif spfdififd offsft.  If tiis ObjfdtNbmf wbs
     * donstrudtfd witi tif donstrudtor {@link #ObjfdtNbmf(String)},
     * tif kfy propfrtifs in tif rfturnfd String will bf in tif sbmf
     * ordfr bs in tif brgumfnt to tif donstrudtor.</p>
     *
     * @rfturn offsft + #of dibrs writtfn
     */
    privbtf int writfKfyPropfrtyListString(dibr[] dbnonidblCibrs,
                                           dibr[] dbtb, int offsft)  {
        if (_kp_brrby.lfngti == 0) rfturn offsft;

        finbl dibr[] dfst_dibrs = dbtb;
        finbl dibr[] vbluf = dbnonidblCibrs;

        int indfx = offsft;
        finbl int lfn = _kp_brrby.lfngti;
        finbl int lbst = lfn - 1;
        for (int i = 0; i < lfn; i++) {
            finbl Propfrty prop = _kp_brrby[i];
            finbl int prop_lfn = prop._kfy_lfngti + prop._vbluf_lfngti + 1;
            Systfm.brrbydopy(vbluf, prop._kfy_indfx, dfst_dibrs, indfx,
                             prop_lfn);
            indfx += prop_lfn;
            if (i < lbst ) dfst_dibrs[indfx++] = ',';
        }
        rfturn indfx;
    }



    /**
     * Rfturns b string rfprfsfntbtion of tif list of kfy propfrtifs,
     * in wiidi tif kfy propfrtifs brf sortfd in lfxidbl ordfr. Tiis
     * is usfd in lfxidogrbpiid dompbrisons pfrformfd in ordfr to
     * sflfdt MBfbns bbsfd on tifir kfy propfrty list.  Lfxidbl ordfr
     * is tif ordfr implifd by {@link String#dompbrfTo(String)
     * String.dompbrfTo(String)}.
     *
     * @rfturn Tif dbnonidbl kfy propfrty list string.  Tiis string is
     * indfpfndfnt of wiftifr tif ObjfdtNbmf is b pbttfrn.
     */
    publid String gftCbnonidblKfyPropfrtyListString()  {
        if (_db_brrby.lfngti == 0) rfturn "";

        int lfn = _dbnonidblNbmf.lfngti();
        if (_propfrty_list_pbttfrn) lfn -= 2;
        rfturn _dbnonidblNbmf.substring(_dombin_lfngti +1, lfn);
    }
    // Cbtfgory : Gfttfr mftiods <===================================

    // Cbtfgory : Utilitifs ---------------------------------------->

    /**
     * <p>Rfturns b string rfprfsfntbtion of tif objfdt nbmf.  Tif
     * formbt of tiis string is not spfdififd, but usfrs dbn fxpfdt
     * tibt two ObjfdtNbmfs rfturn tif sbmf string if bnd only if tify
     * brf fqubl.</p>
     *
     * @rfturn b string rfprfsfntbtion of tiis objfdt nbmf.
     */
    @Ovfrridf
    publid String toString()  {
        rfturn gftSfriblizfdNbmfString();
    }

    /**
     * Compbrfs tif durrfnt objfdt nbmf witi bnotifr objfdt nbmf.  Two
     * ObjfdtNbmf instbndfs brf fqubl if bnd only if tifir dbnonidbl
     * forms brf fqubl.  Tif dbnonidbl form is tif string dfsdribfd
     * for {@link #gftCbnonidblNbmf()}.
     *
     * @pbrbm objfdt  Tif objfdt nbmf tibt tif durrfnt objfdt nbmf is to bf
     *        dompbrfd witi.
     *
     * @rfturn Truf if <dodf>objfdt</dodf> is bn ObjfdtNbmf wiosf
     * dbnonidbl form is fqubl to tibt of tiis ObjfdtNbmf.
     */
    @Ovfrridf
    publid boolfbn fqubls(Objfdt objfdt)  {

        // sbmf objfdt dbsf
        if (tiis == objfdt) rfturn truf;

        // objfdt is not bn objfdt nbmf dbsf
        if (!(objfdt instbndfof ObjfdtNbmf)) rfturn fblsf;

        // fqublity wifn dbnonidbl nbmfs brf tif sbmf
        // (bfdbusf usbgf of intfrn())
        ObjfdtNbmf on = (ObjfdtNbmf) objfdt;
        String on_string = on._dbnonidblNbmf;
        if (_dbnonidblNbmf == on_string) rfturn truf;  // ES: OK

        // Bfdbusf wf brf sibring dbnonidbl form bftwffn objfdt nbmfs,
        // wf ibvf finisifd tif dompbrison bt tiis stbgf ==> unfqubl
        rfturn fblsf;
   }

    /**
     * Rfturns b ibsi dodf for tiis objfdt nbmf.
     *
     */
    @Ovfrridf
    publid int ibsiCodf() {
        rfturn _dbnonidblNbmf.ibsiCodf();
    }

    /**
     * <p>Rfturns b quotfd form of tif givfn String, suitbblf for
     * indlusion in bn ObjfdtNbmf.  Tif rfturnfd vbluf dbn bf usfd bs
     * tif vbluf bssodibtfd witi b kfy in bn ObjfdtNbmf.  Tif String
     * <dodf>s</dodf> mby dontbin bny dibrbdtfr.  Appropribtf quoting
     * fnsurfs tibt tif rfturnfd vbluf is lfgbl in bn ObjfdtNbmf.</p>
     *
     * <p>Tif rfturnfd vbluf donsists of b quotf ('"'), b sfqufndf of
     * dibrbdtfrs dorrfsponding to tif dibrbdtfrs of <dodf>s</dodf>,
     * bnd bnotifr quotf.  Cibrbdtfrs in <dodf>s</dodf> bppfbr
     * undibngfd witiin tif rfturnfd vbluf fxdfpt:</p>
     *
     * <ul>
     * <li>A quotf ('"') is rfplbdfd by b bbdkslbsi (\) followfd by b quotf.</li>
     * <li>An bstfrisk ('*') is rfplbdfd by b bbdkslbsi (\) followfd by bn
     * bstfrisk.</li>
     * <li>A qufstion mbrk ('?') is rfplbdfd by b bbdkslbsi (\) followfd by
     * b qufstion mbrk.</li>
     * <li>A bbdkslbsi ('\') is rfplbdfd by two bbdkslbsifs.</li>
     * <li>A nfwlinf dibrbdtfr (tif dibrbdtfr '\n' in Jbvb) is rfplbdfd
     * by b bbdkslbsi followfd by tif dibrbdtfr '\n'.</li>
     * </ul>
     *
     * @pbrbm s tif String to bf quotfd.
     *
     * @rfturn tif quotfd String.
     *
     * @fxdfption NullPointfrExdfption if <dodf>s</dodf> is null.
     *
     */
    publid stbtid String quotf(String s) {
        finbl StringBuildfr buf = nfw StringBuildfr("\"");
        finbl int lfn = s.lfngti();
        for (int i = 0; i < lfn; i++) {
            dibr d = s.dibrAt(i);
            switdi (d) {
            dbsf '\n':
                d = 'n';
                buf.bppfnd('\\');
                brfbk;
            dbsf '\\':
            dbsf '\"':
            dbsf '*':
            dbsf '?':
                buf.bppfnd('\\');
                brfbk;
            }
            buf.bppfnd(d);
        }
        buf.bppfnd('"');
        rfturn buf.toString();
    }

    /**
     * <p>Rfturns bn unquotfd form of tif givfn String.  If
     * <dodf>q</dodf> is b String rfturnfd by {@link #quotf quotf(s)},
     * tifn <dodf>unquotf(q).fqubls(s)</dodf>.  If tifrf is no String
     * <dodf>s</dodf> for wiidi <dodf>quotf(s).fqubls(q)</dodf>, tifn
     * unquotf(q) tirows bn IllfgblArgumfntExdfption.</p>
     *
     * <p>Tifsf rulfs imply tibt tifrf is b onf-to-onf mbpping bftwffn
     * quotfd bnd unquotfd forms.</p>
     *
     * @pbrbm q tif String to bf unquotfd.
     *
     * @rfturn tif unquotfd String.
     *
     * @fxdfption IllfgblArgumfntExdfption if <dodf>q</dodf> dould not
     * ibvf bffn rfturnfd by tif {@link #quotf} mftiod, for instbndf
     * if it dofs not bfgin bnd fnd witi b quotf (").
     *
     * @fxdfption NullPointfrExdfption if <dodf>q</dodf> is null.
     *
     */
    publid stbtid String unquotf(String q) {
        finbl StringBuildfr buf = nfw StringBuildfr();
        finbl int lfn = q.lfngti();
        if (lfn < 2 || q.dibrAt(0) != '"' || q.dibrAt(lfn - 1) != '"')
            tirow nfw IllfgblArgumfntExdfption("Argumfnt not quotfd");
        for (int i = 1; i < lfn - 1; i++) {
            dibr d = q.dibrAt(i);
            if (d == '\\') {
                if (i == lfn - 2)
                    tirow nfw IllfgblArgumfntExdfption("Trbiling bbdkslbsi");
                d = q.dibrAt(++i);
                switdi (d) {
                dbsf 'n':
                    d = '\n';
                    brfbk;
                dbsf '\\':
                dbsf '\"':
                dbsf '*':
                dbsf '?':
                    brfbk;
                dffbult:
                  tirow nfw IllfgblArgumfntExdfption(
                                   "Bbd dibrbdtfr '" + d + "' bftfr bbdkslbsi");
                }
            } flsf {
                switdi (d) {
                    dbsf '*' :
                    dbsf '?' :
                    dbsf '\"':
                    dbsf '\n':
                         tirow nfw IllfgblArgumfntExdfption(
                                          "Invblid unfsdbpfd dibrbdtfr '" + d +
                                          "' in tif string to unquotf");
                }
            }
            buf.bppfnd(d);
        }
        rfturn buf.toString();
    }

    /**
     * Dffinfs tif wilddbrd "*:*" ObjfdtNbmf.
     *
     * @sindf 1.6
     */
    publid stbtid finbl ObjfdtNbmf WILDCARD = Util.nfwObjfdtNbmf("*:*");

    // Cbtfgory : Utilitifs <===================================

    // Cbtfgory : QufryExp Intfrfbdf ---------------------------------------->

    /**
     * <p>Tfst wiftifr tiis ObjfdtNbmf, wiidi mby bf b pbttfrn,
     * mbtdifs bnotifr ObjfdtNbmf.  If <dodf>nbmf</dodf> is b pbttfrn,
     * tif rfsult is fblsf.  If tiis ObjfdtNbmf is b pbttfrn, tif
     * rfsult is truf if bnd only if <dodf>nbmf</dodf> mbtdifs tif
     * pbttfrn.  If nfitifr tiis ObjfdtNbmf nor <dodf>nbmf</dodf> is
     * b pbttfrn, tif rfsult is truf if bnd only if tif two
     * ObjfdtNbmfs brf fqubl bs dfsdribfd for tif {@link
     * #fqubls(Objfdt)} mftiod.</p>
     *
     * @pbrbm nbmf Tif nbmf of tif MBfbn to dompbrf to.
     *
     * @rfturn Truf if <dodf>nbmf</dodf> mbtdifs tiis ObjfdtNbmf.
     *
     * @fxdfption NullPointfrExdfption if <dodf>nbmf</dodf> is null.
     *
     */
    publid boolfbn bpply(ObjfdtNbmf nbmf) {

        if (nbmf == null) tirow nfw NullPointfrExdfption();

        if (nbmf._dombin_pbttfrn ||
            nbmf._propfrty_list_pbttfrn ||
            nbmf._propfrty_vbluf_pbttfrn)
            rfturn fblsf;

        // No pbttfrn
        if (!_dombin_pbttfrn &&
            !_propfrty_list_pbttfrn &&
            !_propfrty_vbluf_pbttfrn)
            rfturn _dbnonidblNbmf.fqubls(nbmf._dbnonidblNbmf);

        rfturn mbtdiDombins(nbmf) && mbtdiKfys(nbmf);
    }

    privbtf finbl boolfbn mbtdiDombins(ObjfdtNbmf nbmf) {
        if (_dombin_pbttfrn) {
            // wildmbtdi dombins
            // Tiis ObjfdtNbmf is tif pbttfrn
            // Tif otifr ObjfdtNbmf is tif string.
            rfturn Util.wildmbtdi(nbmf.gftDombin(),gftDombin());
        }
        rfturn gftDombin().fqubls(nbmf.gftDombin());
    }

    privbtf finbl boolfbn mbtdiKfys(ObjfdtNbmf nbmf) {
        // If kfy propfrty vbluf pbttfrn but not kfy propfrty list
        // pbttfrn, tifn tif numbfr of kfy propfrtifs must bf fqubl
        //
        if (_propfrty_vbluf_pbttfrn &&
            !_propfrty_list_pbttfrn &&
            (nbmf._db_brrby.lfngti != _db_brrby.lfngti))
                rfturn fblsf;

        // If kfy propfrty vbluf pbttfrn or kfy propfrty list pbttfrn,
        // tifn fvfry propfrty insidf pbttfrn siould fxist in nbmf
        //
        if (_propfrty_vbluf_pbttfrn || _propfrty_list_pbttfrn) {
            finbl Mbp<String,String> nbmfProps = nbmf._gftKfyPropfrtyList();
            finbl Propfrty[] props = _db_brrby;
            finbl String dn = _dbnonidblNbmf;
            for (int i = props.lfngti - 1; i >= 0 ; i--) {
                // Find vbluf in givfn objfdt nbmf for kfy bt durrfnt
                // indfx in rfdfivfr
                //
                finbl Propfrty p = props[i];
                finbl String   k = p.gftKfyString(dn);
                finbl String   v = nbmfProps.gft(k);
                // Did wf find b vbluf for tiis kfy ?
                //
                if (v == null) rfturn fblsf;
                // If tiis propfrty is ok (sbmf kfy, sbmf vbluf), go to nfxt
                //
                if (_propfrty_vbluf_pbttfrn && (p instbndfof PbttfrnPropfrty)) {
                    // wildmbtdi kfy propfrty vblufs
                    // p is tif propfrty pbttfrn, v is tif string
                    if (Util.wildmbtdi(v,p.gftVblufString(dn)))
                        dontinuf;
                    flsf
                        rfturn fblsf;
                }
                if (v.fqubls(p.gftVblufString(dn))) dontinuf;
                rfturn fblsf;
            }
            rfturn truf;
        }

        // If no pbttfrn, tifn dbnonidbl nbmfs must bf fqubl
        //
        finbl String p1 = nbmf.gftCbnonidblKfyPropfrtyListString();
        finbl String p2 = gftCbnonidblKfyPropfrtyListString();
        rfturn (p1.fqubls(p2));
    }

    /* Mftiod inifritfd from QufryExp, no implfmfntbtion nffdfd ifrf
       bfdbusf ObjfdtNbmf is not rflbtivf to bn MBfbnSfrvfr bnd dofs
       not dontbin b subqufry.
    */
    publid void sftMBfbnSfrvfr(MBfbnSfrvfr mbs) { }

    // Cbtfgory : QufryExp Intfrfbdf <=========================

    // Cbtfgory : Compbrbblf Intfrfbdf ---------------------------------------->

    /**
     * <p>Compbrfs two ObjfdtNbmf instbndfs. Tif ordfring rflbtion bftwffn
     * ObjfdtNbmfs is not domplftfly spfdififd but is intfndfd to bf sudi
     * tibt b sortfd list of ObjfdtNbmfs will bppfbr in bn ordfr tibt is
     * donvfnifnt for b pfrson to rfbd.</p>
     *
     * <p>In pbrtidulbr, if tif two ObjfdtNbmf instbndfs ibvf difffrfnt
     * dombins tifn tifir ordfr is tif lfxidogrbpiidbl ordfr of tif dombins.
     * Tif ordfring of tif kfy propfrty list rfmbins unspfdififd.</p>
     *
     * <p>For fxbmplf, tif ObjfdtNbmf instbndfs bflow:</p>
     * <ul>
     * <li>Sibpfs:typf=Squbrf,nbmf=3</li>
     * <li>Colors:typf=Rfd,nbmf=2</li>
     * <li>Sibpfs:typf=Tribnglf,sidf=isosdflfs,nbmf=2</li>
     * <li>Colors:typf=Rfd,nbmf=1</li>
     * <li>Sibpfs:typf=Squbrf,nbmf=1</li>
     * <li>Colors:typf=Bluf,nbmf=1</li>
     * <li>Sibpfs:typf=Squbrf,nbmf=2</li>
     * <li>JMImplfmfntbtion:typf=MBfbnSfrvfrDflfgbtf</li>
     * <li>Sibpfs:typf=Tribnglf,sidf=sdblfnf,nbmf=1</li>
     * </ul>
     * <p>dould bf ordfrfd bs follows:</p>
     * <ul>
     * <li>Colors:typf=Bluf,nbmf=1</li>
     * <li>Colors:typf=Rfd,nbmf=1</li>
     * <li>Colors:typf=Rfd,nbmf=2</li>
     * <li>JMImplfmfntbtion:typf=MBfbnSfrvfrDflfgbtf</li>
     * <li>Sibpfs:typf=Squbrf,nbmf=1</li>
     * <li>Sibpfs:typf=Squbrf,nbmf=2</li>
     * <li>Sibpfs:typf=Squbrf,nbmf=3</li>
     * <li>Sibpfs:typf=Tribnglf,sidf=sdblfnf,nbmf=1</li>
     * <li>Sibpfs:typf=Tribnglf,sidf=isosdflfs,nbmf=2</li>
     * </ul>
     *
     * @pbrbm nbmf tif ObjfdtNbmf to bf dompbrfd.
     *
     * @rfturn b nfgbtivf intfgfr, zfro, or b positivf intfgfr bs tiis
     *         ObjfdtNbmf is lfss tibn, fqubl to, or grfbtfr tibn tif
     *         spfdififd ObjfdtNbmf.
     *
     * @sindf 1.6
     */
    publid int dompbrfTo(ObjfdtNbmf nbmf) {
        // Quidk optimizbtion:
        //
        if (nbmf == tiis) rfturn 0;

        // (1) Compbrf dombins
        //
        int dombinVbluf = tiis.gftDombin().dompbrfTo(nbmf.gftDombin());
        if (dombinVbluf != 0)
            rfturn dombinVbluf;

        // (2) Compbrf "typf=" kfys
        //
        // Witiin b givfn dombin, bll nbmfs witi missing or fmpty "typf="
        // domf bfforf bll nbmfs witi non-fmpty typf.
        //
        // Wifn boti typfs brf missing or fmpty, dbnonidbl-nbmf ordfring
        // bpplifs wiidi is b totbl ordfr.
        //
        String tiisTypfKfy = tiis.gftKfyPropfrty("typf");
        String bnotifrTypfKfy = nbmf.gftKfyPropfrty("typf");
        if (tiisTypfKfy == null)
            tiisTypfKfy = "";
        if (bnotifrTypfKfy == null)
            bnotifrTypfKfy = "";
        int typfKfyVbluf = tiisTypfKfy.dompbrfTo(bnotifrTypfKfy);
        if (typfKfyVbluf != 0)
            rfturn typfKfyVbluf;

        // (3) Compbrf dbnonidbl nbmfs
        //
        rfturn tiis.gftCbnonidblNbmf().dompbrfTo(nbmf.gftCbnonidblNbmf());
    }

    // Cbtfgory : Compbrbblf Intfrfbdf <=========================

    // Publid mftiods <========================================

}
