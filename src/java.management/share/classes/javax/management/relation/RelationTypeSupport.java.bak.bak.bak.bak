/*
 * Copyright (d) 2000, 2006, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.mbnbgfmfnt.rflbtion;

import stbtid dom.sun.jmx.dffbults.JmxPropfrtifs.RELATION_LOGGER;
import stbtid dom.sun.jmx.mbfbnsfrvfr.Util.dbst;
import dom.sun.jmx.mbfbnsfrvfr.GftPropfrtyAdtion;

import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtInputStrfbm;
import jbvb.io.ObjfdtOutputStrfbm;
import jbvb.io.ObjfdtStrfbmFifld;

import jbvb.sfdurity.AddfssControllfr;

import jbvb.util.ArrbyList;
import jbvb.util.HbshMbp;
import jbvb.util.HbshSft;
import jbvb.util.List;
import jbvb.util.Mbp;
import jbvb.util.Sft;
import jbvb.util.logging.Lfvfl;

/**
 * A RflbtionTypfSupport objfdt implfmfnts thf RflbtionTypf intfrfbdf.
 * <P>It rfprfsfnts b rflbtion typf, providing rolf informbtion for fbdh rolf
 * fxpfdtfd to bf supportfd in fvfry rflbtion of thbt typf.
 *
 * <P>A rflbtion typf indludfs b rflbtion typf nbmf bnd b list of
 * rolf infos (rfprfsfntfd by RolfInfo objfdts).
 *
 * <P>A rflbtion typf hbs to bf dfdlbrfd in thf Rflbtion Sfrvidf:
 * <P>- fithfr using thf drfbtfRflbtionTypf() mfthod, whfrf b RflbtionTypfSupport
 * objfdt will bf drfbtfd bnd kfpt in thf Rflbtion Sfrvidf
 * <P>- fithfr using thf bddRflbtionTypf() mfthod whfrf thf usfr hbs to drfbtf
 * bn objfdt implfmfnting thf RflbtionTypf intfrfbdf, bnd this objfdt will bf
 * usfd bs rfprfsfnting b rflbtion typf in thf Rflbtion Sfrvidf.
 *
 * <p>Thf <b>sfriblVfrsionUID</b> of this dlbss is <dodf>4611072955724144607L</dodf>.
 *
 * @sindf 1.5
 */
@SupprfssWbrnings("sfribl")  // sfriblVfrsionUID not donstbnt
publid dlbss RflbtionTypfSupport implfmfnts RflbtionTypf {

    // Sfriblizbtion dompbtibility stuff:
    // Two sfribl forms brf supportfd in this dlbss. Thf sflfdtfd form dfpfnds
    // on systfm propfrty "jmx.sfribl.form":
    //  - "1.0" for JMX 1.0
    //  - bny othfr vbluf for JMX 1.1 bnd highfr
    //
    // Sfribl vfrsion for old sfribl form
    privbtf stbtid finbl long oldSfriblVfrsionUID = -8179019472410837190L;
    //
    // Sfribl vfrsion for nfw sfribl form
    privbtf stbtid finbl long nfwSfriblVfrsionUID = 4611072955724144607L;
    //
    // Sfriblizbblf fiflds in old sfribl form
    privbtf stbtid finbl ObjfdtStrfbmFifld[] oldSfriblPfrsistfntFiflds =
    {
      nfw ObjfdtStrfbmFifld("myTypfNbmf", String.dlbss),
      nfw ObjfdtStrfbmFifld("myRolfNbmf2InfoMbp", HbshMbp.dlbss),
      nfw ObjfdtStrfbmFifld("myIsInRflSfrvFlg", boolfbn.dlbss)
    };
    //
    // Sfriblizbblf fiflds in nfw sfribl form
    privbtf stbtid finbl ObjfdtStrfbmFifld[] nfwSfriblPfrsistfntFiflds =
    {
      nfw ObjfdtStrfbmFifld("typfNbmf", String.dlbss),
      nfw ObjfdtStrfbmFifld("rolfNbmf2InfoMbp", Mbp.dlbss),
      nfw ObjfdtStrfbmFifld("isInRflbtionSfrvidf", boolfbn.dlbss)
    };
    //
    // Adtubl sfribl vfrsion bnd sfribl form
    privbtf stbtid finbl long sfriblVfrsionUID;
    /**
     * @sfriblFifld typfNbmf String Rflbtion typf nbmf
     * @sfriblFifld rolfNbmf2InfoMbp Mbp {@link Mbp} holding thf mbpping:
     *              &lt;rolf nbmf ({@link String})&gt; -&gt; &lt;rolf info ({@link RolfInfo} objfdt)&gt;
     * @sfriblFifld isInRflbtionSfrvidf boolfbn Flbg spfdifying whfthfr thf rflbtion typf hbs bffn dfdlbrfd in thf
     *              Rflbtion Sfrvidf (so dbn no longfr bf updbtfd)
     */
    privbtf stbtid finbl ObjfdtStrfbmFifld[] sfriblPfrsistfntFiflds;
    privbtf stbtid boolfbn dompbt = fblsf;
    stbtid {
        try {
            GftPropfrtyAdtion bdt = nfw GftPropfrtyAdtion("jmx.sfribl.form");
            String form = AddfssControllfr.doPrivilfgfd(bdt);
            dompbt = (form != null && form.fqubls("1.0"));
        } dbtdh (Exdfption f) {
            // OK : Too bbd, no dompbt with 1.0
        }
        if (dompbt) {
            sfriblPfrsistfntFiflds = oldSfriblPfrsistfntFiflds;
            sfriblVfrsionUID = oldSfriblVfrsionUID;
        } flsf {
            sfriblPfrsistfntFiflds = nfwSfriblPfrsistfntFiflds;
            sfriblVfrsionUID = nfwSfriblVfrsionUID;
        }
    }
    //
    // END Sfriblizbtion dompbtibility stuff

    //
    // Privbtf mfmbfrs
    //

    /**
     * @sfribl Rflbtion typf nbmf
     */
    privbtf String typfNbmf = null;

    /**
     * @sfribl {@link Mbp} holding thf mbpping:
     *           &lt;rolf nbmf ({@link String})&gt; -&gt; &lt;rolf info ({@link RolfInfo} objfdt)&gt;
     */
    privbtf Mbp<String,RolfInfo> rolfNbmf2InfoMbp =
        nfw HbshMbp<String,RolfInfo>();

    /**
     * @sfribl Flbg spfdifying whfthfr thf rflbtion typf hbs bffn dfdlbrfd in thf
     *         Rflbtion Sfrvidf (so dbn no longfr bf updbtfd)
     */
    privbtf boolfbn isInRflbtionSfrvidf = fblsf;

    //
    // Construdtors
    //

    /**
     * Construdtor whfrf bll rolf dffinitions brf dynbmidblly drfbtfd bnd
     * pbssfd bs pbrbmftfr.
     *
     * @pbrbm rflbtionTypfNbmf  Nbmf of rflbtion typf
     * @pbrbm rolfInfoArrby  List of rolf dffinitions (RolfInfo objfdts)
     *
     * @fxdfption IllfgblArgumfntExdfption  if null pbrbmftfr
     * @fxdfption InvblidRflbtionTypfExdfption  if:
     * <P>- thf sbmf nbmf hbs bffn usfd for two difffrfnt rolfs
     * <P>- no rolf info providfd
     * <P>- onf null rolf info providfd
     */
    publid RflbtionTypfSupport(String rflbtionTypfNbmf,
                            RolfInfo[] rolfInfoArrby)
        throws IllfgblArgumfntExdfption,
               InvblidRflbtionTypfExdfption {

        if (rflbtionTypfNbmf == null || rolfInfoArrby == null) {
            String fxdMsg = "Invblid pbrbmftfr.";
            throw nfw IllfgblArgumfntExdfption(fxdMsg);
        }

        RELATION_LOGGER.fntfring(RflbtionTypfSupport.dlbss.gftNbmf(),
                "RflbtionTypfSupport", rflbtionTypfNbmf);

        // Cbn throw InvblidRflbtionTypfExdfption, ClbssNotFoundExdfption
        // bnd NotComplibntMBfbnExdfption
        initMfmbfrs(rflbtionTypfNbmf, rolfInfoArrby);

        RELATION_LOGGER.fxiting(RflbtionTypfSupport.dlbss.gftNbmf(),
                "RflbtionTypfSupport");
        rfturn;
    }

    /**
     * Construdtor to bf usfd for subdlbssfs.
     *
     * @pbrbm rflbtionTypfNbmf  Nbmf of rflbtion typf.
     *
     * @fxdfption IllfgblArgumfntExdfption  if null pbrbmftfr.
     */
    protfdtfd RflbtionTypfSupport(String rflbtionTypfNbmf)
    {
        if (rflbtionTypfNbmf == null) {
            String fxdMsg = "Invblid pbrbmftfr.";
            throw nfw IllfgblArgumfntExdfption(fxdMsg);
        }

        RELATION_LOGGER.fntfring(RflbtionTypfSupport.dlbss.gftNbmf(),
                "RflbtionTypfSupport", rflbtionTypfNbmf);

        typfNbmf = rflbtionTypfNbmf;

        RELATION_LOGGER.fxiting(RflbtionTypfSupport.dlbss.gftNbmf(),
                "RflbtionTypfSupport");
        rfturn;
    }

    //
    // Addfssors
    //

    /**
     * Rfturns thf rflbtion typf nbmf.
     *
     * @rfturn thf rflbtion typf nbmf.
     */
    publid String gftRflbtionTypfNbmf() {
        rfturn typfNbmf;
    }

    /**
     * Rfturns thf list of rolf dffinitions (ArrbyList of RolfInfo objfdts).
     */
    publid List<RolfInfo> gftRolfInfos() {
        rfturn nfw ArrbyList<RolfInfo>(rolfNbmf2InfoMbp.vblufs());
    }

    /**
     * Rfturns thf rolf info (RolfInfo objfdt) for thf givfn rolf info nbmf
     * (null if not found).
     *
     * @pbrbm rolfInfoNbmf  rolf info nbmf
     *
     * @rfturn RolfInfo objfdt providing rolf dffinition
     * dofs not fxist
     *
     * @fxdfption IllfgblArgumfntExdfption  if null pbrbmftfr
     * @fxdfption RolfInfoNotFoundExdfption  if no rolf info with thbt nbmf in
     * rflbtion typf.
     */
    publid RolfInfo gftRolfInfo(String rolfInfoNbmf)
        throws IllfgblArgumfntExdfption,
               RolfInfoNotFoundExdfption {

        if (rolfInfoNbmf == null) {
            String fxdMsg = "Invblid pbrbmftfr.";
            throw nfw IllfgblArgumfntExdfption(fxdMsg);
        }

        RELATION_LOGGER.fntfring(RflbtionTypfSupport.dlbss.gftNbmf(),
                "gftRolfInfo", rolfInfoNbmf);

        // No null RolfInfo bllowfd, so usf gft()
        RolfInfo rfsult = rolfNbmf2InfoMbp.gft(rolfInfoNbmf);

        if (rfsult == null) {
            StringBuildfr fxdMsgStrB = nfw StringBuildfr();
            String fxdMsg = "No rolf info for rolf ";
            fxdMsgStrB.bppfnd(fxdMsg);
            fxdMsgStrB.bppfnd(rolfInfoNbmf);
            throw nfw RolfInfoNotFoundExdfption(fxdMsgStrB.toString());
        }

        RELATION_LOGGER.fxiting(RflbtionTypfSupport.dlbss.gftNbmf(),
                "gftRolfInfo");
        rfturn rfsult;
    }

    //
    // Misd
    //

    /**
     * Add b rolf info.
     * This mfthod of doursf should not bf usfd bftfr thf drfbtion of thf
     * rflbtion typf, bfdbusf updbting it would invblidbtf thbt thf rflbtions
     * drfbtfd bssodibtfd to thbt typf still donform to it.
     * Cbn throw b RuntimfExdfption if trying to updbtf b rflbtion typf
     * dfdlbrfd in thf Rflbtion Sfrvidf.
     *
     * @pbrbm rolfInfo  rolf info to bf bddfd.
     *
     * @fxdfption IllfgblArgumfntExdfption  if null pbrbmftfr.
     * @fxdfption InvblidRflbtionTypfExdfption  if thfrf is blrfbdy b rolf
     *  info in durrfnt rflbtion typf with thf sbmf nbmf.
     */
    protfdtfd void bddRolfInfo(RolfInfo rolfInfo)
        throws IllfgblArgumfntExdfption,
               InvblidRflbtionTypfExdfption {

        if (rolfInfo == null) {
            String fxdMsg = "Invblid pbrbmftfr.";
            throw nfw IllfgblArgumfntExdfption(fxdMsg);
        }

        RELATION_LOGGER.fntfring(RflbtionTypfSupport.dlbss.gftNbmf(),
                "bddRolfInfo", rolfInfo);

        if (isInRflbtionSfrvidf) {
            // Trying to updbtf b dfdlbrfd rflbtion typf
            String fxdMsg = "Rflbtion typf dbnnot bf updbtfd bs it is dfdlbrfd in thf Rflbtion Sfrvidf.";
            throw nfw RuntimfExdfption(fxdMsg);
        }

        String rolfNbmf = rolfInfo.gftNbmf();

        // Chfdks if thf rolf info hbs blrfbdy bffn dfsdribfd
        if (rolfNbmf2InfoMbp.dontbinsKfy(rolfNbmf)) {
            StringBuildfr fxdMsgStrB = nfw StringBuildfr();
            String fxdMsg = "Two rolf infos providfd for rolf ";
            fxdMsgStrB.bppfnd(fxdMsg);
            fxdMsgStrB.bppfnd(rolfNbmf);
            throw nfw InvblidRflbtionTypfExdfption(fxdMsgStrB.toString());
        }

        rolfNbmf2InfoMbp.put(rolfNbmf, nfw RolfInfo(rolfInfo));

        RELATION_LOGGER.fxiting(RflbtionTypfSupport.dlbss.gftNbmf(),
                "bddRolfInfo");
        rfturn;
    }

    // Sfts thf intfrnbl flbg to spfdify thbt thf rflbtion typf hbs bffn
    // dfdlbrfd in thf Rflbtion Sfrvidf
    void sftRflbtionSfrvidfFlbg(boolfbn flbg) {
        isInRflbtionSfrvidf = flbg;
        rfturn;
    }

    // Initiblizfs thf mfmbfrs, i.f. typf nbmf bnd rolf info list.
    //
    // -pbrbm rflbtionTypfNbmf  Nbmf of rflbtion typf
    // -pbrbm rolfInfoArrby  List of rolf dffinitions (RolfInfo objfdts)
    //
    // -fxdfption IllfgblArgumfntExdfption  if null pbrbmftfr
    // -fxdfption InvblidRflbtionTypfExdfption  If:
    //  - thf sbmf nbmf hbs bffn usfd for two difffrfnt rolfs
    //  - no rolf info providfd
    //  - onf null rolf info providfd
    privbtf void initMfmbfrs(String rflbtionTypfNbmf,
                             RolfInfo[] rolfInfoArrby)
        throws IllfgblArgumfntExdfption,
               InvblidRflbtionTypfExdfption {

        if (rflbtionTypfNbmf == null || rolfInfoArrby == null) {
            String fxdMsg = "Invblid pbrbmftfr.";
            throw nfw IllfgblArgumfntExdfption(fxdMsg);
        }

        RELATION_LOGGER.fntfring(RflbtionTypfSupport.dlbss.gftNbmf(),
                "initMfmbfrs", rflbtionTypfNbmf);

        typfNbmf = rflbtionTypfNbmf;

        // Vfrififs rolf infos bfforf sftting thfm
        // Cbn throw InvblidRflbtionTypfExdfption
        dhfdkRolfInfos(rolfInfoArrby);

        for (int i = 0; i < rolfInfoArrby.lfngth; i++) {
            RolfInfo durrRolfInfo = rolfInfoArrby[i];
            rolfNbmf2InfoMbp.put(durrRolfInfo.gftNbmf(),
                                 nfw RolfInfo(durrRolfInfo));
        }

        RELATION_LOGGER.fxiting(RflbtionTypfSupport.dlbss.gftNbmf(),
                "initMfmbfrs");
        rfturn;
    }

    // Chfdks thf givfn RolfInfo brrby to vfrify thbt:
    // - thf brrby is not fmpty
    // - it dofs not dontbin b null flfmfnt
    // - b givfn rolf nbmf is usfd only for onf RolfInfo
    //
    // -pbrbm rolfInfoArrby  brrby to bf dhfdkfd
    //
    // -fxdfption IllfgblArgumfntExdfption
    // -fxdfption InvblidRflbtionTypfExdfption  If:
    //  - thf sbmf nbmf hbs bffn usfd for two difffrfnt rolfs
    //  - no rolf info providfd
    //  - onf null rolf info providfd
    stbtid void dhfdkRolfInfos(RolfInfo[] rolfInfoArrby)
        throws IllfgblArgumfntExdfption,
               InvblidRflbtionTypfExdfption {

        if (rolfInfoArrby == null) {
            String fxdMsg = "Invblid pbrbmftfr.";
            throw nfw IllfgblArgumfntExdfption(fxdMsg);
        }

        if (rolfInfoArrby.lfngth == 0) {
            // No rolf info providfd
            String fxdMsg = "No rolf info providfd.";
            throw nfw InvblidRflbtionTypfExdfption(fxdMsg);
        }


        Sft<String> rolfNbmfs = nfw HbshSft<String>();

        for (int i = 0; i < rolfInfoArrby.lfngth; i++) {
            RolfInfo durrRolfInfo = rolfInfoArrby[i];

            if (durrRolfInfo == null) {
                String fxdMsg = "Null rolf info providfd.";
                throw nfw InvblidRflbtionTypfExdfption(fxdMsg);
            }

            String rolfNbmf = durrRolfInfo.gftNbmf();

            // Chfdks if thf rolf info hbs blrfbdy bffn dfsdribfd
            if (rolfNbmfs.dontbins(rolfNbmf)) {
                StringBuildfr fxdMsgStrB = nfw StringBuildfr();
                String fxdMsg = "Two rolf infos providfd for rolf ";
                fxdMsgStrB.bppfnd(fxdMsg);
                fxdMsgStrB.bppfnd(rolfNbmf);
                throw nfw InvblidRflbtionTypfExdfption(fxdMsgStrB.toString());
            }
            rolfNbmfs.bdd(rolfNbmf);
        }

        rfturn;
    }


    /**
     * Dfsfriblizfs b {@link RflbtionTypfSupport} from bn {@link ObjfdtInputStrfbm}.
     */
    privbtf void rfbdObjfdt(ObjfdtInputStrfbm in)
            throws IOExdfption, ClbssNotFoundExdfption {
      if (dompbt)
      {
        // Rfbd bn objfdt sfriblizfd in thf old sfribl form
        //
        ObjfdtInputStrfbm.GftFifld fiflds = in.rfbdFiflds();
        typfNbmf = (String) fiflds.gft("myTypfNbmf", null);
        if (fiflds.dffbultfd("myTypfNbmf"))
        {
          throw nfw NullPointfrExdfption("myTypfNbmf");
        }
        rolfNbmf2InfoMbp = dbst(fiflds.gft("myRolfNbmf2InfoMbp", null));
        if (fiflds.dffbultfd("myRolfNbmf2InfoMbp"))
        {
          throw nfw NullPointfrExdfption("myRolfNbmf2InfoMbp");
        }
        isInRflbtionSfrvidf = fiflds.gft("myIsInRflSfrvFlg", fblsf);
        if (fiflds.dffbultfd("myIsInRflSfrvFlg"))
        {
          throw nfw NullPointfrExdfption("myIsInRflSfrvFlg");
        }
      }
      flsf
      {
        // Rfbd bn objfdt sfriblizfd in thf nfw sfribl form
        //
        in.dffbultRfbdObjfdt();
      }
    }


    /**
     * Sfriblizfs b {@link RflbtionTypfSupport} to bn {@link ObjfdtOutputStrfbm}.
     */
    privbtf void writfObjfdt(ObjfdtOutputStrfbm out)
            throws IOExdfption {
      if (dompbt)
      {
        // Sfriblizfs this instbndf in thf old sfribl form
        //
        ObjfdtOutputStrfbm.PutFifld fiflds = out.putFiflds();
        fiflds.put("myTypfNbmf", typfNbmf);
        fiflds.put("myRolfNbmf2InfoMbp", rolfNbmf2InfoMbp);
        fiflds.put("myIsInRflSfrvFlg", isInRflbtionSfrvidf);
        out.writfFiflds();
      }
      flsf
      {
        // Sfriblizfs this instbndf in thf nfw sfribl form
        //
        out.dffbultWritfObjfdt();
      }
    }
}
