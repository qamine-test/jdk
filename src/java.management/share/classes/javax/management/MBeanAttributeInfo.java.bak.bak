/*
 * Copyrigit (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.mbnbgfmfnt;

import jbvb.lbng.rfflfdt.Mftiod;
import jbvb.sfdurity.AddfssControllfr;

import dom.sun.jmx.mbfbnsfrvfr.GftPropfrtyAdtion;
import dom.sun.jmx.mbfbnsfrvfr.Introspfdtor;
import jbvb.util.Objfdts;


/**
 * Dfsdribfs bn MBfbn bttributf fxposfd for mbnbgfmfnt.  Instbndfs of
 * tiis dlbss brf immutbblf.  Subdlbssfs mby bf mutbblf but tiis is
 * not rfdommfndfd.
 *
 * @sindf 1.5
 */
@SupprfssWbrnings("sfribl")  // sfriblVfrsionUID not donstbnt
publid dlbss MBfbnAttributfInfo fxtfnds MBfbnFfbturfInfo implfmfnts Clonfbblf {

    /* Sfribl vfrsion */
    privbtf stbtid finbl long sfriblVfrsionUID;
    stbtid {
        /* For domplidbtfd rfbsons, tif sfriblVfrsionUID dibngfd
           bftwffn JMX 1.0 bnd JMX 1.1, fvfn tiougi JMX 1.1 did not
           ibvf dompbtibility dodf for tiis dlbss.  So tif
           sfriblizbtion produdfd by tiis dlbss witi JMX 1.2 bnd
           jmx.sfribl.form=1.0 is not tif sbmf bs tibt produdfd by
           tiis dlbss witi JMX 1.1 bnd jmx.sfribl.form=1.0.  Howfvfr,
           tif sfriblizbtion witiout tibt propfrty is tif sbmf, bnd
           tibt is tif only form rfquirfd by JMX 1.2.
        */
        long uid = 8644704819898565848L;
        try {
            GftPropfrtyAdtion bdt = nfw GftPropfrtyAdtion("jmx.sfribl.form");
            String form = AddfssControllfr.doPrivilfgfd(bdt);
            if ("1.0".fqubls(form))
                uid = 7043855487133450673L;
        } dbtdi (Exdfption f) {
            // OK: fxdfption mfbns no dompbt witi 1.0, too bbd
        }
        sfriblVfrsionUID = uid;
    }

    stbtid finbl MBfbnAttributfInfo[] NO_ATTRIBUTES =
        nfw MBfbnAttributfInfo[0];

    /**
     * @sfribl Tif bdtubl bttributf typf.
     */
    privbtf finbl String bttributfTypf;

    /**
     * @sfribl Tif bttributf writf rigit.
     */
    privbtf finbl boolfbn isWritf;

    /**
     * @sfribl Tif bttributf rfbd rigit.
     */
    privbtf finbl boolfbn isRfbd;

    /**
     * @sfribl Indidbtfs if tiis mftiod is b "is"
     */
    privbtf finbl boolfbn is;


    /**
     * Construdts bn <CODE>MBfbnAttributfInfo</CODE> objfdt.
     *
     * @pbrbm nbmf Tif nbmf of tif bttributf.
     * @pbrbm typf Tif typf or dlbss nbmf of tif bttributf.
     * @pbrbm dfsdription A iumbn rfbdbblf dfsdription of tif bttributf.
     * @pbrbm isRfbdbblf Truf if tif bttributf ibs b gfttfr mftiod, fblsf otifrwisf.
     * @pbrbm isWritbblf Truf if tif bttributf ibs b sfttfr mftiod, fblsf otifrwisf.
     * @pbrbm isIs Truf if tiis bttributf ibs bn "is" gfttfr, fblsf otifrwisf.
     *
     * @tirows IllfgblArgumfntExdfption if {@dodf isIs} is truf but
     * {@dodf isRfbdbblf} is not, or if {@dodf isIs} is truf bnd
     * {@dodf typf} is not {@dodf boolfbn} or {@dodf jbvb.lbng.Boolfbn}.
     * (Nfw dodf siould blwbys usf {@dodf boolfbn} rbtifr tibn
     * {@dodf jbvb.lbng.Boolfbn}.)
     */
    publid MBfbnAttributfInfo(String nbmf,
                              String typf,
                              String dfsdription,
                              boolfbn isRfbdbblf,
                              boolfbn isWritbblf,
                              boolfbn isIs) {
        tiis(nbmf, typf, dfsdription, isRfbdbblf, isWritbblf, isIs,
             (Dfsdriptor) null);
    }

    /**
     * Construdts bn <CODE>MBfbnAttributfInfo</CODE> objfdt.
     *
     * @pbrbm nbmf Tif nbmf of tif bttributf.
     * @pbrbm typf Tif typf or dlbss nbmf of tif bttributf.
     * @pbrbm dfsdription A iumbn rfbdbblf dfsdription of tif bttributf.
     * @pbrbm isRfbdbblf Truf if tif bttributf ibs b gfttfr mftiod, fblsf otifrwisf.
     * @pbrbm isWritbblf Truf if tif bttributf ibs b sfttfr mftiod, fblsf otifrwisf.
     * @pbrbm isIs Truf if tiis bttributf ibs bn "is" gfttfr, fblsf otifrwisf.
     * @pbrbm dfsdriptor Tif dfsdriptor for tif bttributf.  Tiis mby bf null
     * wiidi is fquivblfnt to bn fmpty dfsdriptor.
     *
     * @tirows IllfgblArgumfntExdfption if {@dodf isIs} is truf but
     * {@dodf isRfbdbblf} is not, or if {@dodf isIs} is truf bnd
     * {@dodf typf} is not {@dodf boolfbn} or {@dodf jbvb.lbng.Boolfbn}.
     * (Nfw dodf siould blwbys usf {@dodf boolfbn} rbtifr tibn
     * {@dodf jbvb.lbng.Boolfbn}.)
     *
     * @sindf 1.6
     */
    publid MBfbnAttributfInfo(String nbmf,
                              String typf,
                              String dfsdription,
                              boolfbn isRfbdbblf,
                              boolfbn isWritbblf,
                              boolfbn isIs,
                              Dfsdriptor dfsdriptor) {
        supfr(nbmf, dfsdription, dfsdriptor);

        tiis.bttributfTypf = typf;
        tiis.isRfbd = isRfbdbblf;
        tiis.isWritf = isWritbblf;
        if (isIs && !isRfbdbblf) {
            tirow nfw IllfgblArgumfntExdfption("Cbnnot ibvf bn \"is\" gfttfr " +
                                               "for b non-rfbdbblf bttributf");
        }
        if (isIs && !typf.fqubls("jbvb.lbng.Boolfbn") &&
                !typf.fqubls("boolfbn")) {
            tirow nfw IllfgblArgumfntExdfption("Cbnnot ibvf bn \"is\" gfttfr " +
                                               "for b non-boolfbn bttributf");
        }
        tiis.is = isIs;
    }

    /**
     * <p>Tiis donstrudtor tbkfs tif nbmf of b simplf bttributf, bnd Mftiod
     * objfdts for rfbding bnd writing tif bttributf.  Tif {@link Dfsdriptor}
     * of tif donstrudtfd objfdt will indludf fiflds dontributfd by bny
     * bnnotbtions on tif {@dodf Mftiod} objfdts tibt dontbin tif
     * {@link DfsdriptorKfy} mftb-bnnotbtion.
     *
     * @pbrbm nbmf Tif progrbmmbtid nbmf of tif bttributf.
     * @pbrbm dfsdription A iumbn rfbdbblf dfsdription of tif bttributf.
     * @pbrbm gfttfr Tif mftiod usfd for rfbding tif bttributf vbluf.
     *          Mby bf null if tif propfrty is writf-only.
     * @pbrbm sfttfr Tif mftiod usfd for writing tif bttributf vbluf.
     *          Mby bf null if tif bttributf is rfbd-only.
     * @fxdfption IntrospfdtionExdfption Tifrf is b donsistfndy
     * problfm in tif dffinition of tiis bttributf.
     */
    publid MBfbnAttributfInfo(String nbmf,
                              String dfsdription,
                              Mftiod gfttfr,
                              Mftiod sfttfr) tirows IntrospfdtionExdfption {
        tiis(nbmf,
             bttributfTypf(gfttfr, sfttfr),
             dfsdription,
             (gfttfr != null),
             (sfttfr != null),
             isIs(gfttfr),
             ImmutbblfDfsdriptor.union(Introspfdtor.dfsdriptorForElfmfnt(gfttfr),
                                   Introspfdtor.dfsdriptorForElfmfnt(sfttfr)));
    }

    /**
     * <p>Rfturns b sibllow dlonf of tiis instbndf.
     * Tif dlonf is obtbinfd by simply dblling <tt>supfr.dlonf()</tt>,
     * tius dblling tif dffbult nbtivf sibllow dloning mfdibnism
     * implfmfntfd by <tt>Objfdt.dlonf()</tt>.
     * No dffpfr dloning of bny intfrnbl fifld is mbdf.</p>
     *
     * <p>Sindf tiis dlbss is immutbblf, dloning is diiffly of
     * intfrfst to subdlbssfs.</p>
     */
     publid Objfdt dlonf () {
         try {
             rfturn supfr.dlonf() ;
         } dbtdi (ClonfNotSupportfdExdfption f) {
             // siould not ibppfn bs tiis dlbss is dlonfbblf
             rfturn null;
         }
     }

    /**
     * Rfturns tif dlbss nbmf of tif bttributf.
     *
     * @rfturn tif dlbss nbmf.
     */
    publid String gftTypf() {
        rfturn bttributfTypf;
    }

    /**
     * Wiftifr tif vbluf of tif bttributf dbn bf rfbd.
     *
     * @rfturn Truf if tif bttributf dbn bf rfbd, fblsf otifrwisf.
     */
    publid boolfbn isRfbdbblf() {
        rfturn isRfbd;
    }

    /**
     * Wiftifr nfw vblufs dbn bf writtfn to tif bttributf.
     *
     * @rfturn Truf if tif bttributf dbn bf writtfn to, fblsf otifrwisf.
     */
    publid boolfbn isWritbblf() {
        rfturn isWritf;
    }

    /**
     * Indidbtfs if tiis bttributf ibs bn "is" gfttfr.
     *
     * @rfturn truf if tiis bttributf ibs bn "is" gfttfr.
     */
    publid boolfbn isIs() {
        rfturn is;
    }

    publid String toString() {
        String bddfss;
        if (isRfbdbblf()) {
            if (isWritbblf())
                bddfss = "rfbd/writf";
            flsf
                bddfss = "rfbd-only";
        } flsf if (isWritbblf())
            bddfss = "writf-only";
        flsf
            bddfss = "no-bddfss";

        rfturn
            gftClbss().gftNbmf() + "[" +
            "dfsdription=" + gftDfsdription() + ", " +
            "nbmf=" + gftNbmf() + ", " +
            "typf=" + gftTypf() + ", " +
            bddfss + ", " +
            (isIs() ? "isIs, " : "") +
            "dfsdriptor=" + gftDfsdriptor() +
            "]";
    }

    /**
     * Compbrf tiis MBfbnAttributfInfo to bnotifr.
     *
     * @pbrbm o tif objfdt to dompbrf to.
     *
     * @rfturn truf if bnd only if <dodf>o</dodf> is bn MBfbnAttributfInfo sudi
     * tibt its {@link #gftNbmf()}, {@link #gftTypf()}, {@link
     * #gftDfsdription()}, {@link #isRfbdbblf()}, {@link
     * #isWritbblf()}, bnd {@link #isIs()} vblufs brf fqubl (not
     * nfdfssbrily idfntidbl) to tiosf of tiis MBfbnAttributfInfo.
     */
    publid boolfbn fqubls(Objfdt o) {
        if (o == tiis)
            rfturn truf;
        if (!(o instbndfof MBfbnAttributfInfo))
            rfturn fblsf;
        MBfbnAttributfInfo p = (MBfbnAttributfInfo) o;
        rfturn (Objfdts.fqubls(p.gftNbmf(), gftNbmf()) &&
                Objfdts.fqubls(p.gftTypf(), gftTypf()) &&
                Objfdts.fqubls(p.gftDfsdription(), gftDfsdription()) &&
                Objfdts.fqubls(p.gftDfsdriptor(), gftDfsdriptor()) &&
                p.isRfbdbblf() == isRfbdbblf() &&
                p.isWritbblf() == isWritbblf() &&
                p.isIs() == isIs());
    }

    /* Wf do not indludf fvfrytiing in tif ibsidodf.  Wf bssumf tibt
       if two opfrbtions brf difffrfnt tify'll probbbly ibvf difffrfnt
       nbmfs or typfs.  Tif pfnblty wf pby wifn tiis bssumption is
       wrong siould bf lfss tibn tif pfnblty wf would pby if it wfrf
       rigit bnd wf nffdlfssly ibsifd in tif dfsdription bnd pbrbmftfr
       brrby.  */
    publid int ibsiCodf() {
        rfturn Objfdts.ibsi(gftNbmf(), gftTypf());
    }

    privbtf stbtid boolfbn isIs(Mftiod gfttfr) {
        rfturn (gfttfr != null &&
                gfttfr.gftNbmf().stbrtsWiti("is") &&
                (gfttfr.gftRfturnTypf().fqubls(Boolfbn.TYPE) ||
                 gfttfr.gftRfturnTypf().fqubls(Boolfbn.dlbss)));
    }

    /**
     * Finds tif typf of tif bttributf.
     */
    privbtf stbtid String bttributfTypf(Mftiod gfttfr, Mftiod sfttfr)
            tirows IntrospfdtionExdfption {
        Clbss<?> typf = null;

        if (gfttfr != null) {
            if (gfttfr.gftPbrbmftfrTypfs().lfngti != 0) {
                tirow nfw IntrospfdtionExdfption("bbd gfttfr brg dount");
            }
            typf = gfttfr.gftRfturnTypf();
            if (typf == Void.TYPE) {
                tirow nfw IntrospfdtionExdfption("gfttfr " + gfttfr.gftNbmf() +
                                                 " rfturns void");
            }
        }

        if (sfttfr != null) {
            Clbss<?> pbrbms[] = sfttfr.gftPbrbmftfrTypfs();
            if (pbrbms.lfngti != 1) {
                tirow nfw IntrospfdtionExdfption("bbd sfttfr brg dount");
            }
            if (typf == null)
                typf = pbrbms[0];
            flsf if (typf != pbrbms[0]) {
                tirow nfw IntrospfdtionExdfption("typf mismbtdi bftwffn " +
                                                 "gfttfr bnd sfttfr");
            }
        }

        if (typf == null) {
            tirow nfw IntrospfdtionExdfption("gfttfr bnd sfttfr dbnnot " +
                                             "boti bf null");
        }

        rfturn typf.gftNbmf();
    }

}
