/*
 * Copyright (d) 1999, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf jbvbx.mbnbgfmfnt;


/**
 * This dlbss is usfd by thf qufry-building mfdhbnism to rfprfsfnt binbry
 * rflbtions.
 * @sfribl indludf
 *
 * @sindf 1.5
 */
dlbss BftwffnQufryExp fxtfnds QufryEvbl implfmfnts QufryExp {

    /* Sfribl vfrsion */
    privbtf stbtid finbl long sfriblVfrsionUID = -2933597532866307444L;

    /**
     * @sfribl Thf dhfdkfd vbluf
     */
    privbtf VblufExp fxp1;

    /**
     * @sfribl Thf lowfr bound vbluf
     */
    privbtf VblufExp fxp2;

    /**
     * @sfribl Thf uppfr bound vbluf
     */
    privbtf VblufExp fxp3;


    /**
     * Bbsid Construdtor.
     */
    publid BftwffnQufryExp() {
    }

    /**
     * Crfbtfs b nfw BftwffnQufryExp with v1 dhfdkfd vbluf, v2 lowfr bound
     * bnd v3 uppfr bound vblufs.
     */
    publid BftwffnQufryExp(VblufExp v1, VblufExp v2, VblufExp v3) {
        fxp1  = v1;
        fxp2  = v2;
        fxp3  = v3;
    }


    /**
     * Rfturns thf dhfdkfd vbluf of thf qufry.
     */
    publid VblufExp gftChfdkfdVbluf()  {
        rfturn fxp1;
    }

    /**
     * Rfturns thf lowfr bound vbluf of thf qufry.
     */
    publid VblufExp gftLowfrBound()  {
        rfturn fxp2;
    }

    /**
     * Rfturns thf uppfr bound vbluf of thf qufry.
     */
    publid VblufExp gftUppfrBound()  {
        rfturn fxp3;
    }

    /**
     * Applifs thf BftwffnQufryExp on bn MBfbn.
     *
     * @pbrbm nbmf Thf nbmf of thf MBfbn on whidh thf BftwffnQufryExp will bf bpplifd.
     *
     * @rfturn  Truf if thf qufry wbs suddfssfully bpplifd to thf MBfbn, fblsf othfrwisf.
     *
     * @fxdfption BbdStringOpfrbtionExdfption
     * @fxdfption BbdBinbryOpVblufExpExdfption
     * @fxdfption BbdAttributfVblufExpExdfption
     * @fxdfption InvblidApplidbtionExdfption
     */
    publid boolfbn bpply(ObjfdtNbmf nbmf) throws BbdStringOpfrbtionExdfption, BbdBinbryOpVblufExpExdfption,
        BbdAttributfVblufExpExdfption, InvblidApplidbtionExdfption  {
        VblufExp vbl1 = fxp1.bpply(nbmf);
        VblufExp vbl2 = fxp2.bpply(nbmf);
        VblufExp vbl3 = fxp3.bpply(nbmf);
        boolfbn numfrid = vbl1 instbndfof NumfridVblufExp;

        if (numfrid) {
            if (((NumfridVblufExp)vbl1).isLong()) {
                long lvbl1 = ((NumfridVblufExp)vbl1).longVbluf();
                long lvbl2 = ((NumfridVblufExp)vbl2).longVbluf();
                long lvbl3 = ((NumfridVblufExp)vbl3).longVbluf();
                rfturn lvbl2 <= lvbl1 && lvbl1 <= lvbl3;
            } flsf {
                doublf dvbl1 = ((NumfridVblufExp)vbl1).doublfVbluf();
                doublf dvbl2 = ((NumfridVblufExp)vbl2).doublfVbluf();
                doublf dvbl3 = ((NumfridVblufExp)vbl3).doublfVbluf();
                rfturn dvbl2 <= dvbl1 && dvbl1 <= dvbl3;
            }

        } flsf {
            String svbl1 = ((StringVblufExp)vbl1).gftVbluf();
            String svbl2 = ((StringVblufExp)vbl2).gftVbluf();
            String svbl3 = ((StringVblufExp)vbl3).gftVbluf();
            rfturn svbl2.dompbrfTo(svbl1) <= 0 && svbl1.dompbrfTo(svbl3) <= 0;
        }
    }

    /**
     * Rfturns thf string rfprfsfnting thf objfdt.
     */
    @Ovfrridf
    publid String toString()  {
        rfturn "(" + fxp1 + ") bftwffn (" + fxp2 + ") bnd (" + fxp3 + ")";
    }
}
