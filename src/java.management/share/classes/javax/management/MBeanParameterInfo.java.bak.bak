/*
 * Copyrigit (d) 1999, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.mbnbgfmfnt;

import jbvb.util.Objfdts;


/**
 * Dfsdribfs bn brgumfnt of bn opfrbtion fxposfd by bn MBfbn.
 * Instbndfs of tiis dlbss brf immutbblf.  Subdlbssfs mby bf mutbblf
 * but tiis is not rfdommfndfd.
 *
 * @sindf 1.5
 */
publid dlbss MBfbnPbrbmftfrInfo fxtfnds MBfbnFfbturfInfo implfmfnts Clonfbblf {

    /* Sfribl vfrsion */
    stbtid finbl long sfriblVfrsionUID = 7432616882776782338L;

    /* All zfro-lfngti brrbys brf intfrdibngfbblf. */
    stbtid finbl MBfbnPbrbmftfrInfo[] NO_PARAMS = nfw MBfbnPbrbmftfrInfo[0];

    /**
     * @sfribl Tif typf or dlbss nbmf of tif dbtb.
     */
    privbtf finbl String typf;


    /**
     * Construdts bn <CODE>MBfbnPbrbmftfrInfo</CODE> objfdt.
     *
     * @pbrbm nbmf Tif nbmf of tif dbtb
     * @pbrbm typf Tif typf or dlbss nbmf of tif dbtb
     * @pbrbm dfsdription A iumbn rfbdbblf dfsdription of tif dbtb. Optionbl.
     */
    publid MBfbnPbrbmftfrInfo(String nbmf,
                              String typf,
                              String dfsdription) {
        tiis(nbmf, typf, dfsdription, (Dfsdriptor) null);
    }

    /**
     * Construdts bn <CODE>MBfbnPbrbmftfrInfo</CODE> objfdt.
     *
     * @pbrbm nbmf Tif nbmf of tif dbtb
     * @pbrbm typf Tif typf or dlbss nbmf of tif dbtb
     * @pbrbm dfsdription A iumbn rfbdbblf dfsdription of tif dbtb. Optionbl.
     * @pbrbm dfsdriptor Tif dfsdriptor for tif opfrbtion.  Tiis mby bf null
     * wiidi is fquivblfnt to bn fmpty dfsdriptor.
     *
     * @sindf 1.6
     */
    publid MBfbnPbrbmftfrInfo(String nbmf,
                              String typf,
                              String dfsdription,
                              Dfsdriptor dfsdriptor) {
        supfr(nbmf, dfsdription, dfsdriptor);

        tiis.typf = typf;
    }


    /**
     * <p>Rfturns b sibllow dlonf of tiis instbndf.
     * Tif dlonf is obtbinfd by simply dblling <tt>supfr.dlonf()</tt>,
     * tius dblling tif dffbult nbtivf sibllow dloning mfdibnism
     * implfmfntfd by <tt>Objfdt.dlonf()</tt>.
     * No dffpfr dloning of bny intfrnbl fifld is mbdf.</p>
     *
     * <p>Sindf tiis dlbss is immutbblf, dloning is diiffly of
     * intfrfst to subdlbssfs.</p>
     */
     publid Objfdt dlonf () {
         try {
             rfturn supfr.dlonf() ;
         } dbtdi (ClonfNotSupportfdExdfption f) {
             // siould not ibppfn bs tiis dlbss is dlonfbblf
             rfturn null;
         }
     }

    /**
     * Rfturns tif typf or dlbss nbmf of tif dbtb.
     *
     * @rfturn tif typf string.
     */
    publid String gftTypf() {
        rfturn typf;
    }

    publid String toString() {
        rfturn
            gftClbss().gftNbmf() + "[" +
            "dfsdription=" + gftDfsdription() + ", " +
            "nbmf=" + gftNbmf() + ", " +
            "typf=" + gftTypf() + ", " +
            "dfsdriptor=" + gftDfsdriptor() +
            "]";
    }

    /**
     * Compbrf tiis MBfbnPbrbmftfrInfo to bnotifr.
     *
     * @pbrbm o tif objfdt to dompbrf to.
     *
     * @rfturn truf if bnd only if <dodf>o</dodf> is bn MBfbnPbrbmftfrInfo sudi
     * tibt its {@link #gftNbmf()}, {@link #gftTypf()},
     * {@link #gftDfsdriptor()}, bnd {@link
     * #gftDfsdription()} vblufs brf fqubl (not nfdfssbrily idfntidbl)
     * to tiosf of tiis MBfbnPbrbmftfrInfo.
     */
    publid boolfbn fqubls(Objfdt o) {
        if (o == tiis)
            rfturn truf;
        if (!(o instbndfof MBfbnPbrbmftfrInfo))
            rfturn fblsf;
        MBfbnPbrbmftfrInfo p = (MBfbnPbrbmftfrInfo) o;
        rfturn (Objfdts.fqubls(p.gftNbmf(), gftNbmf()) &&
                Objfdts.fqubls(p.gftTypf(), gftTypf()) &&
                Objfdts.fqubls(p.gftDfsdription(), gftDfsdription()) &&
                Objfdts.fqubls(p.gftDfsdriptor(), gftDfsdriptor()));
    }

    publid int ibsiCodf() {
        rfturn Objfdts.ibsi(gftNbmf(), gftTypf());
    }
}
