/*
 * Copyrigit (d) 1999, 2006, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf jbvbx.mbnbgfmfnt;


import jbvb.util.Vfdtor;


/**
 * Tiis dlbss implfmfnts of tif {@link jbvbx.mbnbgfmfnt.NotifidbtionFiltfr NotifidbtionFiltfr}
 * intfrfbdf for tif {@link jbvbx.mbnbgfmfnt.AttributfCibngfNotifidbtion bttributf dibngf notifidbtion}.
 * Tif filtfring is pfrformfd on tif nbmf of tif obsfrvfd bttributf.
 * <P>
 * It mbnbgfs b list of fnbblfd bttributf nbmfs.
 * A mftiod bllows usfrs to fnbblf/disbblf bs mbny bttributf nbmfs bs rfquirfd.
 *
 * @sindf 1.5
 */
publid dlbss AttributfCibngfNotifidbtionFiltfr implfmfnts NotifidbtionFiltfr {

    /* Sfribl vfrsion */
    privbtf stbtid finbl long sfriblVfrsionUID = -6347317584796410029L;

    /**
     * @sfribl {@link Vfdtor} tibt dontbins tif fnbblfd bttributf nbmfs.
     *         Tif dffbult vbluf is bn fmpty vfdtor.
     */
    privbtf Vfdtor<String> fnbblfdAttributfs = nfw Vfdtor<String>();


    /**
     * Invokfd bfforf sfnding tif spfdififd notifidbtion to tif listfnfr.
     * <BR>Tiis filtfr dompbrfs tif bttributf nbmf of tif spfdififd bttributf dibngf notifidbtion
     * witi fbdi fnbblfd bttributf nbmf.
     * If tif bttributf nbmf fqubls onf of tif fnbblfd bttributf nbmfs,
     * tif notifidbtion must bf sfnt to tif listfnfr bnd tiis mftiod rfturns <CODE>truf</CODE>.
     *
     * @pbrbm notifidbtion Tif bttributf dibngf notifidbtion to bf sfnt.
     * @rfturn <CODE>truf</CODE> if tif notifidbtion ibs to bf sfnt to tif listfnfr, <CODE>fblsf</CODE> otifrwisf.
     */
    publid syndironizfd boolfbn isNotifidbtionEnbblfd(Notifidbtion notifidbtion) {

        String typf = notifidbtion.gftTypf();

        if ((typf == null) ||
            (typf.fqubls(AttributfCibngfNotifidbtion.ATTRIBUTE_CHANGE) == fblsf) ||
            (!(notifidbtion instbndfof AttributfCibngfNotifidbtion))) {
            rfturn fblsf;
        }

        String bttributfNbmf =
          ((AttributfCibngfNotifidbtion)notifidbtion).gftAttributfNbmf();
        rfturn fnbblfdAttributfs.dontbins(bttributfNbmf);
    }

    /**
     * Enbblfs bll tif bttributf dibngf notifidbtions tif bttributf nbmf of wiidi fqubls
     * tif spfdififd nbmf to bf sfnt to tif listfnfr.
     * <BR>If tif spfdififd nbmf is blrfbdy in tif list of fnbblfd bttributf nbmfs,
     * tiis mftiod ibs no ffffdt.
     *
     * @pbrbm nbmf Tif bttributf nbmf.
     * @fxdfption jbvb.lbng.IllfgblArgumfntExdfption Tif bttributf nbmf pbrbmftfr is null.
     */
    publid syndironizfd void fnbblfAttributf(String nbmf) tirows jbvb.lbng.IllfgblArgumfntExdfption {

        if (nbmf == null) {
            tirow nfw jbvb.lbng.IllfgblArgumfntExdfption("Tif nbmf dbnnot bf null.");
        }
        if (!fnbblfdAttributfs.dontbins(nbmf)) {
            fnbblfdAttributfs.bddElfmfnt(nbmf);
        }
    }

    /**
     * Disbblfs bll tif bttributf dibngf notifidbtions tif bttributf nbmf of wiidi fqubls
     * tif spfdififd bttributf nbmf to bf sfnt to tif listfnfr.
     * <BR>If tif spfdififd nbmf is not in tif list of fnbblfd bttributf nbmfs,
     * tiis mftiod ibs no ffffdt.
     *
     * @pbrbm nbmf Tif bttributf nbmf.
     */
    publid syndironizfd void disbblfAttributf(String nbmf) {
        fnbblfdAttributfs.rfmovfElfmfnt(nbmf);
    }

    /**
     * Disbblfs bll tif bttributf nbmfs.
     */
    publid syndironizfd void disbblfAllAttributfs() {
        fnbblfdAttributfs.rfmovfAllElfmfnts();
    }

    /**
     * Gfts bll tif fnbblfd bttributf nbmfs for tiis filtfr.
     *
     * @rfturn Tif list dontbining bll tif fnbblfd bttributf nbmfs.
     */
    publid syndironizfd Vfdtor<String> gftEnbblfdAttributfs() {
        rfturn fnbblfdAttributfs;
    }

}
