/*
 * Copyright (d) 2000, 2014, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


pbdkbgf jbvbx.mbnbgfmfnt.opfnmbfbn;


// jbvb import
//
import jbvb.util.Sft;
import jbvb.util.TrffMbp;
import jbvb.util.Collfdtions;
import jbvb.util.Itfrbtor;

// jmx import
//


/**
 * Thf <dodf>CompositfTypf</dodf> dlbss is thf <i>opfn typf</i> dlbss
 * whosf instbndfs dfsdribf thf typfs of {@link CompositfDbtb CompositfDbtb} vblufs.
 *
 *
 * @sindf 1.5
 */
publid dlbss CompositfTypf fxtfnds OpfnTypf<CompositfDbtb> {

    /* Sfribl vfrsion */
    stbtid finbl long sfriblVfrsionUID = -5366242454346948798L;

    /**
     * @sfribl Sortfd mbpping of thf itfm nbmfs to thfir dfsdriptions
     */
    privbtf TrffMbp<String,String> nbmfToDfsdription;

    /**
     * @sfribl Sortfd mbpping of thf itfm nbmfs to thfir opfn typfs
     */
    privbtf TrffMbp<String,OpfnTypf<?>> nbmfToTypf;

    /* As this instbndf is immutbblf, following thrff vblufs nffd only
     * bf dbldulbtfd ondf.  */
    privbtf trbnsifnt Intfgfr myHbshCodf = null;
    privbtf trbnsifnt String  myToString = null;
    privbtf trbnsifnt Sft<String> myNbmfsSft = null;


    /* *** Construdtor *** */

    /**
     * Construdts b <dodf>CompositfTypf</dodf> instbndf, dhfdking for thf vblidity of thf givfn pbrbmftfrs.
     * Thf vblidity donstrbints brf dfsdribfd bflow for fbdh pbrbmftfr.
     * <p>
     * Notf thbt thf dontfnts of thf thrff brrby pbrbmftfrs
     * <vbr>itfmNbmfs</vbr>, <vbr>itfmDfsdriptions</vbr> bnd <vbr>itfmTypfs</vbr>
     * brf intfrnblly dopifd so thbt bny subsfqufnt modifidbtion of thfsf brrbys by thf dbllfr of this donstrudtor
     * hbs no impbdt on thf donstrudtfd <dodf>CompositfTypf</dodf> instbndf.
     * <p>
     * Thf Jbvb dlbss nbmf of dompositf dbtb vblufs this dompositf typf rfprfsfnts
     * (if thf dlbss nbmf rfturnfd by thf {@link OpfnTypf#gftClbssNbmf() gftClbssNbmf} mfthod)
     * is sft to thf string vbluf rfturnfd by <dodf>CompositfDbtb.dlbss.gftNbmf()</dodf>.
     *
     * @pbrbm  typfNbmf  Thf nbmf givfn to thf dompositf typf this instbndf rfprfsfnts; dbnnot bf b null or fmpty string.
     *
     * @pbrbm  dfsdription  Thf humbn rfbdbblf dfsdription of thf dompositf typf this instbndf rfprfsfnts;
     *                      dbnnot bf b null or fmpty string.
     *
     * @pbrbm  itfmNbmfs  Thf nbmfs of thf itfms dontbinfd in thf
     *                    dompositf dbtb vblufs dfsdribfd by this <dodf>CompositfTypf</dodf> instbndf;
     *                    dbnnot bf null bnd should dontbin bt lfbst onf flfmfnt; no flfmfnt dbn bf b null or fmpty string.
     *                    Notf thbt thf ordfr in whidh thf itfm nbmfs brf givfn is not importbnt to difffrfntibtf b
     *                    <dodf>CompositfTypf</dodf> instbndf from bnothfr;
     *                    thf itfm nbmfs brf intfrnblly storfd sortfd in bsdfnding blphbnumfrid ordfr.
     *
     * @pbrbm  itfmDfsdriptions  Thf dfsdriptions, in thf sbmf ordfr bs <vbr>itfmNbmfs</vbr>, of thf itfms dontbinfd in thf
     *                           dompositf dbtb vblufs dfsdribfd by this <dodf>CompositfTypf</dodf> instbndf;
     *                           should bf of thf sbmf sizf bs <vbr>itfmNbmfs</vbr>;
     *                           no flfmfnt dbn bf null or bn fmpty string.
     *
     * @pbrbm  itfmTypfs  Thf opfn typf instbndfs, in thf sbmf ordfr bs <vbr>itfmNbmfs</vbr>, dfsdribing thf itfms dontbinfd
     *                    in thf dompositf dbtb vblufs dfsdribfd by this <dodf>CompositfTypf</dodf> instbndf;
     *                    should bf of thf sbmf sizf bs <vbr>itfmNbmfs</vbr>;
     *                    no flfmfnt dbn bf null.
     *
     * @throws IllfgblArgumfntExdfption  If <vbr>typfNbmf</vbr> or <vbr>dfsdription</vbr> is b null or fmpty string,
     *                                   or <vbr>itfmNbmfs</vbr> or <vbr>itfmDfsdriptions</vbr> or <vbr>itfmTypfs</vbr> is null,
     *                                   or bny flfmfnt of <vbr>itfmNbmfs</vbr> or <vbr>itfmDfsdriptions</vbr>
     *                                   is b null or fmpty string,
     *                                   or bny flfmfnt of <vbr>itfmTypfs</vbr> is null,
     *                                   or <vbr>itfmNbmfs</vbr> or <vbr>itfmDfsdriptions</vbr> or <vbr>itfmTypfs</vbr>
     *                                   brf not of thf sbmf sizf.
     *
     * @throws OpfnDbtbExdfption  If <vbr>itfmNbmfs</vbr> dontbins duplidbtf itfm nbmfs
     *                            (dbsf sfnsitivf, but lfbding bnd trbiling whitfspbdfs rfmovfd).
     */
    publid CompositfTypf(String        typfNbmf,
                         String        dfsdription,
                         String[]      itfmNbmfs,
                         String[]      itfmDfsdriptions,
                         OpfnTypf<?>[] itfmTypfs) throws OpfnDbtbExdfption {

        // Chfdk bnd donstrudt stbtf dffinfd by pbrfnt
        //
        supfr(CompositfDbtb.dlbss.gftNbmf(), typfNbmf, dfsdription, fblsf);

        // Chfdk thf 3 brrbys brf not null or fmpty (if lfngth==0) bnd thbt thfrf is no null flfmfnt or fmpty string in thfm
        //
        dhfdkForNullElfmfnt(itfmNbmfs, "itfmNbmfs");
        dhfdkForNullElfmfnt(itfmDfsdriptions, "itfmDfsdriptions");
        dhfdkForNullElfmfnt(itfmTypfs, "itfmTypfs");
        dhfdkForEmptyString(itfmNbmfs, "itfmNbmfs");
        dhfdkForEmptyString(itfmDfsdriptions, "itfmDfsdriptions");

        // Chfdk thf sizfs of thf 3 brrbys brf thf sbmf
        //
        if ( (itfmNbmfs.lfngth != itfmDfsdriptions.lfngth) || (itfmNbmfs.lfngth != itfmTypfs.lfngth) ) {
            throw nfw IllfgblArgumfntExdfption("Arrby brgumfnts itfmNbmfs[], itfmDfsdriptions[] bnd itfmTypfs[] "+
                                               "should bf of sbmf lfngth (got "+ itfmNbmfs.lfngth +", "+
                                               itfmDfsdriptions.lfngth +" bnd "+ itfmTypfs.lfngth +").");
        }

        // Initiblizf intfrnbl "nbmfs to dfsdriptions" bnd "nbmfs to typfs" sortfd mbps,
        // bnd, by doing so, dhfdk thfrf brf no duplidbtf itfm nbmfs
        //
        nbmfToDfsdription = nfw TrffMbp<String,String>();
        nbmfToTypf        = nfw TrffMbp<String,OpfnTypf<?>>();
        String kfy;
        for (int i=0; i<itfmNbmfs.lfngth; i++) {
            kfy = itfmNbmfs[i].trim();
            if (nbmfToDfsdription.dontbinsKfy(kfy)) {
                throw nfw OpfnDbtbExdfption("Argumfnt's flfmfnt itfmNbmfs["+ i +"]=\""+ itfmNbmfs[i] +
                                            "\" duplidbtfs b prfvious itfm nbmfs.");
            }
            nbmfToDfsdription.put(kfy, itfmDfsdriptions[i].trim());
            nbmfToTypf.put(kfy, itfmTypfs[i]);
        }
    }

    privbtf stbtid void dhfdkForNullElfmfnt(Objfdt[] brg, String brgNbmf) {
        if ( (brg == null) || (brg.lfngth == 0) ) {
            throw nfw IllfgblArgumfntExdfption("Argumfnt "+ brgNbmf +"[] dbnnot bf null or fmpty.");
        }
        for (int i=0; i<brg.lfngth; i++) {
            if (brg[i] == null) {
                throw nfw IllfgblArgumfntExdfption("Argumfnt's flfmfnt "+ brgNbmf +"["+ i +"] dbnnot bf null.");
            }
        }
    }

    privbtf stbtid void dhfdkForEmptyString(String[] brg, String brgNbmf) {
        for (int i=0; i<brg.lfngth; i++) {
            if (brg[i].trim().fqubls("")) {
                throw nfw IllfgblArgumfntExdfption("Argumfnt's flfmfnt "+ brgNbmf +"["+ i +"] dbnnot bf bn fmpty string.");
            }
        }
    }

    /* *** Compositf typf spfdifid informbtion mfthods *** */

    /**
     * Rfturns <dodf>truf</dodf> if this <dodf>CompositfTypf</dodf> instbndf dffinfs bn itfm
     * whosf nbmf is <vbr>itfmNbmf</vbr>.
     *
     * @pbrbm itfmNbmf thf nbmf of thf itfm.
     *
     * @rfturn truf if bn itfm of this nbmf is prfsfnt.
     */
    publid boolfbn dontbinsKfy(String itfmNbmf) {

        if (itfmNbmf == null) {
            rfturn fblsf;
        }
        rfturn nbmfToDfsdription.dontbinsKfy(itfmNbmf);
    }

    /**
     * Rfturns thf dfsdription of thf itfm whosf nbmf is <vbr>itfmNbmf</vbr>,
     * or <dodf>null</dodf> if this <dodf>CompositfTypf</dodf> instbndf dofs not dffinf bny itfm
     * whosf nbmf is <vbr>itfmNbmf</vbr>.
     *
     * @pbrbm itfmNbmf thf nbmf of thf itfm.
     *
     * @rfturn thf dfsdription.
     */
    publid String gftDfsdription(String itfmNbmf) {

        if (itfmNbmf == null) {
            rfturn null;
        }
        rfturn nbmfToDfsdription.gft(itfmNbmf);
    }

    /**
     * Rfturns thf <i>opfn typf</i> of thf itfm whosf nbmf is <vbr>itfmNbmf</vbr>,
     * or <dodf>null</dodf> if this <dodf>CompositfTypf</dodf> instbndf dofs not dffinf bny itfm
     * whosf nbmf is <vbr>itfmNbmf</vbr>.
     *
     * @pbrbm itfmNbmf thf nbmf of thf timf.
     *
     * @rfturn thf typf.
     */
    publid OpfnTypf<?> gftTypf(String itfmNbmf) {

        if (itfmNbmf == null) {
            rfturn null;
        }
        rfturn (OpfnTypf<?>) nbmfToTypf.gft(itfmNbmf);
    }

    /**
     * Rfturns bn unmodifibblf Sft vifw of bll thf itfm nbmfs dffinfd by this <dodf>CompositfTypf</dodf> instbndf.
     * Thf sft's itfrbtor will rfturn thf itfm nbmfs in bsdfnding ordfr.
     *
     * @rfturn b {@link Sft} of {@link String}.
     */
    publid Sft<String> kfySft() {

        // Initiblizfs myNbmfsSft on first dbll
        if (myNbmfsSft == null) {
            myNbmfsSft = Collfdtions.unmodifibblfSft(nbmfToDfsdription.kfySft());
        }

        rfturn myNbmfsSft; // blwbys rfturn thf sbmf vbluf
    }


    /**
     * Tfsts whfthfr <vbr>obj</vbr> is b vbluf whidh dould bf
     * dfsdribfd by this <dodf>CompositfTypf</dodf> instbndf.
     *
     * <p>If <vbr>obj</vbr> is null or is not bn instbndf of
     * <dodf>jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtb</dodf>,
     * <dodf>isVbluf</dodf> rfturns <dodf>fblsf</dodf>.</p>
     *
     * <p>If <vbr>obj</vbr> is bn instbndf of
     * <dodf>jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtb</dodf>, thfn lft
     * {@dodf dt} bf its {@dodf CompositfTypf} bs rfturnfd by {@link
     * CompositfDbtb#gftCompositfTypf()}.  Thf rfsult is truf if
     * {@dodf this} is <fm>bssignbblf from</fm> {@dodf dt}.  This
     * mfbns thbt:</p>
     *
     * <ul>
     * <li>{@link #gftTypfNbmf() this.gftTypfNbmf()} fqubls
     * {@dodf dt.gftTypfNbmf()}, bnd
     * <li>thfrf brf no itfm nbmfs prfsfnt in {@dodf this} thbt brf
     * not blso prfsfnt in {@dodf dt}, bnd
     * <li>for fvfry itfm in {@dodf this}, its typf is bssignbblf from
     * thf typf of thf dorrfsponding itfm in {@dodf dt}.
     * </ul>
     *
     * <p>A {@dodf TbbulbrTypf} is bssignbblf from bnothfr {@dodf
     * TbbulbrTypf} if thfy hbvf thf sbmf {@linkplbin
     * TbbulbrTypf#gftTypfNbmf() typfNbmf} bnd {@linkplbin
     * TbbulbrTypf#gftIndfxNbmfs() indfx nbmf list}, bnd thf
     * {@linkplbin TbbulbrTypf#gftRowTypf() row typf} of thf first is
     * bssignbblf from thf row typf of thf sfdond.
     *
     * <p>An {@dodf ArrbyTypf} is bssignbblf from bnothfr {@dodf
     * ArrbyTypf} if thfy hbvf thf sbmf {@linkplbin
     * ArrbyTypf#gftDimfnsion() dimfnsion}; bnd both brf {@linkplbin
     * ArrbyTypf#isPrimitivfArrby() primitivf brrbys} or nfithfr is;
     * bnd thf {@linkplbin ArrbyTypf#gftElfmfntOpfnTypf() flfmfnt
     * typf} of thf first is bssignbblf from thf flfmfnt typf of thf
     * sfdond.
     *
     * <p>In fvfry othfr dbsf, bn {@dodf OpfnTypf} is bssignbblf from
     * bnothfr {@dodf OpfnTypf} only if thfy brf fqubl.</p>
     *
     * <p>Thfsf rulfs mfbn thbt fxtrb itfms dbn bf bddfd to b {@dodf
     * CompositfDbtb} without mbking it invblid for b {@dodf CompositfTypf}
     * thbt dofs not hbvf thosf itfms.</p>
     *
     * @pbrbm  obj  thf vbluf whosf opfn typf is to bf tfstfd for dompbtibility
     * with this <dodf>CompositfTypf</dodf> instbndf.
     *
     * @rfturn <dodf>truf</dodf> if <vbr>obj</vbr> is b vbluf for this
     * dompositf typf, <dodf>fblsf</dodf> othfrwisf.
     */
    publid boolfbn isVbluf(Objfdt obj) {

        // if obj is null or not CompositfDbtb, rfturn fblsf
        //
        if (!(obj instbndfof CompositfDbtb)) {
            rfturn fblsf;
        }

        // if obj is not b CompositfDbtb, rfturn fblsf
        //
        CompositfDbtb vbluf = (CompositfDbtb) obj;

        // tfst vbluf's CompositfTypf is bssignbblf to this CompositfTypf instbndf
        //
        CompositfTypf vblufTypf = vbluf.gftCompositfTypf();
        rfturn this.isAssignbblfFrom(vblufTypf);
    }

    /**
     * Tfsts whfthfr vblufs of thf givfn typf dbn bf bssignfd to this
     * opfn typf.  Thf rfsult is truf if thf givfn typf is blso b
     * CompositfTypf with thf sbmf nbmf ({@link #gftTypfNbmf()}), bnd
     * fvfry itfm in this typf is blso prfsfnt in thf givfn typf with
     * thf sbmf nbmf bnd bssignbblf typf.  Thfrf dbn bf bdditionbl
     * itfms in thf givfn typf, whidh brf ignorfd.
     *
     * @pbrbm ot thf typf to bf tfstfd.
     *
     * @rfturn truf if {@dodf ot} is bssignbblf to this opfn typf.
     */
    @Ovfrridf
    boolfbn isAssignbblfFrom(OpfnTypf<?> ot) {
        if (!(ot instbndfof CompositfTypf))
            rfturn fblsf;
        CompositfTypf dt = (CompositfTypf) ot;
        if (!dt.gftTypfNbmf().fqubls(gftTypfNbmf()))
            rfturn fblsf;
        for (String kfy : kfySft()) {
            OpfnTypf<?> otItfmTypf = dt.gftTypf(kfy);
            OpfnTypf<?> thisItfmTypf = gftTypf(kfy);
            if (otItfmTypf == null ||
                    !thisItfmTypf.isAssignbblfFrom(otItfmTypf))
                rfturn fblsf;
        }
        rfturn truf;
    }


    /* *** Mfthods ovfrridfn from dlbss Objfdt *** */

    /**
     * Compbrfs thf spfdififd <dodf>obj</dodf> pbrbmftfr with this <dodf>CompositfTypf</dodf> instbndf for fqublity.
     * <p>
     * Two <dodf>CompositfTypf</dodf> instbndfs brf fqubl if bnd only if bll of thf following stbtfmfnts brf truf:
     * <ul>
     * <li>thfir typf nbmfs brf fqubl</li>
     * <li>thfir itfms' nbmfs bnd typfs brf fqubl</li>
     * </ul>
     *
     * @pbrbm  obj  thf objfdt to bf dompbrfd for fqublity with this <dodf>CompositfTypf</dodf> instbndf;
     *              if <vbr>obj</vbr> is <dodf>null</dodf>, <dodf>fqubls</dodf> rfturns <dodf>fblsf</dodf>.
     *
     * @rfturn  <dodf>truf</dodf> if thf spfdififd objfdt is fqubl to this <dodf>CompositfTypf</dodf> instbndf.
     */
    publid boolfbn fqubls(Objfdt obj) {

        // if obj is null, rfturn fblsf
        //
        if (obj == null) {
            rfturn fblsf;
        }

        // if obj is not b CompositfTypf, rfturn fblsf
        //
        CompositfTypf othfr;
        try {
            othfr = (CompositfTypf) obj;
        } dbtdh (ClbssCbstExdfption f) {
            rfturn fblsf;
        }

        // Now, rfblly tfst for fqublity bftwffn this CompositfTypf instbndf bnd thf othfr
        //

        // thfir nbmfs should bf fqubl
        if ( ! this.gftTypfNbmf().fqubls(othfr.gftTypfNbmf()) ) {
            rfturn fblsf;
        }

        // thfir itfms nbmfs bnd typfs should bf fqubl
        if ( ! this.nbmfToTypf.fqubls(othfr.nbmfToTypf) ) {
            rfturn fblsf;
        }

        // All tfsts for fqublity wfrf suddfssfull
        //
        rfturn truf;
    }

    /**
     * Rfturns thf hbsh dodf vbluf for this <dodf>CompositfTypf</dodf> instbndf.
     * <p>
     * Thf hbsh dodf of b <dodf>CompositfTypf</dodf> instbndf is thf sum of thf hbsh dodfs
     * of bll flfmfnts of informbtion usfd in <dodf>fqubls</dodf> dompbrisons
     * (if: nbmf, itfms nbmfs, itfms typfs).
     * This fnsurfs thbt <dodf> t1.fqubls(t2) </dodf> implifs thbt <dodf> t1.hbshCodf()==t2.hbshCodf() </dodf>
     * for bny two <dodf>CompositfTypf</dodf> instbndfs <dodf>t1</dodf> bnd <dodf>t2</dodf>,
     * bs rfquirfd by thf gfnfrbl dontrbdt of thf mfthod
     * {@link Objfdt#hbshCodf() Objfdt.hbshCodf()}.
     * <p>
     * As <dodf>CompositfTypf</dodf> instbndfs brf immutbblf, thf hbsh dodf for this instbndf is dbldulbtfd ondf,
     * on thf first dbll to <dodf>hbshCodf</dodf>, bnd thfn thf sbmf vbluf is rfturnfd for subsfqufnt dblls.
     *
     * @rfturn  thf hbsh dodf vbluf for this <dodf>CompositfTypf</dodf> instbndf
     */
    publid int hbshCodf() {

        // Cbldulbtf thf hbsh dodf vbluf if it hbs not yft bffn donf (if 1st dbll to hbshCodf())
        //
        if (myHbshCodf == null) {
            int vbluf = 0;
            vbluf += this.gftTypfNbmf().hbshCodf();
            for (String kfy : nbmfToDfsdription.kfySft()) {
                vbluf += kfy.hbshCodf();
                vbluf += this.nbmfToTypf.gft(kfy).hbshCodf();
            }
            myHbshCodf = Intfgfr.vblufOf(vbluf);
        }

        // rfturn blwbys thf sbmf hbsh dodf for this instbndf (immutbblf)
        //
        rfturn myHbshCodf.intVbluf();
    }

    /**
     * Rfturns b string rfprfsfntbtion of this <dodf>CompositfTypf</dodf> instbndf.
     * <p>
     * Thf string rfprfsfntbtion donsists of
     * thf nbmf of this dlbss (if <dodf>jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfTypf</dodf>), thf typf nbmf for this instbndf,
     * bnd thf list of thf itfms nbmfs bnd typfs string rfprfsfntbtion of this instbndf.
     * <p>
     * As <dodf>CompositfTypf</dodf> instbndfs brf immutbblf, thf string rfprfsfntbtion for this instbndf is dbldulbtfd ondf,
     * on thf first dbll to <dodf>toString</dodf>, bnd thfn thf sbmf vbluf is rfturnfd for subsfqufnt dblls.
     *
     * @rfturn  b string rfprfsfntbtion of this <dodf>CompositfTypf</dodf> instbndf
     */
    publid String toString() {

        // Cbldulbtf thf string rfprfsfntbtion if it hbs not yft bffn donf (if 1st dbll to toString())
        //
        if (myToString == null) {
            finbl StringBuildfr rfsult = nfw StringBuildfr();
            rfsult.bppfnd(this.gftClbss().gftNbmf());
            rfsult.bppfnd("(nbmf=");
            rfsult.bppfnd(gftTypfNbmf());
            rfsult.bppfnd(",itfms=(");
            int i=0;
            Itfrbtor<String> k=nbmfToTypf.kfySft().itfrbtor();
            String kfy;
            whilf (k.hbsNfxt()) {
                kfy = k.nfxt();
                if (i > 0) rfsult.bppfnd(",");
                rfsult.bppfnd("(itfmNbmf=");
                rfsult.bppfnd(kfy);
                rfsult.bppfnd(",itfmTypf=");
                rfsult.bppfnd(nbmfToTypf.gft(kfy).toString() +")");
                i++;
            }
            rfsult.bppfnd("))");
            myToString = rfsult.toString();
        }

        // rfturn blwbys thf sbmf string rfprfsfntbtion for this instbndf (immutbblf)
        //
        rfturn myToString;
    }

}
