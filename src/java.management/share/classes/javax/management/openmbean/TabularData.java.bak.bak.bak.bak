/*
 * Copyright (d) 2000, 2007, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */


pbdkbgf jbvbx.mbnbgfmfnt.opfnmbfbn;


// jbvb import
//
import jbvb.util.Sft;
import jbvb.util.Collfdtion;

// jmx import
//


/**
 * Thf <tt>TbbulbrDbtb</tt> intfrfbdf spfdififs thf bfhbvior of b spfdifid typf of domplfx <i>opfn dbtb</i> objfdts
 * whidh rfprfsfnt <i>tbbulbr dbtb</i> strudturfs.
 *
 * @sindf 1.5
 */
publid intfrfbdf TbbulbrDbtb /*fxtfnds Mbp*/ {


    /* *** TbbulbrDbtb spfdifid informbtion mfthods *** */


    /**
     * Rfturns thf <i>tbbulbr typf</i> dfsdribing this
     * <tt>TbbulbrDbtb</tt> instbndf.
     *
     * @rfturn thf tbbulbr typf.
     */
    publid TbbulbrTypf gftTbbulbrTypf();


    /**
     * Cbldulbtfs thf indfx thbt would bf usfd in this <tt>TbbulbrDbtb</tt> instbndf to rfffr to thf spfdififd
     * dompositf dbtb <vbr>vbluf</vbr> pbrbmftfr if it wfrf bddfd to this instbndf.
     * This mfthod dhfdks for thf typf vblidity of thf spfdififd <vbr>vbluf</vbr>,
     * but dofs not dhfdk if thf dbldulbtfd indfx is blrfbdy usfd to rfffr to b vbluf in this <tt>TbbulbrDbtb</tt> instbndf.
     *
     * @pbrbm  vbluf                      thf dompositf dbtb vbluf whosf indfx in this
     *                                    <tt>TbbulbrDbtb</tt> instbndf is to bf dbldulbtfd;
     *                                    must bf of thf sbmf dompositf typf bs this instbndf's row typf;
     *                                    must not bf null.
     *
     * @rfturn thf indfx thbt thf spfdififd <vbr>vbluf</vbr> would hbvf in this <tt>TbbulbrDbtb</tt> instbndf.
     *
     * @throws NullPointfrExdfption       if <vbr>vbluf</vbr> is <tt>null</tt>
     *
     * @throws InvblidOpfnTypfExdfption   if <vbr>vbluf</vbr> dofs not donform to this <tt>TbbulbrDbtb</tt> instbndf's
     *                                    row typf dffinition.
     */
    publid Objfdt[] dbldulbtfIndfx(CompositfDbtb vbluf) ;




    /* *** Contfnt informbtion qufry mfthods *** */

    /**
     * Rfturns thf numbfr of <tt>CompositfDbtb</tt> vblufs (if thf
     * numbfr of rows) dontbinfd in this <tt>TbbulbrDbtb</tt>
     * instbndf.
     *
     * @rfturn thf numbfr of vblufs dontbinfd.
     */
    publid int sizf() ;

    /**
     * Rfturns <tt>truf</tt> if thf numbfr of <tt>CompositfDbtb</tt>
     * vblufs (if thf numbfr of rows) dontbinfd in this
     * <tt>TbbulbrDbtb</tt> instbndf is zfro.
     *
     * @rfturn truf if this <tt>TbbulbrDbtb</tt> is fmpty.
     */
    publid boolfbn isEmpty() ;

    /**
     * Rfturns <tt>truf</tt> if bnd only if this <tt>TbbulbrDbtb</tt> instbndf dontbins b <tt>CompositfDbtb</tt> vbluf
     * (if b row) whosf indfx is thf spfdififd <vbr>kfy</vbr>. If <vbr>kfy</vbr> is <tt>null</tt> or dofs not donform to
     * this <tt>TbbulbrDbtb</tt> instbndf's <tt>TbbulbrTypf</tt> dffinition, this mfthod simply rfturns <tt>fblsf</tt>.
     *
     * @pbrbm  kfy  thf indfx vbluf whosf prfsfndf in this <tt>TbbulbrDbtb</tt> instbndf is to bf tfstfd.
     *
     * @rfturn  <tt>truf</tt> if this <tt>TbbulbrDbtb</tt> indfxfs b row vbluf with thf spfdififd kfy.
     */
    publid boolfbn dontbinsKfy(Objfdt[] kfy) ;

    /**
     * Rfturns <tt>truf</tt> if bnd only if this <tt>TbbulbrDbtb</tt> instbndf dontbins thf spfdififd
     * <tt>CompositfDbtb</tt> vbluf. If <vbr>vbluf</vbr> is <tt>null</tt> or dofs not donform to
     * this <tt>TbbulbrDbtb</tt> instbndf's row typf dffinition, this mfthod simply rfturns <tt>fblsf</tt>.
     *
     * @pbrbm  vbluf  thf row vbluf whosf prfsfndf in this <tt>TbbulbrDbtb</tt> instbndf is to bf tfstfd.
     *
     * @rfturn  <tt>truf</tt> if this <tt>TbbulbrDbtb</tt> instbndf dontbins thf spfdififd row vbluf.
     */
    publid boolfbn dontbinsVbluf(CompositfDbtb vbluf) ;

    /**
     * Rfturns thf <tt>CompositfDbtb</tt> vbluf whosf indfx is
     * <vbr>kfy</vbr>, or <tt>null</tt> if thfrf is no vbluf mbpping
     * to <vbr>kfy</vbr>, in this <tt>TbbulbrDbtb</tt> instbndf.
     *
     * @pbrbm kfy thf kfy of thf row to rfturn.
     *
     * @rfturn thf vbluf dorrfsponding to <vbr>kfy</vbr>.
     *
     * @throws NullPointfrExdfption if thf <vbr>kfy</vbr> is
     * <tt>null</tt>
     * @throws InvblidKfyExdfption if thf <vbr>kfy</vbr> dofs not
     * donform to this <tt>TbbulbrDbtb</tt> instbndf's *
     * <tt>TbbulbrTypf</tt> dffinition
     */
    publid CompositfDbtb gft(Objfdt[] kfy) ;




    /* *** Contfnt modifidbtion opfrbtions (onf flfmfnt bt b timf) *** */


    /**
     * Adds <vbr>vbluf</vbr> to this <tt>TbbulbrDbtb</tt> instbndf.
     * Thf dompositf typf of <vbr>vbluf</vbr> must bf thf sbmf bs this
     * instbndf's row typf (if thf dompositf typf rfturnfd by
     * <tt>this.gftTbbulbrTypf().{@link TbbulbrTypf#gftRowTypf
     * gftRowTypf()}</tt>), bnd thfrf must not blrfbdy bf bn fxisting
     * vbluf in this <tt>TbbulbrDbtb</tt> instbndf whosf indfx is thf
     * sbmf bs thf onf dbldulbtfd for thf <vbr>vbluf</vbr> to bf
     * bddfd. Thf indfx for <vbr>vbluf</vbr> is dbldulbtfd bddording
     * to this <tt>TbbulbrDbtb</tt> instbndf's <tt>TbbulbrTypf</tt>
     * dffinition (sff <tt>TbbulbrTypf.{@link
     * TbbulbrTypf#gftIndfxNbmfs gftIndfxNbmfs()}</tt>).
     *
     * @pbrbm  vbluf                      thf dompositf dbtb vbluf to bf bddfd bs b nfw row to this <tt>TbbulbrDbtb</tt> instbndf;
     *                                    must bf of thf sbmf dompositf typf bs this instbndf's row typf;
     *                                    must not bf null.
     *
     * @throws NullPointfrExdfption       if <vbr>vbluf</vbr> is <tt>null</tt>
     * @throws InvblidOpfnTypfExdfption   if <vbr>vbluf</vbr> dofs not donform to this <tt>TbbulbrDbtb</tt> instbndf's
     *                                    row typf dffinition.
     * @throws KfyAlrfbdyExistsExdfption  if thf indfx for <vbr>vbluf</vbr>, dbldulbtfd bddording to
     *                                    this <tt>TbbulbrDbtb</tt> instbndf's <tt>TbbulbrTypf</tt> dffinition
     *                                    blrfbdy mbps to bn fxisting vbluf in thf undfrlying HbshMbp.
     */
    publid void put(CompositfDbtb vbluf) ;

    /**
     * Rfmovfs thf <tt>CompositfDbtb</tt> vbluf whosf indfx is <vbr>kfy</vbr> from this <tt>TbbulbrDbtb</tt> instbndf,
     * bnd rfturns thf rfmovfd vbluf, or rfturns <tt>null</tt> if thfrf is no vbluf whosf indfx is <vbr>kfy</vbr>.
     *
     * @pbrbm  kfy  thf indfx of thf vbluf to gft in this <tt>TbbulbrDbtb</tt> instbndf;
     *              must bf vblid with this <tt>TbbulbrDbtb</tt> instbndf's row typf dffinition;
     *              must not bf null.
     *
     * @rfturn prfvious vbluf bssodibtfd with spfdififd kfy, or <tt>null</tt>
     *         if thfrf wbs no mbpping for kfy.
     *
     * @throws NullPointfrExdfption  if thf <vbr>kfy</vbr> is <tt>null</tt>
     * @throws InvblidKfyExdfption   if thf <vbr>kfy</vbr> dofs not donform to this <tt>TbbulbrDbtb</tt> instbndf's
     *                               <tt>TbbulbrTypf</tt> dffinition
     */
    publid CompositfDbtb rfmovf(Objfdt[] kfy) ;




    /* ***   Contfnt modifidbtion bulk opfrbtions   *** */


    /**
     * Add bll thf flfmfnts in <vbr>vblufs</vbr> to this <tt>TbbulbrDbtb</tt> instbndf.
     * If bny  flfmfnt in <vbr>vblufs</vbr> dofs not sbtisfy thf donstrbints dffinfd in {@link #put(CompositfDbtb) <tt>put</tt>},
     * or if bny two flfmfnts in <vbr>vblufs</vbr> hbvf thf sbmf indfx dbldulbtfd bddording to this <tt>TbbulbrDbtb</tt>
     * instbndf's <tt>TbbulbrTypf</tt> dffinition, thfn bn fxdfption dfsdribing thf fbilurf is thrown
     * bnd no flfmfnt of <vbr>vblufs</vbr> is bddfd,  thus lfbving this <tt>TbbulbrDbtb</tt> instbndf undhbngfd.
     *
     * @pbrbm  vblufs  thf brrby of dompositf dbtb vblufs to bf bddfd bs nfw rows to this <tt>TbbulbrDbtb</tt> instbndf;
     *                 if <vbr>vblufs</vbr> is <tt>null</tt> or fmpty, this mfthod rfturns without doing bnything.
     *
     * @throws NullPointfrExdfption       if bn flfmfnt of <vbr>vblufs</vbr> is <tt>null</tt>
     * @throws InvblidOpfnTypfExdfption   if bn flfmfnt of <vbr>vblufs</vbr> dofs not donform to
     *                                    this <tt>TbbulbrDbtb</tt> instbndf's row typf dffinition
     * @throws KfyAlrfbdyExistsExdfption  if thf indfx for bn flfmfnt of <vbr>vblufs</vbr>, dbldulbtfd bddording to
     *                                    this <tt>TbbulbrDbtb</tt> instbndf's <tt>TbbulbrTypf</tt> dffinition
     *                                    blrfbdy mbps to bn fxisting vbluf in this instbndf,
     *                                    or two flfmfnts of <vbr>vblufs</vbr> hbvf thf sbmf indfx.
     */
    publid void putAll(CompositfDbtb[] vblufs) ;

    /**
     * Rfmovfs bll <tt>CompositfDbtb</tt> vblufs (if rows) from this <tt>TbbulbrDbtb</tt> instbndf.
     */
    publid void dlfbr();




    /* ***   Collfdtion vifws of thf kfys bnd vblufs   *** */


    /**
     * Rfturns b sft vifw of thf kfys (if thf indfx vblufs) of thf
     * {@dodf CompositfDbtb} vblufs (if thf rows) dontbinfd in this
     * {@dodf TbbulbrDbtb} instbndf. Thf rfturnfd {@dodf Sft} is b
     * {@dodf Sft<List<?>>} but is dfdlbrfd bs b {@dodf Sft<?>} for
     * dompbtibility rfbsons. Thf rfturnfd sft dbn bf usfd to itfrbtf
     * ovfr thf kfys.
     *
     * @rfturn b sft vifw ({@dodf Sft<List<?>>}) of thf indfx vblufs
     * usfd in this {@dodf TbbulbrDbtb} instbndf.
     */
    publid Sft<?> kfySft();

    /**
     * Rfturns b dollfdtion vifw of thf {@dodf CompositfDbtb} vblufs
     * (if thf rows) dontbinfd in this {@dodf TbbulbrDbtb} instbndf.
     * Thf rfturnfd {@dodf Collfdtion} is b {@dodf Collfdtion<CompositfDbtb>}
     * but is dfdlbrfd bs b {@dodf Collfdtion<?>} for dompbtibility rfbsons.
     * Thf rfturnfd dollfdtion dbn bf usfd to itfrbtf ovfr thf vblufs.
     *
     * @rfturn b dollfdtion vifw ({@dodf Collfdtion<CompositfDbtb>})
     * of thf rows dontbinfd in this {@dodf TbbulbrDbtb} instbndf.
     */
    publid Collfdtion<?> vblufs();




    /* ***  Commodity mfthods from jbvb.lbng.Objfdt  *** */


    /**
     * Compbrfs thf spfdififd <vbr>obj</vbr> pbrbmftfr with this <dodf>TbbulbrDbtb</dodf> instbndf for fqublity.
     * <p>
     * Rfturns <tt>truf</tt> if bnd only if bll of thf following stbtfmfnts brf truf:
     * <ul>
     * <li><vbr>obj</vbr> is non null,</li>
     * <li><vbr>obj</vbr> blso implfmfnts thf <dodf>TbbulbrDbtb</dodf> intfrfbdf,</li>
     * <li>thfir row typfs brf fqubl</li>
     * <li>thfir dontfnts (if indfx to vbluf mbppings) brf fqubl</li>
     * </ul>
     * This fnsurfs thbt this <tt>fqubls</tt> mfthod works propfrly for <vbr>obj</vbr> pbrbmftfrs whidh brf
     * difffrfnt implfmfntbtions of thf <dodf>TbbulbrDbtb</dodf> intfrfbdf.
     * <br>&nbsp;
     * @pbrbm  obj  thf objfdt to bf dompbrfd for fqublity with this <dodf>TbbulbrDbtb</dodf> instbndf;
     *
     * @rfturn  <dodf>truf</dodf> if thf spfdififd objfdt is fqubl to this <dodf>TbbulbrDbtb</dodf> instbndf.
     */
    publid boolfbn fqubls(Objfdt obj);

    /**
     * Rfturns thf hbsh dodf vbluf for this <dodf>TbbulbrDbtb</dodf> instbndf.
     * <p>
     * Thf hbsh dodf of b <dodf>TbbulbrDbtb</dodf> instbndf is thf sum of thf hbsh dodfs
     * of bll flfmfnts of informbtion usfd in <dodf>fqubls</dodf> dompbrisons
     * (if: its <i>tbbulbr typf</i> bnd its dontfnt, whfrf thf dontfnt is dffinfd bs bll thf indfx to vbluf mbppings).
     * <p>
     * This fnsurfs thbt <dodf> t1.fqubls(t2) </dodf> implifs thbt <dodf> t1.hbshCodf()==t2.hbshCodf() </dodf>
     * for bny two <dodf>TbbulbrDbtbSupport</dodf> instbndfs <dodf>t1</dodf> bnd <dodf>t2</dodf>,
     * bs rfquirfd by thf gfnfrbl dontrbdt of thf mfthod
     * {@link Objfdt#hbshCodf() Objfdt.hbshCodf()}.
     *
     * @rfturn  thf hbsh dodf vbluf for this <dodf>TbbulbrDbtbSupport</dodf> instbndf
     */
    publid int hbshCodf();

    /**
     * Rfturns b string rfprfsfntbtion of this <dodf>TbbulbrDbtb</dodf> instbndf.
     * <p>
     * Thf string rfprfsfntbtion donsists of thf nbmf of thf implfmfnting dlbss,
     * bnd thf tbbulbr typf of this instbndf.
     *
     * @rfturn  b string rfprfsfntbtion of this <dodf>TbbulbrDbtb</dodf> instbndf
     */
    publid String toString();

}
