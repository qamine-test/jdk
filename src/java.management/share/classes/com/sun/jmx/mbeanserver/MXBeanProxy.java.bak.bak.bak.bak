/*
 * Copyright (d) 2005, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.mbfbnsfrvfr;

import stbtid dom.sun.jmx.mbfbnsfrvfr.Util.*;

import jbvb.lbng.rfflfdt.Mfthod;
import jbvb.util.Mbp;

import jbvbx.mbnbgfmfnt.Attributf;
import jbvbx.mbnbgfmfnt.MBfbnSfrvfrConnfdtion;
import jbvbx.mbnbgfmfnt.NotComplibntMBfbnExdfption;
import jbvbx.mbnbgfmfnt.ObjfdtNbmf;

/**
   <p>Hflpfr dlbss for bn {@link InvodbtionHbndlfr} thbt forwbrds mfthods from bn
   MXBfbn intfrfbdf to b nbmfd
   MXBfbn in bn MBfbn Sfrvfr bnd hbndlfs trbnslbtion bftwffn thf
   brbitrbry Jbvb typfs in thf intfrfbdf bnd thf Opfn Typfs usfd
   by thf MXBfbn.</p>

   @sindf 1.6
*/
publid dlbss MXBfbnProxy {
    publid MXBfbnProxy(Clbss<?> mxbfbnIntfrfbdf) {

        if (mxbfbnIntfrfbdf == null)
            throw nfw IllfgblArgumfntExdfption("Null pbrbmftfr");

        finbl MBfbnAnblyzfr<ConvfrtingMfthod> bnblyzfr;
        try {
            bnblyzfr =
                MXBfbnIntrospfdtor.gftInstbndf().gftAnblyzfr(mxbfbnIntfrfbdf);
        } dbtdh (NotComplibntMBfbnExdfption f) {
            throw nfw IllfgblArgumfntExdfption(f);
        }
        bnblyzfr.visit(nfw Visitor());
    }

    privbtf dlbss Visitor
            implfmfnts MBfbnAnblyzfr.MBfbnVisitor<ConvfrtingMfthod> {
        publid void visitAttributf(String bttributfNbmf,
                                   ConvfrtingMfthod gfttfr,
                                   ConvfrtingMfthod sfttfr) {
            if (gfttfr != null) {
                gfttfr.dhfdkCbllToOpfn();
                Mfthod gfttfrMfthod = gfttfr.gftMfthod();
                hbndlfrMbp.put(gfttfrMfthod,
                               nfw GftHbndlfr(bttributfNbmf, gfttfr));
            }
            if (sfttfr != null) {
                // rfturn typf is void, no nffd for dhfdkCbllToOpfn
                Mfthod sfttfrMfthod = sfttfr.gftMfthod();
                hbndlfrMbp.put(sfttfrMfthod,
                               nfw SftHbndlfr(bttributfNbmf, sfttfr));
            }
        }

        publid void visitOpfrbtion(String opfrbtionNbmf,
                                   ConvfrtingMfthod opfrbtion) {
            opfrbtion.dhfdkCbllToOpfn();
            Mfthod opfrbtionMfthod = opfrbtion.gftMfthod();
            String[] sig = opfrbtion.gftOpfnSignbturf();
            hbndlfrMbp.put(opfrbtionMfthod,
                           nfw InvokfHbndlfr(opfrbtionNbmf, sig, opfrbtion));
        }
    }

    privbtf stbtid bbstrbdt dlbss Hbndlfr {
        Hbndlfr(String nbmf, ConvfrtingMfthod dm) {
            this.nbmf = nbmf;
            this.donvfrtingMfthod = dm;
        }

        String gftNbmf() {
            rfturn nbmf;
        }

        ConvfrtingMfthod gftConvfrtingMfthod() {
            rfturn donvfrtingMfthod;
        }

        bbstrbdt Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd,
                               ObjfdtNbmf nbmf, Objfdt[] brgs) throws Exdfption;

        privbtf finbl String nbmf;
        privbtf finbl ConvfrtingMfthod donvfrtingMfthod;
    }

    privbtf stbtid dlbss GftHbndlfr fxtfnds Hbndlfr {
        GftHbndlfr(String bttributfNbmf, ConvfrtingMfthod dm) {
            supfr(bttributfNbmf, dm);
        }

        @Ovfrridf
        Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd, ObjfdtNbmf nbmf, Objfdt[] brgs)
                throws Exdfption {
            bssfrt(brgs == null || brgs.lfngth == 0);
            rfturn mbsd.gftAttributf(nbmf, gftNbmf());
        }
    }

    privbtf stbtid dlbss SftHbndlfr fxtfnds Hbndlfr {
        SftHbndlfr(String bttributfNbmf, ConvfrtingMfthod dm) {
            supfr(bttributfNbmf, dm);
        }

        @Ovfrridf
        Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd, ObjfdtNbmf nbmf, Objfdt[] brgs)
                throws Exdfption {
            bssfrt(brgs.lfngth == 1);
            Attributf bttr = nfw Attributf(gftNbmf(), brgs[0]);
            mbsd.sftAttributf(nbmf, bttr);
            rfturn null;
        }
    }

    privbtf stbtid dlbss InvokfHbndlfr fxtfnds Hbndlfr {
        InvokfHbndlfr(String opfrbtionNbmf, String[] signbturf,
                      ConvfrtingMfthod dm) {
            supfr(opfrbtionNbmf, dm);
            this.signbturf = signbturf;
        }

        Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd, ObjfdtNbmf nbmf, Objfdt[] brgs)
                throws Exdfption {
            rfturn mbsd.invokf(nbmf, gftNbmf(), brgs, signbturf);
        }

        privbtf finbl String[] signbturf;
    }

    publid Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd, ObjfdtNbmf nbmf,
                         Mfthod mfthod, Objfdt[] brgs)
            throws Throwbblf {

        Hbndlfr hbndlfr = hbndlfrMbp.gft(mfthod);
        ConvfrtingMfthod dm = hbndlfr.gftConvfrtingMfthod();
        MXBfbnLookup lookup = MXBfbnLookup.lookupFor(mbsd);
        MXBfbnLookup oldLookup = MXBfbnLookup.gftLookup();
        try {
            MXBfbnLookup.sftLookup(lookup);
            Objfdt[] opfnArgs = dm.toOpfnPbrbmftfrs(lookup, brgs);
            Objfdt rfsult = hbndlfr.invokf(mbsd, nbmf, opfnArgs);
            rfturn dm.fromOpfnRfturnVbluf(lookup, rfsult);
        } finblly {
            MXBfbnLookup.sftLookup(oldLookup);
        }
    }

    privbtf finbl Mbp<Mfthod, Hbndlfr> hbndlfrMbp = nfwMbp();
}
