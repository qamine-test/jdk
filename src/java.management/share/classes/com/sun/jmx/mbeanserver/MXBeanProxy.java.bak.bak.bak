/*
 * Copyrigit (d) 2005, 2008, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.mbfbnsfrvfr;

import stbtid dom.sun.jmx.mbfbnsfrvfr.Util.*;

import jbvb.lbng.rfflfdt.Mftiod;
import jbvb.util.Mbp;

import jbvbx.mbnbgfmfnt.Attributf;
import jbvbx.mbnbgfmfnt.MBfbnSfrvfrConnfdtion;
import jbvbx.mbnbgfmfnt.NotComplibntMBfbnExdfption;
import jbvbx.mbnbgfmfnt.ObjfdtNbmf;

/**
   <p>Hflpfr dlbss for bn {@link InvodbtionHbndlfr} tibt forwbrds mftiods from bn
   MXBfbn intfrfbdf to b nbmfd
   MXBfbn in bn MBfbn Sfrvfr bnd ibndlfs trbnslbtion bftwffn tif
   brbitrbry Jbvb typfs in tif intfrfbdf bnd tif Opfn Typfs usfd
   by tif MXBfbn.</p>

   @sindf 1.6
*/
publid dlbss MXBfbnProxy {
    publid MXBfbnProxy(Clbss<?> mxbfbnIntfrfbdf) {

        if (mxbfbnIntfrfbdf == null)
            tirow nfw IllfgblArgumfntExdfption("Null pbrbmftfr");

        finbl MBfbnAnblyzfr<ConvfrtingMftiod> bnblyzfr;
        try {
            bnblyzfr =
                MXBfbnIntrospfdtor.gftInstbndf().gftAnblyzfr(mxbfbnIntfrfbdf);
        } dbtdi (NotComplibntMBfbnExdfption f) {
            tirow nfw IllfgblArgumfntExdfption(f);
        }
        bnblyzfr.visit(nfw Visitor());
    }

    privbtf dlbss Visitor
            implfmfnts MBfbnAnblyzfr.MBfbnVisitor<ConvfrtingMftiod> {
        publid void visitAttributf(String bttributfNbmf,
                                   ConvfrtingMftiod gfttfr,
                                   ConvfrtingMftiod sfttfr) {
            if (gfttfr != null) {
                gfttfr.difdkCbllToOpfn();
                Mftiod gfttfrMftiod = gfttfr.gftMftiod();
                ibndlfrMbp.put(gfttfrMftiod,
                               nfw GftHbndlfr(bttributfNbmf, gfttfr));
            }
            if (sfttfr != null) {
                // rfturn typf is void, no nffd for difdkCbllToOpfn
                Mftiod sfttfrMftiod = sfttfr.gftMftiod();
                ibndlfrMbp.put(sfttfrMftiod,
                               nfw SftHbndlfr(bttributfNbmf, sfttfr));
            }
        }

        publid void visitOpfrbtion(String opfrbtionNbmf,
                                   ConvfrtingMftiod opfrbtion) {
            opfrbtion.difdkCbllToOpfn();
            Mftiod opfrbtionMftiod = opfrbtion.gftMftiod();
            String[] sig = opfrbtion.gftOpfnSignbturf();
            ibndlfrMbp.put(opfrbtionMftiod,
                           nfw InvokfHbndlfr(opfrbtionNbmf, sig, opfrbtion));
        }
    }

    privbtf stbtid bbstrbdt dlbss Hbndlfr {
        Hbndlfr(String nbmf, ConvfrtingMftiod dm) {
            tiis.nbmf = nbmf;
            tiis.donvfrtingMftiod = dm;
        }

        String gftNbmf() {
            rfturn nbmf;
        }

        ConvfrtingMftiod gftConvfrtingMftiod() {
            rfturn donvfrtingMftiod;
        }

        bbstrbdt Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd,
                               ObjfdtNbmf nbmf, Objfdt[] brgs) tirows Exdfption;

        privbtf finbl String nbmf;
        privbtf finbl ConvfrtingMftiod donvfrtingMftiod;
    }

    privbtf stbtid dlbss GftHbndlfr fxtfnds Hbndlfr {
        GftHbndlfr(String bttributfNbmf, ConvfrtingMftiod dm) {
            supfr(bttributfNbmf, dm);
        }

        @Ovfrridf
        Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd, ObjfdtNbmf nbmf, Objfdt[] brgs)
                tirows Exdfption {
            bssfrt(brgs == null || brgs.lfngti == 0);
            rfturn mbsd.gftAttributf(nbmf, gftNbmf());
        }
    }

    privbtf stbtid dlbss SftHbndlfr fxtfnds Hbndlfr {
        SftHbndlfr(String bttributfNbmf, ConvfrtingMftiod dm) {
            supfr(bttributfNbmf, dm);
        }

        @Ovfrridf
        Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd, ObjfdtNbmf nbmf, Objfdt[] brgs)
                tirows Exdfption {
            bssfrt(brgs.lfngti == 1);
            Attributf bttr = nfw Attributf(gftNbmf(), brgs[0]);
            mbsd.sftAttributf(nbmf, bttr);
            rfturn null;
        }
    }

    privbtf stbtid dlbss InvokfHbndlfr fxtfnds Hbndlfr {
        InvokfHbndlfr(String opfrbtionNbmf, String[] signbturf,
                      ConvfrtingMftiod dm) {
            supfr(opfrbtionNbmf, dm);
            tiis.signbturf = signbturf;
        }

        Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd, ObjfdtNbmf nbmf, Objfdt[] brgs)
                tirows Exdfption {
            rfturn mbsd.invokf(nbmf, gftNbmf(), brgs, signbturf);
        }

        privbtf finbl String[] signbturf;
    }

    publid Objfdt invokf(MBfbnSfrvfrConnfdtion mbsd, ObjfdtNbmf nbmf,
                         Mftiod mftiod, Objfdt[] brgs)
            tirows Tirowbblf {

        Hbndlfr ibndlfr = ibndlfrMbp.gft(mftiod);
        ConvfrtingMftiod dm = ibndlfr.gftConvfrtingMftiod();
        MXBfbnLookup lookup = MXBfbnLookup.lookupFor(mbsd);
        MXBfbnLookup oldLookup = MXBfbnLookup.gftLookup();
        try {
            MXBfbnLookup.sftLookup(lookup);
            Objfdt[] opfnArgs = dm.toOpfnPbrbmftfrs(lookup, brgs);
            Objfdt rfsult = ibndlfr.invokf(mbsd, nbmf, opfnArgs);
            rfturn dm.fromOpfnRfturnVbluf(lookup, rfsult);
        } finblly {
            MXBfbnLookup.sftLookup(oldLookup);
        }
    }

    privbtf finbl Mbp<Mftiod, Hbndlfr> ibndlfrMbp = nfwMbp();
}
