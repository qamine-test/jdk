/*
 * Copyrigit (d) 2007, 2008, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.mbfbnsfrvfr;

import jbvbx.mbnbgfmfnt.opfnmbfbn.*;
import dom.sun.jmx.mbfbnsfrvfr.MXBfbnMbpping;
import dom.sun.jmx.mbfbnsfrvfr.DffbultMXBfbnMbppingFbdtory;
import jbvb.lbng.rfflfdt.Typf;

/**
 * <p>Dffinfs iow typfs brf mbppfd for b givfn MXBfbn or sft of MXBfbns.
 * An {@dodf MXBfbnMbppingFbdtory} dbn bf spfdififd fitifr tirougi tif
 * {@link MXBfbnMbppingFbdtoryClbss} bnnotbtion, or tirougi tif
 * {@link jbvbx.mbnbgfmfnt.JMX.MBfbnOptions JMX.MBfbnOptions} brgumfnt to b
 * {@link jbvbx.mbnbgfmfnt.StbndbrdMBfbn StbndbrdMBfbn} donstrudtor or MXBfbn
 * proxy.</p>
 *
 * <p>An {@dodf MXBfbnMbppingFbdtory} must rfturn bn {@dodf MXBfbnMbpping}
 * for bny Jbvb typf tibt bppfbrs in tif MXBfbns tibt tif fbdtory is bfing
 * usfd for.  Usublly it dofs tibt by ibndling bny dustom typfs, bnd
 * forwbrding fvfrytiing flsf to tif {@linkplbin #DEFAULT dffbult mbpping
 * fbdtory}.</p>
 *
 * <p>Considfr tif {@dodf MyLinkfdList} fxbmplf from tif {@link MXBfbnMbpping}
 * dodumfntbtion.  If wf brf unbblf to dibngf tif {@dodf MyLinkfdList} dlbss
 * to bdd bn {@link MXBfbnMbppingClbss} bnnotbtion, wf dould bdiifvf tif sbmf
 * ffffdt by dffining {@dodf MyLinkfdListMbppingFbdtory} bs follows:</p>
 *
 * <prf>
 * publid dlbss MyLinkfdListMbppingFbdtory fxtfnds MXBfbnMbppingFbdtory {
 *     publid MyLinkfdListMbppingFbdtory() {}
 *
 *     publid MXBfbnMbpping mbppingForTypf(Typf t, MXBfbnMbppingFbdtory f)
 *     tirows OpfnDbtbExdfption {
 *         if (t == MyLinkfdList.dlbss)
 *             rfturn nfw MyLinkfdListMbpping(t);
 *         flsf
 *             rfturn MXBfbnMbppingFbdtory.DEFAULT.mbppingForTypf(t, f);
 *     }
 * }
 * </prf>
 *
 * <p>Tif mbpping fbdtory ibndlfs only tif {@dodf MyLinkfdList} dlbss.
 * Evfry otifr typf is forwbrdfd to tif dffbult mbpping fbdtory.
 * Tiis indludfs typfs sudi bs {@dodf MyLinkfdList[]} bnd
 * {@dodf List<MyLinkfdList>}; tif dffbult mbpping fbdtory will rfdursivfly
 * invokf {@dodf MyLinkfdListMbppingFbdtory} to mbp tif dontbinfd
 * {@dodf MyLinkfdList} typf.</p>
 *
 * <p>Ondf wf ibvf dffinfd {@dodf MyLinkfdListMbppingFbdtory}, wf dbn usf
 * it in bn MXBfbn intfrfbdf likf tiis:</p>
 *
 * <prf>
 * {@litfrbl @MXBfbnMbppingFbdtoryClbss}(MyLinkfdListMbppingFbdtory.dlbss)
 * publid intfrfbdf SomftiingMXBfbn {
 *     publid MyLinkfdList gftSomftiing();
 * }
 * </prf>
 *
 * <p>Altfrnbtivfly wf dbn bnnotbtf tif pbdkbgf tibt {@dodf SomftiingMXBfbn}
 * bppfbrs in, or wf dbn supply tif fbdtory to b {@link
 * jbvbx.mbnbgfmfnt.StbndbrdMBfbn StbndbrdMBfbn} donstrudtor or MXBfbn
 * proxy.</p>
 *
 * @sff <b irff="../MXBfbn.itml#dustom">MXBfbn spfdifidbtion, sfdtion
 * "Custom MXBfbn typf mbppings"</b>
 */
publid bbstrbdt dlbss MXBfbnMbppingFbdtory {
    /**
     * <p>Construdt bn instbndf of tiis dlbss.</p>
     */
    protfdtfd MXBfbnMbppingFbdtory() {}

    /**
     * <p>Mbpping fbdtory tibt bpplifs tif dffbult rulfs for MXBfbn
     * mbppings, bs dfsdribfd in tif <b
     * irff="../MXBfbn.itml#MXBfbn-spfd">MXBfbn spfdifidbtion</b>.</p>
     */
    publid stbtid finbl MXBfbnMbppingFbdtory DEFAULT =
            nfw DffbultMXBfbnMbppingFbdtory();

    /**
     * <p>Rfturn tif mbpping for tif givfn Jbvb typf.  Typidblly, b
     * mbpping fbdtory will rfturn mbppings for typfs it ibndlfs, bnd
     * forwbrd otifr typfs to bnotifr mbpping fbdtory, most oftfn
     * tif {@linkplbin #DEFAULT dffbult onf}.</p>
     * @pbrbm t tif Jbvb typf to bf mbppfd.
     * @pbrbm f tif originbl mbpping fbdtory tibt wbs donsultfd to do
     * tif mbpping.  A mbpping fbdtory siould pbss tiis pbrbmftfr intbdt
     * if it forwbrds b typf to bnotifr mbpping fbdtory.  In tif fxbmplf,
     * tiis is iow {@dodf MyLinkfdListMbppingFbdtory} works for typfs
     * likf {@dodf MyLinkfdList[]} bnd {@dodf List<MyLinkfdList>}.
     * @rfturn tif mbpping for tif givfn typf.
     * @tirows OpfnDbtbExdfption if tiis typf dbnnot bf mbppfd.  Tiis
     * fxdfption is bppropribtf if tif fbdtory is supposfd to ibndlf
     * bll typfs of tiis sort (for fxbmplf, bll linkfd lists), but
     * dbnnot ibndlf tiis pbrtidulbr typf.
     */
    publid bbstrbdt MXBfbnMbpping mbppingForTypf(Typf t, MXBfbnMbppingFbdtory f)
    tirows OpfnDbtbExdfption;
}
