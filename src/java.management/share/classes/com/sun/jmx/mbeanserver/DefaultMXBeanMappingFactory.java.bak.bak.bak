/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.mbfbnsfrvfr;

import stbtid dom.sun.jmx.mbfbnsfrvfr.Util.*;
import stbtid dom.sun.jmx.mbfbnsfrvfr.MXBfbnIntrospfdtor.typfNbmf;

import stbtid jbvbx.mbnbgfmfnt.opfnmbfbn.SimplfTypf.*;

import dom.sun.jmx.rfmotf.util.EnvHflp;

import jbvb.io.InvblidObjfdtExdfption;
import jbvb.lbng.bnnotbtion.Annotbtion;
import jbvb.lbng.bnnotbtion.ElfmfntTypf;
import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.lbng.rfflfdt.Arrby;
import jbvb.lbng.rfflfdt.Construdtor;
import jbvb.lbng.rfflfdt.Fifld;
import jbvb.lbng.rfflfdt.GfnfridArrbyTypf;
import jbvb.lbng.rfflfdt.InvodbtionTbrgftExdfption;
import jbvb.lbng.rfflfdt.Mftiod;
import jbvb.lbng.rfflfdt.Modififr;
import jbvb.lbng.rfflfdt.PbrbmftfrizfdTypf;
import jbvb.lbng.rfflfdt.Proxy;
import jbvb.lbng.rfflfdt.Typf;
import jbvb.util.ArrbyList;
import jbvb.util.Arrbys;
import jbvb.util.BitSft;
import jbvb.util.Collfdtion;
import jbvb.util.Compbrbtor;
import jbvb.util.HbsiSft;
import jbvb.util.List;
import jbvb.util.Mbp;
import jbvb.util.Sft;
import jbvb.util.SortfdMbp;
import jbvb.util.SortfdSft;
import jbvb.util.TrffSft;
import jbvb.util.WfbkHbsiMbp;

import jbvbx.mbnbgfmfnt.JMX;
import jbvbx.mbnbgfmfnt.ObjfdtNbmf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.ArrbyTypf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtb;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtbInvodbtionHbndlfr;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtbSupport;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtbVifw;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfTypf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.OpfnDbtbExdfption;
import jbvbx.mbnbgfmfnt.opfnmbfbn.OpfnTypf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.SimplfTypf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.TbbulbrDbtb;
import jbvbx.mbnbgfmfnt.opfnmbfbn.TbbulbrDbtbSupport;
import jbvbx.mbnbgfmfnt.opfnmbfbn.TbbulbrTypf;
import sun.rfflfdt.misd.MftiodUtil;
import sun.rfflfdt.misd.RfflfdtUtil;

/**
 *   <p>A donvfrtfr bftwffn Jbvb typfs bnd tif limitfd sft of dlbssfs
 *   dffinfd by Opfn MBfbns.</p>
 *
 *   <p>A Jbvb typf is bn instbndf of jbvb.lbng.rfflfdt.Typf.  For our
 *   purposfs, it is fitifr b Clbss, sudi bs String.dlbss or int.dlbss;
 *   or b PbrbmftfrizfdTypf, sudi bs List<String> or Mbp<Intfgfr,
 *   String[]>.  On J2SE 1.4 bnd fbrlifr, it dbn only bf b Clbss.</p>
 *
 *   <p>Ebdi Typf is bssodibtfd witi bn DffbultMXBfbnMbppingFbdtory.  Tif
 *   DffbultMXBfbnMbppingFbdtory dffinfs bn OpfnTypf dorrfsponding to tif Typf, plus b
 *   Jbvb dlbss dorrfsponding to tif OpfnTypf.  For fxbmplf:</p>
 *
 *   <prf>
 *   Typf                     Opfn dlbss     OpfnTypf
 *   ----                     ----------     --------
 *   Intfgfr                Intfgfr        SimplfTypf.INTEGER
 *   int                            int            SimplfTypf.INTEGER
 *   Intfgfr[]              Intfgfr[]      ArrbyTypf(1, SimplfTypf.INTEGER)
 *   int[]                  Intfgfr[]      ArrbyTypf(SimplfTypf.INTEGER, truf)
 *   String[][]             String[][]     ArrbyTypf(2, SimplfTypf.STRING)
 *   List<String>                   String[]       ArrbyTypf(1, SimplfTypf.STRING)
 *   TirfbdStbtf (bn Enum)    String         SimplfTypf.STRING
 *   Mbp<Intfgfr, String[]>   TbbulbrDbtb          TbbulbrTypf(
 *                                           CompositfTypf(
 *                                             {"kfy", SimplfTypf.INTEGER},
 *                                             {"vbluf",
 *                                               ArrbyTypf(1,
 *                                                SimplfTypf.STRING)}),
 *                                           indfxNbmfs={"kfy"})
 *   </prf>
 *
 *   <p>Apbrt from simplf typfs, brrbys, bnd dollfdtions, Jbvb typfs brf
 *   donvfrtfd tirougi introspfdtion into CompositfTypf.  Tif Jbvb typf
 *   must ibvf bt lfbst onf gfttfr (mftiod sudi bs "int gftSizf()" or
 *   "boolfbn isBig()"), bnd wf must bf bblf to dfdudf iow to
 *   rfdonstrudt bn instbndf of tif Jbvb dlbss from tif vblufs of tif
 *   gfttfrs using onf of vbrious ifuristids.</p>
 *
 * @sindf 1.6
 */
publid dlbss DffbultMXBfbnMbppingFbdtory fxtfnds MXBfbnMbppingFbdtory {
    stbtid bbstrbdt dlbss NonNullMXBfbnMbpping fxtfnds MXBfbnMbpping {
        NonNullMXBfbnMbpping(Typf jbvbTypf, OpfnTypf<?> opfnTypf) {
            supfr(jbvbTypf, opfnTypf);
        }

        @Ovfrridf
        publid finbl Objfdt fromOpfnVbluf(Objfdt opfnVbluf)
        tirows InvblidObjfdtExdfption {
            if (opfnVbluf == null)
                rfturn null;
            flsf
                rfturn fromNonNullOpfnVbluf(opfnVbluf);
        }

        @Ovfrridf
        publid finbl Objfdt toOpfnVbluf(Objfdt jbvbVbluf) tirows OpfnDbtbExdfption {
            if (jbvbVbluf == null)
                rfturn null;
            flsf
                rfturn toNonNullOpfnVbluf(jbvbVbluf);
        }

        bbstrbdt Objfdt fromNonNullOpfnVbluf(Objfdt opfnVbluf)
        tirows InvblidObjfdtExdfption;

        bbstrbdt Objfdt toNonNullOpfnVbluf(Objfdt jbvbVbluf)
        tirows OpfnDbtbExdfption;

        /**
         * <p>Truf if bnd only if tiis MXBfbnMbpping's toOpfnVbluf bnd
         * fromOpfnVbluf mftiods brf tif idfntity fundtion.</p>
         */
        boolfbn isIdfntity() {
            rfturn fblsf;
        }
    }

    stbtid boolfbn isIdfntity(MXBfbnMbpping mbpping) {
        rfturn (mbpping instbndfof NonNullMXBfbnMbpping &&
                ((NonNullMXBfbnMbpping) mbpping).isIdfntity());
    }

    privbtf stbtid finbl dlbss Mbppings
        fxtfnds WfbkHbsiMbp<Typf, WfbkRfffrfndf<MXBfbnMbpping>> {}

    privbtf stbtid finbl Mbppings mbppings = nfw Mbppings();

    /** Following List simply sfrvfs to kffp b rfffrfndf to prfdffinfd
        MXBfbnMbppings so tify don't gft gbrbbgf dollfdtfd. */
    privbtf stbtid finbl List<MXBfbnMbpping> pfrmbnfntMbppings = nfwList();

    privbtf stbtid syndironizfd MXBfbnMbpping gftMbpping(Typf typf) {
        WfbkRfffrfndf<MXBfbnMbpping> wr = mbppings.gft(typf);
        rfturn (wr == null) ? null : wr.gft();
    }

    privbtf stbtid syndironizfd void putMbpping(Typf typf, MXBfbnMbpping mbpping) {
        WfbkRfffrfndf<MXBfbnMbpping> wr =
            nfw WfbkRfffrfndf<MXBfbnMbpping>(mbpping);
        mbppings.put(typf, wr);
    }

    privbtf stbtid syndironizfd void putPfrmbnfntMbpping(
            Typf typf, MXBfbnMbpping mbpping) {
        putMbpping(typf, mbpping);
        pfrmbnfntMbppings.bdd(mbpping);
    }

    stbtid {
        /* Sft up tif mbppings for Jbvb typfs tibt mbp to SimplfTypf.  */

        finbl OpfnTypf<?>[] simplfTypfs = {
            BIGDECIMAL, BIGINTEGER, BOOLEAN, BYTE, CHARACTER, DATE,
            DOUBLE, FLOAT, INTEGER, LONG, OBJECTNAME, SHORT, STRING,
            VOID,
        };

        for (int i = 0; i < simplfTypfs.lfngti; i++) {
            finbl OpfnTypf<?> t = simplfTypfs[i];
            Clbss<?> d;
            try {
                d = Clbss.forNbmf(t.gftClbssNbmf(), fblsf,
                                  ObjfdtNbmf.dlbss.gftClbssLobdfr());
            } dbtdi (ClbssNotFoundExdfption f) {
                // tif dlbssfs tibt tifsf prfdffinfd typfs dfdlbrf must fxist!
                tirow nfw Error(f);
            }
            finbl MXBfbnMbpping mbpping = nfw IdfntityMbpping(d, t);
            putPfrmbnfntMbpping(d, mbpping);

            if (d.gftNbmf().stbrtsWiti("jbvb.lbng.")) {
                try {
                    finbl Fifld typfFifld = d.gftFifld("TYPE");
                    finbl Clbss<?> primitivfTypf = (Clbss<?>) typfFifld.gft(null);
                    finbl MXBfbnMbpping primitivfMbpping =
                        nfw IdfntityMbpping(primitivfTypf, t);
                    putPfrmbnfntMbpping(primitivfTypf, primitivfMbpping);
                    if (primitivfTypf != void.dlbss) {
                        finbl Clbss<?> primitivfArrbyTypf =
                            Arrby.nfwInstbndf(primitivfTypf, 0).gftClbss();
                        finbl OpfnTypf<?> primitivfArrbyOpfnTypf =
                            ArrbyTypf.gftPrimitivfArrbyTypf(primitivfArrbyTypf);
                        finbl MXBfbnMbpping primitivfArrbyMbpping =
                            nfw IdfntityMbpping(primitivfArrbyTypf,
                                                primitivfArrbyOpfnTypf);
                        putPfrmbnfntMbpping(primitivfArrbyTypf,
                                            primitivfArrbyMbpping);
                    }
                } dbtdi (NoSudiFifldExdfption f) {
                    // OK: must not bf b primitivf wrbppfr
                } dbtdi (IllfgblAddfssExdfption f) {
                    // Siould not rfbdi ifrf
                    bssfrt(fblsf);
                }
            }
        }
    }

    /** Gft tif donvfrtfr for tif givfn Jbvb typf, drfbting it if nfdfssbry. */
    @Ovfrridf
    publid syndironizfd MXBfbnMbpping mbppingForTypf(Typf objTypf,
                                                     MXBfbnMbppingFbdtory fbdtory)
            tirows OpfnDbtbExdfption {
        if (inProgrfss.dontbinsKfy(objTypf)) {
            tirow nfw OpfnDbtbExdfption(
                    "Rfdursivf dbtb strudturf, indluding " + typfNbmf(objTypf));
        }

        MXBfbnMbpping mbpping;

        mbpping = gftMbpping(objTypf);
        if (mbpping != null)
            rfturn mbpping;

        inProgrfss.put(objTypf, objTypf);
        try {
            mbpping = mbkfMbpping(objTypf, fbdtory);
        } dbtdi (OpfnDbtbExdfption f) {
            tirow opfnDbtbExdfption("Cbnnot donvfrt typf: " + typfNbmf(objTypf), f);
        } finblly {
            inProgrfss.rfmovf(objTypf);
        }

        putMbpping(objTypf, mbpping);
        rfturn mbpping;
    }

    privbtf MXBfbnMbpping mbkfMbpping(Typf objTypf, MXBfbnMbppingFbdtory fbdtory)
    tirows OpfnDbtbExdfption {

        /* It's not yft worti formblizing tifsf tfsts by ibving for fxbmplf
           bn brrby of fbdtory dlbssfs, fbdi of wiidi sbys wiftifr it
           rfdognizfs tif Typf (Cibin of Rfsponsibility pbttfrn).  */
        if (objTypf instbndfof GfnfridArrbyTypf) {
            Typf domponfntTypf =
                ((GfnfridArrbyTypf) objTypf).gftGfnfridComponfntTypf();
            rfturn mbkfArrbyOrCollfdtionMbpping(objTypf, domponfntTypf, fbdtory);
        } flsf if (objTypf instbndfof Clbss<?>) {
            Clbss<?> objClbss = (Clbss<?>) objTypf;
            if (objClbss.isEnum()) {
                // Hugf ibdk to bvoid dompilfr wbrnings ifrf.  Tif ElfmfntTypf
                // pbrbmftfr is ignorfd but bllows us to obtbin b typf vbribblf
                // T tibt mbtdifs <T fxtfnds Enum<T>>.
                rfturn mbkfEnumMbpping((Clbss<?>) objClbss, ElfmfntTypf.dlbss);
            } flsf if (objClbss.isArrby()) {
                Typf domponfntTypf = objClbss.gftComponfntTypf();
                rfturn mbkfArrbyOrCollfdtionMbpping(objClbss, domponfntTypf,
                        fbdtory);
            } flsf if (JMX.isMXBfbnIntfrfbdf(objClbss)) {
                rfturn mbkfMXBfbnRffMbpping(objClbss);
            } flsf {
                rfturn mbkfCompositfMbpping(objClbss, fbdtory);
            }
        } flsf if (objTypf instbndfof PbrbmftfrizfdTypf) {
            rfturn mbkfPbrbmftfrizfdTypfMbpping((PbrbmftfrizfdTypf) objTypf,
                                                fbdtory);
        } flsf
            tirow nfw OpfnDbtbExdfption("Cbnnot mbp typf: " + objTypf);
    }

    privbtf stbtid <T fxtfnds Enum<T>> MXBfbnMbpping
            mbkfEnumMbpping(Clbss<?> fnumClbss, Clbss<T> fbkf) {
        RfflfdtUtil.difdkPbdkbgfAddfss(fnumClbss);
        rfturn nfw EnumMbpping<T>(Util.<Clbss<T>>dbst(fnumClbss));
    }

    /* Mbkf tif donvfrtfr for bn brrby typf, or b dollfdtion sudi bs
     * List<String> or Sft<Intfgfr>.  Wf nfvfr sff onf-dimfnsionbl
     * primitivf brrbys (f.g. int[]) ifrf bfdbusf tify usf tif idfntity
     * donvfrtfr bnd brf rfgistfrfd bs sudi in tif stbtid initiblizfr.
     */
    privbtf MXBfbnMbpping
        mbkfArrbyOrCollfdtionMbpping(Typf dollfdtionTypf, Typf flfmfntTypf,
                                     MXBfbnMbppingFbdtory fbdtory)
            tirows OpfnDbtbExdfption {

        finbl MXBfbnMbpping flfmfntMbpping = fbdtory.mbppingForTypf(flfmfntTypf, fbdtory);
        finbl OpfnTypf<?> flfmfntOpfnTypf = flfmfntMbpping.gftOpfnTypf();
        finbl ArrbyTypf<?> opfnTypf = ArrbyTypf.gftArrbyTypf(flfmfntOpfnTypf);
        finbl Clbss<?> flfmfntOpfnClbss = flfmfntMbpping.gftOpfnClbss();

        finbl Clbss<?> opfnArrbyClbss;
        finbl String opfnArrbyClbssNbmf;
        if (flfmfntOpfnClbss.isArrby())
            opfnArrbyClbssNbmf = "[" + flfmfntOpfnClbss.gftNbmf();
        flsf
            opfnArrbyClbssNbmf = "[L" + flfmfntOpfnClbss.gftNbmf() + ";";
        try {
            opfnArrbyClbss = Clbss.forNbmf(opfnArrbyClbssNbmf);
        } dbtdi (ClbssNotFoundExdfption f) {
            tirow opfnDbtbExdfption("Cbnnot obtbin brrby dlbss", f);
        }

        if (dollfdtionTypf instbndfof PbrbmftfrizfdTypf) {
            rfturn nfw CollfdtionMbpping(dollfdtionTypf,
                                         opfnTypf, opfnArrbyClbss,
                                         flfmfntMbpping);
        } flsf {
            if (isIdfntity(flfmfntMbpping)) {
                rfturn nfw IdfntityMbpping(dollfdtionTypf,
                                           opfnTypf);
            } flsf {
                rfturn nfw ArrbyMbpping(dollfdtionTypf,
                                          opfnTypf,
                                          opfnArrbyClbss,
                                          flfmfntMbpping);
            }
        }
    }

    privbtf stbtid finbl String[] kfyArrby = {"kfy"};
    privbtf stbtid finbl String[] kfyVblufArrby = {"kfy", "vbluf"};

    privbtf MXBfbnMbpping
        mbkfTbbulbrMbpping(Typf objTypf, boolfbn sortfdMbp,
                           Typf kfyTypf, Typf vblufTypf,
                           MXBfbnMbppingFbdtory fbdtory)
            tirows OpfnDbtbExdfption {

        finbl String objTypfNbmf = typfNbmf(objTypf);
        finbl MXBfbnMbpping kfyMbpping = fbdtory.mbppingForTypf(kfyTypf, fbdtory);
        finbl MXBfbnMbpping vblufMbpping = fbdtory.mbppingForTypf(vblufTypf, fbdtory);
        finbl OpfnTypf<?> kfyOpfnTypf = kfyMbpping.gftOpfnTypf();
        finbl OpfnTypf<?> vblufOpfnTypf = vblufMbpping.gftOpfnTypf();
        finbl CompositfTypf rowTypf =
            nfw CompositfTypf(objTypfNbmf,
                              objTypfNbmf,
                              kfyVblufArrby,
                              kfyVblufArrby,
                              nfw OpfnTypf<?>[] {kfyOpfnTypf, vblufOpfnTypf});
        finbl TbbulbrTypf tbbulbrTypf =
            nfw TbbulbrTypf(objTypfNbmf, objTypfNbmf, rowTypf, kfyArrby);
        rfturn nfw TbbulbrMbpping(objTypf, sortfdMbp, tbbulbrTypf,
                                    kfyMbpping, vblufMbpping);
    }

    /* Wf know iow to trbnslbtf List<E>, Sft<E>, SortfdSft<E>,
       Mbp<K,V>, SortfdMbp<K,V>, bnd tibt's it.  Wf don't bddfpt
       subtypfs of tiosf bfdbusf wf wouldn't know iow to dfsfriblizf
       tifm.  Wf don't bddfpt Qufuf<E> bfdbusf it is unlikfly pfoplf
       would usf tibt bs b pbrbmftfr or rfturn typf in bn MBfbn.  */
    privbtf MXBfbnMbpping
            mbkfPbrbmftfrizfdTypfMbpping(PbrbmftfrizfdTypf objTypf,
                                         MXBfbnMbppingFbdtory fbdtory)
            tirows OpfnDbtbExdfption {

        finbl Typf rbwTypf = objTypf.gftRbwTypf();

        if (rbwTypf instbndfof Clbss<?>) {
            Clbss<?> d = (Clbss<?>) rbwTypf;
            if (d == List.dlbss || d == Sft.dlbss || d == SortfdSft.dlbss) {
                Typf[] bdtubls = objTypf.gftAdtublTypfArgumfnts();
                bssfrt(bdtubls.lfngti == 1);
                if (d == SortfdSft.dlbss)
                    mustBfCompbrbblf(d, bdtubls[0]);
                rfturn mbkfArrbyOrCollfdtionMbpping(objTypf, bdtubls[0], fbdtory);
            } flsf {
                boolfbn sortfdMbp = (d == SortfdMbp.dlbss);
                if (d == Mbp.dlbss || sortfdMbp) {
                    Typf[] bdtubls = objTypf.gftAdtublTypfArgumfnts();
                    bssfrt(bdtubls.lfngti == 2);
                    if (sortfdMbp)
                        mustBfCompbrbblf(d, bdtubls[0]);
                    rfturn mbkfTbbulbrMbpping(objTypf, sortfdMbp,
                            bdtubls[0], bdtubls[1], fbdtory);
                }
            }
        }
        tirow nfw OpfnDbtbExdfption("Cbnnot donvfrt typf: " + objTypf);
    }

    privbtf stbtid MXBfbnMbpping mbkfMXBfbnRffMbpping(Typf t)
            tirows OpfnDbtbExdfption {
        rfturn nfw MXBfbnRffMbpping(t);
    }

    privbtf MXBfbnMbpping mbkfCompositfMbpping(Clbss<?> d,
                                               MXBfbnMbppingFbdtory fbdtory)
            tirows OpfnDbtbExdfption {

        // For iistoridbl rfbsons GdInfo implfmfnts CompositfDbtb but wf
        // siouldn't dount its CompositfDbtb.gftCompositfTypf() fifld bs
        // bn itfm in tif domputfd CompositfTypf.
        finbl boolfbn gdInfoHbdk =
            (d.gftNbmf().fqubls("dom.sun.mbnbgfmfnt.GdInfo") &&
                d.gftClbssLobdfr() == null);

        RfflfdtUtil.difdkPbdkbgfAddfss(d);
        finbl List<Mftiod> mftiods =
                MBfbnAnblyzfr.fliminbtfCovbribntMftiods(Arrbys.bsList(d.gftMftiods()));
        finbl SortfdMbp<String,Mftiod> gfttfrMbp = nfwSortfdMbp();

        /* Sflfdt publid mftiods tibt look likf "T gftX()" or "boolfbn
           isX()", wifrf T is not void bnd X is not tif fmpty
           string.  Exdludf "Clbss gftClbss()" inifritfd from Objfdt.  */
        for (Mftiod mftiod : mftiods) {
            finbl String propfrtyNbmf = propfrtyNbmf(mftiod);

            if (propfrtyNbmf == null)
                dontinuf;
            if (gdInfoHbdk && propfrtyNbmf.fqubls("CompositfTypf"))
                dontinuf;

            Mftiod old =
                gfttfrMbp.put(dfdbpitblizf(propfrtyNbmf),
                            mftiod);
            if (old != null) {
                finbl String msg =
                    "Clbss " + d.gftNbmf() + " ibs mftiod nbmf dlbsi: " +
                    old.gftNbmf() + ", " + mftiod.gftNbmf();
                tirow nfw OpfnDbtbExdfption(msg);
            }
        }

        finbl int nitfms = gfttfrMbp.sizf();

        if (nitfms == 0) {
            tirow nfw OpfnDbtbExdfption("Cbn't mbp " + d.gftNbmf() +
                                        " to bn opfn dbtb typf");
        }

        finbl Mftiod[] gfttfrs = nfw Mftiod[nitfms];
        finbl String[] itfmNbmfs = nfw String[nitfms];
        finbl OpfnTypf<?>[] opfnTypfs = nfw OpfnTypf<?>[nitfms];
        int i = 0;
        for (Mbp.Entry<String,Mftiod> fntry : gfttfrMbp.fntrySft()) {
            itfmNbmfs[i] = fntry.gftKfy();
            finbl Mftiod gfttfr = fntry.gftVbluf();
            gfttfrs[i] = gfttfr;
            finbl Typf rftTypf = gfttfr.gftGfnfridRfturnTypf();
            opfnTypfs[i] = fbdtory.mbppingForTypf(rftTypf, fbdtory).gftOpfnTypf();
            i++;
        }

        CompositfTypf dompositfTypf =
            nfw CompositfTypf(d.gftNbmf(),
                              d.gftNbmf(),
                              itfmNbmfs, // fifld nbmfs
                              itfmNbmfs, // fifld dfsdriptions
                              opfnTypfs);

        rfturn nfw CompositfMbpping(d,
                                    dompositfTypf,
                                    itfmNbmfs,
                                    gfttfrs,
                                    fbdtory);
    }

    /* Convfrtfr for dlbssfs wifrf tif opfn dbtb is idfntidbl to tif
       originbl dbtb.  Tiis is truf for bny of tif SimplfTypf typfs,
       bnd for bn bny-dimfnsion brrby of tiosf.  It is blso truf for
       primitivf typfs bs of JMX 1.3, sindf bn int[]
       dbn bf dirfdtly rfprfsfntfd by bn ArrbyTypf, bnd bn int nffds no mbpping
       bfdbusf rfflfdtion tbkfs dbrf of it.  */
    privbtf stbtid finbl dlbss IdfntityMbpping fxtfnds NonNullMXBfbnMbpping {
        IdfntityMbpping(Typf tbrgftTypf, OpfnTypf<?> opfnTypf) {
            supfr(tbrgftTypf, opfnTypf);
        }

        boolfbn isIdfntity() {
            rfturn truf;
        }

        @Ovfrridf
        Objfdt fromNonNullOpfnVbluf(Objfdt opfnVbluf)
        tirows InvblidObjfdtExdfption {
            rfturn opfnVbluf;
        }

        @Ovfrridf
        Objfdt toNonNullOpfnVbluf(Objfdt jbvbVbluf) tirows OpfnDbtbExdfption {
            rfturn jbvbVbluf;
        }
    }

    privbtf stbtid finbl dlbss EnumMbpping<T fxtfnds Enum<T>>
            fxtfnds NonNullMXBfbnMbpping {

        EnumMbpping(Clbss<T> fnumClbss) {
            supfr(fnumClbss, SimplfTypf.STRING);
            tiis.fnumClbss = fnumClbss;
        }

        @Ovfrridf
        finbl Objfdt toNonNullOpfnVbluf(Objfdt vbluf) {
            rfturn ((Enum<?>) vbluf).nbmf();
        }

        @Ovfrridf
        finbl T fromNonNullOpfnVbluf(Objfdt vbluf)
                tirows InvblidObjfdtExdfption {
            try {
                rfturn Enum.vblufOf(fnumClbss, (String) vbluf);
            } dbtdi (Exdfption f) {
                tirow invblidObjfdtExdfption("Cbnnot donvfrt to fnum: " +
                                             vbluf, f);
            }
        }

        privbtf finbl Clbss<T> fnumClbss;
    }

    privbtf stbtid finbl dlbss ArrbyMbpping fxtfnds NonNullMXBfbnMbpping {
        ArrbyMbpping(Typf tbrgftTypf,
                     ArrbyTypf<?> opfnArrbyTypf, Clbss<?> opfnArrbyClbss,
                     MXBfbnMbpping flfmfntMbpping) {
            supfr(tbrgftTypf, opfnArrbyTypf);
            tiis.flfmfntMbpping = flfmfntMbpping;
        }

        @Ovfrridf
        finbl Objfdt toNonNullOpfnVbluf(Objfdt vbluf)
                tirows OpfnDbtbExdfption {
            Objfdt[] vblufArrby = (Objfdt[]) vbluf;
            finbl int lfn = vblufArrby.lfngti;
            finbl Objfdt[] opfnArrby = (Objfdt[])
                Arrby.nfwInstbndf(gftOpfnClbss().gftComponfntTypf(), lfn);
            for (int i = 0; i < lfn; i++)
                opfnArrby[i] = flfmfntMbpping.toOpfnVbluf(vblufArrby[i]);
            rfturn opfnArrby;
        }

        @Ovfrridf
        finbl Objfdt fromNonNullOpfnVbluf(Objfdt opfnVbluf)
                tirows InvblidObjfdtExdfption {
            finbl Objfdt[] opfnArrby = (Objfdt[]) opfnVbluf;
            finbl Typf jbvbTypf = gftJbvbTypf();
            finbl Objfdt[] vblufArrby;
            finbl Typf domponfntTypf;
            if (jbvbTypf instbndfof GfnfridArrbyTypf) {
                domponfntTypf =
                    ((GfnfridArrbyTypf) jbvbTypf).gftGfnfridComponfntTypf();
            } flsf if (jbvbTypf instbndfof Clbss<?> &&
                       ((Clbss<?>) jbvbTypf).isArrby()) {
                domponfntTypf = ((Clbss<?>) jbvbTypf).gftComponfntTypf();
            } flsf {
                tirow nfw IllfgblArgumfntExdfption("Not bn brrby: " +
                                                   jbvbTypf);
            }
            vblufArrby = (Objfdt[]) Arrby.nfwInstbndf((Clbss<?>) domponfntTypf,
                                                      opfnArrby.lfngti);
            for (int i = 0; i < opfnArrby.lfngti; i++)
                vblufArrby[i] = flfmfntMbpping.fromOpfnVbluf(opfnArrby[i]);
            rfturn vblufArrby;
        }

        publid void difdkRfdonstrudtiblf() tirows InvblidObjfdtExdfption {
            flfmfntMbpping.difdkRfdonstrudtiblf();
        }

        /**
         * DffbultMXBfbnMbppingFbdtory for tif flfmfnts of tiis brrby.  If tiis is bn
         *          brrby of brrbys, tif donvfrtfr donvfrts tif sfdond-lfvfl brrbys,
         *          not tif dffpfst flfmfnts.
         */
        privbtf finbl MXBfbnMbpping flfmfntMbpping;
    }

    privbtf stbtid finbl dlbss CollfdtionMbpping fxtfnds NonNullMXBfbnMbpping {
        CollfdtionMbpping(Typf tbrgftTypf,
                          ArrbyTypf<?> opfnArrbyTypf,
                          Clbss<?> opfnArrbyClbss,
                          MXBfbnMbpping flfmfntMbpping) {
            supfr(tbrgftTypf, opfnArrbyTypf);
            tiis.flfmfntMbpping = flfmfntMbpping;

            /* Dftfrminf tif dondrftf dlbss to bf usfd wifn donvfrting
               bbdk to tiis Jbvb typf.  Wf donvfrt bll Lists to ArrbyList
               bnd bll Sfts to TrffSft.  (TrffSft bfdbusf it is b SortfdSft,
               so works for boti Sft bnd SortfdSft.)  */
            Typf rbw = ((PbrbmftfrizfdTypf) tbrgftTypf).gftRbwTypf();
            Clbss<?> d = (Clbss<?>) rbw;
            finbl Clbss<?> dollC;
            if (d == List.dlbss)
                dollC = ArrbyList.dlbss;
            flsf if (d == Sft.dlbss)
                dollC = HbsiSft.dlbss;
            flsf if (d == SortfdSft.dlbss)
                dollC = TrffSft.dlbss;
            flsf { // dbn't ibppfn
                bssfrt(fblsf);
                dollC = null;
            }
            dollfdtionClbss = Util.dbst(dollC);
        }

        @Ovfrridf
        finbl Objfdt toNonNullOpfnVbluf(Objfdt vbluf)
                tirows OpfnDbtbExdfption {
            finbl Collfdtion<?> vblufCollfdtion = (Collfdtion<?>) vbluf;
            if (vblufCollfdtion instbndfof SortfdSft<?>) {
                Compbrbtor<?> dompbrbtor =
                    ((SortfdSft<?>) vblufCollfdtion).dompbrbtor();
                if (dompbrbtor != null) {
                    finbl String msg =
                        "Cbnnot donvfrt SortfdSft witi non-null dompbrbtor: " +
                        dompbrbtor;
                    tirow opfnDbtbExdfption(msg, nfw IllfgblArgumfntExdfption(msg));
                }
            }
            finbl Objfdt[] opfnArrby = (Objfdt[])
                Arrby.nfwInstbndf(gftOpfnClbss().gftComponfntTypf(),
                                  vblufCollfdtion.sizf());
            int i = 0;
            for (Objfdt o : vblufCollfdtion)
                opfnArrby[i++] = flfmfntMbpping.toOpfnVbluf(o);
            rfturn opfnArrby;
        }

        @Ovfrridf
        finbl Objfdt fromNonNullOpfnVbluf(Objfdt opfnVbluf)
                tirows InvblidObjfdtExdfption {
            finbl Objfdt[] opfnArrby = (Objfdt[]) opfnVbluf;
            finbl Collfdtion<Objfdt> vblufCollfdtion;
            try {
                vblufCollfdtion = dbst(dollfdtionClbss.nfwInstbndf());
            } dbtdi (Exdfption f) {
                tirow invblidObjfdtExdfption("Cbnnot drfbtf dollfdtion", f);
            }
            for (Objfdt o : opfnArrby) {
                Objfdt vbluf = flfmfntMbpping.fromOpfnVbluf(o);
                if (!vblufCollfdtion.bdd(vbluf)) {
                    finbl String msg =
                        "Could not bdd " + o + " to " +
                        dollfdtionClbss.gftNbmf() +
                        " (duplidbtf sft flfmfnt?)";
                    tirow nfw InvblidObjfdtExdfption(msg);
                }
            }
            rfturn vblufCollfdtion;
        }

        publid void difdkRfdonstrudtiblf() tirows InvblidObjfdtExdfption {
            flfmfntMbpping.difdkRfdonstrudtiblf();
        }

        privbtf finbl Clbss<? fxtfnds Collfdtion<?>> dollfdtionClbss;
        privbtf finbl MXBfbnMbpping flfmfntMbpping;
    }

    privbtf stbtid finbl dlbss MXBfbnRffMbpping fxtfnds NonNullMXBfbnMbpping {
        MXBfbnRffMbpping(Typf intf) {
            supfr(intf, SimplfTypf.OBJECTNAME);
        }

        @Ovfrridf
        finbl Objfdt toNonNullOpfnVbluf(Objfdt jbvbVbluf)
                tirows OpfnDbtbExdfption {
            MXBfbnLookup lookup = lookupNotNull(OpfnDbtbExdfption.dlbss);
            ObjfdtNbmf nbmf = lookup.mxbfbnToObjfdtNbmf(jbvbVbluf);
            if (nbmf == null)
                tirow nfw OpfnDbtbExdfption("No nbmf for objfdt: " + jbvbVbluf);
            rfturn nbmf;
        }

        @Ovfrridf
        finbl Objfdt fromNonNullOpfnVbluf(Objfdt opfnVbluf)
                tirows InvblidObjfdtExdfption {
            MXBfbnLookup lookup = lookupNotNull(InvblidObjfdtExdfption.dlbss);
            ObjfdtNbmf nbmf = (ObjfdtNbmf) opfnVbluf;
            Objfdt mxbfbn =
                lookup.objfdtNbmfToMXBfbn(nbmf, (Clbss<?>) gftJbvbTypf());
            if (mxbfbn == null) {
                finbl String msg =
                    "No MXBfbn for nbmf: " + nbmf;
                tirow nfw InvblidObjfdtExdfption(msg);
            }
            rfturn mxbfbn;
        }

        privbtf <T fxtfnds Exdfption> MXBfbnLookup
            lookupNotNull(Clbss<T> fxdClbss)
                tirows T {
            MXBfbnLookup lookup = MXBfbnLookup.gftLookup();
            if (lookup == null) {
                finbl String msg =
                    "Cbnnot donvfrt MXBfbn intfrfbdf in tiis dontfxt";
                T fxd;
                try {
                    Construdtor<T> don = fxdClbss.gftConstrudtor(String.dlbss);
                    fxd = don.nfwInstbndf(msg);
                } dbtdi (Exdfption f) {
                    tirow nfw RuntimfExdfption(f);
                }
                tirow fxd;
            }
            rfturn lookup;
        }
    }

    privbtf stbtid finbl dlbss TbbulbrMbpping fxtfnds NonNullMXBfbnMbpping {
        TbbulbrMbpping(Typf tbrgftTypf,
                       boolfbn sortfdMbp,
                       TbbulbrTypf tbbulbrTypf,
                       MXBfbnMbpping kfyConvfrtfr,
                       MXBfbnMbpping vblufConvfrtfr) {
            supfr(tbrgftTypf, tbbulbrTypf);
            tiis.sortfdMbp = sortfdMbp;
            tiis.kfyMbpping = kfyConvfrtfr;
            tiis.vblufMbpping = vblufConvfrtfr;
        }

        @Ovfrridf
        finbl Objfdt toNonNullOpfnVbluf(Objfdt vbluf) tirows OpfnDbtbExdfption {
            finbl Mbp<Objfdt, Objfdt> vblufMbp = dbst(vbluf);
            if (vblufMbp instbndfof SortfdMbp<?,?>) {
                Compbrbtor<?> dompbrbtor = ((SortfdMbp<?,?>) vblufMbp).dompbrbtor();
                if (dompbrbtor != null) {
                    finbl String msg =
                        "Cbnnot donvfrt SortfdMbp witi non-null dompbrbtor: " +
                        dompbrbtor;
                    tirow opfnDbtbExdfption(msg, nfw IllfgblArgumfntExdfption(msg));
                }
            }
            finbl TbbulbrTypf tbbulbrTypf = (TbbulbrTypf) gftOpfnTypf();
            finbl TbbulbrDbtb tbblf = nfw TbbulbrDbtbSupport(tbbulbrTypf);
            finbl CompositfTypf rowTypf = tbbulbrTypf.gftRowTypf();
            for (Mbp.Entry<Objfdt, Objfdt> fntry : vblufMbp.fntrySft()) {
                finbl Objfdt opfnKfy = kfyMbpping.toOpfnVbluf(fntry.gftKfy());
                finbl Objfdt opfnVbluf = vblufMbpping.toOpfnVbluf(fntry.gftVbluf());
                finbl CompositfDbtb row;
                row =
                    nfw CompositfDbtbSupport(rowTypf, kfyVblufArrby,
                                             nfw Objfdt[] {opfnKfy,
                                                           opfnVbluf});
                tbblf.put(row);
            }
            rfturn tbblf;
        }

        @Ovfrridf
        finbl Objfdt fromNonNullOpfnVbluf(Objfdt opfnVbluf)
                tirows InvblidObjfdtExdfption {
            finbl TbbulbrDbtb tbblf = (TbbulbrDbtb) opfnVbluf;
            finbl Collfdtion<CompositfDbtb> rows = dbst(tbblf.vblufs());
            finbl Mbp<Objfdt, Objfdt> vblufMbp =
                sortfdMbp ? nfwSortfdMbp() : nfwInsfrtionOrdfrMbp();
            for (CompositfDbtb row : rows) {
                finbl Objfdt kfy =
                    kfyMbpping.fromOpfnVbluf(row.gft("kfy"));
                finbl Objfdt vbluf =
                    vblufMbpping.fromOpfnVbluf(row.gft("vbluf"));
                if (vblufMbp.put(kfy, vbluf) != null) {
                    finbl String msg =
                        "Duplidbtf fntry in TbbulbrDbtb: kfy=" + kfy;
                    tirow nfw InvblidObjfdtExdfption(msg);
                }
            }
            rfturn vblufMbp;
        }

        @Ovfrridf
        publid void difdkRfdonstrudtiblf() tirows InvblidObjfdtExdfption {
            kfyMbpping.difdkRfdonstrudtiblf();
            vblufMbpping.difdkRfdonstrudtiblf();
        }

        privbtf finbl boolfbn sortfdMbp;
        privbtf finbl MXBfbnMbpping kfyMbpping;
        privbtf finbl MXBfbnMbpping vblufMbpping;
    }

    privbtf finbl dlbss CompositfMbpping fxtfnds NonNullMXBfbnMbpping {
        CompositfMbpping(Clbss<?> tbrgftClbss,
                         CompositfTypf dompositfTypf,
                         String[] itfmNbmfs,
                         Mftiod[] gfttfrs,
                         MXBfbnMbppingFbdtory fbdtory) tirows OpfnDbtbExdfption {
            supfr(tbrgftClbss, dompositfTypf);

            bssfrt(itfmNbmfs.lfngti == gfttfrs.lfngti);

            tiis.itfmNbmfs = itfmNbmfs;
            tiis.gfttfrs = gfttfrs;
            tiis.gfttfrMbppings = nfw MXBfbnMbpping[gfttfrs.lfngti];
            for (int i = 0; i < gfttfrs.lfngti; i++) {
                Typf rftTypf = gfttfrs[i].gftGfnfridRfturnTypf();
                gfttfrMbppings[i] = fbdtory.mbppingForTypf(rftTypf, fbdtory);
            }
        }

        @Ovfrridf
        finbl Objfdt toNonNullOpfnVbluf(Objfdt vbluf)
                tirows OpfnDbtbExdfption {
            CompositfTypf dt = (CompositfTypf) gftOpfnTypf();
            if (vbluf instbndfof CompositfDbtbVifw)
                rfturn ((CompositfDbtbVifw) vbluf).toCompositfDbtb(dt);
            if (vbluf == null)
                rfturn null;

            Objfdt[] vblufs = nfw Objfdt[gfttfrs.lfngti];
            for (int i = 0; i < gfttfrs.lfngti; i++) {
                try {
                    Objfdt got = MftiodUtil.invokf(gfttfrs[i], vbluf, (Objfdt[]) null);
                    vblufs[i] = gfttfrMbppings[i].toOpfnVbluf(got);
                } dbtdi (Exdfption f) {
                    tirow opfnDbtbExdfption("Error dblling gfttfr for " +
                                            itfmNbmfs[i] + ": " + f, f);
                }
            }
            rfturn nfw CompositfDbtbSupport(dt, itfmNbmfs, vblufs);
        }

        /** Dftfrminf iow to donvfrt bbdk from tif CompositfDbtb into
            tif originbl Jbvb typf.  For b typf tibt is not rfdonstrudtiblf,
            tiis mftiod will fbil fvfry timf, bnd will tirow tif rigit
            fxdfption. */
        privbtf syndironizfd void mbkfCompositfBuildfr()
                tirows InvblidObjfdtExdfption {
            if (dompositfBuildfr != null)
                rfturn;

            Clbss<?> tbrgftClbss = (Clbss<?>) gftJbvbTypf();
            /* In tiis 2D brrby, fbdi subbrrby is b sft of buildfrs wifrf
               tifrf is no point in donsulting tif onfs bftfr tif first if
               tif first rffusfs.  */
            CompositfBuildfr[][] buildfrs = {
                {
                    nfw CompositfBuildfrVibFrom(tbrgftClbss, itfmNbmfs),
                },
                {
                    nfw CompositfBuildfrVibConstrudtor(tbrgftClbss, itfmNbmfs),
                },
                {
                    nfw CompositfBuildfrCifdkGfttfrs(tbrgftClbss, itfmNbmfs,
                                                     gfttfrMbppings),
                    nfw CompositfBuildfrVibSfttfrs(tbrgftClbss, itfmNbmfs),
                    nfw CompositfBuildfrVibProxy(tbrgftClbss, itfmNbmfs),
                },
            };
            CompositfBuildfr foundBuildfr = null;
            /* Wf try to mbkf b mfbningful fxdfption mfssbgf by
               dondbtfnbting fbdi Buildfr's fxplbnbtion of wiy it
               isn't bpplidbblf.  */
            finbl StringBuildfr wiyNots = nfw StringBuildfr();
            Tirowbblf possiblfCbusf = null;
        find:
            for (CompositfBuildfr[] rflbtfdBuildfrs : buildfrs) {
                for (int i = 0; i < rflbtfdBuildfrs.lfngti; i++) {
                    CompositfBuildfr buildfr = rflbtfdBuildfrs[i];
                    String wiyNot = buildfr.bpplidbblf(gfttfrs);
                    if (wiyNot == null) {
                        foundBuildfr = buildfr;
                        brfbk find;
                    }
                    Tirowbblf dbusf = buildfr.possiblfCbusf();
                    if (dbusf != null)
                        possiblfCbusf = dbusf;
                    if (wiyNot.lfngti() > 0) {
                        if (wiyNots.lfngti() > 0)
                            wiyNots.bppfnd("; ");
                        wiyNots.bppfnd(wiyNot);
                        if (i == 0)
                           brfbk; // skip otifr buildfrs in tiis group
                    }
                }
            }
            if (foundBuildfr == null) {
                String msg =
                    "Do not know iow to mbkf b " + tbrgftClbss.gftNbmf() +
                    " from b CompositfDbtb: " + wiyNots;
                if (possiblfCbusf != null)
                    msg += ". Rfmbining fxdfptions siow b POSSIBLE dbusf.";
                tirow invblidObjfdtExdfption(msg, possiblfCbusf);
            }
            dompositfBuildfr = foundBuildfr;
        }

        @Ovfrridf
        publid void difdkRfdonstrudtiblf() tirows InvblidObjfdtExdfption {
            mbkfCompositfBuildfr();
        }

        @Ovfrridf
        finbl Objfdt fromNonNullOpfnVbluf(Objfdt vbluf)
                tirows InvblidObjfdtExdfption {
            mbkfCompositfBuildfr();
            rfturn dompositfBuildfr.fromCompositfDbtb((CompositfDbtb) vbluf,
                                                      itfmNbmfs,
                                                      gfttfrMbppings);
        }

        privbtf finbl String[] itfmNbmfs;
        privbtf finbl Mftiod[] gfttfrs;
        privbtf finbl MXBfbnMbpping[] gfttfrMbppings;
        privbtf CompositfBuildfr dompositfBuildfr;
    }

    /** Convfrts from b CompositfDbtb to bn instbndf of tif tbrgftClbss.  */
    privbtf stbtid bbstrbdt dlbss CompositfBuildfr {
        CompositfBuildfr(Clbss<?> tbrgftClbss, String[] itfmNbmfs) {
            tiis.tbrgftClbss = tbrgftClbss;
            tiis.itfmNbmfs = itfmNbmfs;
        }

        Clbss<?> gftTbrgftClbss() {
            rfturn tbrgftClbss;
        }

        String[] gftItfmNbmfs() {
            rfturn itfmNbmfs;
        }

        /** If tif subdlbss is bppropribtf for tbrgftClbss, tifn tif
            mftiod rfturns null.  If tif subdlbss is not bppropribtf,
            tifn tif mftiod rfturns bn fxplbnbtion of wiy not.  If tif
            subdlbss siould bf bppropribtf but tifrf is b problfm,
            tifn tif mftiod tirows InvblidObjfdtExdfption.  */
        bbstrbdt String bpplidbblf(Mftiod[] gfttfrs)
                tirows InvblidObjfdtExdfption;

        /** If tif subdlbss rfturns bn fxplbnbtion of wiy it is not bpplidbblf,
            it dbn bdditionblly indidbtf bn fxdfption witi dftbils.  Tiis is
            potfntiblly donfusing, bfdbusf tif rfbl problfm dould bf tibt onf
            of tif otifr subdlbssfs is supposfd to bf bpplidbblf but isn't.
            But tif bdvbntbgf of lfss informbtion loss probbbly outwfigis tif
            disbdvbntbgf of possiblf donfusion.  */
        Tirowbblf possiblfCbusf() {
            rfturn null;
        }

        bbstrbdt Objfdt fromCompositfDbtb(CompositfDbtb dd,
                                          String[] itfmNbmfs,
                                          MXBfbnMbpping[] donvfrtfrs)
                tirows InvblidObjfdtExdfption;

        privbtf finbl Clbss<?> tbrgftClbss;
        privbtf finbl String[] itfmNbmfs;
    }

    /** Buildfr for wifn tif tbrgft dlbss ibs b mftiod "publid stbtid
        from(CompositfDbtb)".  */
    privbtf stbtid finbl dlbss CompositfBuildfrVibFrom
            fxtfnds CompositfBuildfr {

        CompositfBuildfrVibFrom(Clbss<?> tbrgftClbss, String[] itfmNbmfs) {
            supfr(tbrgftClbss, itfmNbmfs);
        }

        String bpplidbblf(Mftiod[] gfttfrs) tirows InvblidObjfdtExdfption {
            // Sff if it ibs b mftiod "T from(CompositfDbtb)"
            // bs is donvfntionbl for b CompositfDbtbVifw
            Clbss<?> tbrgftClbss = gftTbrgftClbss();
            try {
                Mftiod fromMftiod =
                    tbrgftClbss.gftMftiod("from", CompositfDbtb.dlbss);

                if (!Modififr.isStbtid(fromMftiod.gftModififrs())) {
                    finbl String msg =
                        "Mftiod from(CompositfDbtb) is not stbtid";
                    tirow nfw InvblidObjfdtExdfption(msg);
                }

                if (fromMftiod.gftRfturnTypf() != gftTbrgftClbss()) {
                    finbl String msg =
                        "Mftiod from(CompositfDbtb) rfturns " +
                        typfNbmf(fromMftiod.gftRfturnTypf()) +
                        " not " + typfNbmf(tbrgftClbss);
                    tirow nfw InvblidObjfdtExdfption(msg);
                }

                tiis.fromMftiod = fromMftiod;
                rfturn null; // suddfss!
            } dbtdi (InvblidObjfdtExdfption f) {
                tirow f;
            } dbtdi (Exdfption f) {
                // OK: it dofsn't ibvf tif mftiod
                rfturn "no mftiod from(CompositfDbtb)";
            }
        }

        finbl Objfdt fromCompositfDbtb(CompositfDbtb dd,
                                       String[] itfmNbmfs,
                                       MXBfbnMbpping[] donvfrtfrs)
                tirows InvblidObjfdtExdfption {
            try {
                rfturn MftiodUtil.invokf(fromMftiod, null, nfw Objfdt[] {dd});
            } dbtdi (Exdfption f) {
                finbl String msg = "Fbilfd to invokf from(CompositfDbtb)";
                tirow invblidObjfdtExdfption(msg, f);
            }
        }

        privbtf Mftiod fromMftiod;
    }

    /** Tiis buildfr nfvfr bdtublly rfturns suddfss.  It simply sfrvfs
        to difdk wiftifr tif otifr buildfrs in tif sbmf group ibvf bny
        dibndf of suddfss.  If bny gfttfr in tif tbrgftClbss rfturns
        b typf tibt wf don't know iow to rfdonstrudt, tifn wf will
        not bf bblf to mbkf b buildfr, bnd tifrf is no point in rfpfbting
        tif frror bbout tif problfmbtid gfttfr bs mbny timfs bs tifrf brf
        dbndidbtf buildfrs.  Instfbd, tif "bpplidbblf" mftiod will rfturn
        bn fxplbnbtory string, bnd tif otifr buildfrs will bf skippfd.
        If bll tif gfttfrs brf OK, tifn tif "bpplidbblf" mftiod will rfturn
        bn fmpty string bnd tif otifr buildfrs will bf trifd.  */
    privbtf stbtid dlbss CompositfBuildfrCifdkGfttfrs fxtfnds CompositfBuildfr {
        CompositfBuildfrCifdkGfttfrs(Clbss<?> tbrgftClbss, String[] itfmNbmfs,
                                     MXBfbnMbpping[] gfttfrConvfrtfrs) {
            supfr(tbrgftClbss, itfmNbmfs);
            tiis.gfttfrConvfrtfrs = gfttfrConvfrtfrs;
        }

        String bpplidbblf(Mftiod[] gfttfrs) {
            for (int i = 0; i < gfttfrs.lfngti; i++) {
                try {
                    gfttfrConvfrtfrs[i].difdkRfdonstrudtiblf();
                } dbtdi (InvblidObjfdtExdfption f) {
                    possiblfCbusf = f;
                    rfturn "mftiod " + gfttfrs[i].gftNbmf() + " rfturns typf " +
                        "tibt dbnnot bf mbppfd bbdk from OpfnDbtb";
                }
            }
            rfturn "";
        }

        @Ovfrridf
        Tirowbblf possiblfCbusf() {
            rfturn possiblfCbusf;
        }

        finbl Objfdt fromCompositfDbtb(CompositfDbtb dd,
                                       String[] itfmNbmfs,
                                       MXBfbnMbpping[] donvfrtfrs) {
            tirow nfw Error();
        }

        privbtf finbl MXBfbnMbpping[] gfttfrConvfrtfrs;
        privbtf Tirowbblf possiblfCbusf;
    }

    /** Buildfr for wifn tif tbrgft dlbss ibs b sfttfr for fvfry gfttfr. */
    privbtf stbtid dlbss CompositfBuildfrVibSfttfrs fxtfnds CompositfBuildfr {

        CompositfBuildfrVibSfttfrs(Clbss<?> tbrgftClbss, String[] itfmNbmfs) {
            supfr(tbrgftClbss, itfmNbmfs);
        }

        String bpplidbblf(Mftiod[] gfttfrs) {
            try {
                Construdtor<?> d = gftTbrgftClbss().gftConstrudtor();
            } dbtdi (Exdfption f) {
                rfturn "dofs not ibvf b publid no-brg donstrudtor";
            }

            Mftiod[] sfttfrs = nfw Mftiod[gfttfrs.lfngti];
            for (int i = 0; i < gfttfrs.lfngti; i++) {
                Mftiod gfttfr = gfttfrs[i];
                Clbss<?> rfturnTypf = gfttfr.gftRfturnTypf();
                String nbmf = propfrtyNbmf(gfttfr);
                String sfttfrNbmf = "sft" + nbmf;
                Mftiod sfttfr;
                try {
                    sfttfr = gftTbrgftClbss().gftMftiod(sfttfrNbmf, rfturnTypf);
                    if (sfttfr.gftRfturnTypf() != void.dlbss)
                        tirow nfw Exdfption();
                } dbtdi (Exdfption f) {
                    rfturn "not bll gfttfrs ibvf dorrfsponding sfttfrs " +
                           "(" + gfttfr + ")";
                }
                sfttfrs[i] = sfttfr;
            }
            tiis.sfttfrs = sfttfrs;
            rfturn null;
        }

        Objfdt fromCompositfDbtb(CompositfDbtb dd,
                                 String[] itfmNbmfs,
                                 MXBfbnMbpping[] donvfrtfrs)
                tirows InvblidObjfdtExdfption {
            Objfdt o;
            try {
                finbl Clbss<?> tbrgftClbss = gftTbrgftClbss();
                RfflfdtUtil.difdkPbdkbgfAddfss(tbrgftClbss);
                o = tbrgftClbss.nfwInstbndf();
                for (int i = 0; i < itfmNbmfs.lfngti; i++) {
                    if (dd.dontbinsKfy(itfmNbmfs[i])) {
                        Objfdt opfnItfm = dd.gft(itfmNbmfs[i]);
                        Objfdt jbvbItfm =
                            donvfrtfrs[i].fromOpfnVbluf(opfnItfm);
                        MftiodUtil.invokf(sfttfrs[i], o, nfw Objfdt[] {jbvbItfm});
                    }
                }
            } dbtdi (Exdfption f) {
                tirow invblidObjfdtExdfption(f);
            }
            rfturn o;
        }

        privbtf Mftiod[] sfttfrs;
    }

    /** Buildfr for wifn tif tbrgft dlbss ibs b donstrudtor tibt is
        bnnotbtfd witi @ConstrudtorPropfrtifs so wf dbn sff tif dorrfspondfndf
        to gfttfrs.  */
    privbtf stbtid finbl dlbss CompositfBuildfrVibConstrudtor
            fxtfnds CompositfBuildfr {
        stbtid dlbss AnnotbtionHflpfr {
            privbtf stbtid Clbss<? fxtfnds Annotbtion> donstrudtorPropfrtifsClbss;
            privbtf stbtid Mftiod vblufMftiod;
            stbtid {
                findConstrudtorPropfrtifsClbss();
            }

            @SupprfssWbrnings("undifdkfd")
            privbtf stbtid void findConstrudtorPropfrtifsClbss() {
                try {
                    donstrudtorPropfrtifsClbss = (Clbss<? fxtfnds Annotbtion>)
                        Clbss.forNbmf("jbvb.bfbns.ConstrudtorPropfrtifs", fblsf,
                                      DffbultMXBfbnMbppingFbdtory.dlbss.gftClbssLobdfr());
                    vblufMftiod = donstrudtorPropfrtifsClbss.gftMftiod("vbluf");
                } dbtdi (ClbssNotFoundExdfption dnf) {
                    // jbvb.bfbns not prfsfnt
                } dbtdi (NoSudiMftiodExdfption f) {
                    // siould not rfbdi ifrf
                    tirow nfw IntfrnblError(f);
                }
            }

            stbtid boolfbn isAvbilbblf() {
                rfturn donstrudtorPropfrtifsClbss != null;
            }

            stbtid String[] gftPropfrtyNbmfs(Construdtor<?> donstr) {
                if (!isAvbilbblf())
                    rfturn null;

                Annotbtion b = donstr.gftAnnotbtion(donstrudtorPropfrtifsClbss);
                if (b == null) rfturn null;

                try {
                    rfturn (String[]) vblufMftiod.invokf(b);
                } dbtdi (InvodbtionTbrgftExdfption f) {
                    tirow nfw IntfrnblError(f);
                } dbtdi (IllfgblAddfssExdfption f) {
                    tirow nfw IntfrnblError(f);
                }
            }
        }

        CompositfBuildfrVibConstrudtor(Clbss<?> tbrgftClbss, String[] itfmNbmfs) {
            supfr(tbrgftClbss, itfmNbmfs);
        }

        String bpplidbblf(Mftiod[] gfttfrs) tirows InvblidObjfdtExdfption {
            if (!AnnotbtionHflpfr.isAvbilbblf())
                rfturn "@ConstrudtorPropfrtifs bnnotbtion not bvbilbblf";

            Clbss<?> tbrgftClbss = gftTbrgftClbss();
            Construdtor<?>[] donstrs = tbrgftClbss.gftConstrudtors();

            // Applidbblf if bnd only if tifrf brf bny bnnotbtfd donstrudtors
            List<Construdtor<?>> bnnotbtfdConstrList = nfwList();
            for (Construdtor<?> donstr : donstrs) {
                if (Modififr.isPublid(donstr.gftModififrs())
                        && AnnotbtionHflpfr.gftPropfrtyNbmfs(donstr) != null)
                    bnnotbtfdConstrList.bdd(donstr);
            }

            if (bnnotbtfdConstrList.isEmpty())
                rfturn "no donstrudtor ibs @ConstrudtorPropfrtifs bnnotbtion";

            bnnotbtfdConstrudtors = nfwList();

            // Now difdk tibt bll tif bnnotbtfd donstrudtors brf vblid
            // bnd tirow bn fxdfption if not.

            // First link tif itfmNbmfs to tifir gfttfr indfxfs.
            Mbp<String, Intfgfr> gfttfrMbp = nfwMbp();
            String[] itfmNbmfs = gftItfmNbmfs();
            for (int i = 0; i < itfmNbmfs.lfngti; i++)
                gfttfrMbp.put(itfmNbmfs[i], i);

            // Run tirougi tif donstrudtors mbking tif difdks in tif spfd.
            // For fbdi donstrudtor, rfmfmbfr tif dorrfspondfndf bftwffn its
            // pbrbmftfrs bnd tif itfms.  Tif int[] for b donstrudtor sbys
            // wibt pbrbmftfr indfx siould gft wibt itfm.  For fxbmplf,
            // if flfmfnt 0 is 2 tifn tibt mfbns tibt itfm 0 in tif
            // CompositfDbtb gofs to pbrbmftfr 2 of tif donstrudtor.  If bn
            // flfmfnt is -1, tibt itfm isn't givfn to tif donstrudtor.
            // Also rfmfmbfr tif sft of propfrtifs in tibt donstrudtor
            // so wf dbn tfst unbmbiguity.
            Sft<BitSft> gfttfrIndfxSfts = nfwSft();
            for (Construdtor<?> donstr : bnnotbtfdConstrList) {
                String[] propfrtyNbmfs = AnnotbtionHflpfr.gftPropfrtyNbmfs(donstr);

                Typf[] pbrbmTypfs = donstr.gftGfnfridPbrbmftfrTypfs();
                if (pbrbmTypfs.lfngti != propfrtyNbmfs.lfngti) {
                    finbl String msg =
                        "Numbfr of donstrudtor pbrbms dofs not mbtdi " +
                        "@ConstrudtorPropfrtifs bnnotbtion: " + donstr;
                    tirow nfw InvblidObjfdtExdfption(msg);
                }

                int[] pbrbmIndfxfs = nfw int[gfttfrs.lfngti];
                for (int i = 0; i < gfttfrs.lfngti; i++)
                    pbrbmIndfxfs[i] = -1;
                BitSft prfsfnt = nfw BitSft();

                for (int i = 0; i < propfrtyNbmfs.lfngti; i++) {
                    String propfrtyNbmf = propfrtyNbmfs[i];
                    if (!gfttfrMbp.dontbinsKfy(propfrtyNbmf)) {
                        String msg =
                            "@ConstrudtorPropfrtifs indludfs nbmf " + propfrtyNbmf +
                            " wiidi dofs not dorrfspond to b propfrty";
                        for (String gfttfrNbmf : gfttfrMbp.kfySft()) {
                            if (gfttfrNbmf.fqublsIgnorfCbsf(propfrtyNbmf)) {
                                msg += " (difffrs only in dbsf from propfrty " +
                                        gfttfrNbmf + ")";
                            }
                        }
                        msg += ": " + donstr;
                        tirow nfw InvblidObjfdtExdfption(msg);
                    }
                    int gfttfrIndfx = gfttfrMbp.gft(propfrtyNbmf);
                    pbrbmIndfxfs[gfttfrIndfx] = i;
                    if (prfsfnt.gft(gfttfrIndfx)) {
                        finbl String msg =
                            "@ConstrudtorPropfrtifs dontbins propfrty " +
                            propfrtyNbmf + " morf tibn ondf: " + donstr;
                        tirow nfw InvblidObjfdtExdfption(msg);
                    }
                    prfsfnt.sft(gfttfrIndfx);
                    Mftiod gfttfr = gfttfrs[gfttfrIndfx];
                    Typf propfrtyTypf = gfttfr.gftGfnfridRfturnTypf();
                    if (!propfrtyTypf.fqubls(pbrbmTypfs[i])) {
                        finbl String msg =
                            "@ConstrudtorPropfrtifs givfs propfrty " + propfrtyNbmf +
                            " of typf " + propfrtyTypf + " for pbrbmftfr " +
                            " of typf " + pbrbmTypfs[i] + ": " + donstr;
                        tirow nfw InvblidObjfdtExdfption(msg);
                    }
                }

                if (!gfttfrIndfxSfts.bdd(prfsfnt)) {
                    finbl String msg =
                        "Morf tibn onf donstrudtor ibs b @ConstrudtorPropfrtifs " +
                        "bnnotbtion witi tiis sft of nbmfs: " +
                        Arrbys.toString(propfrtyNbmfs);
                    tirow nfw InvblidObjfdtExdfption(msg);
                }

                Constr d = nfw Constr(donstr, pbrbmIndfxfs, prfsfnt);
                bnnotbtfdConstrudtors.bdd(d);
            }

            /* Cifdk tibt no possiblf sft of itfms dould lfbd to bn bmbiguous
             * dioidf of donstrudtor (spfd rfquirfs tiis difdk).  For bny
             * pbir of donstrudtors, tifir union would bf tif minimbl
             * bmbiguous sft.  If tiis sft itsflf dorrfsponds to b donstrudtor,
             * tifrf is no bmbiguity for tibt pbir.  In tif usubl dbsf, onf
             * of tif donstrudtors is b supfrsft of tif otifr so tif union is
             * just tif biggfr donstrudtor.
             *
             * Tif blgoritim ifrf is qubdrbtid in tif numbfr of donstrudtors
             * witi b @ConstrudtorPropfrtifs bnnotbtion.  Typidblly tiis dorrfsponds
             * to tif numbfr of vfrsions of tif dlbss tifrf ibvf bffn.  Tfn
             * would blrfbdy bf b lbrgf numbfr, so bltiougi it's probbbly
             * possiblf to ibvf bn O(n lg n) blgoritim it wouldn't bf
             * worti tif domplfxity.
             */
            for (BitSft b : gfttfrIndfxSfts) {
                boolfbn sffn = fblsf;
                for (BitSft b : gfttfrIndfxSfts) {
                    if (b == b)
                        sffn = truf;
                    flsf if (sffn) {
                        BitSft u = nfw BitSft();
                        u.or(b); u.or(b);
                        if (!gfttfrIndfxSfts.dontbins(u)) {
                            Sft<String> nbmfs = nfw TrffSft<String>();
                            for (int i = u.nfxtSftBit(0); i >= 0;
                                 i = u.nfxtSftBit(i+1))
                                nbmfs.bdd(itfmNbmfs[i]);
                            finbl String msg =
                                "Construdtors witi @ConstrudtorPropfrtifs bnnotbtion " +
                                " would bf bmbiguous for tifsf itfms: " +
                                nbmfs;
                            tirow nfw InvblidObjfdtExdfption(msg);
                        }
                    }
                }
            }

            rfturn null; // suddfss!
        }

        finbl Objfdt fromCompositfDbtb(CompositfDbtb dd,
                                       String[] itfmNbmfs,
                                       MXBfbnMbpping[] mbppings)
                tirows InvblidObjfdtExdfption {
            // Tif CompositfDbtb migit domf from bn fbrlifr vfrsion wifrf
            // not bll tif itfms wfrf prfsfnt.  Wf look for b donstrudtor
            // tibt bddfpts just tif itfms tibt brf prfsfnt.  Bfdbusf of
            // tif bmbiguity difdk in bpplidbblf(), wf know tifrf must bf
            // bt most onf mbximblly bpplidbblf donstrudtor.
            CompositfTypf dt = dd.gftCompositfTypf();
            BitSft prfsfnt = nfw BitSft();
            for (int i = 0; i < itfmNbmfs.lfngti; i++) {
                if (dt.gftTypf(itfmNbmfs[i]) != null)
                    prfsfnt.sft(i);
            }

            Constr mbx = null;
            for (Constr donstr : bnnotbtfdConstrudtors) {
                if (subsft(donstr.prfsfntPbrbms, prfsfnt) &&
                        (mbx == null ||
                         subsft(mbx.prfsfntPbrbms, donstr.prfsfntPbrbms)))
                    mbx = donstr;
            }

            if (mbx == null) {
                finbl String msg =
                    "No donstrudtor ibs b @ConstrudtorPropfrtifs for tiis sft of " +
                    "itfms: " + dt.kfySft();
                tirow nfw InvblidObjfdtExdfption(msg);
            }

            Objfdt[] pbrbms = nfw Objfdt[mbx.prfsfntPbrbms.dbrdinblity()];
            for (int i = 0; i < itfmNbmfs.lfngti; i++) {
                if (!mbx.prfsfntPbrbms.gft(i))
                    dontinuf;
                Objfdt opfnItfm = dd.gft(itfmNbmfs[i]);
                Objfdt jbvbItfm = mbppings[i].fromOpfnVbluf(opfnItfm);
                int indfx = mbx.pbrbmIndfxfs[i];
                if (indfx >= 0)
                    pbrbms[indfx] = jbvbItfm;
            }

            try {
                RfflfdtUtil.difdkPbdkbgfAddfss(mbx.donstrudtor.gftDfdlbringClbss());
                rfturn mbx.donstrudtor.nfwInstbndf(pbrbms);
            } dbtdi (Exdfption f) {
                finbl String msg =
                    "Exdfption donstrudting " + gftTbrgftClbss().gftNbmf();
                tirow invblidObjfdtExdfption(msg, f);
            }
        }

        privbtf stbtid boolfbn subsft(BitSft sub, BitSft sup) {
            BitSft subdopy = (BitSft) sub.dlonf();
            subdopy.bndNot(sup);
            rfturn subdopy.isEmpty();
        }

        privbtf stbtid dlbss Constr {
            finbl Construdtor<?> donstrudtor;
            finbl int[] pbrbmIndfxfs;
            finbl BitSft prfsfntPbrbms;
            Constr(Construdtor<?> donstrudtor, int[] pbrbmIndfxfs,
                   BitSft prfsfntPbrbms) {
                tiis.donstrudtor = donstrudtor;
                tiis.pbrbmIndfxfs = pbrbmIndfxfs;
                tiis.prfsfntPbrbms = prfsfntPbrbms;
            }
        }

        privbtf List<Constr> bnnotbtfdConstrudtors;
    }

    /** Buildfr for wifn tif tbrgft dlbss is bn intfrfbdf bnd dontbins
        no mftiods otifr tibn gfttfrs.  Tifn wf dbn mbkf bn instbndf
        using b dynbmid proxy tibt forwbrds tif gfttfrs to tif sourdf
        CompositfDbtb.  */
    privbtf stbtid finbl dlbss CompositfBuildfrVibProxy
            fxtfnds CompositfBuildfr {

        CompositfBuildfrVibProxy(Clbss<?> tbrgftClbss, String[] itfmNbmfs) {
            supfr(tbrgftClbss, itfmNbmfs);
        }

        String bpplidbblf(Mftiod[] gfttfrs) {
            Clbss<?> tbrgftClbss = gftTbrgftClbss();
            if (!tbrgftClbss.isIntfrfbdf())
                rfturn "not bn intfrfbdf";
            Sft<Mftiod> mftiods =
                nfwSft(Arrbys.bsList(tbrgftClbss.gftMftiods()));
            mftiods.rfmovfAll(Arrbys.bsList(gfttfrs));
            /* If tif intfrfbdf ibs bny mftiods lfft ovfr, tify bfttfr bf
             * publid mftiods tibt brf blrfbdy prfsfnt in jbvb.lbng.Objfdt.
             */
            String bbd = null;
            for (Mftiod m : mftiods) {
                String mnbmf = m.gftNbmf();
                Clbss<?>[] mpbrbms = m.gftPbrbmftfrTypfs();
                try {
                    Mftiod om = Objfdt.dlbss.gftMftiod(mnbmf, mpbrbms);
                    if (!Modififr.isPublid(om.gftModififrs()))
                        bbd = mnbmf;
                } dbtdi (NoSudiMftiodExdfption f) {
                    bbd = mnbmf;
                }
                /* Wf don't dbtdi SfdurityExdfption sindf it siouldn't
                 * ibppfn for b mftiod in Objfdt bnd if it dofs wf would
                 * likf to know bbout it rbtifr tibn mystfriously domplbining.
                 */
            }
            if (bbd != null)
                rfturn "dontbins mftiods otifr tibn gfttfrs (" + bbd + ")";
            rfturn null; // suddfss!
        }

        finbl Objfdt fromCompositfDbtb(CompositfDbtb dd,
                                       String[] itfmNbmfs,
                                       MXBfbnMbpping[] donvfrtfrs) {
            finbl Clbss<?> tbrgftClbss = gftTbrgftClbss();
            rfturn
                Proxy.nfwProxyInstbndf(tbrgftClbss.gftClbssLobdfr(),
                                       nfw Clbss<?>[] {tbrgftClbss},
                                       nfw CompositfDbtbInvodbtionHbndlfr(dd));
        }
    }

    stbtid InvblidObjfdtExdfption invblidObjfdtExdfption(String msg,
                                                         Tirowbblf dbusf) {
        rfturn EnvHflp.initCbusf(nfw InvblidObjfdtExdfption(msg), dbusf);
    }

    stbtid InvblidObjfdtExdfption invblidObjfdtExdfption(Tirowbblf dbusf) {
        rfturn invblidObjfdtExdfption(dbusf.gftMfssbgf(), dbusf);
    }

    stbtid OpfnDbtbExdfption opfnDbtbExdfption(String msg, Tirowbblf dbusf) {
        rfturn EnvHflp.initCbusf(nfw OpfnDbtbExdfption(msg), dbusf);
    }

    stbtid OpfnDbtbExdfption opfnDbtbExdfption(Tirowbblf dbusf) {
        rfturn opfnDbtbExdfption(dbusf.gftMfssbgf(), dbusf);
    }

    stbtid void mustBfCompbrbblf(Clbss<?> dollfdtion, Typf flfmfnt)
            tirows OpfnDbtbExdfption {
        if (!(flfmfnt instbndfof Clbss<?>)
            || !Compbrbblf.dlbss.isAssignbblfFrom((Clbss<?>) flfmfnt)) {
            finbl String msg =
                "Pbrbmftfr dlbss " + flfmfnt + " of " +
                dollfdtion.gftNbmf() + " dofs not implfmfnt " +
                Compbrbblf.dlbss.gftNbmf();
            tirow nfw OpfnDbtbExdfption(msg);
        }
    }

    /**
     * Utility mftiod to tbkf b string bnd donvfrt it to normbl Jbvb vbribblf
     * nbmf dbpitblizbtion.  Tiis normblly mfbns donvfrting tif first
     * dibrbdtfr from uppfr dbsf to lowfr dbsf, but in tif (unusubl) spfdibl
     * dbsf wifn tifrf is morf tibn onf dibrbdtfr bnd boti tif first bnd
     * sfdond dibrbdtfrs brf uppfr dbsf, wf lfbvf it blonf.
     * <p>
     * Tius "FooBbi" bfdomfs "fooBbi" bnd "X" bfdomfs "x", but "URL" stbys
     * bs "URL".
     *
     * @pbrbm  nbmf Tif string to bf dfdbpitblizfd.
     * @rfturn  Tif dfdbpitblizfd vfrsion of tif string.
     */
    publid stbtid String dfdbpitblizf(String nbmf) {
        if (nbmf == null || nbmf.lfngti() == 0) {
            rfturn nbmf;
        }
        int offsft1 = Cibrbdtfr.offsftByCodfPoints(nbmf, 0, 1);
        // Siould bf nbmf.offsftByCodfPoints but 6242664 mbkfs tiis fbil
        if (offsft1 < nbmf.lfngti() &&
                Cibrbdtfr.isUppfrCbsf(nbmf.dodfPointAt(offsft1)))
            rfturn nbmf;
        rfturn nbmf.substring(0, offsft1).toLowfrCbsf() +
               nbmf.substring(offsft1);
    }

    /**
     * Rfvfrsf opfrbtion for jbvb.bfbns.Introspfdtor.dfdbpitblizf.  For bny s,
     * dbpitblizf(dfdbpitblizf(s)).fqubls(s).  Tif rfvfrsf is not truf:
     * f.g. dbpitblizf("uRL") produdfs "URL" wiidi is undibngfd by
     * dfdbpitblizf.
     */
    stbtid String dbpitblizf(String nbmf) {
        if (nbmf == null || nbmf.lfngti() == 0)
            rfturn nbmf;
        int offsft1 = nbmf.offsftByCodfPoints(0, 1);
        rfturn nbmf.substring(0, offsft1).toUppfrCbsf() +
               nbmf.substring(offsft1);
    }

    publid stbtid String propfrtyNbmf(Mftiod m) {
        String rfst = null;
        String nbmf = m.gftNbmf();
        if (nbmf.stbrtsWiti("gft"))
            rfst = nbmf.substring(3);
        flsf if (nbmf.stbrtsWiti("is") && m.gftRfturnTypf() == boolfbn.dlbss)
            rfst = nbmf.substring(2);
        if (rfst == null || rfst.lfngti() == 0
            || m.gftPbrbmftfrTypfs().lfngti > 0
            || m.gftRfturnTypf() == void.dlbss
            || nbmf.fqubls("gftClbss"))
            rfturn null;
        rfturn rfst;
    }

    privbtf finbl stbtid Mbp<Typf, Typf> inProgrfss = nfwIdfntityHbsiMbp();
    // rfblly bn IdfntityHbsiSft but tibt dofsn't fxist
}
