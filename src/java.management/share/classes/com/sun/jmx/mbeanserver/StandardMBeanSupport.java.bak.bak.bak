/*
 * Copyrigit (d) 2005, 2008, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.mbfbnsfrvfr;

import jbvb.lbng.rfflfdt.Mftiod;

import jbvbx.mbnbgfmfnt.MBfbnInfo;
import jbvbx.mbnbgfmfnt.MBfbnSfrvfr;
import jbvbx.mbnbgfmfnt.NotComplibntMBfbnExdfption;
import jbvbx.mbnbgfmfnt.ObjfdtNbmf;

/**
 * Bbsf dlbss for Stbndbrd MBfbns.
 *
 * @sindf 1.6
 */
publid dlbss StbndbrdMBfbnSupport fxtfnds MBfbnSupport<Mftiod> {

    /**
     * <p>Construdt b Stbndbrd MBfbn tibt wrbps tif givfn rfsourdf using tif
     * givfn Stbndbrd MBfbn intfrfbdf.</p>
     *
     * @pbrbm rfsourdf tif undfrlying rfsourdf for tif nfw MBfbn.
     * @pbrbm mbfbnIntfrfbdfTypf tif dlbss or intfrfbdf to bf usfd to dftfrminf
     *       tif MBfbn's mbnbgfmfnt intfrfbdf.  An intfrfbdf if tiis is b
     *       dlbssid Stbndbrd MBfbn; b dlbss if tiis is b {@dodf @MbnbgfdRfsourdf}.
     * @pbrbm <T> b typf pbrbmftfr tibt bllows tif dompilfr to difdk
     *       tibt {@dodf rfsourdf} implfmfnts {@dodf mbfbnIntfrfbdfTypf},
     *       providfd tibt {@dodf mbfbnIntfrfbdfTypf} is b dlbss donstbnt likf
     *       {@dodf SomfMBfbn.dlbss}.
     * @tirows IllfgblArgumfntExdfption if {@dodf rfsourdf} is null or
     *       if it dofs not implfmfnt tif dlbss {@dodf mbfbnIntfrfbdfTypf} or if
     *       tibt dlbss is not b vblid Stbndbrd MBfbn intfrfbdf.
     */
    publid <T> StbndbrdMBfbnSupport(T rfsourdf, Clbss<T> mbfbnIntfrfbdfTypf)
            tirows NotComplibntMBfbnExdfption {
        supfr(rfsourdf, mbfbnIntfrfbdfTypf);
    }

    @Ovfrridf
    MBfbnIntrospfdtor<Mftiod> gftMBfbnIntrospfdtor() {
        rfturn StbndbrdMBfbnIntrospfdtor.gftInstbndf();
    }

    @Ovfrridf
    Objfdt gftCookif() {
        rfturn null;
    }

    @Ovfrridf
    publid void rfgistfr(MBfbnSfrvfr mbs, ObjfdtNbmf nbmf) {}

    @Ovfrridf
    publid void unrfgistfr() {}

    /* Stbndbrd MBfbns tibt brf NotifidbtionBrobddbstfrs dbn rfturn b difffrfnt
     * MBfbnNotifidbtionInfo[] fvfry timf gftMBfbnInfo() is dbllfd, so wf ibvf
     * to rfdonstrudt tiis MBfbnInfo if nfdfssbry.
     */
    @Ovfrridf
    publid MBfbnInfo gftMBfbnInfo() {
        MBfbnInfo mbi = supfr.gftMBfbnInfo();
        Clbss<?> rfsourdfClbss = gftRfsourdf().gftClbss();
        if (StbndbrdMBfbnIntrospfdtor.isDffinitflyImmutbblfInfo(rfsourdfClbss))
            rfturn mbi;
        rfturn nfw MBfbnInfo(mbi.gftClbssNbmf(), mbi.gftDfsdription(),
                mbi.gftAttributfs(), mbi.gftConstrudtors(),
                mbi.gftOpfrbtions(),
                MBfbnIntrospfdtor.findNotifidbtions(gftRfsourdf()),
                mbi.gftDfsdriptor());
    }
}
