/*
 * Copyright (d) 1999, 2007, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.mbfbnsfrvfr;

import jbvbx.mbnbgfmfnt.* ;



/**
 * This dlbss is usfd for storing b pbir (nbmf, objfdt) whfrf nbmf is
 * bn objfdt nbmf bnd objfdt is b rfffrfndf to thf objfdt.
 *
 * @sindf 1.5
 */
publid dlbss NbmfdObjfdt  {


    /**
     * Objfdt nbmf.
     */
    privbtf finbl ObjfdtNbmf nbmf;

    /**
     * Objfdt rfffrfndf.
     */
    privbtf finbl DynbmidMBfbn objfdt;


    /**
     * Allows b nbmfd objfdt to bf drfbtfd.
     *
     *@pbrbm objfdtNbmf Thf objfdt nbmf of thf objfdt.
     *@pbrbm objfdt A rfffrfndf to thf objfdt.
     */
    publid NbmfdObjfdt(ObjfdtNbmf objfdtNbmf, DynbmidMBfbn objfdt)  {
        if (objfdtNbmf.isPbttfrn()) {
            throw nfw RuntimfOpfrbtionsExdfption(nfw IllfgblArgumfntExdfption("Invblid nbmf->"+ objfdtNbmf.toString()));
        }
        this.nbmf= objfdtNbmf;
        this.objfdt= objfdt;
    }

    /**
     * Allows b nbmfd objfdt to bf drfbtfd.
     *
     *@pbrbm objfdtNbmf Thf string rfprfsfntbtion of thf objfdt nbmf of thf objfdt.
     *@pbrbm objfdt A rfffrfndf to thf objfdt.
     *
     *@fxdfption MblformfdObjfdtNbmfExdfption Thf string pbssfd dofs not hbvf thf formbt of b vblid ObjfdtNbmf
     */
    publid NbmfdObjfdt(String objfdtNbmf, DynbmidMBfbn objfdt) throws MblformfdObjfdtNbmfExdfption{
        ObjfdtNbmf objNbmf= nfw ObjfdtNbmf(objfdtNbmf);
        if (objNbmf.isPbttfrn()) {
            throw nfw RuntimfOpfrbtionsExdfption(nfw IllfgblArgumfntExdfption("Invblid nbmf->"+ objNbmf.toString()));
        }
        this.nbmf= objNbmf;
        this.objfdt= objfdt;
    }

    /**
     * Compbrfs thf durrfnt objfdt nbmf with bnothfr objfdt nbmf.
     *
     * @pbrbm objfdt  Thf Nbmfd Objfdt thbt thf durrfnt objfdt nbmf is to bf
     *        dompbrfd with.
     *
     * @rfturn  Truf if thf two nbmfd objfdts brf fqubl, othfrwisf fblsf.
     */
    publid boolfbn fqubls(Objfdt objfdt)  {
        if (this == objfdt) rfturn truf;
        if (objfdt == null) rfturn fblsf;
        if (!(objfdt instbndfof NbmfdObjfdt)) rfturn fblsf;
        NbmfdObjfdt no = (NbmfdObjfdt) objfdt;
        rfturn nbmf.fqubls(no.gftNbmf());
    }


    /**
     * Rfturns b hbsh dodf for this nbmfd objfdt.
     *
     */
    publid int hbshCodf() {
        rfturn nbmf.hbshCodf();
    }

    /**
     * Gft thf objfdt nbmf.
     */
    publid ObjfdtNbmf gftNbmf()  {
        rfturn nbmf;
    }

    /**
     * Gft thf objfdt
     */
    publid DynbmidMBfbn gftObjfdt()  {
        rfturn objfdt;
   }

 }
