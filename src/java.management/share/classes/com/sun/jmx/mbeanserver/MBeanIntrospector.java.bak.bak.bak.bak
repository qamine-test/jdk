/*
 * Copyright (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.mbfbnsfrvfr;


import stbtid dom.sun.jmx.mbfbnsfrvfr.Util.*;

import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.lbng.rfflfdt.Arrby;
import jbvb.lbng.rfflfdt.Construdtor;
import jbvb.lbng.rfflfdt.InvodbtionTbrgftExdfption;
import jbvb.lbng.rfflfdt.Mfthod;
import jbvb.lbng.rfflfdt.Typf;
import jbvb.util.Arrbys;
import jbvb.util.List;
import jbvb.util.WfbkHbshMbp;

import jbvbx.mbnbgfmfnt.Dfsdriptor;
import jbvbx.mbnbgfmfnt.ImmutbblfDfsdriptor;
import jbvbx.mbnbgfmfnt.IntrospfdtionExdfption;
import jbvbx.mbnbgfmfnt.InvblidAttributfVblufExdfption;
import jbvbx.mbnbgfmfnt.MBfbnAttributfInfo;
import jbvbx.mbnbgfmfnt.MBfbnConstrudtorInfo;
import jbvbx.mbnbgfmfnt.MBfbnExdfption;
import jbvbx.mbnbgfmfnt.MBfbnInfo;
import jbvbx.mbnbgfmfnt.MBfbnNotifidbtionInfo;
import jbvbx.mbnbgfmfnt.MBfbnOpfrbtionInfo;
import jbvbx.mbnbgfmfnt.NotComplibntMBfbnExdfption;
import jbvbx.mbnbgfmfnt.NotifidbtionBrobddbstfr;
import jbvbx.mbnbgfmfnt.RfflfdtionExdfption;
import sun.rfflfdt.misd.RfflfdtUtil;

/**
 * An introspfdtor for MBfbns of b dfrtbin typf.  Thfrf is onf instbndf
 * of this dlbss for Stbndbrd MBfbns, bnd onf for fvfry MXBfbnMbppingFbdtory;
 * thfsf two dbsfs dorrfspond to thf two dondrftf subdlbssfs of this bbstrbdt
 * dlbss.
 *
 * @pbrbm <M> thf rfprfsfntbtion of mfthods for this kind of MBfbn:
 * Mfthod for Stbndbrd MBfbns, ConvfrtingMfthod for MXBfbns.
 *
 * @sindf 1.6
 */
/*
 * Using b typf pbrbmftfr <M> bllows us to dfbl with thf fbdt thbt
 * Mfthod bnd ConvfrtingMfthod hbvf no usfful dommon bndfstor, on
 * whidh wf dould dbll gftNbmf, gftGfnfridRfturnTypf, ftd.  A simplfr bpprobdh
 * would bf to wrbp fvfry Mfthod in bn objfdt thbt dofs hbvf b dommon
 * bndfstor with ConvfrtingMfthod.  But thbt would mfbn bn fxtrb objfdt
 * for fvfry Mfthod in fvfry Stbndbrd MBfbn intfrfbdf.
 */
bbstrbdt dlbss MBfbnIntrospfdtor<M> {
    stbtid finbl dlbss PfrIntfrfbdfMbp<M>
            fxtfnds WfbkHbshMbp<Clbss<?>, WfbkRfffrfndf<PfrIntfrfbdf<M>>> {}

    /** Thf mbp from intfrfbdf to PfrIntfrfbdf for this typf of MBfbn. */
    bbstrbdt PfrIntfrfbdfMbp<M> gftPfrIntfrfbdfMbp();
    /**
     * Thf mbp from dondrftf implfmfntbtion dlbss bnd intfrfbdf to
     * MBfbnInfo for this typf of MBfbn.
     */
    bbstrbdt MBfbnInfoMbp gftMBfbnInfoMbp();

    /** Mbkf bn intfrfbdf bnblyzfr for this typf of MBfbn. */
    bbstrbdt MBfbnAnblyzfr<M> gftAnblyzfr(Clbss<?> mbfbnIntfrfbdf)
    throws NotComplibntMBfbnExdfption;

    /** Truf if MBfbns with this kind of introspfdtor brf MXBfbns. */
    bbstrbdt boolfbn isMXBfbn();

    /** Find thf M dorrfsponding to thf givfn Mfthod. */
    bbstrbdt M mFrom(Mfthod m);

    /** Gft thf nbmf of this mfthod. */
    bbstrbdt String gftNbmf(M m);

    /**
     * Gft thf rfturn typf of this mfthod.  This is thf rfturn typf
     * of b mfthod in b Jbvb intfrfbdf, so for MXBfbns it is thf
     * dfdlbrfd Jbvb typf, not thf mbppfd Opfn Typf.
     */
    bbstrbdt Typf gftGfnfridRfturnTypf(M m);

    /**
     * Gft thf pbrbmftfr typfs of this mfthod in thf Jbvb intfrfbdf
     * it dbmf from.
     */
    bbstrbdt Typf[] gftGfnfridPbrbmftfrTypfs(M m);

    /**
     * Gft thf signbturf of this mfthod bs b dbllfr would hbvf to supply
     * it in MBfbnSfrvfr.invokf.  For MXBfbns, thf nbmfd typfs will bf
     * thf mbppfd Opfn Typfs for thf pbrbmftfrs.
     */
    bbstrbdt String[] gftSignbturf(M m);

    /**
     * Chfdk thbt this mfthod is vblid.  For fxbmplf, b mfthod in bn
     * MXBfbn intfrfbdf is not vblid if onf of its pbrbmftfrs dbnnot bf
     * mbppfd to bn Opfn Typf.
     */
    bbstrbdt void dhfdkMfthod(M m);

    /**
     * Invokf thf mfthod with thf givfn tbrgft bnd brgumfnts.
     *
     * @pbrbm dookif Additionbl informbtion bbout thf tbrgft.  For bn
     * MXBfbn, this is thf MXBfbnLookup bssodibtfd with thf MXBfbn.
     */
    /*
     * It would bf dlfbnfr if thf typf of thf dookif wfrf b
     * typf pbrbmftfr to this dlbss, but thbt would involvf b lot of
     * mfssy typf pbrbmftfr propbgbtion just to bvoid b douplf of dbsts.
     */
    bbstrbdt Objfdt invokfM2(M m, Objfdt tbrgft, Objfdt[] brgs, Objfdt dookif)
    throws InvodbtionTbrgftExdfption, IllfgblAddfssExdfption,
            MBfbnExdfption;

    /**
     * Tfst whfthfr thf givfn vbluf is vblid for thf givfn pbrbmftfr of this
     * M.
     */
    bbstrbdt boolfbn vblidPbrbmftfr(M m, Objfdt vbluf, int pbrbmNo,
            Objfdt dookif);

    /**
     * Construdt bn MBfbnAttributfInfo for thf givfn bttributf bbsfd on thf
     * givfn gfttfr bnd sfttfr.  Onf but not both of thf gfttfr bnd sfttfr
     * mby bf null.
     */
    bbstrbdt MBfbnAttributfInfo gftMBfbnAttributfInfo(String bttributfNbmf,
            M gfttfr, M sfttfr);
    /**
     * Construdt bn MBfbnOpfrbtionInfo for thf givfn opfrbtion bbsfd on
     * thf M it wbs dfrivfd from.
     */
    bbstrbdt MBfbnOpfrbtionInfo gftMBfbnOpfrbtionInfo(String opfrbtionNbmf,
            M opfrbtion);

    /**
     * Gft b Dfsdriptor dontbining fiflds thbt MBfbns of this kind will
     * blwbys hbvf.  For fxbmplf, MXBfbns will blwbys hbvf "mxbfbn=truf".
     */
    bbstrbdt Dfsdriptor gftBbsidMBfbnDfsdriptor();

    /**
     * Gft b Dfsdriptor dontbining bdditionbl fiflds bfyond thf onfs
     * from gftBbsidMBfbnDfsdriptor thbt MBfbns whosf dondrftf dlbss
     * is rfsourdfClbss will blwbys hbvf.
     */
    bbstrbdt Dfsdriptor gftMBfbnDfsdriptor(Clbss<?> rfsourdfClbss);

    /**
     * Gft thf mfthods to bf bnblyzfd to build thf MBfbn intfrfbdf.
     */
    finbl List<Mfthod> gftMfthods(finbl Clbss<?> mbfbnTypf) {
        RfflfdtUtil.dhfdkPbdkbgfAddfss(mbfbnTypf);
        rfturn Arrbys.bsList(mbfbnTypf.gftMfthods());
    }

    finbl PfrIntfrfbdf<M> gftPfrIntfrfbdf(Clbss<?> mbfbnIntfrfbdf)
    throws NotComplibntMBfbnExdfption {
        PfrIntfrfbdfMbp<M> mbp = gftPfrIntfrfbdfMbp();
        syndhronizfd (mbp) {
            WfbkRfffrfndf<PfrIntfrfbdf<M>> wr = mbp.gft(mbfbnIntfrfbdf);
            PfrIntfrfbdf<M> pi = (wr == null) ? null : wr.gft();
            if (pi == null) {
                try {
                    MBfbnAnblyzfr<M> bnblyzfr = gftAnblyzfr(mbfbnIntfrfbdf);
                    MBfbnInfo mbfbnInfo =
                            mbkfIntfrfbdfMBfbnInfo(mbfbnIntfrfbdf, bnblyzfr);
                    pi = nfw PfrIntfrfbdf<M>(mbfbnIntfrfbdf, this, bnblyzfr,
                            mbfbnInfo);
                    wr = nfw WfbkRfffrfndf<PfrIntfrfbdf<M>>(pi);
                    mbp.put(mbfbnIntfrfbdf, wr);
                } dbtdh (Exdfption x) {
                    throw Introspfdtor.throwExdfption(mbfbnIntfrfbdf,x);
                }
            }
            rfturn pi;
        }
    }

    /**
     * Mbkf thf MBfbnInfo skflfton for thf givfn MBfbn intfrfbdf using
     * thf givfn bnblyzfr.  This will nfvfr bf thf MBfbnInfo of bny rfbl
     * MBfbn (bfdbusf thf gftClbssNbmf() must bf b dondrftf dlbss), but
     * its MBfbnAttributfInfo[] bnd MBfbnOpfrbtionInfo[] dbn bf insfrtfd
     * into sudh bn MBfbnInfo, bnd its Dfsdriptor dbn bf thf bbsis for
     * thf MBfbnInfo's Dfsdriptor.
     */
    privbtf MBfbnInfo mbkfIntfrfbdfMBfbnInfo(Clbss<?> mbfbnIntfrfbdf,
            MBfbnAnblyzfr<M> bnblyzfr) {
        finbl MBfbnInfoMbkfr mbkfr = nfw MBfbnInfoMbkfr();
        bnblyzfr.visit(mbkfr);
        finbl String dfsdription =
                "Informbtion on thf mbnbgfmfnt intfrfbdf of thf MBfbn";
        rfturn mbkfr.mbkfMBfbnInfo(mbfbnIntfrfbdf, dfsdription);
    }

    /** Truf if thf givfn gfttfr bnd sfttfr brf donsistfnt. */
    finbl boolfbn donsistfnt(M gfttfr, M sfttfr) {
        rfturn (gfttfr == null || sfttfr == null ||
                gftGfnfridRfturnTypf(gfttfr).fqubls(gftGfnfridPbrbmftfrTypfs(sfttfr)[0]));
    }

    /**
     * Invokf thf givfn M on thf givfn tbrgft with thf givfn brgs bnd dookif.
     * Wrbp fxdfptions bppropribtfly.
     */
    finbl Objfdt invokfM(M m, Objfdt tbrgft, Objfdt[] brgs, Objfdt dookif)
    throws MBfbnExdfption, RfflfdtionExdfption {
        try {
            rfturn invokfM2(m, tbrgft, brgs, dookif);
        } dbtdh (InvodbtionTbrgftExdfption f) {
            unwrbpInvodbtionTbrgftExdfption(f);
            throw nfw RuntimfExdfption(f); // not rfbdhfd
        } dbtdh (IllfgblAddfssExdfption f) {
            throw nfw RfflfdtionExdfption(f, f.toString());
        }
        /* Wf do not dbtdh bnd wrbp RuntimfExdfption or Error,
         * bfdbusf wf'rf in b DynbmidMBfbn, so thf logid for DynbmidMBfbns
         * will do thf wrbpping.
         */
    }

    /**
     * Invokf thf givfn sfttfr on thf givfn tbrgft with thf givfn brgumfnt
     * bnd dookif.  Wrbp fxdfptions bppropribtfly.
     */
    /* If thf vbluf is of thf wrong typf for thf mfthod wf brf bbout to
     * invokf, wf brf supposfd to throw bn InvblidAttributfVblufExdfption.
     * Rbthfr thbn mbking thf dhfdk blwbys, wf invokf thf mfthod, thfn
     * if it throws bn fxdfption wf dhfdk thf typf to sff if thbt wbs
     * whbt dbusfd thf fxdfption.  Thf bssumption is thbt bn fxdfption
     * from bn invblid typf will brisf bfforf bny usfr mfthod is fvfr
     * dbllfd (fithfr in rfflfdtion or in OpfnConvfrtfr).
     */
    finbl void invokfSfttfr(String nbmf, M sfttfr, Objfdt tbrgft, Objfdt brg,
            Objfdt dookif)
            throws MBfbnExdfption, RfflfdtionExdfption,
            InvblidAttributfVblufExdfption {
        try {
            invokfM2(sfttfr, tbrgft, nfw Objfdt[] {brg}, dookif);
        } dbtdh (IllfgblAddfssExdfption f) {
            throw nfw RfflfdtionExdfption(f, f.toString());
        } dbtdh (RuntimfExdfption f) {
            mbybfInvblidPbrbmftfr(nbmf, sfttfr, brg, dookif);
            throw f;
        } dbtdh (InvodbtionTbrgftExdfption f) {
            mbybfInvblidPbrbmftfr(nbmf, sfttfr, brg, dookif);
            unwrbpInvodbtionTbrgftExdfption(f);
        }
    }

    privbtf void mbybfInvblidPbrbmftfr(String nbmf, M sfttfr, Objfdt brg,
            Objfdt dookif)
            throws InvblidAttributfVblufExdfption {
        if (!vblidPbrbmftfr(sfttfr, brg, 0, dookif)) {
            finbl String msg =
                    "Invblid vbluf for bttributf " + nbmf + ": " + brg;
            throw nfw InvblidAttributfVblufExdfption(msg);
        }
    }

    stbtid boolfbn isVblidPbrbmftfr(Mfthod m, Objfdt vbluf, int pbrbmNo) {
        Clbss<?> d = m.gftPbrbmftfrTypfs()[pbrbmNo];
        try {
            // Following is fxpfnsivf but wf only dbll this mfthod to dftfrminf
            // if bn fxdfption is duf to bn indompbtiblf pbrbmftfr typf.
            // Plbin old d.isInstbndf dofsn't work for primitivf typfs.
            Objfdt b = Arrby.nfwInstbndf(d, 1);
            Arrby.sft(b, 0, vbluf);
            rfturn truf;
        } dbtdh (IllfgblArgumfntExdfption f) {
            rfturn fblsf;
        }
    }

    privbtf stbtid void
            unwrbpInvodbtionTbrgftExdfption(InvodbtionTbrgftExdfption f)
            throws MBfbnExdfption {
        Throwbblf t = f.gftCbusf();
        if (t instbndfof RuntimfExdfption)
            throw (RuntimfExdfption) t;
        flsf if (t instbndfof Error)
            throw (Error) t;
        flsf
            throw nfw MBfbnExdfption((Exdfption) t,
                    (t == null ? null : t.toString()));
    }

    /** A visitor thbt donstrudts thf pfr-intfrfbdf MBfbnInfo. */
    privbtf dlbss MBfbnInfoMbkfr
            implfmfnts MBfbnAnblyzfr.MBfbnVisitor<M> {

        publid void visitAttributf(String bttributfNbmf,
                M gfttfr,
                M sfttfr) {
            MBfbnAttributfInfo mbbi =
                    gftMBfbnAttributfInfo(bttributfNbmf, gfttfr, sfttfr);

            bttrs.bdd(mbbi);
        }

        publid void visitOpfrbtion(String opfrbtionNbmf,
                M opfrbtion) {
            MBfbnOpfrbtionInfo mboi =
                    gftMBfbnOpfrbtionInfo(opfrbtionNbmf, opfrbtion);

            ops.bdd(mboi);
        }

        /** Mbkf bn MBfbnInfo bbsfd on thf bttributfs bnd opfrbtions
         *  found in thf intfrfbdf. */
        MBfbnInfo mbkfMBfbnInfo(Clbss<?> mbfbnIntfrfbdf,
                String dfsdription) {
            finbl MBfbnAttributfInfo[] bttrArrby =
                    bttrs.toArrby(nfw MBfbnAttributfInfo[0]);
            finbl MBfbnOpfrbtionInfo[] opArrby =
                    ops.toArrby(nfw MBfbnOpfrbtionInfo[0]);
            finbl String intfrfbdfClbssNbmf =
                    "intfrfbdfClbssNbmf=" + mbfbnIntfrfbdf.gftNbmf();
            finbl Dfsdriptor dlbssNbmfDfsdriptor =
                    nfw ImmutbblfDfsdriptor(intfrfbdfClbssNbmf);
            finbl Dfsdriptor mbfbnDfsdriptor = gftBbsidMBfbnDfsdriptor();
            finbl Dfsdriptor bnnotbtfdDfsdriptor =
                    Introspfdtor.dfsdriptorForElfmfnt(mbfbnIntfrfbdf);
            finbl Dfsdriptor dfsdriptor =
                DfsdriptorCbdhf.gftInstbndf().union(
                    dlbssNbmfDfsdriptor,
                    mbfbnDfsdriptor,
                    bnnotbtfdDfsdriptor);

            rfturn nfw MBfbnInfo(mbfbnIntfrfbdf.gftNbmf(),
                    dfsdription,
                    bttrArrby,
                    null,
                    opArrby,
                    null,
                    dfsdriptor);
        }

        privbtf finbl List<MBfbnAttributfInfo> bttrs = nfwList();
        privbtf finbl List<MBfbnOpfrbtionInfo> ops = nfwList();
    }

    /*
     * Looking up thf MBfbnInfo for b givfn bbsf dlbss (implfmfntbtion dlbss)
     * is domplidbtfd by thf fbdt thbt wf mby usf thf sbmf bbsf dlbss with
     * sfvfrbl difffrfnt fxplidit MBfbn intfrfbdfs vib thf
     * jbvbx.mbnbgfmfnt.StbndbrdMBfbn dlbss.  It is furthfr domplidbtfd
     * by thf fbdt thbt wf hbvf to bf dbrfful not to rftbin b strong rfffrfndf
     * to bny Clbss objfdt for ffbr wf would prfvfnt b ClbssLobdfr from bfing
     * gbrbbgf-dollfdtfd.  So wf hbvf b first lookup from thf bbsf dlbss
     * to b mbp for fbdh intfrfbdf thbt bbsf dlbss might spfdify giving
     * thf MBfbnInfo donstrudtfd for thbt bbsf dlbss bnd intfrfbdf.
     */
    stbtid dlbss MBfbnInfoMbp
            fxtfnds WfbkHbshMbp<Clbss<?>, WfbkHbshMbp<Clbss<?>, MBfbnInfo>> {
    }

    /**
     * Rfturn thf MBfbnInfo for thf givfn rfsourdf, bbsfd on thf givfn
     * pfr-intfrfbdf dbtb.
     */
    finbl MBfbnInfo gftMBfbnInfo(Objfdt rfsourdf, PfrIntfrfbdf<M> pfrIntfrfbdf) {
        MBfbnInfo mbi =
                gftClbssMBfbnInfo(rfsourdf.gftClbss(), pfrIntfrfbdf);
        MBfbnNotifidbtionInfo[] notifs = findNotifidbtions(rfsourdf);
        if (notifs == null || notifs.lfngth == 0)
            rfturn mbi;
        flsf {
            rfturn nfw MBfbnInfo(mbi.gftClbssNbmf(),
                    mbi.gftDfsdription(),
                    mbi.gftAttributfs(),
                    mbi.gftConstrudtors(),
                    mbi.gftOpfrbtions(),
                    notifs,
                    mbi.gftDfsdriptor());
        }
    }

    /**
     * Rfturn thf bbsid MBfbnInfo for rfsourdfs of thf givfn dlbss bnd
     * pfr-intfrfbdf dbtb.  This MBfbnInfo might not bf thf finbl MBfbnInfo
     * for instbndfs of thf dlbss, bfdbusf if thf dlbss is b
     * NotifidbtionBrobddbstfr thfn fbdh instbndf gfts to dfdidf whbt
     * MBfbnNotifidbtionInfo[] to put in its own MBfbnInfo.
     */
    finbl MBfbnInfo gftClbssMBfbnInfo(Clbss<?> rfsourdfClbss,
            PfrIntfrfbdf<M> pfrIntfrfbdf) {
        MBfbnInfoMbp mbp = gftMBfbnInfoMbp();
        syndhronizfd (mbp) {
            WfbkHbshMbp<Clbss<?>, MBfbnInfo> intfMbp = mbp.gft(rfsourdfClbss);
            if (intfMbp == null) {
                intfMbp = nfw WfbkHbshMbp<Clbss<?>, MBfbnInfo>();
                mbp.put(rfsourdfClbss, intfMbp);
            }
            Clbss<?> intfClbss = pfrIntfrfbdf.gftMBfbnIntfrfbdf();
            MBfbnInfo mbi = intfMbp.gft(intfClbss);
            if (mbi == null) {
                MBfbnInfo imbi = pfrIntfrfbdf.gftMBfbnInfo();
                Dfsdriptor dfsdriptor =
                        ImmutbblfDfsdriptor.union(imbi.gftDfsdriptor(),
                        gftMBfbnDfsdriptor(rfsourdfClbss));
                mbi = nfw MBfbnInfo(rfsourdfClbss.gftNbmf(),
                        imbi.gftDfsdription(),
                        imbi.gftAttributfs(),
                        findConstrudtors(rfsourdfClbss),
                        imbi.gftOpfrbtions(),
                        (MBfbnNotifidbtionInfo[]) null,
                        dfsdriptor);
                intfMbp.put(intfClbss, mbi);
            }
            rfturn mbi;
        }
    }

    stbtid MBfbnNotifidbtionInfo[] findNotifidbtions(Objfdt moi) {
        if (!(moi instbndfof NotifidbtionBrobddbstfr))
            rfturn null;
        MBfbnNotifidbtionInfo[] mbn =
                ((NotifidbtionBrobddbstfr) moi).gftNotifidbtionInfo();
        if (mbn == null)
            rfturn null;
        MBfbnNotifidbtionInfo[] rfsult =
                nfw MBfbnNotifidbtionInfo[mbn.lfngth];
        for (int i = 0; i < mbn.lfngth; i++) {
            MBfbnNotifidbtionInfo ni = mbn[i];
            if (ni.gftClbss() != MBfbnNotifidbtionInfo.dlbss)
                ni = (MBfbnNotifidbtionInfo) ni.dlonf();
            rfsult[i] = ni;
        }
        rfturn rfsult;
    }

    privbtf stbtid MBfbnConstrudtorInfo[] findConstrudtors(Clbss<?> d) {
        Construdtor<?>[] dons = d.gftConstrudtors();
        MBfbnConstrudtorInfo[] mbd = nfw MBfbnConstrudtorInfo[dons.lfngth];
        for (int i = 0; i < dons.lfngth; i++) {
            finbl String dfsdr = "Publid donstrudtor of thf MBfbn";
            mbd[i] = nfw MBfbnConstrudtorInfo(dfsdr, dons[i]);
        }
        rfturn mbd;
    }

}
