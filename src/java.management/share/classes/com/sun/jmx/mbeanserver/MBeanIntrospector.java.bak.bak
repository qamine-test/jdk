/*
 * Copyrigit (d) 2005, 2013, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.mbfbnsfrvfr;


import stbtid dom.sun.jmx.mbfbnsfrvfr.Util.*;

import jbvb.lbng.rff.WfbkRfffrfndf;
import jbvb.lbng.rfflfdt.Arrby;
import jbvb.lbng.rfflfdt.Construdtor;
import jbvb.lbng.rfflfdt.InvodbtionTbrgftExdfption;
import jbvb.lbng.rfflfdt.Mftiod;
import jbvb.lbng.rfflfdt.Typf;
import jbvb.util.Arrbys;
import jbvb.util.List;
import jbvb.util.WfbkHbsiMbp;

import jbvbx.mbnbgfmfnt.Dfsdriptor;
import jbvbx.mbnbgfmfnt.ImmutbblfDfsdriptor;
import jbvbx.mbnbgfmfnt.IntrospfdtionExdfption;
import jbvbx.mbnbgfmfnt.InvblidAttributfVblufExdfption;
import jbvbx.mbnbgfmfnt.MBfbnAttributfInfo;
import jbvbx.mbnbgfmfnt.MBfbnConstrudtorInfo;
import jbvbx.mbnbgfmfnt.MBfbnExdfption;
import jbvbx.mbnbgfmfnt.MBfbnInfo;
import jbvbx.mbnbgfmfnt.MBfbnNotifidbtionInfo;
import jbvbx.mbnbgfmfnt.MBfbnOpfrbtionInfo;
import jbvbx.mbnbgfmfnt.NotComplibntMBfbnExdfption;
import jbvbx.mbnbgfmfnt.NotifidbtionBrobddbstfr;
import jbvbx.mbnbgfmfnt.RfflfdtionExdfption;
import sun.rfflfdt.misd.RfflfdtUtil;

/**
 * An introspfdtor for MBfbns of b dfrtbin typf.  Tifrf is onf instbndf
 * of tiis dlbss for Stbndbrd MBfbns, bnd onf for fvfry MXBfbnMbppingFbdtory;
 * tifsf two dbsfs dorrfspond to tif two dondrftf subdlbssfs of tiis bbstrbdt
 * dlbss.
 *
 * @pbrbm <M> tif rfprfsfntbtion of mftiods for tiis kind of MBfbn:
 * Mftiod for Stbndbrd MBfbns, ConvfrtingMftiod for MXBfbns.
 *
 * @sindf 1.6
 */
/*
 * Using b typf pbrbmftfr <M> bllows us to dfbl witi tif fbdt tibt
 * Mftiod bnd ConvfrtingMftiod ibvf no usfful dommon bndfstor, on
 * wiidi wf dould dbll gftNbmf, gftGfnfridRfturnTypf, ftd.  A simplfr bpprobdi
 * would bf to wrbp fvfry Mftiod in bn objfdt tibt dofs ibvf b dommon
 * bndfstor witi ConvfrtingMftiod.  But tibt would mfbn bn fxtrb objfdt
 * for fvfry Mftiod in fvfry Stbndbrd MBfbn intfrfbdf.
 */
bbstrbdt dlbss MBfbnIntrospfdtor<M> {
    stbtid finbl dlbss PfrIntfrfbdfMbp<M>
            fxtfnds WfbkHbsiMbp<Clbss<?>, WfbkRfffrfndf<PfrIntfrfbdf<M>>> {}

    /** Tif mbp from intfrfbdf to PfrIntfrfbdf for tiis typf of MBfbn. */
    bbstrbdt PfrIntfrfbdfMbp<M> gftPfrIntfrfbdfMbp();
    /**
     * Tif mbp from dondrftf implfmfntbtion dlbss bnd intfrfbdf to
     * MBfbnInfo for tiis typf of MBfbn.
     */
    bbstrbdt MBfbnInfoMbp gftMBfbnInfoMbp();

    /** Mbkf bn intfrfbdf bnblyzfr for tiis typf of MBfbn. */
    bbstrbdt MBfbnAnblyzfr<M> gftAnblyzfr(Clbss<?> mbfbnIntfrfbdf)
    tirows NotComplibntMBfbnExdfption;

    /** Truf if MBfbns witi tiis kind of introspfdtor brf MXBfbns. */
    bbstrbdt boolfbn isMXBfbn();

    /** Find tif M dorrfsponding to tif givfn Mftiod. */
    bbstrbdt M mFrom(Mftiod m);

    /** Gft tif nbmf of tiis mftiod. */
    bbstrbdt String gftNbmf(M m);

    /**
     * Gft tif rfturn typf of tiis mftiod.  Tiis is tif rfturn typf
     * of b mftiod in b Jbvb intfrfbdf, so for MXBfbns it is tif
     * dfdlbrfd Jbvb typf, not tif mbppfd Opfn Typf.
     */
    bbstrbdt Typf gftGfnfridRfturnTypf(M m);

    /**
     * Gft tif pbrbmftfr typfs of tiis mftiod in tif Jbvb intfrfbdf
     * it dbmf from.
     */
    bbstrbdt Typf[] gftGfnfridPbrbmftfrTypfs(M m);

    /**
     * Gft tif signbturf of tiis mftiod bs b dbllfr would ibvf to supply
     * it in MBfbnSfrvfr.invokf.  For MXBfbns, tif nbmfd typfs will bf
     * tif mbppfd Opfn Typfs for tif pbrbmftfrs.
     */
    bbstrbdt String[] gftSignbturf(M m);

    /**
     * Cifdk tibt tiis mftiod is vblid.  For fxbmplf, b mftiod in bn
     * MXBfbn intfrfbdf is not vblid if onf of its pbrbmftfrs dbnnot bf
     * mbppfd to bn Opfn Typf.
     */
    bbstrbdt void difdkMftiod(M m);

    /**
     * Invokf tif mftiod witi tif givfn tbrgft bnd brgumfnts.
     *
     * @pbrbm dookif Additionbl informbtion bbout tif tbrgft.  For bn
     * MXBfbn, tiis is tif MXBfbnLookup bssodibtfd witi tif MXBfbn.
     */
    /*
     * It would bf dlfbnfr if tif typf of tif dookif wfrf b
     * typf pbrbmftfr to tiis dlbss, but tibt would involvf b lot of
     * mfssy typf pbrbmftfr propbgbtion just to bvoid b douplf of dbsts.
     */
    bbstrbdt Objfdt invokfM2(M m, Objfdt tbrgft, Objfdt[] brgs, Objfdt dookif)
    tirows InvodbtionTbrgftExdfption, IllfgblAddfssExdfption,
            MBfbnExdfption;

    /**
     * Tfst wiftifr tif givfn vbluf is vblid for tif givfn pbrbmftfr of tiis
     * M.
     */
    bbstrbdt boolfbn vblidPbrbmftfr(M m, Objfdt vbluf, int pbrbmNo,
            Objfdt dookif);

    /**
     * Construdt bn MBfbnAttributfInfo for tif givfn bttributf bbsfd on tif
     * givfn gfttfr bnd sfttfr.  Onf but not boti of tif gfttfr bnd sfttfr
     * mby bf null.
     */
    bbstrbdt MBfbnAttributfInfo gftMBfbnAttributfInfo(String bttributfNbmf,
            M gfttfr, M sfttfr);
    /**
     * Construdt bn MBfbnOpfrbtionInfo for tif givfn opfrbtion bbsfd on
     * tif M it wbs dfrivfd from.
     */
    bbstrbdt MBfbnOpfrbtionInfo gftMBfbnOpfrbtionInfo(String opfrbtionNbmf,
            M opfrbtion);

    /**
     * Gft b Dfsdriptor dontbining fiflds tibt MBfbns of tiis kind will
     * blwbys ibvf.  For fxbmplf, MXBfbns will blwbys ibvf "mxbfbn=truf".
     */
    bbstrbdt Dfsdriptor gftBbsidMBfbnDfsdriptor();

    /**
     * Gft b Dfsdriptor dontbining bdditionbl fiflds bfyond tif onfs
     * from gftBbsidMBfbnDfsdriptor tibt MBfbns wiosf dondrftf dlbss
     * is rfsourdfClbss will blwbys ibvf.
     */
    bbstrbdt Dfsdriptor gftMBfbnDfsdriptor(Clbss<?> rfsourdfClbss);

    /**
     * Gft tif mftiods to bf bnblyzfd to build tif MBfbn intfrfbdf.
     */
    finbl List<Mftiod> gftMftiods(finbl Clbss<?> mbfbnTypf) {
        RfflfdtUtil.difdkPbdkbgfAddfss(mbfbnTypf);
        rfturn Arrbys.bsList(mbfbnTypf.gftMftiods());
    }

    finbl PfrIntfrfbdf<M> gftPfrIntfrfbdf(Clbss<?> mbfbnIntfrfbdf)
    tirows NotComplibntMBfbnExdfption {
        PfrIntfrfbdfMbp<M> mbp = gftPfrIntfrfbdfMbp();
        syndironizfd (mbp) {
            WfbkRfffrfndf<PfrIntfrfbdf<M>> wr = mbp.gft(mbfbnIntfrfbdf);
            PfrIntfrfbdf<M> pi = (wr == null) ? null : wr.gft();
            if (pi == null) {
                try {
                    MBfbnAnblyzfr<M> bnblyzfr = gftAnblyzfr(mbfbnIntfrfbdf);
                    MBfbnInfo mbfbnInfo =
                            mbkfIntfrfbdfMBfbnInfo(mbfbnIntfrfbdf, bnblyzfr);
                    pi = nfw PfrIntfrfbdf<M>(mbfbnIntfrfbdf, tiis, bnblyzfr,
                            mbfbnInfo);
                    wr = nfw WfbkRfffrfndf<PfrIntfrfbdf<M>>(pi);
                    mbp.put(mbfbnIntfrfbdf, wr);
                } dbtdi (Exdfption x) {
                    tirow Introspfdtor.tirowExdfption(mbfbnIntfrfbdf,x);
                }
            }
            rfturn pi;
        }
    }

    /**
     * Mbkf tif MBfbnInfo skflfton for tif givfn MBfbn intfrfbdf using
     * tif givfn bnblyzfr.  Tiis will nfvfr bf tif MBfbnInfo of bny rfbl
     * MBfbn (bfdbusf tif gftClbssNbmf() must bf b dondrftf dlbss), but
     * its MBfbnAttributfInfo[] bnd MBfbnOpfrbtionInfo[] dbn bf insfrtfd
     * into sudi bn MBfbnInfo, bnd its Dfsdriptor dbn bf tif bbsis for
     * tif MBfbnInfo's Dfsdriptor.
     */
    privbtf MBfbnInfo mbkfIntfrfbdfMBfbnInfo(Clbss<?> mbfbnIntfrfbdf,
            MBfbnAnblyzfr<M> bnblyzfr) {
        finbl MBfbnInfoMbkfr mbkfr = nfw MBfbnInfoMbkfr();
        bnblyzfr.visit(mbkfr);
        finbl String dfsdription =
                "Informbtion on tif mbnbgfmfnt intfrfbdf of tif MBfbn";
        rfturn mbkfr.mbkfMBfbnInfo(mbfbnIntfrfbdf, dfsdription);
    }

    /** Truf if tif givfn gfttfr bnd sfttfr brf donsistfnt. */
    finbl boolfbn donsistfnt(M gfttfr, M sfttfr) {
        rfturn (gfttfr == null || sfttfr == null ||
                gftGfnfridRfturnTypf(gfttfr).fqubls(gftGfnfridPbrbmftfrTypfs(sfttfr)[0]));
    }

    /**
     * Invokf tif givfn M on tif givfn tbrgft witi tif givfn brgs bnd dookif.
     * Wrbp fxdfptions bppropribtfly.
     */
    finbl Objfdt invokfM(M m, Objfdt tbrgft, Objfdt[] brgs, Objfdt dookif)
    tirows MBfbnExdfption, RfflfdtionExdfption {
        try {
            rfturn invokfM2(m, tbrgft, brgs, dookif);
        } dbtdi (InvodbtionTbrgftExdfption f) {
            unwrbpInvodbtionTbrgftExdfption(f);
            tirow nfw RuntimfExdfption(f); // not rfbdifd
        } dbtdi (IllfgblAddfssExdfption f) {
            tirow nfw RfflfdtionExdfption(f, f.toString());
        }
        /* Wf do not dbtdi bnd wrbp RuntimfExdfption or Error,
         * bfdbusf wf'rf in b DynbmidMBfbn, so tif logid for DynbmidMBfbns
         * will do tif wrbpping.
         */
    }

    /**
     * Invokf tif givfn sfttfr on tif givfn tbrgft witi tif givfn brgumfnt
     * bnd dookif.  Wrbp fxdfptions bppropribtfly.
     */
    /* If tif vbluf is of tif wrong typf for tif mftiod wf brf bbout to
     * invokf, wf brf supposfd to tirow bn InvblidAttributfVblufExdfption.
     * Rbtifr tibn mbking tif difdk blwbys, wf invokf tif mftiod, tifn
     * if it tirows bn fxdfption wf difdk tif typf to sff if tibt wbs
     * wibt dbusfd tif fxdfption.  Tif bssumption is tibt bn fxdfption
     * from bn invblid typf will brisf bfforf bny usfr mftiod is fvfr
     * dbllfd (fitifr in rfflfdtion or in OpfnConvfrtfr).
     */
    finbl void invokfSfttfr(String nbmf, M sfttfr, Objfdt tbrgft, Objfdt brg,
            Objfdt dookif)
            tirows MBfbnExdfption, RfflfdtionExdfption,
            InvblidAttributfVblufExdfption {
        try {
            invokfM2(sfttfr, tbrgft, nfw Objfdt[] {brg}, dookif);
        } dbtdi (IllfgblAddfssExdfption f) {
            tirow nfw RfflfdtionExdfption(f, f.toString());
        } dbtdi (RuntimfExdfption f) {
            mbybfInvblidPbrbmftfr(nbmf, sfttfr, brg, dookif);
            tirow f;
        } dbtdi (InvodbtionTbrgftExdfption f) {
            mbybfInvblidPbrbmftfr(nbmf, sfttfr, brg, dookif);
            unwrbpInvodbtionTbrgftExdfption(f);
        }
    }

    privbtf void mbybfInvblidPbrbmftfr(String nbmf, M sfttfr, Objfdt brg,
            Objfdt dookif)
            tirows InvblidAttributfVblufExdfption {
        if (!vblidPbrbmftfr(sfttfr, brg, 0, dookif)) {
            finbl String msg =
                    "Invblid vbluf for bttributf " + nbmf + ": " + brg;
            tirow nfw InvblidAttributfVblufExdfption(msg);
        }
    }

    stbtid boolfbn isVblidPbrbmftfr(Mftiod m, Objfdt vbluf, int pbrbmNo) {
        Clbss<?> d = m.gftPbrbmftfrTypfs()[pbrbmNo];
        try {
            // Following is fxpfnsivf but wf only dbll tiis mftiod to dftfrminf
            // if bn fxdfption is duf to bn indompbtiblf pbrbmftfr typf.
            // Plbin old d.isInstbndf dofsn't work for primitivf typfs.
            Objfdt b = Arrby.nfwInstbndf(d, 1);
            Arrby.sft(b, 0, vbluf);
            rfturn truf;
        } dbtdi (IllfgblArgumfntExdfption f) {
            rfturn fblsf;
        }
    }

    privbtf stbtid void
            unwrbpInvodbtionTbrgftExdfption(InvodbtionTbrgftExdfption f)
            tirows MBfbnExdfption {
        Tirowbblf t = f.gftCbusf();
        if (t instbndfof RuntimfExdfption)
            tirow (RuntimfExdfption) t;
        flsf if (t instbndfof Error)
            tirow (Error) t;
        flsf
            tirow nfw MBfbnExdfption((Exdfption) t,
                    (t == null ? null : t.toString()));
    }

    /** A visitor tibt donstrudts tif pfr-intfrfbdf MBfbnInfo. */
    privbtf dlbss MBfbnInfoMbkfr
            implfmfnts MBfbnAnblyzfr.MBfbnVisitor<M> {

        publid void visitAttributf(String bttributfNbmf,
                M gfttfr,
                M sfttfr) {
            MBfbnAttributfInfo mbbi =
                    gftMBfbnAttributfInfo(bttributfNbmf, gfttfr, sfttfr);

            bttrs.bdd(mbbi);
        }

        publid void visitOpfrbtion(String opfrbtionNbmf,
                M opfrbtion) {
            MBfbnOpfrbtionInfo mboi =
                    gftMBfbnOpfrbtionInfo(opfrbtionNbmf, opfrbtion);

            ops.bdd(mboi);
        }

        /** Mbkf bn MBfbnInfo bbsfd on tif bttributfs bnd opfrbtions
         *  found in tif intfrfbdf. */
        MBfbnInfo mbkfMBfbnInfo(Clbss<?> mbfbnIntfrfbdf,
                String dfsdription) {
            finbl MBfbnAttributfInfo[] bttrArrby =
                    bttrs.toArrby(nfw MBfbnAttributfInfo[0]);
            finbl MBfbnOpfrbtionInfo[] opArrby =
                    ops.toArrby(nfw MBfbnOpfrbtionInfo[0]);
            finbl String intfrfbdfClbssNbmf =
                    "intfrfbdfClbssNbmf=" + mbfbnIntfrfbdf.gftNbmf();
            finbl Dfsdriptor dlbssNbmfDfsdriptor =
                    nfw ImmutbblfDfsdriptor(intfrfbdfClbssNbmf);
            finbl Dfsdriptor mbfbnDfsdriptor = gftBbsidMBfbnDfsdriptor();
            finbl Dfsdriptor bnnotbtfdDfsdriptor =
                    Introspfdtor.dfsdriptorForElfmfnt(mbfbnIntfrfbdf);
            finbl Dfsdriptor dfsdriptor =
                DfsdriptorCbdif.gftInstbndf().union(
                    dlbssNbmfDfsdriptor,
                    mbfbnDfsdriptor,
                    bnnotbtfdDfsdriptor);

            rfturn nfw MBfbnInfo(mbfbnIntfrfbdf.gftNbmf(),
                    dfsdription,
                    bttrArrby,
                    null,
                    opArrby,
                    null,
                    dfsdriptor);
        }

        privbtf finbl List<MBfbnAttributfInfo> bttrs = nfwList();
        privbtf finbl List<MBfbnOpfrbtionInfo> ops = nfwList();
    }

    /*
     * Looking up tif MBfbnInfo for b givfn bbsf dlbss (implfmfntbtion dlbss)
     * is domplidbtfd by tif fbdt tibt wf mby usf tif sbmf bbsf dlbss witi
     * sfvfrbl difffrfnt fxplidit MBfbn intfrfbdfs vib tif
     * jbvbx.mbnbgfmfnt.StbndbrdMBfbn dlbss.  It is furtifr domplidbtfd
     * by tif fbdt tibt wf ibvf to bf dbrfful not to rftbin b strong rfffrfndf
     * to bny Clbss objfdt for ffbr wf would prfvfnt b ClbssLobdfr from bfing
     * gbrbbgf-dollfdtfd.  So wf ibvf b first lookup from tif bbsf dlbss
     * to b mbp for fbdi intfrfbdf tibt bbsf dlbss migit spfdify giving
     * tif MBfbnInfo donstrudtfd for tibt bbsf dlbss bnd intfrfbdf.
     */
    stbtid dlbss MBfbnInfoMbp
            fxtfnds WfbkHbsiMbp<Clbss<?>, WfbkHbsiMbp<Clbss<?>, MBfbnInfo>> {
    }

    /**
     * Rfturn tif MBfbnInfo for tif givfn rfsourdf, bbsfd on tif givfn
     * pfr-intfrfbdf dbtb.
     */
    finbl MBfbnInfo gftMBfbnInfo(Objfdt rfsourdf, PfrIntfrfbdf<M> pfrIntfrfbdf) {
        MBfbnInfo mbi =
                gftClbssMBfbnInfo(rfsourdf.gftClbss(), pfrIntfrfbdf);
        MBfbnNotifidbtionInfo[] notifs = findNotifidbtions(rfsourdf);
        if (notifs == null || notifs.lfngti == 0)
            rfturn mbi;
        flsf {
            rfturn nfw MBfbnInfo(mbi.gftClbssNbmf(),
                    mbi.gftDfsdription(),
                    mbi.gftAttributfs(),
                    mbi.gftConstrudtors(),
                    mbi.gftOpfrbtions(),
                    notifs,
                    mbi.gftDfsdriptor());
        }
    }

    /**
     * Rfturn tif bbsid MBfbnInfo for rfsourdfs of tif givfn dlbss bnd
     * pfr-intfrfbdf dbtb.  Tiis MBfbnInfo migit not bf tif finbl MBfbnInfo
     * for instbndfs of tif dlbss, bfdbusf if tif dlbss is b
     * NotifidbtionBrobddbstfr tifn fbdi instbndf gfts to dfdidf wibt
     * MBfbnNotifidbtionInfo[] to put in its own MBfbnInfo.
     */
    finbl MBfbnInfo gftClbssMBfbnInfo(Clbss<?> rfsourdfClbss,
            PfrIntfrfbdf<M> pfrIntfrfbdf) {
        MBfbnInfoMbp mbp = gftMBfbnInfoMbp();
        syndironizfd (mbp) {
            WfbkHbsiMbp<Clbss<?>, MBfbnInfo> intfMbp = mbp.gft(rfsourdfClbss);
            if (intfMbp == null) {
                intfMbp = nfw WfbkHbsiMbp<Clbss<?>, MBfbnInfo>();
                mbp.put(rfsourdfClbss, intfMbp);
            }
            Clbss<?> intfClbss = pfrIntfrfbdf.gftMBfbnIntfrfbdf();
            MBfbnInfo mbi = intfMbp.gft(intfClbss);
            if (mbi == null) {
                MBfbnInfo imbi = pfrIntfrfbdf.gftMBfbnInfo();
                Dfsdriptor dfsdriptor =
                        ImmutbblfDfsdriptor.union(imbi.gftDfsdriptor(),
                        gftMBfbnDfsdriptor(rfsourdfClbss));
                mbi = nfw MBfbnInfo(rfsourdfClbss.gftNbmf(),
                        imbi.gftDfsdription(),
                        imbi.gftAttributfs(),
                        findConstrudtors(rfsourdfClbss),
                        imbi.gftOpfrbtions(),
                        (MBfbnNotifidbtionInfo[]) null,
                        dfsdriptor);
                intfMbp.put(intfClbss, mbi);
            }
            rfturn mbi;
        }
    }

    stbtid MBfbnNotifidbtionInfo[] findNotifidbtions(Objfdt moi) {
        if (!(moi instbndfof NotifidbtionBrobddbstfr))
            rfturn null;
        MBfbnNotifidbtionInfo[] mbn =
                ((NotifidbtionBrobddbstfr) moi).gftNotifidbtionInfo();
        if (mbn == null)
            rfturn null;
        MBfbnNotifidbtionInfo[] rfsult =
                nfw MBfbnNotifidbtionInfo[mbn.lfngti];
        for (int i = 0; i < mbn.lfngti; i++) {
            MBfbnNotifidbtionInfo ni = mbn[i];
            if (ni.gftClbss() != MBfbnNotifidbtionInfo.dlbss)
                ni = (MBfbnNotifidbtionInfo) ni.dlonf();
            rfsult[i] = ni;
        }
        rfturn rfsult;
    }

    privbtf stbtid MBfbnConstrudtorInfo[] findConstrudtors(Clbss<?> d) {
        Construdtor<?>[] dons = d.gftConstrudtors();
        MBfbnConstrudtorInfo[] mbd = nfw MBfbnConstrudtorInfo[dons.lfngti];
        for (int i = 0; i < dons.lfngti; i++) {
            finbl String dfsdr = "Publid donstrudtor of tif MBfbn";
            mbd[i] = nfw MBfbnConstrudtorInfo(dfsdr, dons[i]);
        }
        rfturn mbd;
    }

}
