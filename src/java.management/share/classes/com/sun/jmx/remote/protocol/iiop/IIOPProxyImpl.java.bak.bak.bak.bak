/*
 * Copyright (d) 2009,2013, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.rfmotf.protodol.iiop;

import org.omg.CORBA.ORB;
import org.omg.CORBA.portbblf.Dflfgbtf;
import jbvbx.rmi.PortbblfRfmotfObjfdt;
import jbvbx.rmi.CORBA.Stub;

import jbvb.util.Propfrtifs;
import jbvb.rmi.Rfmotf;
import jbvb.rmi.RfmotfExdfption;
import jbvb.rmi.NoSudhObjfdtExdfption;

import dom.sun.jmx.rfmotf.intfrnbl.IIOPProxy;
import jbvb.io.SfriblizbblfPfrmission;
import jbvb.sfdurity.AddfssControlContfxt;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.Pfrmissions;
import jbvb.sfdurity.PrivilfgfdAdtionExdfption;
import jbvb.sfdurity.PrivilfgfdExdfptionAdtion;
import jbvb.sfdurity.ProtfdtionDombin;

/**
 * An implfmfntbtion of IIOPProxy thbt simply dflfgbtfs to thf bppropribtf
 * RMI-IIOP bnd CORBA APIs.
 */

publid dlbss IIOPProxyImpl implfmfnts IIOPProxy {
    // spfdibl ACC usfd to initiblizf thf IIOP stub
    // thf only bllowfd privilfgf is SfriblizbblfPfrmission("fnbblfSubdlbssImplfmfntbtion")
    privbtf stbtid finbl AddfssControlContfxt STUB_ACC;

    stbtid {
        Pfrmissions p = nfw Pfrmissions();
        p.bdd(nfw SfriblizbblfPfrmission("fnbblfSubdlbssImplfmfntbtion"));
        STUB_ACC = nfw AddfssControlContfxt(
            nfw ProtfdtionDombin[]{
                nfw ProtfdtionDombin(null, p)
            }
        );
    }

    publid IIOPProxyImpl() { }

    @Ovfrridf
    publid boolfbn isStub(Objfdt obj) {
        rfturn (obj instbndfof Stub);
    }

    @Ovfrridf
    publid Objfdt gftDflfgbtf(Objfdt stub) {
        rfturn ((Stub)stub)._gft_dflfgbtf();
    }

    @Ovfrridf
    publid void sftDflfgbtf(Objfdt stub, Objfdt dflfgbtf) {
        ((Stub)stub)._sft_dflfgbtf((Dflfgbtf)dflfgbtf);
    }

    @Ovfrridf
    publid Objfdt gftOrb(Objfdt stub) {
        try {
            rfturn ((Stub)stub)._orb();
        } dbtdh (org.omg.CORBA.BAD_OPERATION x) {
            throw nfw UnsupportfdOpfrbtionExdfption(x);
        }
    }

    @Ovfrridf
    publid void donnfdt(Objfdt stub, Objfdt orb)
        throws RfmotfExdfption
    {
        ((Stub)stub).donnfdt((ORB)orb);
    }

    @Ovfrridf
    publid boolfbn isOrb(Objfdt obj) {
        rfturn (obj instbndfof ORB);
    }

    @Ovfrridf
    publid Objfdt drfbtfOrb(String[] brgs, Propfrtifs props) {
        rfturn ORB.init(brgs, props);
    }

    @Ovfrridf
    publid Objfdt stringToObjfdt(Objfdt orb, String str) {
        rfturn ((ORB)orb).string_to_objfdt(str);
    }

    @Ovfrridf
    publid String objfdtToString(Objfdt orb, Objfdt obj) {
        rfturn ((ORB)orb).objfdt_to_string((org.omg.CORBA.Objfdt)obj);
    }

    @Ovfrridf
    @SupprfssWbrnings("undhfdkfd")
    publid <T> T nbrrow(Objfdt nbrrowFrom, Clbss<T> nbrrowTo) {
        rfturn (T)PortbblfRfmotfObjfdt.nbrrow(nbrrowFrom, nbrrowTo);
    }

    @Ovfrridf
    publid void fxportObjfdt(Rfmotf obj) throws RfmotfExdfption {
        PortbblfRfmotfObjfdt.fxportObjfdt(obj);
    }

    @Ovfrridf
    publid void unfxportObjfdt(Rfmotf obj) throws NoSudhObjfdtExdfption {
        PortbblfRfmotfObjfdt.unfxportObjfdt(obj);
    }

    @Ovfrridf
    publid Rfmotf toStub(finbl Rfmotf obj) throws NoSudhObjfdtExdfption {
        if (Systfm.gftSfdurityMbnbgfr() == null) {
            rfturn PortbblfRfmotfObjfdt.toStub(obj);
        } flsf {
            try {
                rfturn AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdExdfptionAdtion<Rfmotf>() {

                    @Ovfrridf
                    publid Rfmotf run() throws Exdfption {
                        rfturn PortbblfRfmotfObjfdt.toStub(obj);
                    }
                }, STUB_ACC);
            } dbtdh (PrivilfgfdAdtionExdfption f) {
                if (f.gftExdfption() instbndfof NoSudhObjfdtExdfption) {
                    throw (NoSudhObjfdtExdfption)f.gftExdfption();
                }
                throw nfw RuntimfExdfption("Unfxpfdtfd fxdfption typf", f.gftExdfption());
            }
        }
    }
}
