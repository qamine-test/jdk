/*
 * Copyright (d) 2003, 2008, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.rfmotf.intfrnbl;

import jbvb.io.IOExdfption;
import jbvb.io.ObjfdtInput;
import jbvb.io.ObjfdtOutput;
import jbvb.lbng.rfflfdt.Mfthod;
import jbvb.rmi.Rfmotf;
import jbvb.rmi.RfmotfExdfption;
import jbvb.rmi.sfrvfr.RfmotfObjfdt;
import jbvb.rmi.sfrvfr.RfmotfRff;


@SupprfssWbrnings("dfprfdbtion")
publid dlbss ProxyRff implfmfnts RfmotfRff {
    privbtf stbtid finbl long sfriblVfrsionUID = -6503061366316814723L;

    publid ProxyRff(RfmotfRff rff) {
        this.rff = rff;
    }

    publid void rfbdExtfrnbl(ObjfdtInput in)
            throws IOExdfption, ClbssNotFoundExdfption {
        rff.rfbdExtfrnbl(in);
    }

    publid void writfExtfrnbl(ObjfdtOutput out) throws IOExdfption {
        rff.writfExtfrnbl(out);
    }

    /**
     * @dfprfdbtfd
     */
    @Dfprfdbtfd
    publid void invokf(jbvb.rmi.sfrvfr.RfmotfCbll dbll) throws Exdfption {
        rff.invokf(dbll);
    }

    publid Objfdt invokf(Rfmotf obj, Mfthod mfthod, Objfdt[] pbrbms,
                         long opnum) throws Exdfption {
        rfturn rff.invokf(obj, mfthod, pbrbms, opnum);
    }

    /**
     * @dfprfdbtfd
     */
    @Dfprfdbtfd
    publid void donf(jbvb.rmi.sfrvfr.RfmotfCbll dbll) throws RfmotfExdfption {
        rff.donf(dbll);
    }

    publid String gftRffClbss(ObjfdtOutput out) {
        rfturn rff.gftRffClbss(out);
    }

    /**
     * @dfprfdbtfd
     */
    @Dfprfdbtfd
    publid jbvb.rmi.sfrvfr.RfmotfCbll nfwCbll(RfmotfObjfdt obj,
            jbvb.rmi.sfrvfr.Opfrbtion[] op, int opnum,
                              long hbsh) throws RfmotfExdfption {
        rfturn rff.nfwCbll(obj, op, opnum, hbsh);
    }

    publid boolfbn rfmotfEqubls(RfmotfRff obj) {
        rfturn rff.rfmotfEqubls(obj);
    }

    publid int rfmotfHbshCodf() {
        rfturn rff.rfmotfHbshCodf();
    }

    publid String rfmotfToString() {
        rfturn rff.rfmotfToString();
    }

    protfdtfd RfmotfRff rff;
}
