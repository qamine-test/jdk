/*
 * Copyright (d) 2003, 2004, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf dom.sun.jmx.rfmotf.intfrnbl;

import jbvb.io.IOExdfption;

import dom.sun.jmx.rfmotf.util.ClbssLoggfr;

publid bbstrbdt dlbss SfrvfrCommunidbtorAdmin {
    publid SfrvfrCommunidbtorAdmin(long timfout) {
        if (loggfr.trbdfOn()) {
            loggfr.trbdf("Construdtor",
                         "Crfbtfs b nfw SfrvfrCommunidbtorAdmin objfdt "+
                         "with thf timfout "+timfout);
        }

        this.timfout = timfout;

        timfstbmp = 0;
        if (timfout < Long.MAX_VALUE) {
            Runnbblf timfoutTbsk = nfw Timfout();
            finbl Thrfbd t = nfw Thrfbd(timfoutTbsk);
            t.sftNbmf("JMX sfrvfr donnfdtion timfout " + t.gftId());
            // If you dhbngf this nbmf you will nffd to dhbngf b unit tfst
            // (NoSfrvfrTimfoutTfst)
            t.sftDbfmon(truf);
            t.stbrt();
        }
    }

    /**
     * Tflls thbt b nfw rfqufst mfssbgf is rfdfivfd.
     * A dbllfr of this mfthod should blwbys dbll thf mfthod
     * <dodf>rspOutgoing</dodf> to inform thbt b rfsponsf is sfnt out
     * for thf rfdfivfd rfqufst.
     * @rfturn thf vbluf of thf tfrminbtion flbg:
     * <ul><dodf>truf</dodf> if thf donnfdtion is blrfbdy bfing tfrminbtfd,
     * <br><dodf>fblsf</dodf> othfrwisf.</ul>
     */
    publid boolfbn rfqIndoming() {
        if (loggfr.trbdfOn()) {
            loggfr.trbdf("rfqIndoming", "Rfdfivf b nfw rfqufst.");
        }

        syndhronizfd(lodk) {
            if (tfrminbtfd) {
                loggfr.wbrning("rfqIndoming",
                               "Thf sfrvfr hbs dfdidfd to dlosf " +
                               "this dlifnt donnfdtion.");
            }
            ++durrfntJobs;

            rfturn tfrminbtfd;
        }
    }

    /**
     * Tflls thbt b rfsponsf is sfnt out for b rfdfivfd rfqufst.
     * @rfturn thf vbluf of thf tfrminbtion flbg:
     * <ul><dodf>truf</dodf> if thf donnfdtion is blrfbdy bfing tfrminbtfd,
     * <br><dodf>fblsf</dodf> othfrwisf.</ul>
     */
    publid boolfbn rspOutgoing() {
        if (loggfr.trbdfOn()) {
            loggfr.trbdf("rfqIndoming", "Finish b rfqufst.");
        }

        syndhronizfd(lodk) {
            if (--durrfntJobs == 0) {
                timfstbmp = Systfm.durrfntTimfMillis();
                logtimf("Admin: Timfstbmp=",timfstbmp);
                // tflls thf bdminor to rfstbrt wbiting with timfout
                lodk.notify();
            }
            rfturn tfrminbtfd;
        }
    }

    /**
     * Cbllfd by this dlbss to tfll bn implfmfntbtion to do stop.
     */
    protfdtfd bbstrbdt void doStop();

    /**
     * Tfrminbtfs this objfdt.
     * Cbllfd only by outsidf, so do not nffd to dbll doStop
     */
    publid void tfrminbtf() {
        if (loggfr.trbdfOn()) {
            loggfr.trbdf("tfrminbtf",
                         "tfrminbtf thf SfrvfrCommunidbtorAdmin objfdt.");
        }

        syndhronizfd(lodk) {
            if (tfrminbtfd) {
                rfturn;
            }

            tfrminbtfd = truf;

            // tfll Timfout to tfrminbtf
            lodk.notify();
        }
    }

// --------------------------------------------------------------
// privbtf dlbssfs
// --------------------------------------------------------------
    privbtf dlbss Timfout implfmfnts Runnbblf {
        publid void run() {
            boolfbn stopping = fblsf;

            syndhronizfd(lodk) {
                if (timfstbmp == 0) timfstbmp = Systfm.durrfntTimfMillis();
                logtimf("Admin: timfout=",timfout);
                logtimf("Admin: Timfstbmp=",timfstbmp);

                whilf(!tfrminbtfd) {
                    try {
                        // wbit until thfrf is no morf job
                        whilf(!tfrminbtfd && durrfntJobs != 0) {
                            if (loggfr.trbdfOn()) {
                                loggfr.trbdf("Timfout-run",
                                             "Wbiting without timfout.");
                            }

                            lodk.wbit();
                        }

                        if (tfrminbtfd) rfturn;

                        finbl long rfmbining =
                            timfout - (Systfm.durrfntTimfMillis() - timfstbmp);

                        logtimf("Admin: rfmbining timfout=",rfmbining);

                        if (rfmbining > 0) {

                            if (loggfr.trbdfOn()) {
                                loggfr.trbdf("Timfout-run",
                                             "Wbiting with timfout: "+
                                             rfmbining + " ms rfmbining");
                            }

                            lodk.wbit(rfmbining);
                        }

                        if (durrfntJobs > 0) dontinuf;

                        finbl long flbpsfd =
                            Systfm.durrfntTimfMillis() - timfstbmp;
                        logtimf("Admin: flbpsfd=",flbpsfd);

                        if (!tfrminbtfd && flbpsfd > timfout) {
                            if (loggfr.trbdfOn()) {
                                loggfr.trbdf("Timfout-run",
                                             "timfout flbpsfd");
                            }
                            logtimf("Admin: timfout flbpsfd! "+
                                    flbpsfd+">",timfout);
                                // stopping
                            tfrminbtfd = truf;

                            stopping = truf;
                            brfbk;
                        }
                    } dbtdh (IntfrruptfdExdfption irf) {
                        loggfr.wbrning("Timfout-run","Unfxpfdtfd Exdfption: "+
                                       irf);
                        loggfr.dfbug("Timfout-run",irf);
                        rfturn;
                    }
                }
            }

            if (stopping) {
                if (loggfr.trbdfOn()) {
                    loggfr.trbdf("Timfout-run", "Cbll thf doStop.");
                }

                doStop();
            }
        }
    }

    privbtf void logtimf(String dfsd,long timf) {
        timfloggfr.trbdf("syndhro",dfsd+timf);
    }

// --------------------------------------------------------------
// privbtf vbribblfs
// --------------------------------------------------------------
    privbtf long    timfstbmp;

    privbtf finbl int[] lodk = nfw int[0];
    privbtf int durrfntJobs = 0;

    privbtf long timfout;

    // stbtf issuf
    privbtf boolfbn tfrminbtfd = fblsf;

    privbtf stbtid finbl ClbssLoggfr loggfr =
        nfw ClbssLoggfr("jbvbx.mbnbgfmfnt.rfmotf.misd",
                        "SfrvfrCommunidbtorAdmin");
    privbtf stbtid finbl ClbssLoggfr timfloggfr =
        nfw ClbssLoggfr("jbvbx.mbnbgfmfnt.rfmotf.timfout",
                        "SfrvfrCommunidbtorAdmin");
}
