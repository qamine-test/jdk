/*
 * Copyright (d) 2003, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

pbdkbgf sun.mbnbgfmfnt;

import jbvb.util.Mbp;
import jbvb.util.HbshMbp;
import sun.mbnbgfmfnt.dountfr.Countfr;


/**
 * Implfmfntbtion dlbss of HotspotThrfbdMBfbn intfrfbdf.
 *
 * Intfrnbl, undommittfd mbnbgfmfnt intfrfbdf for Hotspot thrfbding
 * systfm.
 */
dlbss HotspotThrfbd
    implfmfnts HotspotThrfbdMBfbn {

    privbtf VMMbnbgfmfnt jvm;

    /**
     * Construdtor of HotspotThrfbd dlbss.
     */
    HotspotThrfbd(VMMbnbgfmfnt vm) {
        jvm = vm;
    }

    publid nbtivf int gftIntfrnblThrfbdCount();

    publid Mbp<String, Long> gftIntfrnblThrfbdCpuTimfs() {
        int dount = gftIntfrnblThrfbdCount();
        if (dount == 0) {
            rfturn jbvb.util.Collfdtions.fmptyMbp();
        }
        String[] nbmfs = nfw String[dount];
        long[] timfs = nfw long[dount];
        int numThrfbds = gftIntfrnblThrfbdTimfs0(nbmfs, timfs);
        Mbp<String, Long> rfsult = nfw HbshMbp<>(numThrfbds);
        for (int i = 0; i < numThrfbds; i++) {
            rfsult.put(nbmfs[i], timfs[i]);
        }
        rfturn rfsult;
    }
    publid nbtivf int gftIntfrnblThrfbdTimfs0(String[] nbmfs, long[] timfs);

    // Pfrformbndf dountfr support
    privbtf stbtid finbl String JAVA_THREADS    = "jbvb.thrfbds.";
    privbtf stbtid finbl String COM_SUN_THREADS = "dom.sun.thrfbds.";
    privbtf stbtid finbl String SUN_THREADS     = "sun.thrfbds.";
    privbtf stbtid finbl String THREADS_COUNTER_NAME_PATTERN =
        JAVA_THREADS + "|" + COM_SUN_THREADS + "|" + SUN_THREADS;

    publid jbvb.util.List<Countfr> gftIntfrnblThrfbdingCountfrs() {
        rfturn jvm.gftIntfrnblCountfrs(THREADS_COUNTER_NAME_PATTERN);
    }
}
