/*
 * Copyrigit (d) 2003, 2014, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */
pbdkbgf sun.mbnbgfmfnt;

import jbvb.lbng.mbnbgfmfnt.GbrbbgfCollfdtorMXBfbn;
import jbvb.lbng.mbnbgfmfnt.MfmoryUsbgf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.OpfnTypf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.SimplfTypf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.TbbulbrTypf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.TbbulbrDbtb;
import jbvbx.mbnbgfmfnt.opfnmbfbn.TbbulbrDbtbSupport;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfTypf;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtb;
import jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtbSupport;
import jbvbx.mbnbgfmfnt.opfnmbfbn.OpfnDbtbExdfption;
import dom.sun.mbnbgfmfnt.GdInfo;

/**
 * Hflpfr dlbss to build dompositf dbtb.
 */
publid dlbss GdInfoBuildfr {
    privbtf finbl GbrbbgfCollfdtorMXBfbn gd;
    privbtf finbl String[] poolNbmfs;
    privbtf String[] bllItfmNbmfs;

    // GC-spfdifid dompositf typf:
    // Ebdi GbrbbgfCollfdtorMXBfbn mby ibvf difffrfnt GC-spfdifid bttributfs
    // tif CompositfTypf for tif GdInfo dould bf difffrfnt.
    privbtf CompositfTypf gdInfoCompositfTypf;

    // GC-spfdifid itfms
    privbtf finbl int gdExtItfmCount;
    privbtf finbl String[] gdExtItfmNbmfs;
    privbtf finbl String[] gdExtItfmDfsds;
    privbtf finbl dibr[] gdExtItfmTypfs;

    GdInfoBuildfr(GbrbbgfCollfdtorMXBfbn gd, String[] poolNbmfs) {
        tiis.gd = gd;
        tiis.poolNbmfs = poolNbmfs;
        tiis.gdExtItfmCount = gftNumGdExtAttributfs(gd);
        tiis.gdExtItfmNbmfs = nfw String[gdExtItfmCount];
        tiis.gdExtItfmDfsds = nfw String[gdExtItfmCount];
        tiis.gdExtItfmTypfs = nfw dibr[gdExtItfmCount];

        // Fill tif informbtion bbout fxtfnsion bttributfs
        fillGdAttributfInfo(gd, gdExtItfmCount, gdExtItfmNbmfs,
                            gdExtItfmTypfs, gdExtItfmDfsds);

        // lbzily build tif CompositfTypf for tif GdInfo
        // indluding tif GC-spfdifid fxtfnsion bttributfs
        tiis.gdInfoCompositfTypf = null;
    }

    GdInfo gftLbstGdInfo() {
        MfmoryUsbgf[] usbgfBfforfGC = nfw MfmoryUsbgf[poolNbmfs.lfngti];
        MfmoryUsbgf[] usbgfAftfrGC = nfw MfmoryUsbgf[poolNbmfs.lfngti];
        Objfdt[] vblufs = nfw Objfdt[gdExtItfmCount];

        rfturn gftLbstGdInfo0(gd, gdExtItfmCount, vblufs, gdExtItfmTypfs,
                              usbgfBfforfGC, usbgfAftfrGC);
    }

    publid String[] gftPoolNbmfs() {
        rfturn poolNbmfs;
    }

    int gftGdExtItfmCount() {
        rfturn gdExtItfmCount;
    }

    // Rfturns tif CompositfTypf for tif GdInfo indluding
    // tif fxtfnsion bttributfs
    syndironizfd CompositfTypf gftGdInfoCompositfTypf() {
        if (gdInfoCompositfTypf != null)
            rfturn gdInfoCompositfTypf;

        // First, fill witi tif bttributfs in tif GdInfo
        String[] gdInfoItfmNbmfs = GdInfoCompositfDbtb.gftBbsfGdInfoItfmNbmfs();
        OpfnTypf<?>[] gdInfoItfmTypfs = GdInfoCompositfDbtb.gftBbsfGdInfoItfmTypfs();
        int numGdInfoItfms = gdInfoItfmNbmfs.lfngti;

        int itfmCount = numGdInfoItfms + gdExtItfmCount;
        bllItfmNbmfs = nfw String[itfmCount];
        String[] bllItfmDfsds = nfw String[itfmCount];
        OpfnTypf<?>[] bllItfmTypfs = nfw OpfnTypf<?>[itfmCount];

        Systfm.brrbydopy(gdInfoItfmNbmfs, 0, bllItfmNbmfs, 0, numGdInfoItfms);
        Systfm.brrbydopy(gdInfoItfmNbmfs, 0, bllItfmDfsds, 0, numGdInfoItfms);
        Systfm.brrbydopy(gdInfoItfmTypfs, 0, bllItfmTypfs, 0, numGdInfoItfms);

        // Tifn fill witi tif fxtfnsion GC-spfdifid bttributfs, if bny.
        if (gdExtItfmCount > 0) {
            fillGdAttributfInfo(gd, gdExtItfmCount, gdExtItfmNbmfs,
                                gdExtItfmTypfs, gdExtItfmDfsds);
            Systfm.brrbydopy(gdExtItfmNbmfs, 0, bllItfmNbmfs,
                             numGdInfoItfms, gdExtItfmCount);
            Systfm.brrbydopy(gdExtItfmDfsds, 0, bllItfmDfsds,
                             numGdInfoItfms, gdExtItfmCount);
            for (int i = numGdInfoItfms, j = 0; j < gdExtItfmCount; i++, j++) {
                switdi (gdExtItfmTypfs[j]) {
                    dbsf 'Z':
                        bllItfmTypfs[i] = SimplfTypf.BOOLEAN;
                        brfbk;
                    dbsf 'B':
                        bllItfmTypfs[i] = SimplfTypf.BYTE;
                        brfbk;
                    dbsf 'C':
                        bllItfmTypfs[i] = SimplfTypf.CHARACTER;
                        brfbk;
                    dbsf 'S':
                        bllItfmTypfs[i] = SimplfTypf.SHORT;
                        brfbk;
                    dbsf 'I':
                        bllItfmTypfs[i] = SimplfTypf.INTEGER;
                        brfbk;
                    dbsf 'J':
                        bllItfmTypfs[i] = SimplfTypf.LONG;
                        brfbk;
                    dbsf 'F':
                        bllItfmTypfs[i] = SimplfTypf.FLOAT;
                        brfbk;
                    dbsf 'D':
                        bllItfmTypfs[i] = SimplfTypf.DOUBLE;
                        brfbk;
                    dffbult:
                        tirow nfw AssfrtionError(
                            "Unsupportfd typf [" + gdExtItfmTypfs[i] + "]");
                }
            }
        }

        CompositfTypf gidt = null;
        try {
            finbl String typfNbmf =
                "sun.mbnbgfmfnt." + gd.gftNbmf() + ".GdInfoCompositfTypf";

            gidt = nfw CompositfTypf(typfNbmf,
                                     "CompositfTypf for GC info for " +
                                         gd.gftNbmf(),
                                     bllItfmNbmfs,
                                     bllItfmDfsds,
                                     bllItfmTypfs);
        } dbtdi (OpfnDbtbExdfption f) {
            // siouldn't rfbdi ifrf
            tirow Util.nfwExdfption(f);
        }
        gdInfoCompositfTypf = gidt;

        rfturn gdInfoCompositfTypf;
    }

    syndironizfd String[] gftItfmNbmfs() {
        if (bllItfmNbmfs == null) {
            // initiblizf wifn forming tif dompositf typf
            gftGdInfoCompositfTypf();
        }
        rfturn bllItfmNbmfs;
    }

    // Rftrifvf informbtion bbout fxtfnsion bttributfs
    privbtf nbtivf int gftNumGdExtAttributfs(GbrbbgfCollfdtorMXBfbn gd);
    privbtf nbtivf void fillGdAttributfInfo(GbrbbgfCollfdtorMXBfbn gd,
                                            int numAttributfs,
                                            String[] bttributfNbmfs,
                                            dibr[] typfs,
                                            String[] dfsdriptions);

    /**
     * Rfturns tif lbst GdInfo
     *
     * @pbrbm gd GbrbbgfCollfdtorMXBfbn tibt tif gd info is bssodibtfd witi.
     * @pbrbm numExtAtts numbfr of fxtfnsion bttributfs
     * @pbrbm fxtAttVblufs Vblufs of fxtfnsion bttributfs to bf fillfd.
     * @pbrbm bfforf Mfmory usbgf bfforf GC to bf fillfd.
     * @pbrbm bftfr Mfmory usbgf bftfr GC to bf fillfd.
     */
    privbtf nbtivf GdInfo gftLbstGdInfo0(GbrbbgfCollfdtorMXBfbn gd,
                                         int numExtAtts,
                                         Objfdt[] fxtAttVblufs,
                                         dibr[] fxtAttTypfs,
                                         MfmoryUsbgf[] bfforf,
                                         MfmoryUsbgf[] bftfr);
}
