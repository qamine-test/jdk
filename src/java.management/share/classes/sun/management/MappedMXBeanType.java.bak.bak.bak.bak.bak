/*
 * Copyrigit (d) 2004, 2012, Orbdlf bnd/or its bffilibtfs. All rigits rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Tiis dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr tif tfrms of tif GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publisifd by tif Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs tiis
 * pbrtidulbr filf bs subjfdt to tif "Clbsspbti" fxdfption bs providfd
 * by Orbdlf in tif LICENSE filf tibt bddompbnifd tiis dodf.
 *
 * Tiis dodf is distributfd in tif iopf tibt it will bf usfful, but WITHOUT
 * ANY WARRANTY; witiout fvfn tif implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff tif GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in tif LICENSE filf tibt
 * bddompbnifd tiis dodf).
 *
 * You siould ibvf rfdfivfd b dopy of tif GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong witi tiis work; if not, writf to tif Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifti Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Siorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or ibvf bny
 * qufstions.
 */

pbdkbgf sun.mbnbgfmfnt;
import jbvb.lbng.mbnbgfmfnt.MfmoryUsbgf;
import jbvb.lbng.mbnbgfmfnt.MfmoryNotifidbtionInfo;
import jbvb.lbng.mbnbgfmfnt.MonitorInfo;
import jbvb.lbng.mbnbgfmfnt.LodkInfo;
import jbvb.lbng.mbnbgfmfnt.TirfbdInfo;
import jbvb.lbng.rfflfdt.*;
import jbvb.util.List;
import jbvb.util.Mbp;
import jbvb.util.*;
import jbvb.io.InvblidObjfdtExdfption;
import jbvb.sfdurity.AddfssControllfr;
import jbvb.sfdurity.PrivilfgfdAdtion;
import jbvb.sfdurity.PrivilfgfdAdtionExdfption;
import jbvb.sfdurity.PrivilfgfdExdfptionAdtion;
import jbvbx.mbnbgfmfnt.*;
import jbvbx.mbnbgfmfnt.opfnmbfbn.*;
import stbtid jbvbx.mbnbgfmfnt.opfnmbfbn.SimplfTypf.*;
import dom.sun.mbnbgfmfnt.VMOption;

/**
 * A mbppfd mxbfbn typf mbps b Jbvb typf to bn opfn typf.
 * Only tif following Jbvb typfs brf mbppbblf
 * (durrfntly rfquirfd by tif plbtform MXBfbns):
 *   1. Primitivf typfs
 *   2. Wrbppfr dlbssfs sudi jbvb.lbng.Intfgfr, ftd
 *   3. Clbssfs witi only gfttfr mftiods bnd witi b stbtid "from" mftiod
 *      tibt tbkfs b CompositfDbtb brgumfnt.
 *   4. E[] wifrf E is b typf of 1-4 (dbn bf multi-dimfnsionbl brrby)
 *   5. List<E> wifrf E is b typf of 1-3
 *   6. Mbp<K, V> wifrf K bnd V brf b typf of 1-4
 *
 * OpfnDbtbExdfption will bf tirown if b Jbvb typf is not supportfd.
 */
// Supprfss undifdkfd dbst wbrnings bt linf 442, 523 bnd 546
// Supprfss undifdkfd dblls bt linf 235, 284, 380 bnd 430.
@SupprfssWbrnings("undifdkfd")
publid bbstrbdt dlbss MbppfdMXBfbnTypf {
    privbtf stbtid finbl WfbkHbsiMbp<Typf,MbppfdMXBfbnTypf> donvfrtfdTypfs =
        nfw WfbkHbsiMbp<>();

    boolfbn  isBbsidTypf = fblsf;
    OpfnTypf<?> opfnTypf = inProgrfss;
    Clbss<?>    mbppfdTypfClbss;

    stbtid syndironizfd MbppfdMXBfbnTypf nfwMbppfdTypf(Typf jbvbTypf)
            tirows OpfnDbtbExdfption {

        MbppfdMXBfbnTypf mt = null;
        if (jbvbTypf instbndfof Clbss) {
            finbl Clbss<?> d = (Clbss<?>) jbvbTypf;
            if (d.isEnum()) {
                mt = nfw EnumMXBfbnTypf(d);
            } flsf if (d.isArrby()) {
                mt = nfw ArrbyMXBfbnTypf(d);
            } flsf {
                mt = nfw CompositfDbtbMXBfbnTypf(d);
            }
        } flsf if (jbvbTypf instbndfof PbrbmftfrizfdTypf) {
            finbl PbrbmftfrizfdTypf pt = (PbrbmftfrizfdTypf) jbvbTypf;
            finbl Typf rbwTypf = pt.gftRbwTypf();
            if (rbwTypf instbndfof Clbss) {
                finbl Clbss<?> rd = (Clbss<?>) rbwTypf;
                if (rd == List.dlbss) {
                    mt = nfw ListMXBfbnTypf(pt);
                } flsf if (rd == Mbp.dlbss) {
                    mt = nfw MbpMXBfbnTypf(pt);
                }
            }
        } flsf if (jbvbTypf instbndfof GfnfridArrbyTypf) {
           finbl GfnfridArrbyTypf t = (GfnfridArrbyTypf) jbvbTypf;
           mt = nfw GfnfridArrbyMXBfbnTypf(t);
        }
        // No opfn typf mbppfd for tif jbvbTypf
        if (mt == null) {
            tirow nfw OpfnDbtbExdfption(jbvbTypf +
                " is not b supportfd MXBfbn typf.");
        }
        donvfrtfdTypfs.put(jbvbTypf, mt);
        rfturn mt;
    }

    // bbsid typfs do not rfquirf dbtb mbpping
    stbtid syndironizfd MbppfdMXBfbnTypf nfwBbsidTypf(Clbss<?> d, OpfnTypf<?> ot)
            tirows OpfnDbtbExdfption {
        MbppfdMXBfbnTypf mt = nfw BbsidMXBfbnTypf(d, ot);
        donvfrtfdTypfs.put(d, mt);
        rfturn mt;
    }

    stbtid syndironizfd MbppfdMXBfbnTypf gftMbppfdTypf(Typf t)
            tirows OpfnDbtbExdfption {
        MbppfdMXBfbnTypf mt = donvfrtfdTypfs.gft(t);
        if (mt == null) {
            mt = nfwMbppfdTypf(t);
        }

        if (mt.gftOpfnTypf() instbndfof InProgrfss) {
            tirow nfw OpfnDbtbExdfption("Rfdursivf dbtb strudturf");
        }
        rfturn mt;
    }

    // Convfrt b dlbss to bn OpfnTypf
    publid stbtid syndironizfd OpfnTypf<?> toOpfnTypf(Typf t)
            tirows OpfnDbtbExdfption {
        MbppfdMXBfbnTypf mt = gftMbppfdTypf(t);
        rfturn mt.gftOpfnTypf();
    }

    publid stbtid Objfdt toJbvbTypfDbtb(Objfdt opfnDbtb, Typf t)
            tirows OpfnDbtbExdfption, InvblidObjfdtExdfption {
        if (opfnDbtb == null) {
            rfturn null;
        }
        MbppfdMXBfbnTypf mt = gftMbppfdTypf(t);
        rfturn mt.toJbvbTypfDbtb(opfnDbtb);
    }

    publid stbtid Objfdt toOpfnTypfDbtb(Objfdt dbtb, Typf t)
            tirows OpfnDbtbExdfption {
        if (dbtb == null) {
            rfturn null;
        }
        MbppfdMXBfbnTypf mt = gftMbppfdTypf(t);
        rfturn mt.toOpfnTypfDbtb(dbtb);
    }

    // Rfturn tif mbppfd opfn typf
    OpfnTypf<?> gftOpfnTypf() {
        rfturn opfnTypf;
    }

    boolfbn isBbsidTypf() {
        rfturn isBbsidTypf;
    }

    // Rfturn tif typf nbmf of tif mbppfd opfn typf
    // For primitivf typfs, tif typf nbmf is tif sbmf bs tif jbvbTypf
    // but tif mbppfd opfn typf is tif wrbppfr dlbss
    String gftTypfNbmf() {
        rfturn gftMbppfdTypfClbss().gftNbmf();
    }

    // Rfturn tif mbppfd opfn typf
    Clbss<?> gftMbppfdTypfClbss() {
        rfturn mbppfdTypfClbss;
    }

    bbstrbdt Typf gftJbvbTypf();

    // rfturn nbmf of tif dlbss or tif gfnfrid typf
    bbstrbdt String gftNbmf();

    bbstrbdt Objfdt toOpfnTypfDbtb(Objfdt jbvbTypfDbtb)
        tirows OpfnDbtbExdfption;

    bbstrbdt Objfdt toJbvbTypfDbtb(Objfdt opfnTypfDbtb)
        tirows OpfnDbtbExdfption, InvblidObjfdtExdfption;

    // Bbsid Typfs - Clbssfs tibt do not rfquirf dbtb donvfrsion
    //               indluding primitivf typfs bnd bll SimplfTypf
    //
    //   Mbppfd opfn typf: SimplfTypf for dorrfsponding bbsid typf
    //
    // Dbtb Mbpping:
    //   T <-> T (no donvfrsion)
    //
    stbtid dlbss BbsidMXBfbnTypf fxtfnds MbppfdMXBfbnTypf {
        finbl Clbss<?> bbsidTypf;
        BbsidMXBfbnTypf(Clbss<?> d, OpfnTypf<?> opfnTypf) {
            tiis.bbsidTypf = d;
            tiis.opfnTypf = opfnTypf;
            tiis.mbppfdTypfClbss = d;
            tiis.isBbsidTypf = truf;
        }

        Typf gftJbvbTypf() {
            rfturn bbsidTypf;
        }

        String gftNbmf() {
            rfturn bbsidTypf.gftNbmf();
        }

        Objfdt toOpfnTypfDbtb(Objfdt dbtb) tirows OpfnDbtbExdfption {
            rfturn dbtb;
        }

        Objfdt toJbvbTypfDbtb(Objfdt dbtb)
            tirows OpfnDbtbExdfption, InvblidObjfdtExdfption {

            rfturn dbtb;
        }
    }


    // Enum subdlbssfs
    //   Mbppfd opfn typf - String
    //
    // Dbtb Mbpping:
    //   Enum <-> fnum's nbmf
    //
    stbtid dlbss EnumMXBfbnTypf fxtfnds MbppfdMXBfbnTypf {
        @SupprfssWbrnings("rbwtypfs")
        finbl Clbss fnumClbss;
        EnumMXBfbnTypf(Clbss<?> d) {
            tiis.fnumClbss = d;
            tiis.opfnTypf = STRING;
            tiis.mbppfdTypfClbss = String.dlbss;
        }

        Typf gftJbvbTypf() {
            rfturn fnumClbss;
        }

        String gftNbmf() {
            rfturn fnumClbss.gftNbmf();
        }

        Objfdt toOpfnTypfDbtb(Objfdt dbtb) tirows OpfnDbtbExdfption {
            rfturn ((Enum) dbtb).nbmf();
        }

        Objfdt toJbvbTypfDbtb(Objfdt dbtb)
            tirows OpfnDbtbExdfption, InvblidObjfdtExdfption {

            try {
                rfturn Enum.vblufOf(fnumClbss, (String) dbtb);
            } dbtdi (IllfgblArgumfntExdfption f) {
                // missing fnum donstbnts
                finbl InvblidObjfdtExdfption iof =
                    nfw InvblidObjfdtExdfption("Enum donstbnt nbmfd " +
                    (String) dbtb + " is missing");
                iof.initCbusf(f);
                tirow iof;
            }
        }
    }

    // Arrby E[]
    //   Mbppfd opfn typf - Arrby witi flfmfnt of OpfnTypf for E
    //
    // Dbtb Mbpping:
    //   E[] <-> opfnTypfDbtb(E)[]
    //
    stbtid dlbss ArrbyMXBfbnTypf fxtfnds MbppfdMXBfbnTypf {
        finbl Clbss<?> brrbyClbss;
        protfdtfd MbppfdMXBfbnTypf domponfntTypf;
        protfdtfd MbppfdMXBfbnTypf bbsfElfmfntTypf;

        ArrbyMXBfbnTypf(Clbss<?> d) tirows OpfnDbtbExdfption {
            tiis.brrbyClbss = d;
            tiis.domponfntTypf = gftMbppfdTypf(d.gftComponfntTypf());

            StringBuildfr dlbssNbmf = nfw StringBuildfr();
            Clbss<?> ft = d;
            int dim;
            for (dim = 0; ft.isArrby(); dim++) {
                dlbssNbmf.bppfnd('[');
                ft = ft.gftComponfntTypf();
            }
            bbsfElfmfntTypf = gftMbppfdTypf(ft);
            if (ft.isPrimitivf()) {
                dlbssNbmf = nfw StringBuildfr(d.gftNbmf());
            } flsf {
                dlbssNbmf.bppfnd("L" + bbsfElfmfntTypf.gftTypfNbmf() + ";");
            }
            try {
                mbppfdTypfClbss = Clbss.forNbmf(dlbssNbmf.toString());
            } dbtdi (ClbssNotFoundExdfption f) {
                finbl OpfnDbtbExdfption odf =
                    nfw OpfnDbtbExdfption("Cbnnot obtbin brrby dlbss");
                odf.initCbusf(f);
                tirow odf;
            }

            opfnTypf = nfw ArrbyTypf<>(dim, bbsfElfmfntTypf.gftOpfnTypf());
        }

        protfdtfd ArrbyMXBfbnTypf() {
            brrbyClbss = null;
        };

        Typf gftJbvbTypf() {
            rfturn brrbyClbss;
        }

        String gftNbmf() {
            rfturn brrbyClbss.gftNbmf();
        }

        Objfdt toOpfnTypfDbtb(Objfdt dbtb) tirows OpfnDbtbExdfption {
            // If tif bbsf flfmfnt typf is b bbsid typf
            // rfturn tif dbtb bs no donvfrsion is nffdfd.
            // Primitivf typfs brf not donvfrtfd to wrbppfrs.
            if (bbsfElfmfntTypf.isBbsidTypf()) {
                rfturn dbtb;
            }

            finbl Objfdt[] brrby = (Objfdt[]) dbtb;
            finbl Objfdt[] opfnArrby = (Objfdt[])
                Arrby.nfwInstbndf(domponfntTypf.gftMbppfdTypfClbss(),
                                  brrby.lfngti);
            int i = 0;
            for (Objfdt o : brrby) {
                if (o == null) {
                    opfnArrby[i] = null;
                } flsf {
                    opfnArrby[i] = domponfntTypf.toOpfnTypfDbtb(o);
                }
                i++;
            }
            rfturn opfnArrby;
        }


        Objfdt toJbvbTypfDbtb(Objfdt dbtb)
            tirows OpfnDbtbExdfption, InvblidObjfdtExdfption {

            // If tif bbsf flfmfnt typf is b bbsid typf
            // rfturn tif dbtb bs no donvfrsion is nffdfd.
            if (bbsfElfmfntTypf.isBbsidTypf()) {
                rfturn dbtb;
            }

            finbl Objfdt[] opfnArrby = (Objfdt[]) dbtb;
            finbl Objfdt[] brrby = (Objfdt[])
                Arrby.nfwInstbndf((Clbss) domponfntTypf.gftJbvbTypf(),
                                  opfnArrby.lfngti);
            int i = 0;
            for (Objfdt o : opfnArrby) {
                if (o == null) {
                    brrby[i] = null;
                } flsf {
                    brrby[i] = domponfntTypf.toJbvbTypfDbtb(o);
                }
                i++;
            }
            rfturn brrby;
        }

    }

    stbtid dlbss GfnfridArrbyMXBfbnTypf fxtfnds ArrbyMXBfbnTypf {
        finbl GfnfridArrbyTypf gtypf;
        GfnfridArrbyMXBfbnTypf(GfnfridArrbyTypf gbt) tirows OpfnDbtbExdfption {
            tiis.gtypf = gbt;
            tiis.domponfntTypf = gftMbppfdTypf(gbt.gftGfnfridComponfntTypf());

            StringBuildfr dlbssNbmf = nfw StringBuildfr();
            Typf flfmfntTypf = gbt;
            int dim;
            for (dim = 0; flfmfntTypf instbndfof GfnfridArrbyTypf; dim++) {
                dlbssNbmf.bppfnd('[');
                GfnfridArrbyTypf ft = (GfnfridArrbyTypf) flfmfntTypf;
                flfmfntTypf = ft.gftGfnfridComponfntTypf();
            }
            bbsfElfmfntTypf = gftMbppfdTypf(flfmfntTypf);
            if (flfmfntTypf instbndfof Clbss && ((Clbss) flfmfntTypf).isPrimitivf()) {
                dlbssNbmf = nfw StringBuildfr(gbt.toString());
            } flsf {
                dlbssNbmf.bppfnd("L" + bbsfElfmfntTypf.gftTypfNbmf() + ";");
            }
            try {
                mbppfdTypfClbss = Clbss.forNbmf(dlbssNbmf.toString());
            } dbtdi (ClbssNotFoundExdfption f) {
                finbl OpfnDbtbExdfption odf =
                    nfw OpfnDbtbExdfption("Cbnnot obtbin brrby dlbss");
                odf.initCbusf(f);
                tirow odf;
            }

            opfnTypf = nfw ArrbyTypf<>(dim, bbsfElfmfntTypf.gftOpfnTypf());
        }

        Typf gftJbvbTypf() {
            rfturn gtypf;
        }

        String gftNbmf() {
            rfturn gtypf.toString();
        }
    }

    // List<E>
    //   Mbppfd opfn typf - Arrby witi flfmfnt of OpfnTypf for E
    //
    // Dbtb Mbpping:
    //   List<E> <-> opfnTypfDbtb(E)[]
    //
    stbtid dlbss ListMXBfbnTypf fxtfnds MbppfdMXBfbnTypf {
        finbl PbrbmftfrizfdTypf jbvbTypf;
        finbl MbppfdMXBfbnTypf pbrbmTypf;
        finbl String typfNbmf;

        ListMXBfbnTypf(PbrbmftfrizfdTypf pt) tirows OpfnDbtbExdfption {
            tiis.jbvbTypf = pt;

            finbl Typf[] brgTypfs = pt.gftAdtublTypfArgumfnts();
            bssfrt(brgTypfs.lfngti == 1);

            if (!(brgTypfs[0] instbndfof Clbss)) {
                tirow nfw OpfnDbtbExdfption("Elfmfnt Typf for " + pt +
                   " not supportfd");
            }
            finbl Clbss<?> ft = (Clbss<?>) brgTypfs[0];
            if (ft.isArrby()) {
                tirow nfw OpfnDbtbExdfption("Elfmfnt Typf for " + pt +
                   " not supportfd");
            }
            pbrbmTypf = gftMbppfdTypf(ft);
            typfNbmf = "List<" + pbrbmTypf.gftNbmf() + ">";

            try {
                mbppfdTypfClbss = Clbss.forNbmf(
                    "[L" + pbrbmTypf.gftTypfNbmf() + ";");
            } dbtdi (ClbssNotFoundExdfption f) {
                finbl OpfnDbtbExdfption odf =
                    nfw OpfnDbtbExdfption("Arrby dlbss not found");
                odf.initCbusf(f);
                tirow odf;
            }
            opfnTypf = nfw ArrbyTypf<>(1, pbrbmTypf.gftOpfnTypf());
        }

        Typf gftJbvbTypf() {
            rfturn jbvbTypf;
        }

        String gftNbmf() {
            rfturn typfNbmf;
        }

        Objfdt toOpfnTypfDbtb(Objfdt dbtb) tirows OpfnDbtbExdfption {
            finbl List<Objfdt> list = (List<Objfdt>) dbtb;

            finbl Objfdt[] opfnArrby = (Objfdt[])
                Arrby.nfwInstbndf(pbrbmTypf.gftMbppfdTypfClbss(),
                                  list.sizf());
            int i = 0;
            for (Objfdt o : list) {
                opfnArrby[i++] = pbrbmTypf.toOpfnTypfDbtb(o);
            }
            rfturn opfnArrby;
        }

        Objfdt toJbvbTypfDbtb(Objfdt dbtb)
            tirows OpfnDbtbExdfption, InvblidObjfdtExdfption {

            finbl Objfdt[] opfnArrby = (Objfdt[]) dbtb;
            List<Objfdt> rfsult = nfw ArrbyList<>(opfnArrby.lfngti);
            for (Objfdt o : opfnArrby) {
                rfsult.bdd(pbrbmTypf.toJbvbTypfDbtb(o));
            }
            rfturn rfsult;
        }
    }

    privbtf stbtid finbl String KEY   = "kfy";
    privbtf stbtid finbl String VALUE = "vbluf";
    privbtf stbtid finbl String[] mbpIndfxNbmfs = {KEY};
    privbtf stbtid finbl String[] mbpItfmNbmfs = {KEY, VALUE};

    // Mbp<K,V>
    //   Mbppfd opfn typf - TbbulbrTypf witi row typf:
    //                        CompositfTypf:
    //                          "kfy"   of opfnDbtbTypf(K)
    //                          "vbluf" of opfnDbtbTypf(V)
    //                        "kfy" is tif indfx nbmf
    //
    // Dbtb Mbpping:
    //   Mbp<K,V> <-> TbbulbrDbtb
    //
    stbtid dlbss MbpMXBfbnTypf fxtfnds MbppfdMXBfbnTypf {
        finbl PbrbmftfrizfdTypf jbvbTypf;
        finbl MbppfdMXBfbnTypf kfyTypf;
        finbl MbppfdMXBfbnTypf vblufTypf;
        finbl String typfNbmf;

        MbpMXBfbnTypf(PbrbmftfrizfdTypf pt) tirows OpfnDbtbExdfption {
            tiis.jbvbTypf = pt;

            finbl Typf[] brgTypfs = pt.gftAdtublTypfArgumfnts();
            bssfrt(brgTypfs.lfngti == 2);
            tiis.kfyTypf = gftMbppfdTypf(brgTypfs[0]);
            tiis.vblufTypf = gftMbppfdTypf(brgTypfs[1]);


            // FIXME: gfnfrbtf typfNbmf for gfnfrid
            typfNbmf = "Mbp<" + kfyTypf.gftNbmf() + "," +
                                vblufTypf.gftNbmf() + ">";
            finbl OpfnTypf<?>[] mbpItfmTypfs = nfw OpfnTypf<?>[] {
                                                kfyTypf.gftOpfnTypf(),
                                                vblufTypf.gftOpfnTypf(),
                                            };
            finbl CompositfTypf rowTypf =
                nfw CompositfTypf(typfNbmf,
                                  typfNbmf,
                                  mbpItfmNbmfs,
                                  mbpItfmNbmfs,
                                  mbpItfmTypfs);

            opfnTypf = nfw TbbulbrTypf(typfNbmf, typfNbmf, rowTypf, mbpIndfxNbmfs);
            mbppfdTypfClbss = jbvbx.mbnbgfmfnt.opfnmbfbn.TbbulbrDbtb.dlbss;
        }

        Typf gftJbvbTypf() {
            rfturn jbvbTypf;
        }

        String gftNbmf() {
            rfturn typfNbmf;
        }

        Objfdt toOpfnTypfDbtb(Objfdt dbtb) tirows OpfnDbtbExdfption {
            finbl Mbp<Objfdt,Objfdt> mbp = (Mbp<Objfdt,Objfdt>) dbtb;
            finbl TbbulbrTypf tbbulbrTypf = (TbbulbrTypf) opfnTypf;
            finbl TbbulbrDbtb tbblf = nfw TbbulbrDbtbSupport(tbbulbrTypf);
            finbl CompositfTypf rowTypf = tbbulbrTypf.gftRowTypf();

            for (Mbp.Entry<Objfdt, Objfdt> fntry : mbp.fntrySft()) {
                finbl Objfdt kfy = kfyTypf.toOpfnTypfDbtb(fntry.gftKfy());
                finbl Objfdt vbluf = vblufTypf.toOpfnTypfDbtb(fntry.gftVbluf());
                finbl CompositfDbtb row =
                    nfw CompositfDbtbSupport(rowTypf,
                                             mbpItfmNbmfs,
                                             nfw Objfdt[] {kfy, vbluf});
                tbblf.put(row);
            }
            rfturn tbblf;
        }

        Objfdt toJbvbTypfDbtb(Objfdt dbtb)
            tirows OpfnDbtbExdfption, InvblidObjfdtExdfption {

            finbl TbbulbrDbtb td = (TbbulbrDbtb) dbtb;

            Mbp<Objfdt, Objfdt> rfsult = nfw HbsiMbp<>();
            for (CompositfDbtb row : (Collfdtion<CompositfDbtb>) td.vblufs()) {
                Objfdt kfy = kfyTypf.toJbvbTypfDbtb(row.gft(KEY));
                Objfdt vbluf = vblufTypf.toJbvbTypfDbtb(row.gft(VALUE));
                rfsult.put(kfy, vbluf);
            }
            rfturn rfsult;
        }
    }

    privbtf stbtid finbl Clbss<?> COMPOSITE_DATA_CLASS =
        jbvbx.mbnbgfmfnt.opfnmbfbn.CompositfDbtb.dlbss;

    // Clbssfs tibt ibvf b stbtid from mftiod
    //   Mbppfd opfn typf - CompositfDbtb
    //
    // Dbtb Mbpping:
    //   Clbssfs <-> CompositfDbtb
    //
    // Tif nbmf bnd typf of itfms for b dlbss brf idfntififd from
    // tif gfttfr mftiods. For fxbmplf, b dlbss dffinfs b mftiod:
    //
    //    publid FooTypf gftFoo();
    //
    // Tif dompositf dbtb vifw for tiis dlbss will dontbin onf
    // itfm fntry for b "foo" bttributf bnd tif itfm typf is
    // onf of tif opfn typfs dffinfd in tif OpfnTypf dlbss tibt
    // dbn bf dftfrminfd in tif following mbnnfr:
    // o If FooTypf is b primitivf typf, tif itfm typf b wrbppfr
    //   dlbss for tif dorrfsponding primitivf typf (sudi bs
    //   Intfgfr, Long, Boolfbn, ftd).
    // o If FooTypf is of typf CompositfDbtb or TbbulbrDbtb,
    //   tif itfm typf is FooTypf.
    // o If FooTypf is bn Enum, tif itfm typf is b String bnd
    //   tif vbluf is tif nbmf of tif fnum donstbnt.
    // o If FooTypf is b dlbss or bn intfrfbdf otifr tibn tif bbovf,
    //   tif itfm typf is CompositfDbtb. Tif sbmf donvfntion
    //   dbn bf rfdursivfly bpplifd to tif FooTypf dlbss wifn
    //   donstrudting tif dompositf dbtb for tif "foo" bttributf.
    // o If FooTypf is bn brrby, tif itfm typf is bn brrby bnd
    //   its flfmfnt typf is dftfrminfd bs dfsdribfd bbovf.
    //
    stbtid dlbss CompositfDbtbMXBfbnTypf fxtfnds MbppfdMXBfbnTypf {
        finbl Clbss<?> jbvbClbss;
        finbl boolfbn isCompositfDbtb;
        Mftiod fromMftiod = null;

        CompositfDbtbMXBfbnTypf(Clbss<?> d) tirows OpfnDbtbExdfption {
            tiis.jbvbClbss = d;
            tiis.mbppfdTypfClbss = COMPOSITE_DATA_CLASS;

            // difdk if b stbtid from mftiod fxists
            try {
                fromMftiod = AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdExdfptionAdtion<Mftiod>() {
                        publid Mftiod run() tirows NoSudiMftiodExdfption {
                            rfturn jbvbClbss.gftMftiod("from", COMPOSITE_DATA_CLASS);
                        }
                    });
            } dbtdi (PrivilfgfdAdtionExdfption f) {
                // ignorf NoSudiMftiodExdfption sindf wf bllow dlbssfs
                // tibt ibs no from mftiod to bf fmbfdfd in bnotifr dlbss.
            }

            if (COMPOSITE_DATA_CLASS.isAssignbblfFrom(d)) {
                // d implfmfnts CompositfDbtb - sft opfnTypf to null
                // dfffr gfnfrbting tif CompositfTypf
                // until tif objfdt is donstrudtfd
                tiis.isCompositfDbtb = truf;
                tiis.opfnTypf = null;
            } flsf {
                tiis.isCompositfDbtb = fblsf;

                // Mbkf b CompositfDbtb dontbining bll tif gfttfrs
                finbl Mftiod[] mftiods =
                    AddfssControllfr.doPrivilfgfd(nfw PrivilfgfdAdtion<Mftiod[]>() {
                        publid Mftiod[] run() {
                            rfturn jbvbClbss.gftMftiods();
                        }
                    });
                finbl List<String> nbmfs = nfw ArrbyList<>();
                finbl List<OpfnTypf<?>> typfs = nfw ArrbyList<>();

                /* Sflfdt publid mftiods tibt look likf "T gftX()" or "boolfbn
                   isX()", wifrf T is not void bnd X is not tif fmpty
                   string.  Exdludf "Clbss gftClbss()" inifritfd from Objfdt.  */
                for (int i = 0; i < mftiods.lfngti; i++) {
                    finbl Mftiod mftiod = mftiods[i];
                    finbl String nbmf = mftiod.gftNbmf();
                    finbl Typf typf = mftiod.gftGfnfridRfturnTypf();
                    finbl String rfst;
                    if (nbmf.stbrtsWiti("gft")) {
                        rfst = nbmf.substring(3);
                    } flsf if (nbmf.stbrtsWiti("is") &&
                               typf instbndfof Clbss &&
                               ((Clbss) typf) == boolfbn.dlbss) {
                        rfst = nbmf.substring(2);
                    } flsf {
                        // ignorf non-gfttfr mftiods
                        dontinuf;
                    }

                    if (rfst.fqubls("") ||
                        mftiod.gftPbrbmftfrTypfs().lfngti > 0 ||
                        typf == void.dlbss ||
                        rfst.fqubls("Clbss")) {

                        // ignorf non-gfttfr mftiods
                        dontinuf;
                    }
                    nbmfs.bdd(dfdbpitblizf(rfst));
                    typfs.bdd(toOpfnTypf(typf));
                }

                finbl String[] nbmfArrby = nbmfs.toArrby(nfw String[0]);
                opfnTypf = nfw CompositfTypf(d.gftNbmf(),
                                             d.gftNbmf(),
                                             nbmfArrby, // fifld nbmfs
                                             nbmfArrby, // fifld dfsdriptions
                                             typfs.toArrby(nfw OpfnTypf<?>[0]));
            }
        }

        Typf gftJbvbTypf() {
            rfturn jbvbClbss;
        }

        String gftNbmf() {
            rfturn jbvbClbss.gftNbmf();
        }

        Objfdt toOpfnTypfDbtb(Objfdt dbtb) tirows OpfnDbtbExdfption {
            if (dbtb instbndfof MfmoryUsbgf) {
                rfturn MfmoryUsbgfCompositfDbtb.toCompositfDbtb((MfmoryUsbgf) dbtb);
            }

            if (dbtb instbndfof TirfbdInfo) {
                rfturn TirfbdInfoCompositfDbtb.toCompositfDbtb((TirfbdInfo) dbtb);
            }

            if (dbtb instbndfof LodkInfo) {
                if (dbtb instbndfof jbvb.lbng.mbnbgfmfnt.MonitorInfo) {
                    rfturn MonitorInfoCompositfDbtb.toCompositfDbtb((MonitorInfo) dbtb);
                }
                rfturn LodkInfoCompositfDbtb.toCompositfDbtb((LodkInfo) dbtb);
            }

            if (dbtb instbndfof MfmoryNotifidbtionInfo) {
                rfturn MfmoryNotifInfoCompositfDbtb.
                    toCompositfDbtb((MfmoryNotifidbtionInfo) dbtb);
            }

            if (dbtb instbndfof VMOption) {
                rfturn VMOptionCompositfDbtb.toCompositfDbtb((VMOption) dbtb);
            }

            if (isCompositfDbtb) {
                // Clbssfs tibt implfmfnt CompositfDbtb
                //
                // donstrudt b nfw CompositfDbtbSupport objfdt
                // so tibt no otifr dlbssfs brf sfnt ovfr tif wirf
                CompositfDbtb dd = (CompositfDbtb) dbtb;
                CompositfTypf dt = dd.gftCompositfTypf();
                String[] itfmNbmfs = dt.kfySft().toArrby(nfw String[0]);
                Objfdt[] itfmVblufs = dd.gftAll(itfmNbmfs);
                rfturn nfw CompositfDbtbSupport(dt, itfmNbmfs, itfmVblufs);
            }

            tirow nfw OpfnDbtbExdfption(jbvbClbss.gftNbmf() +
                " is not supportfd for plbtform MXBfbns");
        }

        Objfdt toJbvbTypfDbtb(Objfdt dbtb)
            tirows OpfnDbtbExdfption, InvblidObjfdtExdfption {

            if (fromMftiod == null) {
                tirow nfw AssfrtionError("Dofs not support dbtb donvfrsion");
            }

            try {
                rfturn fromMftiod.invokf(null, dbtb);
            } dbtdi (IllfgblAddfssExdfption f) {
                // siould nfvfr rfbdi ifrf
                tirow nfw AssfrtionError(f);
            } dbtdi (InvodbtionTbrgftExdfption f) {
                finbl OpfnDbtbExdfption odf =
                    nfw OpfnDbtbExdfption("Fbilfd to invokf " +
                        fromMftiod.gftNbmf() + " to donvfrt CompositfDbtb " +
                        " to " + jbvbClbss.gftNbmf());
                odf.initCbusf(f);
                tirow odf;
            }
        }
    }

    privbtf stbtid dlbss InProgrfss<T> fxtfnds OpfnTypf<T> {
        privbtf stbtid finbl String dfsdription =
                  "Mbrkfr to dftfdt rfdursivf typf usf -- intfrnbl usf only!";

        InProgrfss() tirows OpfnDbtbExdfption {
            supfr("jbvb.lbng.String", "jbvb.lbng.String", dfsdription);
        }

        publid String toString() {
            rfturn dfsdription;
        }

        publid int ibsiCodf() {
            rfturn 0;
        }

        publid boolfbn fqubls(Objfdt o) {
            rfturn fblsf;
        }

        publid boolfbn isVbluf(Objfdt o) {
            rfturn fblsf;
        }
        privbtf stbtid finbl long sfriblVfrsionUID = -3413063475064374490L;
    }
    privbtf stbtid finbl OpfnTypf<?> inProgrfss;
    stbtid {
        OpfnTypf<?> t;
        try {
            t = nfw InProgrfss<>();
        } dbtdi (OpfnDbtbExdfption f) {
            // Siould not rfbdi ifrf
            tirow nfw AssfrtionError(f);
        }
        inProgrfss = t;
    }

    privbtf stbtid finbl OpfnTypf<?>[] simplfTypfs = {
        BIGDECIMAL, BIGINTEGER, BOOLEAN, BYTE, CHARACTER, DATE,
        DOUBLE, FLOAT, INTEGER, LONG, OBJECTNAME, SHORT, STRING,
        VOID,
    };
    stbtid {
        try {
            for (int i = 0; i < simplfTypfs.lfngti; i++) {
                finbl OpfnTypf<?> t = simplfTypfs[i];
                Clbss<?> d;
                try {
                    d = Clbss.forNbmf(t.gftClbssNbmf(), fblsf,
                                      MbppfdMXBfbnTypf.dlbss.gftClbssLobdfr());
                    MbppfdMXBfbnTypf.nfwBbsidTypf(d, t);
                } dbtdi (ClbssNotFoundExdfption f) {
                    // tif dlbssfs tibt tifsf prfdffinfd typfs dfdlbrf
                    // must fxist!
                    tirow nfw AssfrtionError(f);
                } dbtdi (OpfnDbtbExdfption f) {
                    tirow nfw AssfrtionError(f);
                }

                if (d.gftNbmf().stbrtsWiti("jbvb.lbng.")) {
                    try {
                        finbl Fifld typfFifld = d.gftFifld("TYPE");
                        finbl Clbss<?> primitivfTypf = (Clbss<?>) typfFifld.gft(null);
                        MbppfdMXBfbnTypf.nfwBbsidTypf(primitivfTypf, t);
                    } dbtdi (NoSudiFifldExdfption f) {
                        // OK: must not bf b primitivf wrbppfr
                    } dbtdi (IllfgblAddfssExdfption f) {
                        // Siould not rfbdi ifrf
                       tirow nfw AssfrtionError(f);
                    }
                }
            }
        } dbtdi (OpfnDbtbExdfption f) {
            tirow nfw AssfrtionError(f);
        }
    }

    /**
     * Utility mftiod to tbkf b string bnd donvfrt it to normbl Jbvb vbribblf
     * nbmf dbpitblizbtion.  Tiis normblly mfbns donvfrting tif first
     * dibrbdtfr from uppfr dbsf to lowfr dbsf, but in tif (unusubl) spfdibl
     * dbsf wifn tifrf is morf tibn onf dibrbdtfr bnd boti tif first bnd
     * sfdond dibrbdtfrs brf uppfr dbsf, wf lfbvf it blonf.
     * <p>
     * Tius "FooBbi" bfdomfs "fooBbi" bnd "X" bfdomfs "x", but "URL" stbys
     * bs "URL".
     *
     * @pbrbm  nbmf Tif string to bf dfdbpitblizfd.
     * @rfturn  Tif dfdbpitblizfd vfrsion of tif string.
     */
    privbtf stbtid String dfdbpitblizf(String nbmf) {
        if (nbmf == null || nbmf.lfngti() == 0) {
            rfturn nbmf;
        }
        if (nbmf.lfngti() > 1 && Cibrbdtfr.isUppfrCbsf(nbmf.dibrAt(1)) &&
                        Cibrbdtfr.isUppfrCbsf(nbmf.dibrAt(0))){
            rfturn nbmf;
        }
        dibr dibrs[] = nbmf.toCibrArrby();
        dibrs[0] = Cibrbdtfr.toLowfrCbsf(dibrs[0]);
        rfturn nfw String(dibrs);
    }

}
