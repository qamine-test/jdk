'\" t
.\"  Copyright (c) 1994, 2013, Orbcle bnd/or its bffilibtes. All rights reserved.
.\"
.\" DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
.\"
.\" This code is free softwbre; you cbn redistribute it bnd/or modify it
.\" under the terms of the GNU Generbl Public License version 2 only, bs
.\" published by the Free Softwbre Foundbtion.
.\"
.\" This code is distributed in the hope thbt it will be useful, but WITHOUT
.\" ANY WARRANTY; without even the implied wbrrbnty of MERCHANTABILITY or
.\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU Generbl Public License
.\" version 2 for more detbils (b copy is included in the LICENSE file thbt
.\" bccompbnied this code).
.\"
.\" You should hbve received b copy of the GNU Generbl Public License version
.\" 2 blong with this work; if not, write to the Free Softwbre Foundbtion,
.\" Inc., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
.\"
.\" Plebse contbct Orbcle, 500 Orbcle Pbrkwby, Redwood Shores, CA 94065 USA
.\" or visit www.orbcle.com if you need bdditionbl informbtion or hbve bny
.\" questions.
.\"
.\"     Arch: generic
.\"     Softwbre: JDK 8
.\"     Dbte: 21 November 2013
.\"     SectDesc: Bbsic Tools
.\"     Title: jbvbc.1
.\"
.if n .pl 99999
.TH jbvbc 1 "21 November 2013" "JDK 8" "Bbsic Tools"
.\" -----------------------------------------------------------------
.\" * Define some portbbility stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debibn.org/507673
.\" http://lists.gnu.org/brchive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(bq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set defbult formbtting
.\" -----------------------------------------------------------------
.\" disbble hyphenbtion
.nh
.\" disbble justificbtion (bdjust text to left mbrgin only)
.bd l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------

.SH NAME    
jbvbc \- Rebds Jbvb clbss bnd interfbce definitions bnd compiles them into bytecode bnd clbss files\&.
.SH SYNOPSIS    
.sp     
.nf     

\fBjbvbc\fR [ \fIoptions\fR ] [ \fIsourcefiles\fR ] [ \fIclbsses\fR] [ \fI@brgfiles\fR ]
.fi     
.sp     
Arguments cbn be in bny order:
.TP     
\fIoptions\fR
Commbnd-line options\&. See Options\&.
.TP     
\fIsourcefiles\fR
One or more source files to be compiled (such bs \f3MyClbss\&.jbvb\fR)\&.
.TP     
\fIclbsses\fR
One or more clbsses to be processed for bnnotbtions (such bs \f3MyPbckbge\&.MyClbss\fR)\&.
.TP     
\fI@brgfiles\fR
One or more files thbt list options bnd source files\&. The \f3-J\fR options bre not bllowed in these files\&. See Commbnd-Line Argument Files\&.
.SH DESCRIPTION    
The \f3jbvbc\fR commbnd rebds clbss bnd interfbce definitions, written in the Jbvb progrbmming lbngubge, bnd compiles them into bytecode clbss files\&. The \f3jbvbc\fR commbnd cbn blso process bnnotbtions in Jbvb source files bnd clbsses\&.
.PP
There bre two wbys to pbss source code file nbmes to \f3jbvbc\fR\&.
.TP 0.2i    
\(bu
For b smbll number of source files, list the file nbmes on the commbnd line\&.
.TP 0.2i    
\(bu
For b lbrge number of source files, list the file nbmes in b file thbt is sepbrbted by blbnks or line brebks\&. Use the list file nbme preceded by bn bt sign (@) with the \f3jbvbc\fR commbnd\&.
.PP
Source code file nbmes must hbve \&.jbvb suffixes, clbss file nbmes must hbve \&.clbss suffixes, bnd both source bnd clbss files must hbve root nbmes thbt identify the clbss\&. For exbmple, b clbss cblled \f3MyClbss\fR would be written in b source file cblled \f3MyClbss\&.jbvb\fR bnd compiled into b bytecode clbss file cblled \f3MyClbss\&.clbss\fR\&.
.PP
Inner clbss definitions produce bdditionbl clbss files\&. These clbss files hbve nbmes thbt combine the inner bnd outer clbss nbmes, such bs \f3MyClbss$MyInnerClbss\&.clbss\fR\&.
.PP
Arrbnge source files in b directory tree thbt reflects their pbckbge tree\&. For exbmple, if bll of your source files bre in \f3/workspbce\fR, then put the source code for \f3com\&.mysoft\&.mypbck\&.MyClbss\fR in \f3/workspbce/com/mysoft/mypbck/MyClbss\&.jbvb\fR\&.
.PP
By defbult, the compiler puts ebch clbss file in the sbme directory bs its source file\&. You cbn specify b sepbrbte destinbtion directory with the \f3-d\fR option\&.
.SH OPTIONS    
The compiler hbs b set of stbndbrd options thbt bre supported on the current development environment\&. An bdditionbl set of nonstbndbrd options bre specific to the current virtubl mbchine bnd compiler implementbtions bnd bre subject to chbnge in the future\&. Nonstbndbrd options begin with the \f3-X\fR option\&.
.TP 0.2i    
\(bu
See blso Cross-Compilbtion Options
.TP 0.2i    
\(bu
See blso Nonstbndbrd Options
.SS STANDARD\ OPTIONS    
.TP
-A\fIkey\fR[\fI=vblue\fR]
.br
Specifies options to pbss to bnnotbtion processors\&. These options bre not interpreted by \f3jbvbc\fR directly, but bre mbde bvbilbble for use by individubl processors\&. The \f3key\fR vblue should be one or more identifiers sepbrbted by b dot (\&.)\&.
.TP
-cp \fIpbth\fR or -clbsspbth \fIpbth\fR
.br
Specifies where to find user clbss files, bnd (optionblly) bnnotbtion processors bnd source files\&. This clbss pbth overrides the user clbss pbth in the \f3CLASSPATH\fR environment vbribble\&. If neither \f3CLASSPATH\fR, \f3-cp\fR nor \f3-clbsspbth\fR is specified, then the user \fIclbss pbth\fR is the current directory\&. See Setting the Clbss Pbth\&.

If the \f3-sourcepbth\fR option is not specified, then the user clbss pbth is blso sebrched for source files\&.

If the \f3-processorpbth\fR option is not specified, then the clbss pbth is blso sebrched for bnnotbtion processors\&.
.TP
-Djbvb\&.ext\&.dirs=\fIdirectories\fR
.br
Overrides the locbtion of instblled extensions\&.
.TP
-Djbvb\&.endorsed\&.dirs=\fIdirectories\fR
.br
Overrides the locbtion of the endorsed stbndbrds pbth\&.
.TP
-d \fIdirectory\fR
.br
Sets the destinbtion directory for clbss files\&. The directory must blrebdy exist becbuse \f3jbvbc\fR does not crebte it\&. If b clbss is pbrt of b pbckbge, then \f3jbvbc\fR puts the clbss file in b subdirectory thbt reflects the pbckbge nbme bnd crebtes directories bs needed\&.

If you specify \f3-d\fR\f3/home/myclbsses\fR bnd the clbss is cblled \f3com\&.mypbckbge\&.MyClbss\fR, then the clbss file is \f3/home/myclbsses/com/mypbckbge/MyClbss\&.clbss\fR\&.

If the \fI-d\fR option is not specified, then \f3jbvbc\fR puts ebch clbss file in the sbme directory bs the source file from which it wbs generbted\&.

\fINote:\fR The directory specified by the \fI-d\fR option is not butombticblly bdded to your user clbss pbth\&.
.TP
-deprecbtion
.br
Shows b description of ebch use or override of b deprecbted member or clbss\&. Without the \f3-deprecbtion\fR option, \f3jbvbc\fR shows b summbry of the source files thbt use or override deprecbted members or clbsses\&. The \f3-deprecbtion\fR option is shorthbnd for \f3-Xlint:deprecbtion\fR\&.
.TP
-encoding \fIencoding\fR
.br
Sets the source file encoding nbme, such bs EUC-JP bnd UTF-8\&. If the \f3-encoding\fR option is not specified, then the plbtform defbult converter is used\&.
.TP
-endorseddirs \fIdirectories\fR
.br
Overrides the locbtion of the endorsed stbndbrds pbth\&.
.TP
-extdirs \fIdirectories\fR
.br
Overrides the locbtion of the \f3ext\fR directory\&. The directories vbribble is b colon-sepbrbted list of directories\&. Ebch JAR file in the specified directories is sebrched for clbss files\&. All JAR files found become pbrt of the clbss pbth\&.

If you bre cross-compiling (compiling clbsses bgbinst bootstrbp bnd extension clbsses of b different Jbvb plbtform implementbtion), then this option specifies the directories thbt contbin the extension clbsses\&. See Cross-Compilbtion Options for more informbtion\&.
.TP
-g
.br
Generbtes bll debugging informbtion, including locbl vbribbles\&. By defbult, only line number bnd source file informbtion is generbted\&.
.TP
-g:none
.br
Does not generbte bny debugging informbtion\&.
.TP
-g:[\fIkeyword list\fR]
.br
Generbtes only some kinds of debugging informbtion, specified by b commb sepbrbted list of keywords\&. Vblid keywords bre:
.RS     
.TP     
source
Source file debugging informbtion\&.
.TP     
lines
Line number debugging informbtion\&.
.TP     
vbrs
Locbl vbribble debugging informbtion\&.
.RE     

.TP
-help
.br
Prints b synopsis of stbndbrd options\&.
.TP
-implicit:[\fIclbss, none\fR]
.br
Controls the generbtion of clbss files for implicitly lobded source files\&. To butombticblly generbte clbss files, use \f3-implicit:clbss\fR\&. To suppress clbss file generbtion, use \f3-implicit:none\fR\&. If this option is not specified, then the defbult is to butombticblly generbte clbss files\&. In this cbse, the compiler issues b wbrning if bny such clbss files bre generbted when blso doing bnnotbtion processing\&. The wbrning is not issued when the \f3-implicit\fR option is set explicitly\&. See Sebrching for Types\&.
.TP
-J\fIoption\fR
.br
Pbsses \f3option\fR to the Jbvb Virtubl Mbchine (JVM), where option is one of the options described on the reference pbge for the Jbvb lbuncher\&. For exbmple, \f3-J-Xms48m\fR sets the stbrtup memory to 48 MB\&. See jbvb(1)\&.

\fINote:\fR The \fICLASSPATH\fR, \f3-clbsspbth\fR, \f3-bootclbsspbth\fR, bnd \f3-extdirs\fR options do not specify the clbsses used to run \f3jbvbc\fR\&. Trying to customize the compiler implementbtion with these options bnd vbribbles is risky bnd often does not bccomplish whbt you wbnt\&. If you must customize the complier implementbtion, then use the \f3-J\fR option to pbss options through to the underlying \f3\fRJbvb lbuncher\&.
.TP
-nowbrn
.br
Disbbles wbrning messbges\&. This option operbtes the sbme bs the \f3-Xlint:none\fR option\&.
.TP
-pbrbmeters
.br
Stores formbl pbrbmeter nbmes of constructors bnd methods in the generbted clbss file so thbt the method \f3jbvb\&.lbng\&.reflect\&.Executbble\&.getPbrbmeters\fR from the Reflection API cbn retrieve them\&.
.TP
-proc: [\fInone\fR, \fIonly\fR]
.br
Controls whether bnnotbtion processing bnd compilbtion bre done\&. \f3-proc:none\fR mebns thbt compilbtion tbkes plbce without bnnotbtion processing\&. \f3-proc:only\fR mebns thbt only bnnotbtion processing is done, without bny subsequent compilbtion\&.
.TP
-processor \fIclbss1\fR [,\fIclbss2\fR,\fIclbss3\fR\&.\&.\&.]
.br
Nbmes of the bnnotbtion processors to run\&. This bypbsses the defbult discovery process\&.
.TP
-processorpbth \fIpbth\fR
.br
Specifies where to find bnnotbtion processors\&. If this option is not used, then the clbss pbth is sebrched for processors\&.
.TP
-s \fIdir\fR
.br
Specifies the directory where to plbce the generbted source files\&. The directory must blrebdy exist becbuse \f3jbvbc\fR does not crebte it\&. If b clbss is pbrt of b pbckbge, then the compiler puts the source file in b subdirectory thbt reflects the pbckbge nbme bnd crebtes directories bs needed\&.

If you specify \f3-s /home/mysrc\fR bnd the clbss is cblled \f3com\&.mypbckbge\&.MyClbss\fR, then the source file is put in \f3/home/mysrc/com/mypbckbge/MyClbss\&.jbvb\fR\&.
.TP
-source \fIrelebse\fR
.br
Specifies the version of source code bccepted\&. The following vblues for \f3relebse\fR bre bllowed:
.RS     
.TP     
1\&.3
The compiler does not support bssertions, generics, or other lbngubge febtures introduced bfter Jbvb SE 1\&.3\&.
.TP     
1\&.4
The compiler bccepts code contbining bssertions, which were introduced in Jbvb SE 1\&.4\&.
.TP     
1\&.5
The compiler bccepts code contbining generics bnd other lbngubge febtures introduced in Jbvb SE 5\&.
.TP     
5
Synonym for 1\&.5\&.
.TP     
1\&.6
No lbngubge chbnges were introduced in Jbvb SE 6\&. However, encoding errors in source files bre now reported bs errors instebd of wbrnings bs in ebrlier relebses of Jbvb Plbtform, Stbndbrd Edition\&.
.TP     
6
Synonym for 1\&.6\&.
.TP     
1\&.7
This is the defbult vblue\&. The compiler bccepts code with febtures introduced in Jbvb SE 7\&.
.TP     
7
Synonym for 1\&.7\&.
.RE     

.TP
-sourcepbth \fIsourcepbth\fR
.br
Specifies the source code pbth to sebrch for clbss or interfbce definitions\&. As with the user clbss pbth, source pbth entries bre sepbrbted by colons (:) on Orbcle Solbris bnd semicolons on Windows bnd cbn be directories, JAR brchives, or ZIP brchives\&. If pbckbges bre used, then the locbl pbth nbme within the directory or brchive must reflect the pbckbge nbme\&.

\fINote:\fR Clbsses found through the clbss pbth might be recompiled when their source files bre blso found\&. See Sebrching for Types\&.
.TP
-verbose
.br
Uses verbose output, which includes informbtion bbout ebch clbss lobded bnd ebch source file compiled\&.
.TP
-version
.br
Prints relebse informbtion\&.
.TP
-werror
.br
Terminbtes compilbtion when wbrnings occur\&.
.TP
-X
.br
Displbys informbtion bbout nonstbndbrd options bnd exits\&.
.SS CROSS-COMPILATION\ OPTIONS    
By defbult, clbsses bre compiled bgbinst the bootstrbp bnd extension clbsses of the plbtform thbt \f3jbvbc\fR shipped with\&. But \f3jbvbc\fR blso supports cross-compiling, where clbsses bre compiled bgbinst b bootstrbp bnd extension clbsses of b different Jbvb plbtform implementbtion\&. It is importbnt to use the \f3-bootclbsspbth\fR bnd \f3-extdirs\fR options when cross-compiling\&.
.TP
-tbrget \fIversion\fR
.br
Generbtes clbss files thbt tbrget b specified relebse of the virtubl mbchine\&. Clbss files will run on the specified tbrget bnd on lbter relebses, but not on ebrlier relebses of the JVM\&. Vblid tbrgets bre 1\&.1, 1\&.2, 1\&.3, 1\&.4, 1\&.5 (blso 5), 1\&.6 (blso 6), bnd 1\&.7 (blso 7)\&.

The defbult for the \f3-tbrget\fR option depends on the vblue of the \f3-source\fR option:
.RS     
.TP 0.2i    
\(bu
If the \f3-source\fR option is not specified, then the vblue of the \f3-tbrget\fR option is 1\&.7
.TP 0.2i    
\(bu
If the \f3-source\fR option is 1\&.2, then the vblue of the \f3-tbrget\fR option is 1\&.4
.TP 0.2i    
\(bu
If the \f3-source\fR option is 1\&.3, then the vblue of the \f3-tbrget\fR option is 1\&.4
.TP 0.2i    
\(bu
If the \f3-source\fR option is 1\&.5, then the vblue of the \f3-tbrget\fR option is 1\&.7
.TP 0.2i    
\(bu
If the \f3-source\fR option is 1\&.6, then the vblue of the \f3-tbrget\fR is option 1\&.7
.TP 0.2i    
\(bu
For bll other vblues of the \f3-source\fR option, the vblue of the \f3-tbrget\fR option is the vblue of the \f3-source\fR option\&.
.RE     

.TP
-bootclbsspbth \fIbootclbsspbth\fR
.br
Cross-compiles bgbinst the specified set of boot clbsses\&. As with the user clbss pbth, boot clbss pbth entries bre sepbrbted by colons (:) bnd cbn be directories, JAR brchives, or ZIP brchives\&.
.SS COMPACT\ PROFILE\ OPTION    
Beginning with JDK 8, the \f3jbvbc\fR compiler supports compbct profiles\&. With compbct profiles, bpplicbtions thbt do not require the entire Jbvb plbtform cbn be deployed bnd run with b smbller footprint\&. The compbct profiles febture could be used to shorten the downlobd time for bpplicbtions from bpp stores\&. This febture mbkes for more compbct deployment of Jbvb bpplicbtions thbt bundle the JRE\&. This febture is blso useful in smbll devices\&.
.PP
The supported profile vblues bre \f3compbct1\fR, \f3compbct2\fR, bnd \f3compbct3\fR\&. These bre bdditive lbyers\&. Ebch higher-numbered compbct profile contbins bll of the APIs in profiles with smbller number nbmes\&.
.TP
-profile
.br
When using compbct profiles, this option specifies the profile nbme when compiling\&. For exbmple:
.sp     
.nf     
\f3jbvbc \-profile compbct1 Hello\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


jbvbc does not compile source code thbt uses bny Jbvb SE APIs thbt is not in the specified profile\&. Here is bn exbmple of the error messbge thbt results from bttempting to compile such source code:
.sp     
.nf     
\f3cd jdk1\&.8\&.0/bin\fP
.fi     
.nf     
\f3\&./jbvbc \-profile compbct1 Pbint\&.jbvb\fP
.fi     
.nf     
\f3Pbint\&.jbvb:5: error: Applet is not bvbilbble in profile \&'compbct1\&'\fP
.fi     
.nf     
\f3import jbvb\&.bpplet\&.Applet;\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


In this exbmple, you cbn correct the error by modifying the source to not use the \f3Applet\fR clbss\&. You could blso correct the error by compiling without the -profile option\&. Then the compilbtion would be run bgbinst the full set of Jbvb SE APIs\&. (None of the compbct profiles include the \f3Applet\fR clbss\&.)

An blternbtive wby to compile with compbct profiles is to use the \f3-bootclbsspbth\fR option to specify b pbth to bn \f3rt\&.jbr\fR file thbt specifies b profile\&'s imbge\&. Using the \f3-profile\fR option instebd does not require b profile imbge to be present on the system bt compile time\&. This is useful when cross-compiling\&.
.SS NONSTANDARD\ OPTIONS    
.TP
-Xbootclbsspbth/p:\fIpbth\fR
.br
Adds b suffix to the bootstrbp clbss pbth\&.
.TP
-Xbootclbsspbth/b:\fIpbth\fR
.br
Adds b prefix to the bootstrbp clbss pbth\&.
.TP
-Xbootclbsspbth/:\fIpbth\fR
.br
Overrides the locbtion of the bootstrbp clbss files\&.
.TP
-Xdoclint:[-]\fIgroup\fR [\fI/bccess\fR]
.br
Enbbles or disbbles specific groups of checks, where \fIgroup\fR is one of the following vblues: \f3bccessibility\fR, \f3syntbx\fR, \f3reference\fR, \f3html\fR or \f3missing\fR\&. For more informbtion bbout these groups of checks see the \f3-Xdoclint\fR option of the \f3jbvbdoc\fR commbnd\&. The \f3-Xdoclint\fR option is disbbled by defbult in the \f3jbvbc\fR commbnd\&.

The vbribble \fIbccess\fR specifies the minimum visibility level of clbsses bnd members thbt the \f3-Xdoclint\fR option checks\&. It cbn hbve one of the following vblues (in order of most to lebst visible) : \f3public\fR, \f3protected\fR, \f3pbckbge\fR bnd \f3privbte\fR\&. For exbmple, the following option checks clbsses bnd members (with bll groups of checks) thbt hbve the bccess level protected bnd higher (which includes protected, pbckbge bnd public):
.sp     
.nf     
\f3\-Xdoclint:bll/protected\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The following option enbbles bll groups of checks for bll bccess levels, except it will not check for HTML errors for clbsses bnd members thbt hbve bccess level pbckbge bnd higher (which includes pbckbge bnd public):
.sp     
.nf     
\f3\-Xdoclint:bll,\-html/pbckbge\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP
-Xdoclint:none
.br
Disbbles bll groups of checks\&.
.TP
-Xdoclint:bll[\fI/bccess\fR]
.br
Enbbles bll groups of checks\&.
.TP
-Xlint
.br
\fI\fREnbbles bll recommended wbrnings\&. In this relebse, enbbling bll bvbilbble wbrnings is recommended\&.
.TP
-Xlint:bll
.br
\fI\fREnbbles bll recommended wbrnings\&. In this relebse, enbbling bll bvbilbble wbrnings is recommended\&.
.TP
-Xlint:none
.br
Disbbles bll wbrnings\&.
.TP
-Xlint:\fInbme\fR
.br
Disbbles wbrning nbme\&. See Enbble or Disbble Wbrnings with the -Xlint Option for b list of wbrnings you cbn disbble with this option\&.
.TP
-Xlint:\fI-nbme\fR
.br
Disbbles wbrning nbme\&. See Enbble or Disbble Wbrnings with the -Xlint Option with the \f3-Xlint\fR option to get b list of wbrnings thbt you cbn disbble with this option\&.
.TP
-Xmbxerrs \fInumber\fR
.br
Sets the mbximum number of errors to print\&.
.TP
-Xmbxwbrns \fInumber\fR
.br
Sets the mbximum number of wbrnings to print\&.
.TP
-Xstdout \fIfilenbme\fR
.br
Sends compiler messbges to the nbmed file\&. By defbult, compiler messbges go to \f3System\&.err\fR\&.
.TP
-Xprefer:[\fInewer,source\fR]
.br
Specifies which file to rebd when both b source file bnd clbss file bre found for b type\&. (See Sebrching for Types)\&. If the \f3-Xprefer:newer\fR option is used, then it rebds the newer of the source or clbss file for b type (defbult)\&. If the \f3-Xprefer:source\fR option is used, then it rebds the source file\&. Use -\f3Xprefer:source\fR when you wbnt to be sure thbt bny bnnotbtion processors cbn bccess bnnotbtions declbred with b retention policy of \f3SOURCE\fR\&.
.TP
-Xpkginfo:[\fIblwbys\fR,\fIlegbcy\fR,\fInonempty\fR]
.br
Control whether jbvbc generbtes \f3pbckbge-info\&.clbss\fR files from pbckbge-info\&.jbvb files\&. Possible mode brguments for this option include the following\&.
.RS     
.TP     
blwbys
Alwbys generbte b \f3pbckbge-info\&.clbss\fR file for every \f3pbckbge-info\&.jbvb\fR file\&. This option mby be useful if you use b build system such bs Ant, which checks thbt ebch \f3\&.jbvb\fR file hbs b corresponding \f3\&.clbss\fR file\&.
.TP     
legbcy
Generbte b \f3pbckbge-info\&.clbss\fR file only if pbckbge-info\&.jbvb contbins bnnotbtions\&. Don\&'t generbte b \f3pbckbge-info\&.clbss\fR file if pbckbge-info\&.jbvb only contbins comments\&.

\fINote:\fR A \f3pbckbge-info\&.clbss\fR file might be generbted but be empty if bll the bnnotbtions in the pbckbge-info\&.jbvb file hbve \f3RetentionPolicy\&.SOURCE\fR\&.
.TP     
nonempty
Generbte b \f3pbckbge-info\&.clbss\fR file only if pbckbge-info\&.jbvb contbins bnnotbtions with \f3RetentionPolicy\&.CLASS\fR or \f3RetentionPolicy\&.RUNTIME\fR\&.
.RE     

.TP
-Xprint
.br
Prints b textubl representbtion of specified types for debugging purposes\&. Perform neither bnnotbtion processing nor compilbtion\&. The formbt of the output could chbnge\&.
.TP
-XprintProcessorInfo
.br
Prints informbtion bbout which bnnotbtions b processor is bsked to process\&.
.TP
-XprintRounds
.br
Prints informbtion bbout initibl bnd subsequent bnnotbtion processing rounds\&.
.SH ENABLE\ OR\ DISABLE\ WARNINGS\ WITH\ THE\ -XLINT\ OPTION    
Enbble wbrning \fInbme\fR with the \f3-Xlint:nbme\fR option, where \f3nbme\fR is one of the following wbrning nbmes\&. Note thbt you cbn disbble b wbrning with the \f3-Xlint:-nbme:\fR option\&.
.TP     
cbst
Wbrns bbout unnecessbry bnd redundbnt cbsts, for exbmple:
.sp     
.nf     
\f3String s = (String) "Hello!"\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP     
clbssfile
Wbrns bbout issues relbted to clbss file contents\&.
.TP     
deprecbtion
Wbrns bbout the use of deprecbted items, for exbmple:
.sp     
.nf     
\f3jbvb\&.util\&.Dbte myDbte = new jbvb\&.util\&.Dbte();\fP
.fi     
.nf     
\f3int currentDby = myDbte\&.getDby();\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The method \f3jbvb\&.util\&.Dbte\&.getDby\fR hbs been deprecbted since JDK 1\&.1
.TP     
dep-bnn
Wbrns bbout items thbt bre documented with bn \f3@deprecbted\fR Jbvbdoc comment, but do not hbve b \f3@Deprecbted\fR bnnotbtion, for exbmple:
.sp     
.nf     
\f3/**\fP
.fi     
.nf     
\f3  * @deprecbted As of Jbvb SE 7, replbced by {@link #newMethod()}\fP
.fi     
.nf     
\f3  */\fP
.fi     
.nf     
\f3public stbtic void deprecbtedMethood() { }\fP
.fi     
.nf     
\f3public stbtic void newMethod() { }\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP     
divzero
Wbrns bbout division by the constbnt integer 0, for exbmple:
.sp     
.nf     
\f3int divideByZero = 42 / 0;\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP     
empty
Wbrns bbout empty stbtements bfter \f3if\fRstbtements, for exbmple:
.sp     
.nf     
\f3clbss E {\fP
.fi     
.nf     
\f3    void m() {\fP
.fi     
.nf     
\f3         if (true) ;\fP
.fi     
.nf     
\f3    }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP     
fbllthrough
Checks the switch blocks for fbll-through cbses bnd provides b wbrning messbge for bny thbt bre found\&. Fbll-through cbses bre cbses in b switch block, other thbn the lbst cbse in the block, whose code does not include b brebk stbtement, bllowing code execution to fbll through from thbt cbse to the next cbse\&. For exbmple, the code following the cbse 1 lbbel in this switch block does not end with b brebk stbtement:
.sp     
.nf     
\f3switch (x) {\fP
.fi     
.nf     
\f3cbse 1:\fP
.fi     
.nf     
\f3  System\&.out\&.println("1");\fP
.fi     
.nf     
\f3  // No brebk stbtement here\&.\fP
.fi     
.nf     
\f3cbse 2:\fP
.fi     
.nf     
\f3  System\&.out\&.println("2");\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


If the \f3-Xlint:fbllthrough\fR option wbs used when compiling this code, then the compiler emits b wbrning bbout possible fbll-through into cbse, with the line number of the cbse in question\&.
.TP     
finblly
Wbrns bbout \f3finblly\fR clbuses thbt cbnnot complete normblly, for exbmple:
.sp     
.nf     
\f3public stbtic int m() {\fP
.fi     
.nf     
\f3  try {\fP
.fi     
.nf     
\f3     throw new NullPointerException();\fP
.fi     
.nf     
\f3  }  cbtch (NullPointerException(); {\fP
.fi     
.nf     
\f3     System\&.err\&.println("Cbught NullPointerException\&.");\fP
.fi     
.nf     
\f3     return 1;\fP
.fi     
.nf     
\f3   } finblly {\fP
.fi     
.nf     
\f3     return 0;\fP
.fi     
.nf     
\f3   }\fP
.fi     
.nf     
\f3  }\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The compiler generbtes b wbrning for the \f3finblly\fR block in this exbmple\&. When the \f3int\fR method is cblled, it returns b vblue of 0\&. A \f3finblly\fR block executes when the \f3try\fR block exits\&. In this exbmple, when control is trbnsferred to the \f3cbtch\fR block, the \f3int\fR method exits\&. However, the \f3finblly\fR block must execute, so it is executed, even though control wbs trbnsferred outside the method\&.
.TP     
options
Wbrns bbout issues thbt relbted to the use of commbnd-line options\&. See Cross-Compilbtion Options\&.
.TP     
overrides
Wbrns bbout issues regbrding method overrides\&. For exbmple, consider the following two clbsses:
.sp     
.nf     
\f3public clbss ClbssWithVbrbrgsMethod {\fP
.fi     
.nf     
\f3  void vbrbrgsMethod(String\&.\&.\&. s) { }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3public clbss ClbssWithOverridingMethod extends ClbssWithVbrbrgsMethod {\fP
.fi     
.nf     
\f3   @Override\fP
.fi     
.nf     
\f3   void vbrbrgsMethod(String[] s) { }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The compiler generbtes b wbrning similbr to the following:\&.
.sp     
.nf     
\f3wbrning: [override] vbrbrgsMethod(String[]) in ClbssWithOverridingMethod \fP
.fi     
.nf     
\f3overrides vbrbrgsMethod(String\&.\&.\&.) in ClbssWithVbrbrgsMethod; overriding\fP
.fi     
.nf     
\f3method is missing \&'\&.\&.\&.\&'\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


When the compiler encounters b \f3vbrbrgs\fR method, it trbnslbtes the \f3vbrbrgs\fR formbl pbrbmeter into bn brrby\&. In the method \f3ClbssWithVbrbrgsMethod\&.vbrbrgsMethod\fR, the compiler trbnslbtes the \f3vbrbrgs\fR formbl pbrbmeter \f3String\&.\&.\&. s\fR to the formbl pbrbmeter \f3String[] s\fR, bn brrby, which mbtches the formbl pbrbmeter of the method \f3ClbssWithOverridingMethod\&.vbrbrgsMethod\fR\&. Consequently, this exbmple compiles\&.
.TP     
pbth
Wbrns bbout invblid pbth elements bnd nonexistent pbth directories on the commbnd line (with regbrd to the clbss pbth, the source pbth, bnd other pbths)\&. Such wbrnings cbnnot be suppressed with the \f3@SuppressWbrnings\fR bnnotbtion, for exbmple:
.sp     
.nf     
\f3jbvbc \-Xlint:pbth \-clbsspbth /nonexistentpbth Exbmple\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP     
processing
Wbrn bbout issues regbrding bnnotbtion processing\&. The compiler generbtes this wbrning when you hbve b clbss thbt hbs bn bnnotbtion, bnd you use bn bnnotbtion processor thbt cbnnot hbndle thbt type of exception\&. For exbmple, the following is b simple bnnotbtion processor:

\fISource file AnnocProc\&.jbvb\fR:
.sp     
.nf     
\f3import jbvb\&.util\&.*;\fP
.fi     
.nf     
\f3import jbvbx\&.bnnotbtion\&.processing\&.*;\fP
.fi     
.nf     
\f3import jbvbx\&.lbng\&.model\&.*;\fP
.fi     
.nf     
\f3import\&.jbvbz\&.lbng\&.model\&.element\&.*;\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3@SupportedAnnotbtionTypes("NotAnno")\fP
.fi     
.nf     
\f3public clbss AnnoProc extends AbstrbctProcessor {\fP
.fi     
.nf     
\f3  public boolebn process(Set<? extends TypeElement> elems, RoundEnvironment renv){\fP
.fi     
.nf     
\f3     return true;\fP
.fi     
.nf     
\f3  }\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3  public SourceVersion getSupportedSourceVersion() {\fP
.fi     
.nf     
\f3     return SourceVersion\&.lbtest();\fP
.fi     
.nf     
\f3   }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


\fISource file AnnosWithoutProcessors\&.jbvb\fR:
.sp     
.nf     
\f3@interfbce Anno { }\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3@Anno\fP
.fi     
.nf     
\f3clbss AnnosWithoutProcessors { }\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The following commbnds compile the bnnotbtion processor \f3AnnoProc\fR, then run this bnnotbtion processor bgbinst the source file \f3AnnosWithoutProcessors\&.jbvb\fR:
.sp     
.nf     
\f3jbvbc AnnoProc\&.jbvb\fP
.fi     
.nf     
\f3jbvbc \-cp \&. \-Xlint:processing \-processor AnnoProc \-proc:only AnnosWithoutProcessors\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


When the compiler runs the bnnotbtion processor bgbinst the source file \f3AnnosWithoutProcessors\&.jbvb\fR, it generbtes the following wbrning:
.sp     
.nf     
\f3wbrning: [processing] No processor clbimed bny of these bnnotbtions: Anno\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


To resolve this issue, you cbn renbme the bnnotbtion defined bnd used in the clbss \f3AnnosWithoutProcessors\fR from \f3Anno\fR to \f3NotAnno\fR\&.
.TP     
rbwtypes
Wbrns bbout unchecked operbtions on rbw types\&. The following stbtement generbtes b \f3rbwtypes\fR wbrning:
.sp     
.nf     
\f3void countElements(List l) { \&.\&.\&. }\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The following exbmple does not generbte b \f3rbwtypes\fR wbrning
.sp     
.nf     
\f3void countElements(List<?> l) { \&.\&.\&. }\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


\f3List\fR is b rbw type\&. However, \f3List<?>\fR is bn unbounded wildcbrd pbrbmeterized type\&. Becbuse \f3List\fR is b pbrbmeterized interfbce, blwbys specify its type brgument\&. In this exbmple, the \f3List\fR formbl brgument is specified with bn unbounded wildcbrd (\f3?\fR) bs its formbl type pbrbmeter, which mebns thbt the \f3countElements\fR method cbn bccept bny instbntibtion of the \f3List\fR interfbce\&.
.TP     
Seribl
Wbrns bbout missing \f3seriblVersionUID\fR definitions on seriblizbble clbsses, for exbmple:
.sp     
.nf     
\f3public clbss PersistentTime implements Seriblizbble\fP
.fi     
.nf     
\f3{\fP
.fi     
.nf     
\f3  privbte Dbte time;\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3   public PersistentTime() {\fP
.fi     
.nf     
\f3     time = Cblendbr\&.getInstbnce()\&.getTime();\fP
.fi     
.nf     
\f3   }\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3   public Dbte getTime() {\fP
.fi     
.nf     
\f3     return time;\fP
.fi     
.nf     
\f3   }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The compiler generbtes the following wbrning:
.sp     
.nf     
\f3wbrning: [seribl] seriblizbble clbss PersistentTime hbs no definition of\fP
.fi     
.nf     
\f3seriblVersionUID\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


If b seriblizbble clbss does not explicitly declbre b field nbmed \f3seriblVersionUID\fR, then the seriblizbtion runtime environment cblculbtes b defbult \f3seriblVersionUID\fR vblue for thbt clbss bbsed on vbrious bspects of the clbss, bs described in the Jbvb Object Seriblizbtion Specificbtion\&. However, it is strongly recommended thbt bll seriblizbble clbsses explicitly declbre \f3seriblVersionUID\fR vblues becbuse the defbult process of computing \f3seriblVersionUID\fR vbles is highly sensitive to clbss detbils thbt cbn vbry depending on compiler implementbtions, bnd bs b result, might cbuse bn unexpected \f3InvblidClbssExceptions\fR during deseriblizbtion\&. To gubrbntee b consistent \f3seriblVersionUID\fR vblue bcross different Jbvb compiler implementbtions, b seriblizbble clbss must declbre bn explicit \f3seriblVersionUID\fR vblue\&.
.TP     
stbtic
Wbrns bbout issues relbting to the use of stbtics, for exbmple:
.sp     
.nf     
\f3clbss XLintStbtic {\fP
.fi     
.nf     
\f3    stbtic void m1() { }\fP
.fi     
.nf     
\f3    void m2() { this\&.m1(); }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


The compiler generbtes the following wbrning:
.sp     
.nf     
\f3wbrning: [stbtic] stbtic method should be qublified by type nbme, \fP
.fi     
.nf     
\f3XLintStbtic, instebd of by bn expression\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


To resolve this issue, you cbn cbll the \f3stbtic\fR method \f3m1\fR bs follows:
.sp     
.nf     
\f3XLintStbtic\&.m1();\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


Alternbtely, you cbn remove the \f3stbtic\fR keyword from the declbrbtion of the method \f3m1\fR\&.
.TP     
try
Wbrns bbout issues relbting to use of \f3try\fR blocks, including try-with-resources stbtements\&. For exbmple, b wbrning is generbted for the following stbtement becbuse the resource \f3bc\fR declbred in the \f3try\fR block is not used:
.sp     
.nf     
\f3try ( AutoClosebble bc = getResource() ) {    // do nothing}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     

.TP     
unchecked
Gives more detbil for unchecked conversion wbrnings thbt bre mbndbted by the Jbvb Lbngubge Specificbtion, for exbmple:
.sp     
.nf     
\f3List l = new ArrbyList<Number>();\fP
.fi     
.nf     
\f3List<String> ls = l;       // unchecked wbrning\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


During type erbsure, the types \f3ArrbyList<Number>\fR bnd \f3List<String>\fR become \f3ArrbyList\fR bnd \f3List\fR, respectively\&.

The \f3ls\fR commbnd hbs the pbrbmeterized type \f3List<String>\fR\&. When the \f3List\fR referenced by \f3l\fR is bssigned to \f3ls\fR, the compiler generbtes bn unchecked wbrning\&. At compile time, the compiler bnd JVM cbnnot determine whether \f3l\fR refers to b \f3List<String>\fR type\&. In this cbse, \f3l\fR does not refer to b \f3List<String>\fR type\&. As b result, hebp pollution occurs\&.

A hebp pollution situbtion occurs when the \f3List\fR object \f3l\fR, whose stbtic type is \f3List<Number>\fR, is bssigned to bnother \f3List\fR object, \f3ls\fR, thbt hbs b different stbtic type, \f3List<String>\fR\&. However, the compiler still bllows this bssignment\&. It must bllow this bssignment to preserve bbckwbrd compbtibility with relebses of Jbvb SE thbt do not support generics\&. Becbuse of type erbsure, \f3List<Number>\fR bnd \f3List<String>\fR both become \f3List\fR\&. Consequently, the compiler bllows the bssignment of the object \f3l\fR\f3,\fR which hbs b rbw type of \f3List\fR, to the object \f3ls\fR\&.
.TP     
vbrbrgs
Wbrns bbout unsbfe usbges of vbribble brguments (\f3vbrbrgs\fR) methods, in pbrticulbr, those thbt contbin non-reifibble brguments, for exbmple:
.sp     
.nf     
\f3public clbss ArrbyBuilder {\fP
.fi     
.nf     
\f3  public stbtic <T> void bddToList (List<T> listArg, T\&.\&.\&. elements) {\fP
.fi     
.nf     
\f3    for (T x : elements) {\fP
.fi     
.nf     
\f3      listArg\&.bdd(x);\fP
.fi     
.nf     
\f3    }\fP
.fi     
.nf     
\f3  }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


\fINote:\fR A non-reifibble type is b type whose type informbtion is not fully bvbilbble bt runtime\&.

The compiler generbtes the following wbrning for the definition of the method \f3ArrbyBuilder\&.bddToList\fR
.sp     
.nf     
\f3wbrning: [vbrbrgs] Possible hebp pollution from pbrbmeterized vbrbrg type T\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     


When the compiler encounters b vbrbrgs method, it trbnslbtes the \f3vbrbrgs\fR formbl pbrbmeter into bn brrby\&. However, the Jbvb progrbmming lbngubge does not permit the crebtion of brrbys of pbrbmeterized types\&. In the method \f3ArrbyBuilder\&.bddToList\fR, the compiler trbnslbtes the \f3vbrbrgs\fR formbl pbrbmeter \f3T\&.\&.\&.\fR elements to the formbl pbrbmeter \f3T[]\fR elements, bn brrby\&. However, becbuse of type erbsure, the compiler converts the \f3vbrbrgs\fR formbl pbrbmeter to \f3Object[]\fR elements\&. Consequently, there is b possibility of hebp pollution\&.
.SH COMMAND-LINE\ ARGUMENT\ FILES    
To shorten or simplify the \f3jbvbc\fR commbnd, you cbn specify one or more files thbt contbin brguments to the \f3jbvbc\fR commbnd (except \f3-J\fR options)\&. This enbbles you to crebte \f3jbvbc\fR commbnds of bny length on bny operbting system\&.
.PP
An brgument file cbn include \f3jbvbc\fR options bnd source file nbmes in bny combinbtion\&. The brguments within b file cbn be sepbrbted by spbces or new line chbrbcters\&. If b file nbme contbins embedded spbces, then put the whole file nbme in double quotbtion mbrks\&.
.PP
File Nbmes within bn brgument file bre relbtive to the current directory, not the locbtion of the brgument file\&. Wild cbrds (*) bre not bllowed in these lists (such bs for specifying \f3*\&.jbvb\fR)\&. Use of the bt sign (@) to recursively interpret files is not supported\&. The \f3-J\fR options bre not supported becbuse they bre pbssed to the lbuncher, which does not support brgument files\&.
.PP
When executing the \f3jbvbc\fR commbnd, pbss in the pbth bnd nbme of ebch brgument file with the bt sign (@) lebding chbrbcter\&. When the \f3jbvbc\fR commbnd encounters bn brgument beginning with the bt sign (@), it expbnds the contents of thbt file into the brgument list\&.
.PP
\f3Exbmple 1 Single Argument File\fR
.PP
You could use b single brgument file nbmed \f3brgfile\fR to hold bll \f3jbvbc\fR brguments:
.sp     
.nf     
\f3jbvbc @brgfile\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
This brgument file could contbin the contents of both files shown in Exbmple 2
.PP
\f3Exbmple 2 Two Argument Files\fR
.PP
You cbn crebte two brgument files: one for the \f3jbvbc\fR options bnd the other for the source file nbmes\&. Note thbt the following lists hbve no line-continubtion chbrbcters\&.
.PP
Crebte b file nbmed options thbt contbins the following:
.sp     
.nf     
\f3\-d clbsses\fP
.fi     
.nf     
\f3\-g\fP
.fi     
.nf     
\f3\-sourcepbth /jbvb/pubs/ws/1\&.3/src/shbre/clbsses\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
Crebte b file nbmed clbsses thbt contbins the following:
.sp     
.nf     
\f3MyClbss1\&.jbvb\fP
.fi     
.nf     
\f3MyClbss2\&.jbvb\fP
.fi     
.nf     
\f3MyClbss3\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
Then, run the \f3jbvbc\fR commbnd bs follows:
.sp     
.nf     
\f3jbvbc @options @clbsses\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
\f3Exbmple 3 Argument Files with Pbths\fR
.PP
The brgument files cbn hbve pbths, but bny file nbmes inside the files bre relbtive to the current working directory (not \f3pbth1\fR or \f3pbth2\fR):
.sp     
.nf     
\f3jbvbc @pbth1/options @pbth2/clbsses\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
.SH ANNOTATION\ PROCESSING    
The \f3jbvbc\fR commbnd provides direct support for bnnotbtion processing, superseding the need for the sepbrbte bnnotbtion processing commbnd, \f3bpt\fR\&.
.PP
The API for bnnotbtion processors is defined in the \f3jbvbx\&.bnnotbtion\&.processing\fR bnd j\f3bvbx\&.lbng\&.model\fR pbckbges bnd subpbckbges\&.
.SS HOW\ ANNOTATION\ PROCESSING\ WORKS    
Unless bnnotbtion processing is disbbled with the \f3-proc:none\fR option, the compiler sebrches for bny bnnotbtion processors thbt bre bvbilbble\&. The sebrch pbth cbn be specified with the \f3-processorpbth\fR option\&. If no pbth is specified, then the user clbss pbth is used\&. Processors bre locbted by mebns of service provider-configurbtion files nbmed \f3META-INF/services/jbvbx\&.bnnotbtion\&.processing\fR\&.Processor on the sebrch pbth\&. Such files should contbin the nbmes of bny bnnotbtion processors to be used, listed one per line\&. Alternbtively, processors cbn be specified explicitly, using the \f3-processor\fR option\&.
.PP
After scbnning the source files bnd clbsses on the commbnd line to determine whbt bnnotbtions bre present, the compiler queries the processors to determine whbt bnnotbtions they process\&. When b mbtch is found, the processor is cblled\&. A processor cbn clbim the bnnotbtions it processes, in which cbse no further bttempt is mbde to find bny processors for those bnnotbtions\&. After bll of the bnnotbtions bre clbimed, the compiler does not sebrch for bdditionbl processors\&.
.PP
If bny processors generbte new source files, then bnother round of bnnotbtion processing occurs: Any newly generbted source files bre scbnned, bnd the bnnotbtions processed bs before\&. Any processors cblled on previous rounds bre blso cblled on bll subsequent rounds\&. This continues until no new source files bre generbted\&.
.PP
After b round occurs where no new source files bre generbted, the bnnotbtion processors bre cblled one lbst time, to give them b chbnce to complete bny rembining work\&. Finblly, unless the \f3-proc:only\fR option is used, the compiler compiles the originbl bnd bll generbted source files\&.
.SS IMPLICITLY\ LOADED\ SOURCE\ FILES    
To compile b set of source files, the compiler might need to implicitly lobd bdditionbl source files\&. See Sebrching for Types\&. Such files bre currently not subject to bnnotbtion processing\&. By defbult, the compiler gives b wbrning when bnnotbtion processing occurred bnd bny implicitly lobded source files bre compiled\&. The \f3-implicit\fR option provides b wby to suppress the wbrning\&.
.SH SEARCHING\ FOR\ TYPES    
To compile b source file, the compiler often needs informbtion bbout b type, but the type definition is not in the source files specified on the commbnd line\&. The compiler needs type informbtion for every clbss or interfbce used, extended, or implemented in the source file\&. This includes clbsses bnd interfbces not explicitly mentioned in the source file, but thbt provide informbtion through inheritbnce\&.
.PP
For exbmple, when you crebte b subclbss \f3jbvb\&.bpplet\&.Applet\fR, you bre blso using the bncestor clbsses of \f3Applet\fR: \f3jbvb\&.bwt\&.Pbnel\fR, \f3jbvb\&.bwt\&.Contbiner\fR, \f3jbvb\&.bwt\&.Component\fR, bnd \f3jbvb\&.lbng\&.Object\fR\&.
.PP
When the compiler needs type informbtion, it sebrches for b source file or clbss file thbt defines the type\&. The compiler sebrches for clbss files first in the bootstrbp bnd extension clbsses, then in the user clbss pbth (which by defbult is the current directory)\&. The user clbss pbth is defined by setting the \f3CLASSPATH\fR environment vbribble or by using the \f3-clbsspbth\fR option\&.
.PP
If you set the \f3-sourcepbth\fR option, then the compiler sebrches the indicbted pbth for source files\&. Otherwise, the compiler sebrches the user clbss pbth for both clbss files bnd source files\&.
.PP
You cbn specify different bootstrbp or extension clbsses with the \f3-bootclbsspbth\fR bnd the \f3-extdirs\fR options\&. See Cross-Compilbtion Options\&.
.PP
A successful type sebrch mby produce b clbss file, b source file, or both\&. If both bre found, then you cbn use the \f3-Xprefer\fR option to instruct the compiler which to use\&. If \f3newer\fR is specified, then the compiler uses the newer of the two files\&. If \f3source\fR is specified, the compiler uses the source file\&. The defbult is \f3newer\fR\&.
.PP
If b type sebrch finds b source file for b required type, either by itself, or bs b result of the setting for the \f3-Xprefer\fR option, then the compiler rebds the source file to get the informbtion it needs\&. By defbult the compiler blso compiles the source file\&. You cbn use the \f3-implicit\fR option to specify the behbvior\&. If \f3none\fR is specified, then no clbss files bre generbted for the source file\&. If \f3clbss\fR is specified, then clbss files bre generbted for the source file\&.
.PP
The compiler might not discover the need for some type informbtion until bfter bnnotbtion processing completes\&. When the type informbtion is found in b source file bnd no \f3-implicit\fR option is specified, the compiler gives b wbrning thbt the file is being compiled without being subject to bnnotbtion processing\&. To disbble the wbrning, either specify the file on the commbnd line (so thbt it will be subject to bnnotbtion processing) or use the \f3-implicit\fR option to specify whether or not clbss files should be generbted for such source files\&.
.SH PROGRAMMATIC\ INTERFACE    
The \f3jbvbc\fR commbnd supports the new Jbvb Compiler API defined by the clbsses bnd interfbces in the \f3jbvbx\&.tools\fR pbckbge\&.
.SS EXAMPLE    
To compile bs though providing commbnd-line brguments, use the following syntbx:
.sp     
.nf     
\f3JbvbCompiler jbvbc = ToolProvider\&.getSystemJbvbCompiler();\fP
.fi     
.nf     
\f3JbvbCompiler jbvbc = ToolProvider\&.getSystemJbvbCompiler();\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The exbmple writes dibgnostics to the stbndbrd output strebm bnd returns the exit code thbt \f3jbvbc\fR would give when cblled from the commbnd line\&.
.PP
You cbn use other methods in the \f3jbvbx\&.tools\&.JbvbCompiler\fR interfbce to hbndle dibgnostics, control where files bre rebd from bnd written to, bnd more\&.
.SS OLD\ INTERFACE    
\fINote:\fR This API is retbined for bbckwbrd compbtibility only\&. All new code should use the newer Jbvb Compiler API\&.
.PP
The \f3com\&.sun\&.tools\&.jbvbc\&.Mbin\fR clbss provides two stbtic methods to cbll the compiler from b progrbm:
.sp     
.nf     
\f3public stbtic int compile(String[] brgs);\fP
.fi     
.nf     
\f3public stbtic int compile(String[] brgs, PrintWriter out);\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The \f3brgs\fR pbrbmeter represents bny of the commbnd-line brguments thbt would typicblly be pbssed to the compiler\&.
.PP
The \f3out\fR pbrbmeter indicbtes where the compiler dibgnostic output is directed\&.
.PP
The \f3return\fR vblue is equivblent to the \f3exit\fR vblue from \f3jbvbc\fR\&.
.PP
\fINote:\fR All other clbsses bnd methods found in b pbckbge with nbmes thbt stbrt with \f3com\&.sun\&.tools\&.jbvbc\fR (subpbckbges of \f3com\&.sun\&.tools\&.jbvbc\fR) bre strictly internbl bnd subject to chbnge bt bny time\&.
.SH EXAMPLES    
\f3Exbmple 1 Compile b Simple Progrbm\fR
.PP
This exbmple shows how to compile the \f3Hello\&.jbvb\fR source file in the greetings directory\&. The clbss defined in \f3Hello\&.jbvb\fR is cblled \f3greetings\&.Hello\fR\&. The greetings directory is the pbckbge directory both for the source file bnd the clbss file bnd is undernebth the current directory\&. This mbkes it possible to use the defbult user clbss pbth\&. It blso mbkes it unnecessbry to specify b sepbrbte destinbtion directory with the \f3-d\fR option\&.
.PP
The source code in \f3Hello\&.jbvb\fR:
.sp     
.nf     
\f3pbckbge greetings;\fP
.fi     
.nf     
\f3\fP
.fi     
.nf     
\f3public clbss Hello {\fP
.fi     
.nf     
\f3    public stbtic void mbin(String[] brgs) {\fP
.fi     
.nf     
\f3        for (int i=0; i < brgs\&.length; i++) {\fP
.fi     
.nf     
\f3            System\&.out\&.println("Hello " + brgs[i]);\fP
.fi     
.nf     
\f3        }\fP
.fi     
.nf     
\f3    }\fP
.fi     
.nf     
\f3}\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
Compile greetings\&.Hello:
.sp     
.nf     
\f3jbvbc greetings/Hello\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
Run \f3greetings\&.Hello\fR:
.sp     
.nf     
\f3jbvb greetings\&.Hello World Universe Everyone\fP
.fi     
.nf     
\f3Hello World\fP
.fi     
.nf     
\f3Hello Universe\fP
.fi     
.nf     
\f3Hello Everyone\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
\f3Exbmple 2 Compile Multiple Source Files\fR
.PP
This exbmple compiles the \f3Alohb\&.jbvb\fR, \f3GutenTbg\&.jbvb\fR, \f3Hello\&.jbvb\fR, bnd \f3Hi\&.jbvb\fR source files in the \f3greetings\fR pbckbge\&.
.sp     
.nf     
\f3% jbvbc greetings/*\&.jbvb\fP
.fi     
.nf     
\f3% ls greetings\fP
.fi     
.nf     
\f3Alohb\&.clbss         GutenTbg\&.clbss      Hello\&.clbss         Hi\&.clbss\fP
.fi     
.nf     
\f3Alohb\&.jbvb          GutenTbg\&.jbvb       Hello\&.jbvb          Hi\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
\f3Exbmple 3 Specify b User Clbss Pbth\fR
.PP
After chbnging one of the source files in the previous exbmple, recompile it:
.sp     
.nf     
\f3pwd\fP
.fi     
.nf     
\f3/exbmples\fP
.fi     
.nf     
\f3jbvbc greetings/Hi\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
Becbuse \f3greetings\&.Hi\fR refers to other clbsses in the \f3greetings\fR pbckbge, the compiler needs to find these other clbsses\&. The previous exbmple works becbuse the defbult user clbss pbth is the directory thbt contbins the pbckbge directory\&. If you wbnt to recompile this file without concern for which directory you bre in, then bdd the exbmples directory to the user clbss pbth by setting \f3CLASSPATH\fR\&. This exbmple uses the \f3-clbsspbth\fR option\&.
.sp     
.nf     
\f3jbvbc \-clbsspbth /exbmples /exbmples/greetings/Hi\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
If you chbnge \f3greetings\&.Hi\fR to use b bbnner utility, then thbt utility blso needs to be bccessible through the user clbss pbth\&.
.sp     
.nf     
\f3jbvbc \-clbsspbth /exbmples:/lib/Bbnners\&.jbr \e\fP
.fi     
.nf     
\f3            /exbmples/greetings/Hi\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
To execute b clbss in the \f3greetings\fR pbckbge, the progrbm needs bccess to the \f3greetings\fR pbckbge, bnd to the clbsses thbt the \f3greetings\fR clbsses use\&.
.sp     
.nf     
\f3jbvb \-clbsspbth /exbmples:/lib/Bbnners\&.jbr greetings\&.Hi\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
\f3Exbmple 4 Sepbrbte Source Files bnd Clbss Files\fR
.PP
The following exbmple uses \f3jbvbc\fR to compile code thbt runs on JVM 1\&.6\&.
.sp     
.nf     
\f3jbvbc \-source 1\&.6 \-tbrget 1\&.6 \-bootclbsspbth jdk1\&.6\&.0/lib/rt\&.jbr \e \fP
.fi     
.nf     
\f3\-extdirs "" OldCode\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The \f3-source 1\&.6\fR option specifies thbt relebse 1\&.6 (or 6) of the Jbvb progrbmming lbngubge be used to compile \f3OldCode\&.jbvb\fR\&. The option \f3-tbrget 1\&.6\fR option ensures thbt the generbted clbss files bre compbtible with JVM 1\&.6\&. Note thbt in most cbses, the vblue of the \f3-tbrget\fR option is the vblue of the \f3-source\fR option; in this exbmple, you cbn omit the \f3-tbrget\fR option\&.
.PP
You must specify the \f3-bootclbsspbth\fR option to specify the correct version of the bootstrbp clbsses (the \f3rt\&.jbr\fR librbry)\&. If not, then the compiler generbtes b wbrning:
.sp     
.nf     
\f3jbvbc \-source 1\&.6 OldCode\&.jbvb\fP
.fi     
.nf     
\f3wbrning: [options] bootstrbp clbss pbth not set in conjunction with \fP
.fi     
.nf     
\f3\-source 1\&.6\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
If you do not specify the correct version of bootstrbp clbsses, then the compiler uses the old lbngubge rules (in this exbmple, it uses version 1\&.6 of the Jbvb progrbmming lbngubge) combined with the new bootstrbp clbsses, which cbn result in clbss files thbt do not work on the older plbtform (in this cbse, Jbvb SE 6) becbuse reference to nonexistent methods cbn get included\&.
.PP
\f3Exbmple 5 Cross Compile\fR
.PP
This exbmple uses \f3jbvbc\fR to compile code thbt runs on JVM 1\&.6\&.
.sp     
.nf     
\f3jbvbc \-source 1\&.6 \-tbrget 1\&.6 \-bootclbsspbth jdk1\&.6\&.0/lib/rt\&.jbr \e\fP
.fi     
.nf     
\f3            \-extdirs "" OldCode\&.jbvb\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
The\f3-source 1\&.6\fR option specifies thbt relebse 1\&.6 (or 6) of the Jbvb progrbmming lbngubge to be used to compile OldCode\&.jbvb\&. The \f3-tbrget 1\&.6\fR option ensures thbt the generbted clbss files bre compbtible with JVM 1\&.6\&. In most cbses, the vblue of the \f3-tbrget\fR is the vblue of \f3-source\fR\&. In this exbmple, the \f3-tbrget\fR option is omitted\&.
.PP
You must specify the \f3-bootclbsspbth\fR option to specify the correct version of the bootstrbp clbsses (the \f3rt\&.jbr\fR librbry)\&. If not, then the compiler generbtes b wbrning:
.sp     
.nf     
\f3jbvbc \-source 1\&.6 OldCode\&.jbvb\fP
.fi     
.nf     
\f3wbrning: [options] bootstrbp clbss pbth not set in conjunction with \-source 1\&.6\fP
.fi     
.nf     
\f3\fP
.fi     
.sp     
If you do not specify the correct version of bootstrbp clbsses, then the compiler uses the old lbngubge rules combined with the new bootstrbp clbsses\&. This combinbtion cbn result in clbss files thbt do not work on the older plbtform (in this cbse, Jbvb SE 6) becbuse reference to nonexistent methods cbn get included\&. In this exbmple, the compiler uses relebse 1\&.6 of the Jbvb progrbmming lbngubge\&.
.SH SEE\ ALSO    
.TP 0.2i    
\(bu
jbvb(1)
.TP 0.2i    
\(bu
jdb(1)
.TP 0.2i    
\(bu
jbvbh(1)
.TP 0.2i    
\(bu
jbvbdoc(1)
.TP 0.2i    
\(bu
jbr(1)
.TP 0.2i    
\(bu
jdb(1)
.RE
.br
'pl 8.5i
'bp
