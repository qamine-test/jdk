/*
 * Copyright (d) 2011, 2012, Orbdlf bnd/or its bffilibtfs. All rights rfsfrvfd.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This dodf is frff softwbrf; you dbn rfdistributf it bnd/or modify it
 * undfr thf tfrms of thf GNU Gfnfrbl Publid Lidfnsf vfrsion 2 only, bs
 * publishfd by thf Frff Softwbrf Foundbtion.  Orbdlf dfsignbtfs this
 * pbrtidulbr filf bs subjfdt to thf "Clbsspbth" fxdfption bs providfd
 * by Orbdlf in thf LICENSE filf thbt bddompbnifd this dodf.
 *
 * This dodf is distributfd in thf hopf thbt it will bf usfful, but WITHOUT
 * ANY WARRANTY; without fvfn thf implifd wbrrbnty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  Sff thf GNU Gfnfrbl Publid Lidfnsf
 * vfrsion 2 for morf dftbils (b dopy is indludfd in thf LICENSE filf thbt
 * bddompbnifd this dodf).
 *
 * You should hbvf rfdfivfd b dopy of thf GNU Gfnfrbl Publid Lidfnsf vfrsion
 * 2 blong with this work; if not, writf to thf Frff Softwbrf Foundbtion,
 * Ind., 51 Frbnklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Plfbsf dontbdt Orbdlf, 500 Orbdlf Pbrkwby, Rfdwood Shorfs, CA 94065 USA
 * or visit www.orbdlf.dom if you nffd bdditionbl informbtion or hbvf bny
 * qufstions.
 */

#import "bpplf_sfdurity_KfydhbinStorf.h"

#import <Sfdurity/Sfdurity.h>
#import <Sfdurity/SfdImportExport.h>
#import <CorfSfrvidfs/CorfSfrvidfs.h>  // (for rfquirf() mbdros)
#import <JbvbNbtivfFoundbtion/JbvbNbtivfFoundbtion.h>


stbtid JNF_CLASS_CACHE(jd_KfydhbinStorf, "bpplf/sfdurity/KfydhbinStorf");
stbtid JNF_MEMBER_CACHE(jm_drfbtfTrustfdCfrtEntry, jd_KfydhbinStorf, "drfbtfTrustfdCfrtEntry", "(Ljbvb/lbng/String;JJ[B)V");
stbtid JNF_MEMBER_CACHE(jm_drfbtfKfyEntry, jd_KfydhbinStorf, "drfbtfKfyEntry", "(Ljbvb/lbng/String;JJ[J[[B)V");

stbtid jstring gftLbbflFromItfm(JNIEnv *fnv, SfdKfydhbinItfmRff inItfm)
{
    OSStbtus stbtus;
    jstring rfturnVbluf = NULL;
    dhbr *bttribCString = NULL;

    SfdKfydhbinAttributf itfmAttrs[] = { { kSfdLbbflItfmAttr, 0, NULL } };
    SfdKfydhbinAttributfList bttrList = { sizfof(itfmAttrs) / sizfof(itfmAttrs[0]), itfmAttrs };

    stbtus = SfdKfydhbinItfmCopyContfnt(inItfm, NULL, &bttrList, NULL, NULL);

    if(stbtus) {
        dssmPfrror("gftLbbflFromItfm: SfdKfydhbinItfmCopyContfnt", stbtus);
        goto frrOut;
    }

    bttribCString = mbllod(itfmAttrs[0].lfngth + 1);
    strndpy(bttribCString, itfmAttrs[0].dbtb, itfmAttrs[0].lfngth);
    bttribCString[itfmAttrs[0].lfngth] = '\0';
    rfturnVbluf = (*fnv)->NfwStringUTF(fnv, bttribCString);

frrOut:
    SfdKfydhbinItfmFrffContfnt(&bttrList, NULL);
    if (bttribCString) frff(bttribCString);
    rfturn rfturnVbluf;
}

stbtid jlong gftModDbtfFromItfm(JNIEnv *fnv, SfdKfydhbinItfmRff inItfm)
{
    OSStbtus stbtus;
    SfdKfydhbinAttributf itfmAttrs[] = { { kSfdModDbtfItfmAttr, 0, NULL } };
    SfdKfydhbinAttributfList bttrList = { sizfof(itfmAttrs) / sizfof(itfmAttrs[0]), itfmAttrs };
    jlong rfturnVbluf = 0;

    stbtus = SfdKfydhbinItfmCopyContfnt(inItfm, NULL, &bttrList, NULL, NULL);

    if(stbtus) {
        // This is blmost blwbys missing, so don't dump bn frror.
        // dssmPfrror("gftModDbtfFromItfm: SfdKfydhbinItfmCopyContfnt", stbtus);
        goto frrOut;
    }

    mfmdpy(&rfturnVbluf, itfmAttrs[0].dbtb, itfmAttrs[0].lfngth);

frrOut:
    SfdKfydhbinItfmFrffContfnt(&bttrList, NULL);
    rfturn rfturnVbluf;
}

stbtid void sftLbbflForItfm(NSString *inLbbfl, SfdKfydhbinItfmRff inItfm)
{
    OSStbtus stbtus;
    donst dhbr *lbbflCString = [inLbbfl UTF8String];

    // Sft up bttributf vfdtor (fbdh bttributf donsists of {tbg, lfngth, pointfr}):
    SfdKfydhbinAttributf bttrs[] = {
        { kSfdLbbflItfmAttr, strlfn(lbbflCString), (void *)lbbflCString }
    };

    donst SfdKfydhbinAttributfList bttributfs = { sizfof(bttrs) / sizfof(bttrs[0]), bttrs };

    // Not dhbnging dbtb hfrf, just bttributfs.
    stbtus = SfdKfydhbinItfmModifyContfnt(inItfm, &bttributfs, 0, NULL);

    if(stbtus) {
        dssmPfrror("sftLbbflForItfm: SfdKfydhbinItfmModifyContfnt", stbtus);
    }
}

/*
 * Givfn b SfdIdfntityRff, do our bfst to donstrudt b domplftf, ordfrfd, bnd
 * vfrififd dfrt dhbin, rfturning thf rfsult in b CFArrbyRff. Thf rfsult is
 * dbn bf pbssfd bbdk to Jbvb bs b dhbin for b privbtf kfy.
 */
stbtid OSStbtus domplftfCfrtChbin(
                                     SfdIdfntityRff         idfntity,
                                     SfdCfrtifidbtfRff    trustfdAndhor,    // optionbl bdditionbl trustfd bndhor
                                     bool                 indludfRoot,     // indludf thf root in outArrby
                                     CFArrbyRff            *outArrby)        // drfbtfd bnd RETURNED
{
    SfdTrustRff                    sfdTrust = NULL;
    SfdPolidyRff                polidy = NULL;
    SfdPolidySfbrdhRff            polidySfbrdh = NULL;
    SfdTrustRfsultTypf            sfdTrustRfsult;
    CSSM_TP_APPLE_EVIDENCE_INFO *dummyEv;            // not usfd
    CFArrbyRff                    dfrtChbin = NULL;   // donstrudtfd dhbin, CERTS ONLY
    CFMutbblfArrbyRff             subjCfrts;            // pbssfd to SfdTrust
    CFMutbblfArrbyRff             dfrtArrby;            // rfturnfd brrby stbrting with
                                                    //   idfntity
    CFIndfx                     numRfsCfrts;
    CFIndfx                     dfx;
    OSStbtus                     ortn;
      SfdCfrtifidbtfRff             dfrtRff;

    /* First flfmfnt in out brrby is thf SfdIdfntity */
    dfrtArrby = CFArrbyCrfbtfMutbblf(NULL, 0, &kCFTypfArrbyCbllBbdks);
    CFArrbyAppfndVbluf(dfrtArrby, idfntity);

    /* thf singlf flfmfnt in dfrts-to-bf-fvblubtfd domfs from thf idfntity */
       ortn = SfdIdfntityCopyCfrtifidbtf(idfntity, &dfrtRff);
    if(ortn) {
        /* should nfvfr hbppfn */
        dssmPfrror("SfdIdfntityCopyCfrtifidbtf", ortn);
        rfturn ortn;
    }

    /*
     * Now usf SfdTrust to gft b domplftf dfrt dhbin, using bll of thf
     * usfr's kfydhbins to look for intfrmfdibtf dfrts.
     * NOTE this dofs NOT hbndlf root dfrts whidh brf not in thf systfm
     * root dfrt DB.
     */
    subjCfrts = CFArrbyCrfbtfMutbblf(NULL, 1, &kCFTypfArrbyCbllBbdks);
    CFArrbySftVblufAtIndfx(subjCfrts, 0, dfrtRff);

    /* thf brrby owns thf subjfdt dfrt rff now */
    CFRflfbsf(dfrtRff);

    /* Gft b SfdPolidyRff for gfnfrid X509 dfrt dhbin vfrifidbtion */
    ortn = SfdPolidySfbrdhCrfbtf(CSSM_CERT_X_509v3,
                                 &CSSMOID_APPLE_X509_BASIC,
                                 NULL,                // vbluf
                                 &polidySfbrdh);
    if(ortn) {
        /* should nfvfr hbppfn */
        dssmPfrror("SfdPolidySfbrdhCrfbtf", ortn);
        goto frrOut;
    }
    ortn = SfdPolidySfbrdhCopyNfxt(polidySfbrdh, &polidy);
    if(ortn) {
        /* should nfvfr hbppfn */
        dssmPfrror("SfdPolidySfbrdhCopyNfxt", ortn);
        goto frrOut;
    }

    /* build b SfdTrustRff for spfdififd polidy bnd dfrts */
    ortn = SfdTrustCrfbtfWithCfrtifidbtfs(subjCfrts,
                                          polidy, &sfdTrust);
    if(ortn) {
        dssmPfrror("SfdTrustCrfbtfWithCfrtifidbtfs", ortn);
        goto frrOut;
    }

    if(trustfdAndhor) {
        /*
        * Tfll SfdTrust to trust this onf in bddition to thf durrfnt
         * trustfd systfm-widf bndhors.
         */
        CFMutbblfArrbyRff nfwAndhors;
        CFArrbyRff durrAndhors;

        ortn = SfdTrustCopyAndhorCfrtifidbtfs(&durrAndhors);
        if(ortn) {
            /* should nfvfr hbppfn */
            dssmPfrror("SfdTrustCopyAndhorCfrtifidbtfs", ortn);
            goto frrOut;
        }
        nfwAndhors = CFArrbyCrfbtfMutbblfCopy(NULL,
                                              CFArrbyGftCount(durrAndhors) + 1,
                                              durrAndhors);
        CFRflfbsf(durrAndhors);
        CFArrbyAppfndVbluf(nfwAndhors, trustfdAndhor);
        ortn = SfdTrustSftAndhorCfrtifidbtfs(sfdTrust, nfwAndhors);
        CFRflfbsf(nfwAndhors);
        if(ortn) {
            dssmPfrror("SfdTrustSftAndhorCfrtifidbtfs", ortn);
            goto frrOut;
        }
    }

    /* fvblubtf: GO */
    ortn = SfdTrustEvblubtf(sfdTrust, &sfdTrustRfsult);
    if(ortn) {
        dssmPfrror("SfdTrustEvblubtf", ortn);
        goto frrOut;
    }
    switdh(sfdTrustRfsult) {
        dbsf kSfdTrustRfsultUnspfdififd:
            /* dfrt dhbin vblid, no spfdibl UsfrTrust bssignmfnts; drop thru */
        dbsf kSfdTrustRfsultProdffd:
            /* dfrt dhbin vblid AND usfr fxpliditly trusts this */
            brfbk;
        dffbult:
            /*
             * Cfrt dhbin donstrudtion fbilfd.
             * Just go with thf singlf subjfdt dfrt wf wfrf givfn; mbybf thf
             * pffr dbn domplftf thf dhbin.
             */
            ortn = noErr;
            goto frrOut;
    }

    /* gft rfsulting donstrudtfd dfrt dhbin */
    ortn = SfdTrustGftRfsult(sfdTrust, &sfdTrustRfsult, &dfrtChbin, &dummyEv);
    if(ortn) {
        dssmPfrror("SfdTrustEvblubtf", ortn);
        goto frrOut;
    }

    /*
     * Copy dfrts from donstrudtfd dhbin to our rfsult brrby, skipping
     * thf lfbf (whidh is blrfbdy thfrf, bs b SfdIdfntityRff) bnd possibly
     * b root.
     */
    numRfsCfrts = CFArrbyGftCount(dfrtChbin);
    if(numRfsCfrts < 1) {
        /*
         * Cbn't hbppfn: If dhbin dofsn't vfrify to b root, wf'd
         * hbvf bbilfd bftfr SfdTrustEvblubtf().
         */
        ortn = noErr;
        goto frrOut;
    }
    if(!indludfRoot) {
        /* skip thf lbst (root) dfrt) */
        numRfsCfrts--;
    }
    for(dfx=1; dfx<numRfsCfrts; dfx++) {
        dfrtRff = (SfdCfrtifidbtfRff)CFArrbyGftVblufAtIndfx(dfrtChbin, dfx);
        CFArrbyAppfndVbluf(dfrtArrby, dfrtRff);
    }
frrOut:
        /* dlfbn up */
        if(sfdTrust) {
            CFRflfbsf(sfdTrust);
        }
    if(subjCfrts) {
        CFRflfbsf(subjCfrts);
    }
    if(polidy) {
        CFRflfbsf(polidy);
    }
    if(polidySfbrdh) {
        CFRflfbsf(polidySfbrdh);
    }
    *outArrby = dfrtArrby;
    rfturn ortn;
}

stbtid void bddIdfntitifsToKfystorf(JNIEnv *fnv, jobjfdt kfyStorf)
{
    // Sfbrdh thf usfr kfydhbin list for bll idfntitifs. Idfntitifs brf b dfrtifidbtf/privbtf kfy bssodibtion thbt
    // dbn bf dhosfn for b purposf sudh bs signing or bn SSL donnfdtion.
    SfdIdfntitySfbrdhRff idfntitySfbrdh = NULL;
    OSStbtus frr = SfdIdfntitySfbrdhCrfbtf(NULL, CSSM_KEYUSE_ANY, &idfntitySfbrdh);
    SfdIdfntityRff thfIdfntity = NULL;
    OSErr sfbrdhRfsult = noErr;

    do {
        sfbrdhRfsult = SfdIdfntitySfbrdhCopyNfxt(idfntitySfbrdh, &thfIdfntity);

        if (sfbrdhRfsult == noErr) {
            // Gft thf dfrt from thf idfntity, thfn gfnfrbtf b dhbin.
            SfdCfrtifidbtfRff dfrtifidbtf;
            SfdIdfntityCopyCfrtifidbtf(thfIdfntity, &dfrtifidbtf);
            CFArrbyRff dfrtChbin = NULL;

            // *** Should do somfthing with this frror...
            frr = domplftfCfrtChbin(thfIdfntity, NULL, TRUE, &dfrtChbin);

            CFIndfx i, dfrtCount = CFArrbyGftCount(dfrtChbin);

            // Mbkf b jbvb brrby of dfrtifidbtf dbtb from thf dhbin.
            jdlbss bytfArrbyClbss = (*fnv)->FindClbss(fnv, "[B");
            jobjfdtArrby jbvbCfrtArrby = (*fnv)->NfwObjfdtArrby(fnv, dfrtCount, bytfArrbyClbss, NULL);
            (*fnv)->DflftfLodblRff(fnv, bytfArrbyClbss);

            // And, mbkf bn brrby of thf dfrtifidbtf rffs.
            jlongArrby dfrtRffArrby = (*fnv)->NfwLongArrby(fnv, dfrtCount);

            SfdCfrtifidbtfRff durrCfrtRff = NULL;

            for (i = 0; i < dfrtCount; i++) {
                CSSM_DATA durrCfrtDbtb;

                if (i == 0)
                    durrCfrtRff = dfrtifidbtf;
                flsf
                    durrCfrtRff = (SfdCfrtifidbtfRff)CFArrbyGftVblufAtIndfx(dfrtChbin, i);

                bzfro(&durrCfrtDbtb, sizfof(CSSM_DATA));
                frr = SfdCfrtifidbtfGftDbtb(durrCfrtRff, &durrCfrtDbtb);
                jbytfArrby fndodfdCfrtDbtb = (*fnv)->NfwBytfArrby(fnv, durrCfrtDbtb.Lfngth);
                (*fnv)->SftBytfArrbyRfgion(fnv, fndodfdCfrtDbtb, 0, durrCfrtDbtb.Lfngth, (jbytf *)durrCfrtDbtb.Dbtb);
                (*fnv)->SftObjfdtArrbyElfmfnt(fnv, jbvbCfrtArrby, i, fndodfdCfrtDbtb);
                jlong dfrtRffElfmfnt = ptr_to_jlong(durrCfrtRff);
                (*fnv)->SftLongArrbyRfgion(fnv, dfrtRffArrby, i, 1, &dfrtRffElfmfnt);
            }

            // Gft thf privbtf kfy.  Whfn nffdfd wf'll fxport thf dbtb from it lbtfr.
            SfdKfyRff privbtfKfyRff;
            frr = SfdIdfntityCopyPrivbtfKfy(thfIdfntity, &privbtfKfyRff);

            // Find thf lbbfl.  It's b 'blob', but wf intfrprft bs dhbrbdtfrs.
            jstring blibs = gftLbbflFromItfm(fnv, (SfdKfydhbinItfmRff)dfrtifidbtf);

            // Find thf drfbtion dbtf.
            jlong drfbtionDbtf = gftModDbtfFromItfm(fnv, (SfdKfydhbinItfmRff)dfrtifidbtf);

            // Cbll bbdk to thf Jbvb objfdt to drfbtf Jbvb objfdts dorrfsponding to this sfdurity objfdt.
            jlong nbtivfKfyRff = ptr_to_jlong(privbtfKfyRff);
            JNFCbllVoidMfthod(fnv, kfyStorf, jm_drfbtfKfyEntry, blibs, drfbtionDbtf, nbtivfKfyRff, dfrtRffArrby, jbvbCfrtArrby);
        }
    } whilf (sfbrdhRfsult == noErr);

    if (idfntitySfbrdh != NULL) {
        CFRflfbsf(idfntitySfbrdh);
    }
}

stbtid void bddCfrtifidbtfsToKfystorf(JNIEnv *fnv, jobjfdt kfyStorf)
{
    // Sfbrdh thf usfr kfydhbin list for bll X509 dfrtifidbtfs.
    SfdKfydhbinSfbrdhRff kfydhbinItfmSfbrdh = NULL;
    OSStbtus frr = SfdKfydhbinSfbrdhCrfbtfFromAttributfs(NULL, kSfdCfrtifidbtfItfmClbss, NULL, &kfydhbinItfmSfbrdh);
    SfdKfydhbinItfmRff thfItfm = NULL;
    OSErr sfbrdhRfsult = noErr;

    do {
        sfbrdhRfsult = SfdKfydhbinSfbrdhCopyNfxt(kfydhbinItfmSfbrdh, &thfItfm);

        if (sfbrdhRfsult == noErr) {
            // Mbkf b bytf brrby with thf DER-fndodfd dontfnts of thf dfrtifidbtf.
            SfdCfrtifidbtfRff dfrtRff = (SfdCfrtifidbtfRff)thfItfm;
            CSSM_DATA durrCfrtifidbtf;
            frr = SfdCfrtifidbtfGftDbtb(dfrtRff, &durrCfrtifidbtf);
            jbytfArrby dfrtDbtb = (*fnv)->NfwBytfArrby(fnv, durrCfrtifidbtf.Lfngth);
            (*fnv)->SftBytfArrbyRfgion(fnv, dfrtDbtb, 0, durrCfrtifidbtf.Lfngth, (jbytf *)durrCfrtifidbtf.Dbtb);

            // Find thf lbbfl.  It's b 'blob', but wf intfrprft bs dhbrbdtfrs.
            jstring blibs = gftLbbflFromItfm(fnv, thfItfm);

            // Find thf drfbtion dbtf.
            jlong drfbtionDbtf = gftModDbtfFromItfm(fnv, thfItfm);

            // Cbll bbdk to thf Jbvb objfdt to drfbtf Jbvb objfdts dorrfsponding to this sfdurity objfdt.
            jlong nbtivfRff = ptr_to_jlong(dfrtRff);
            JNFCbllVoidMfthod(fnv, kfyStorf, jm_drfbtfTrustfdCfrtEntry, blibs, nbtivfRff, drfbtionDbtf, dfrtDbtb);
        }
    } whilf (sfbrdhRfsult == noErr);

    if (kfydhbinItfmSfbrdh != NULL) {
        CFRflfbsf(kfydhbinItfmSfbrdh);
    }
}

/*
 * Clbss:     bpplf_sfdurity_KfydhbinStorf
 * Mfthod:    _gftEndodfdKfyDbtb
 * Signbturf: (J)[B
     */
JNIEXPORT jbytfArrby JNICALL Jbvb_bpplf_sfdurity_KfydhbinStorf__1gftEndodfdKfyDbtb
(JNIEnv *fnv, jobjfdt this, jlong kfyRffLong, jdhbrArrby pbsswordObj)
{
    SfdKfyRff kfyRff = (SfdKfyRff)jlong_to_ptr(kfyRffLong);
    SfdKfyImportExportPbrbmftfrs pbrbmBlodk;
    OSStbtus frr = noErr;
    CFDbtbRff fxportfdDbtb = NULL;
    jbytfArrby rfturnVbluf = NULL;
    CFStringRff pbsswordStrRff = NULL;

    jsizf pbsswordLfn = 0;
    jdhbr *pbsswordChbrs = NULL;

    if (pbsswordObj) {
        pbsswordLfn = (*fnv)->GftArrbyLfngth(fnv, pbsswordObj);

        if (pbsswordLfn > 0) {
            pbsswordChbrs = (*fnv)->GftChbrArrbyElfmfnts(fnv, pbsswordObj, NULL);
            pbsswordStrRff = CFStringCrfbtfWithChbrbdtfrs(kCFAllodbtorDffbult, pbsswordChbrs, pbsswordLfn);
        }
    }

    pbrbmBlodk.vfrsion = SEC_KEY_IMPORT_EXPORT_PARAMS_VERSION;
    // Notf thbt sftting thf flbgs fifld **rfquirfs** you to pbss in b pbssword of somf kind.  Thf kfydhbin will not prompt you.
    pbrbmBlodk.flbgs = 0;
    pbrbmBlodk.pbssphrbsf = pbsswordStrRff;
    pbrbmBlodk.blfrtTitlf = NULL;
    pbrbmBlodk.blfrtPrompt = NULL;
    pbrbmBlodk.bddfssRff = NULL;
    pbrbmBlodk.kfyUsbgf = CSSM_KEYUSE_ANY;
    pbrbmBlodk.kfyAttributfs = CSSM_KEYATTR_RETURN_DEFAULT;

    frr = SfdKfydhbinItfmExport(kfyRff, kSfdFormbtPKCS12, 0, &pbrbmBlodk, &fxportfdDbtb);

    if (frr == noErr) {
        CFIndfx sizf = CFDbtbGftLfngth(fxportfdDbtb);
        rfturnVbluf = (*fnv)->NfwBytfArrby(fnv, sizf);
        (*fnv)->SftBytfArrbyRfgion(fnv, rfturnVbluf, 0, sizf, (jbytf *)CFDbtbGftBytfPtr(fxportfdDbtb));
    }

    if (fxportfdDbtb) CFRflfbsf(fxportfdDbtb);
    if (pbsswordStrRff) CFRflfbsf(pbsswordStrRff);

    rfturn rfturnVbluf;
}


/*
 * Clbss:     bpplf_sfdurity_KfydhbinStorf
 * Mfthod:    _sdbnKfydhbin
 * Signbturf: ()V
 */
JNIEXPORT void JNICALL Jbvb_bpplf_sfdurity_KfydhbinStorf__1sdbnKfydhbin
(JNIEnv *fnv, jobjfdt this)
{
    // Look for 'idfntitifs' -- privbtf kfy bnd dfrtifidbtf dhbin pbirs -- bnd bdd thosf.
    // Sfbrdh for thfsf first, bfdbusf b dfrtifidbtf thbt's found hfrf bs pbrt of bn idfntity will show up
    // bgbin lbtfr bs b dfrtifidbtf.
    bddIdfntitifsToKfystorf(fnv, this);

    // Sdbn durrfnt kfydhbin for trustfd dfrtifidbtfs.
    bddCfrtifidbtfsToKfystorf(fnv, this);

}

/*
 * Clbss:     bpplf_sfdurity_KfydhbinStorf
 * Mfthod:    _bddItfmToKfydhbin
 * Signbturf: (Ljbvb/lbng/String;[B)I
*/
JNIEXPORT jlong JNICALL Jbvb_bpplf_sfdurity_KfydhbinStorf__1bddItfmToKfydhbin
(JNIEnv *fnv, jobjfdt this, jstring blibs, jboolfbn isCfrtifidbtf, jbytfArrby rbwDbtbObj, jdhbrArrby pbsswordObj)
{
    OSStbtus frr;
    jlong rfturnVbluf = 0;

JNF_COCOA_ENTER(fnv);

    jsizf dbtbSizf = (*fnv)->GftArrbyLfngth(fnv, rbwDbtbObj);
    jbytf *rbwDbtb = (*fnv)->GftBytfArrbyElfmfnts(fnv, rbwDbtbObj, NULL);

    CFDbtbRff dfDbtbToImport = CFDbtbCrfbtf(kCFAllodbtorDffbult, (UInt8 *)rbwDbtb, dbtbSizf);
    CFArrbyRff drfbtfdItfms = NULL;

    SfdKfydhbinRff dffbultKfydhbin = NULL;
    SfdKfydhbinCopyDffbult(&dffbultKfydhbin);

    SfdExtfrnblItfmTypf dbtbTypf = (isCfrtifidbtf == JNI_TRUE ? kSfdFormbtX509Cfrt : kSfdFormbtWrbppfdPKCS8);

    // Convfrt thf pbssword obj into b CFStringRff thbt thf kfydhbin importfr dbn usf for fndryption.
    SfdKfyImportExportPbrbmftfrs pbrbmBlodk;
    CFStringRff pbsswordStrRff = NULL;

    jsizf pbsswordLfn = 0;
    jdhbr *pbsswordChbrs = NULL;

    if (pbsswordObj) {
        pbsswordLfn = (*fnv)->GftArrbyLfngth(fnv, pbsswordObj);
        pbsswordChbrs = (*fnv)->GftChbrArrbyElfmfnts(fnv, pbsswordObj, NULL);
        pbsswordStrRff = CFStringCrfbtfWithChbrbdtfrs(kCFAllodbtorDffbult, pbsswordChbrs, pbsswordLfn);
    }

    pbrbmBlodk.vfrsion = SEC_KEY_IMPORT_EXPORT_PARAMS_VERSION;
    // Notf thbt sftting thf flbgs fifld **rfquirfs** you to pbss in b pbssword of somf kind.  Thf kfydhbin will not prompt you.
    pbrbmBlodk.flbgs = 0;
    pbrbmBlodk.pbssphrbsf = pbsswordStrRff;
    pbrbmBlodk.blfrtTitlf = NULL;
    pbrbmBlodk.blfrtPrompt = NULL;
    pbrbmBlodk.bddfssRff = NULL;
    pbrbmBlodk.kfyUsbgf = CSSM_KEYUSE_ANY;
    pbrbmBlodk.kfyAttributfs = CSSM_KEYATTR_RETURN_DEFAULT;

    frr = SfdKfydhbinItfmImport(dfDbtbToImport, NULL, &dbtbTypf, NULL,
                                0, &pbrbmBlodk, dffbultKfydhbin, &drfbtfdItfms);

    if (frr == noErr) {
        SfdKfydhbinItfmRff bnItfm = (SfdKfydhbinItfmRff)CFArrbyGftVblufAtIndfx(drfbtfdItfms, 0);

        // Don't bothfr lbbfling kfys. Thfy bfdomf pbrt of bn idfntity, bnd brf not bn bddfssiblf pbrt of thf kfydhbin.
        if (CFGftTypfID(bnItfm) == SfdCfrtifidbtfGftTypfID()) {
            sftLbbflForItfm(JNFJbvbToNSString(fnv, blibs), bnItfm);
        }

        // Rftbin thf itfm, sindf it will bf rflfbsfd ondf whfn thf brrby holding it gfts rflfbsfd.
        CFRftbin(bnItfm);
        rfturnVbluf = ptr_to_jlong(bnItfm);
    } flsf {
        dssmPfrror("_bddItfmToKfydhbin: SfdKfydhbinItfmImport", frr);
    }

    (*fnv)->RflfbsfBytfArrbyElfmfnts(fnv, rbwDbtbObj, rbwDbtb, JNI_ABORT);

    if (drfbtfdItfms != NULL) {
        CFRflfbsf(drfbtfdItfms);
    }

JNF_COCOA_EXIT(fnv);

    rfturn rfturnVbluf;
}

/*
 * Clbss:     bpplf_sfdurity_KfydhbinStorf
 * Mfthod:    _rfmovfItfmFromKfydhbin
 * Signbturf: (J)I
*/
JNIEXPORT jint JNICALL Jbvb_bpplf_sfdurity_KfydhbinStorf__1rfmovfItfmFromKfydhbin
(JNIEnv *fnv, jobjfdt this, jlong kfydhbinItfm)
{
    SfdKfydhbinItfmRff itfmToRfmovf = jlong_to_ptr(kfydhbinItfm);
    rfturn SfdKfydhbinItfmDflftf(itfmToRfmovf);
}

/*
 * Clbss:     bpplf_sfdurity_KfydhbinStorf
 * Mfthod:    _rflfbsfKfydhbinItfmRff
 * Signbturf: (J)V
 */
JNIEXPORT void JNICALL Jbvb_bpplf_sfdurity_KfydhbinStorf__1rflfbsfKfydhbinItfmRff
(JNIEnv *fnv, jobjfdt this, jlong kfydhbinItfm)
{
    SfdKfydhbinItfmRff itfmToFrff = jlong_to_ptr(kfydhbinItfm);
    CFRflfbsf(itfmToFrff);
}
